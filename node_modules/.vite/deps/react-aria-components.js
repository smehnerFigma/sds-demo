import {
  clsx_default
} from "./chunk-U7P2NEEE.js";
import {
  require_react_dom
} from "./chunk-OY5C42Z6.js";
import {
  require_react
} from "./chunk-CANBAPAS.js";
import {
  __commonJS,
  __toESM
} from "./chunk-5WRI5ZAA.js";

// node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js
var require_use_sync_external_store_shim_development = __commonJS({
  "node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js"(exports) {
    "use strict";
    (function() {
      function is(x, y) {
        return x === y && (0 !== x || 1 / x === 1 / y) || x !== x && y !== y;
      }
      function useSyncExternalStore$2(subscribe, getSnapshot) {
        didWarnOld18Alpha || void 0 === React.startTransition || (didWarnOld18Alpha = true, console.error(
          "You are using an outdated, pre-release alpha of React 18 that does not support useSyncExternalStore. The use-sync-external-store shim will not work correctly. Upgrade to a newer pre-release."
        ));
        var value = getSnapshot();
        if (!didWarnUncachedGetSnapshot) {
          var cachedValue = getSnapshot();
          objectIs(value, cachedValue) || (console.error(
            "The result of getSnapshot should be cached to avoid an infinite loop"
          ), didWarnUncachedGetSnapshot = true);
        }
        cachedValue = useState({
          inst: { value, getSnapshot }
        });
        var inst = cachedValue[0].inst, forceUpdate = cachedValue[1];
        useLayoutEffect(
          function() {
            inst.value = value;
            inst.getSnapshot = getSnapshot;
            checkIfSnapshotChanged(inst) && forceUpdate({ inst });
          },
          [subscribe, value, getSnapshot]
        );
        useEffect(
          function() {
            checkIfSnapshotChanged(inst) && forceUpdate({ inst });
            return subscribe(function() {
              checkIfSnapshotChanged(inst) && forceUpdate({ inst });
            });
          },
          [subscribe]
        );
        useDebugValue(value);
        return value;
      }
      function checkIfSnapshotChanged(inst) {
        var latestGetSnapshot = inst.getSnapshot;
        inst = inst.value;
        try {
          var nextValue = latestGetSnapshot();
          return !objectIs(inst, nextValue);
        } catch (error) {
          return true;
        }
      }
      function useSyncExternalStore$1(subscribe, getSnapshot) {
        return getSnapshot();
      }
      "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());
      var React = require_react(), objectIs = "function" === typeof Object.is ? Object.is : is, useState = React.useState, useEffect = React.useEffect, useLayoutEffect = React.useLayoutEffect, useDebugValue = React.useDebugValue, didWarnOld18Alpha = false, didWarnUncachedGetSnapshot = false, shim = "undefined" === typeof window || "undefined" === typeof window.document || "undefined" === typeof window.document.createElement ? useSyncExternalStore$1 : useSyncExternalStore$2;
      exports.useSyncExternalStore = void 0 !== React.useSyncExternalStore ? React.useSyncExternalStore : shim;
      "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());
    })();
  }
});

// node_modules/use-sync-external-store/shim/index.js
var require_shim = __commonJS({
  "node_modules/use-sync-external-store/shim/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_use_sync_external_store_shim_development();
    }
  }
});

// node_modules/react-aria-components/dist/RSPContexts.mjs
var import_react = __toESM(require_react(), 1);
var $4e85f108e88277b8$export$b085522c77523c51 = (0, import_react.createContext)(null);
var $4e85f108e88277b8$export$ebe63fadcdce34ed = (0, import_react.createContext)(null);
var $4e85f108e88277b8$export$44644b8a16031b5b = (0, import_react.createContext)(null);
var $4e85f108e88277b8$export$717b2c0a523a0b53 = (0, import_react.createContext)(null);
var $4e85f108e88277b8$export$265015d6dc85bf21 = (0, import_react.createContext)(null);
var $4e85f108e88277b8$export$d688439359537581 = (0, import_react.createContext)({});

// node_modules/@react-aria/utils/dist/useLayoutEffect.mjs
var import_react2 = __toESM(require_react(), 1);
var $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c = typeof document !== "undefined" ? (0, import_react2.default).useLayoutEffect : () => {
};

// node_modules/@react-aria/utils/dist/useEffectEvent.mjs
var import_react3 = __toESM(require_react(), 1);
function $8ae05eaa5c114e9c$export$7f54fc3180508a52(fn) {
  const ref = (0, import_react3.useRef)(null);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    ref.current = fn;
  }, [
    fn
  ]);
  return (0, import_react3.useCallback)((...args) => {
    const f = ref.current;
    return f === null || f === void 0 ? void 0 : f(...args);
  }, []);
}

// node_modules/@react-aria/utils/dist/useValueEffect.mjs
var import_react4 = __toESM(require_react(), 1);
function $1dbecbe27a04f9af$export$14d238f342723f25(defaultValue) {
  let [value, setValue] = (0, import_react4.useState)(defaultValue);
  let effect = (0, import_react4.useRef)(null);
  let nextRef = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)(() => {
    if (!effect.current) return;
    let newValue = effect.current.next();
    if (newValue.done) {
      effect.current = null;
      return;
    }
    if (value === newValue.value) nextRef();
    else setValue(newValue.value);
  });
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    if (effect.current) nextRef();
  });
  let queue = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((fn) => {
    effect.current = fn(value);
    nextRef();
  });
  return [
    value,
    queue
  ];
}

// node_modules/@react-aria/utils/dist/useId.mjs
var import_react6 = __toESM(require_react(), 1);

// node_modules/@react-aria/ssr/dist/SSRProvider.mjs
var import_react5 = __toESM(require_react(), 1);
var $b5e257d569688ac6$var$defaultContext = {
  prefix: String(Math.round(Math.random() * 1e10)),
  current: 0
};
var $b5e257d569688ac6$var$SSRContext = (0, import_react5.default).createContext($b5e257d569688ac6$var$defaultContext);
var $b5e257d569688ac6$var$IsSSRContext = (0, import_react5.default).createContext(false);
function $b5e257d569688ac6$var$LegacySSRProvider(props) {
  let cur = (0, import_react5.useContext)($b5e257d569688ac6$var$SSRContext);
  let counter = $b5e257d569688ac6$var$useCounter(cur === $b5e257d569688ac6$var$defaultContext);
  let [isSSR, setIsSSR] = (0, import_react5.useState)(true);
  let value = (0, import_react5.useMemo)(() => ({
    // If this is the first SSRProvider, start with an empty string prefix, otherwise
    // append and increment the counter.
    prefix: cur === $b5e257d569688ac6$var$defaultContext ? "" : `${cur.prefix}-${counter}`,
    current: 0
  }), [
    cur,
    counter
  ]);
  if (typeof document !== "undefined")
    (0, import_react5.useLayoutEffect)(() => {
      setIsSSR(false);
    }, []);
  return (0, import_react5.default).createElement($b5e257d569688ac6$var$SSRContext.Provider, {
    value
  }, (0, import_react5.default).createElement($b5e257d569688ac6$var$IsSSRContext.Provider, {
    value: isSSR
  }, props.children));
}
var $b5e257d569688ac6$var$warnedAboutSSRProvider = false;
function $b5e257d569688ac6$export$9f8ac96af4b1b2ae(props) {
  if (typeof (0, import_react5.default)["useId"] === "function") {
    if (!$b5e257d569688ac6$var$warnedAboutSSRProvider) {
      console.warn("In React 18, SSRProvider is not necessary and is a noop. You can remove it from your app.");
      $b5e257d569688ac6$var$warnedAboutSSRProvider = true;
    }
    return (0, import_react5.default).createElement((0, import_react5.default).Fragment, null, props.children);
  }
  return (0, import_react5.default).createElement($b5e257d569688ac6$var$LegacySSRProvider, props);
}
var $b5e257d569688ac6$var$canUseDOM = Boolean(typeof window !== "undefined" && window.document && window.document.createElement);
var $b5e257d569688ac6$var$componentIds = /* @__PURE__ */ new WeakMap();
function $b5e257d569688ac6$var$useCounter(isDisabled = false) {
  let ctx = (0, import_react5.useContext)($b5e257d569688ac6$var$SSRContext);
  let ref = (0, import_react5.useRef)(null);
  if (ref.current === null && !isDisabled) {
    var _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner, _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    let currentOwner = (_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = (0, import_react5.default).__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED) === null || _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED === void 0 ? void 0 : (_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner = _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner) === null || _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner === void 0 ? void 0 : _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner.current;
    if (currentOwner) {
      let prevComponentValue = $b5e257d569688ac6$var$componentIds.get(currentOwner);
      if (prevComponentValue == null)
        $b5e257d569688ac6$var$componentIds.set(currentOwner, {
          id: ctx.current,
          state: currentOwner.memoizedState
        });
      else if (currentOwner.memoizedState !== prevComponentValue.state) {
        ctx.current = prevComponentValue.id;
        $b5e257d569688ac6$var$componentIds.delete(currentOwner);
      }
    }
    ref.current = ++ctx.current;
  }
  return ref.current;
}
function $b5e257d569688ac6$var$useLegacySSRSafeId(defaultId) {
  let ctx = (0, import_react5.useContext)($b5e257d569688ac6$var$SSRContext);
  if (ctx === $b5e257d569688ac6$var$defaultContext && !$b5e257d569688ac6$var$canUseDOM && true) console.warn("When server rendering, you must wrap your application in an <SSRProvider> to ensure consistent ids are generated between the client and server.");
  let counter = $b5e257d569688ac6$var$useCounter(!!defaultId);
  let prefix = ctx === $b5e257d569688ac6$var$defaultContext && false ? "react-aria" : `react-aria${ctx.prefix}`;
  return defaultId || `${prefix}-${counter}`;
}
function $b5e257d569688ac6$var$useModernSSRSafeId(defaultId) {
  let id = (0, import_react5.default).useId();
  let [didSSR] = (0, import_react5.useState)($b5e257d569688ac6$export$535bd6ca7f90a273());
  let prefix = didSSR || false ? "react-aria" : `react-aria${$b5e257d569688ac6$var$defaultContext.prefix}`;
  return defaultId || `${prefix}-${id}`;
}
var $b5e257d569688ac6$export$619500959fc48b26 = typeof (0, import_react5.default)["useId"] === "function" ? $b5e257d569688ac6$var$useModernSSRSafeId : $b5e257d569688ac6$var$useLegacySSRSafeId;
function $b5e257d569688ac6$var$getSnapshot() {
  return false;
}
function $b5e257d569688ac6$var$getServerSnapshot() {
  return true;
}
function $b5e257d569688ac6$var$subscribe(onStoreChange) {
  return () => {
  };
}
function $b5e257d569688ac6$export$535bd6ca7f90a273() {
  if (typeof (0, import_react5.default)["useSyncExternalStore"] === "function") return (0, import_react5.default)["useSyncExternalStore"]($b5e257d569688ac6$var$subscribe, $b5e257d569688ac6$var$getSnapshot, $b5e257d569688ac6$var$getServerSnapshot);
  return (0, import_react5.useContext)($b5e257d569688ac6$var$IsSSRContext);
}

// node_modules/@react-aria/utils/dist/useId.mjs
var $bdb11010cef70236$var$canUseDOM = Boolean(typeof window !== "undefined" && window.document && window.document.createElement);
var $bdb11010cef70236$export$d41a04c74483c6ef = /* @__PURE__ */ new Map();
var $bdb11010cef70236$var$registry;
if (typeof FinalizationRegistry !== "undefined") $bdb11010cef70236$var$registry = new FinalizationRegistry((heldValue) => {
  $bdb11010cef70236$export$d41a04c74483c6ef.delete(heldValue);
});
function $bdb11010cef70236$export$f680877a34711e37(defaultId) {
  let [value, setValue] = (0, import_react6.useState)(defaultId);
  let nextId = (0, import_react6.useRef)(null);
  let res = (0, $b5e257d569688ac6$export$619500959fc48b26)(value);
  let cleanupRef = (0, import_react6.useRef)(null);
  if ($bdb11010cef70236$var$registry) $bdb11010cef70236$var$registry.register(cleanupRef, res);
  if ($bdb11010cef70236$var$canUseDOM) {
    const cacheIdRef = $bdb11010cef70236$export$d41a04c74483c6ef.get(res);
    if (cacheIdRef && !cacheIdRef.includes(nextId)) cacheIdRef.push(nextId);
    else $bdb11010cef70236$export$d41a04c74483c6ef.set(res, [
      nextId
    ]);
  }
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    let r = res;
    return () => {
      if ($bdb11010cef70236$var$registry) $bdb11010cef70236$var$registry.unregister(cleanupRef);
      $bdb11010cef70236$export$d41a04c74483c6ef.delete(r);
    };
  }, [
    res
  ]);
  (0, import_react6.useEffect)(() => {
    let newId = nextId.current;
    if (newId) setValue(newId);
    return () => {
      if (newId) nextId.current = null;
    };
  });
  return res;
}
function $bdb11010cef70236$export$cd8c9cb68f842629(idA, idB) {
  if (idA === idB) return idA;
  let setIdsA = $bdb11010cef70236$export$d41a04c74483c6ef.get(idA);
  if (setIdsA) {
    setIdsA.forEach((ref) => ref.current = idB);
    return idB;
  }
  let setIdsB = $bdb11010cef70236$export$d41a04c74483c6ef.get(idB);
  if (setIdsB) {
    setIdsB.forEach((ref) => ref.current = idA);
    return idA;
  }
  return idB;
}
function $bdb11010cef70236$export$b4cc09c592e8fdb8(depArray = []) {
  let id = $bdb11010cef70236$export$f680877a34711e37();
  let [resolvedId, setResolvedId] = (0, $1dbecbe27a04f9af$export$14d238f342723f25)(id);
  let updateId = (0, import_react6.useCallback)(() => {
    setResolvedId(function* () {
      yield id;
      yield document.getElementById(id) ? id : void 0;
    });
  }, [
    id,
    setResolvedId
  ]);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(updateId, [
    id,
    updateId,
    ...depArray
  ]);
  return resolvedId;
}

// node_modules/@react-aria/utils/dist/chain.mjs
function $ff5963eb1fccf552$export$e08e3b67e392101e(...callbacks) {
  return (...args) => {
    for (let callback of callbacks) if (typeof callback === "function") callback(...args);
  };
}

// node_modules/@react-aria/utils/dist/domHelpers.mjs
var $431fbd86ca7dc216$export$b204af158042fbac = (el) => {
  var _el_ownerDocument;
  return (_el_ownerDocument = el === null || el === void 0 ? void 0 : el.ownerDocument) !== null && _el_ownerDocument !== void 0 ? _el_ownerDocument : document;
};
var $431fbd86ca7dc216$export$f21a1ffae260145a = (el) => {
  if (el && "window" in el && el.window === el) return el;
  const doc = $431fbd86ca7dc216$export$b204af158042fbac(el);
  return doc.defaultView || window;
};
function $431fbd86ca7dc216$var$isNode(value) {
  return value !== null && typeof value === "object" && "nodeType" in value && typeof value.nodeType === "number";
}
function $431fbd86ca7dc216$export$af51f0f06c0f328a(node) {
  return $431fbd86ca7dc216$var$isNode(node) && node.nodeType === Node.DOCUMENT_FRAGMENT_NODE && "host" in node;
}

// node_modules/@react-stately/flags/dist/import.mjs
var $f4e2df6bd15f8569$var$_tableNestedRows = false;
var $f4e2df6bd15f8569$var$_shadowDOM = false;
function $f4e2df6bd15f8569$export$1b00cb14a96194e6() {
  return $f4e2df6bd15f8569$var$_tableNestedRows;
}
function $f4e2df6bd15f8569$export$98658e8c59125e6a() {
  return $f4e2df6bd15f8569$var$_shadowDOM;
}

// node_modules/@react-aria/utils/dist/DOMFunctions.mjs
function $d4ee10de306f2510$export$4282f70798064fe0(node, otherNode) {
  if (!(0, $f4e2df6bd15f8569$export$98658e8c59125e6a)()) return otherNode && node ? node.contains(otherNode) : false;
  if (!node || !otherNode) return false;
  let currentNode = otherNode;
  while (currentNode !== null) {
    if (currentNode === node) return true;
    if (currentNode.tagName === "SLOT" && currentNode.assignedSlot)
      currentNode = currentNode.assignedSlot.parentNode;
    else if ((0, $431fbd86ca7dc216$export$af51f0f06c0f328a)(currentNode))
      currentNode = currentNode.host;
    else currentNode = currentNode.parentNode;
  }
  return false;
}
var $d4ee10de306f2510$export$cd4e5573fbe2b576 = (doc = document) => {
  var _activeElement_shadowRoot;
  if (!(0, $f4e2df6bd15f8569$export$98658e8c59125e6a)()) return doc.activeElement;
  let activeElement = doc.activeElement;
  while (activeElement && "shadowRoot" in activeElement && ((_activeElement_shadowRoot = activeElement.shadowRoot) === null || _activeElement_shadowRoot === void 0 ? void 0 : _activeElement_shadowRoot.activeElement)) activeElement = activeElement.shadowRoot.activeElement;
  return activeElement;
};
function $d4ee10de306f2510$export$e58f029f0fbfdb29(event) {
  if ((0, $f4e2df6bd15f8569$export$98658e8c59125e6a)() && event.target.shadowRoot) {
    if (event.composedPath) return event.composedPath()[0];
  }
  return event.target;
}

// node_modules/@react-aria/utils/dist/ShadowTreeWalker.mjs
var $dfc540311bf7f109$export$63eb3ababa9c55c4 = class {
  get currentNode() {
    return this._currentNode;
  }
  set currentNode(node) {
    if (!(0, $d4ee10de306f2510$export$4282f70798064fe0)(this.root, node)) throw new Error("Cannot set currentNode to a node that is not contained by the root node.");
    const walkers = [];
    let curNode = node;
    let currentWalkerCurrentNode = node;
    this._currentNode = node;
    while (curNode && curNode !== this.root) if (curNode.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {
      const shadowRoot = curNode;
      const walker2 = this._doc.createTreeWalker(shadowRoot, this.whatToShow, {
        acceptNode: this._acceptNode
      });
      walkers.push(walker2);
      walker2.currentNode = currentWalkerCurrentNode;
      this._currentSetFor.add(walker2);
      curNode = currentWalkerCurrentNode = shadowRoot.host;
    } else curNode = curNode.parentNode;
    const walker = this._doc.createTreeWalker(this.root, this.whatToShow, {
      acceptNode: this._acceptNode
    });
    walkers.push(walker);
    walker.currentNode = currentWalkerCurrentNode;
    this._currentSetFor.add(walker);
    this._walkerStack = walkers;
  }
  get doc() {
    return this._doc;
  }
  firstChild() {
    let currentNode = this.currentNode;
    let newNode = this.nextNode();
    if (!(0, $d4ee10de306f2510$export$4282f70798064fe0)(currentNode, newNode)) {
      this.currentNode = currentNode;
      return null;
    }
    if (newNode) this.currentNode = newNode;
    return newNode;
  }
  lastChild() {
    let walker = this._walkerStack[0];
    let newNode = walker.lastChild();
    if (newNode) this.currentNode = newNode;
    return newNode;
  }
  nextNode() {
    const nextNode = this._walkerStack[0].nextNode();
    if (nextNode) {
      const shadowRoot = nextNode.shadowRoot;
      if (shadowRoot) {
        var _this_filter;
        let nodeResult;
        if (typeof this.filter === "function") nodeResult = this.filter(nextNode);
        else if ((_this_filter = this.filter) === null || _this_filter === void 0 ? void 0 : _this_filter.acceptNode) nodeResult = this.filter.acceptNode(nextNode);
        if (nodeResult === NodeFilter.FILTER_ACCEPT) {
          this.currentNode = nextNode;
          return nextNode;
        }
        let newNode = this.nextNode();
        if (newNode) this.currentNode = newNode;
        return newNode;
      }
      if (nextNode) this.currentNode = nextNode;
      return nextNode;
    } else {
      if (this._walkerStack.length > 1) {
        this._walkerStack.shift();
        let newNode = this.nextNode();
        if (newNode) this.currentNode = newNode;
        return newNode;
      } else return null;
    }
  }
  previousNode() {
    const currentWalker = this._walkerStack[0];
    if (currentWalker.currentNode === currentWalker.root) {
      if (this._currentSetFor.has(currentWalker)) {
        this._currentSetFor.delete(currentWalker);
        if (this._walkerStack.length > 1) {
          this._walkerStack.shift();
          let newNode = this.previousNode();
          if (newNode) this.currentNode = newNode;
          return newNode;
        } else return null;
      }
      return null;
    }
    const previousNode = currentWalker.previousNode();
    if (previousNode) {
      const shadowRoot = previousNode.shadowRoot;
      if (shadowRoot) {
        var _this_filter;
        let nodeResult;
        if (typeof this.filter === "function") nodeResult = this.filter(previousNode);
        else if ((_this_filter = this.filter) === null || _this_filter === void 0 ? void 0 : _this_filter.acceptNode) nodeResult = this.filter.acceptNode(previousNode);
        if (nodeResult === NodeFilter.FILTER_ACCEPT) {
          if (previousNode) this.currentNode = previousNode;
          return previousNode;
        }
        let newNode = this.lastChild();
        if (newNode) this.currentNode = newNode;
        return newNode;
      }
      if (previousNode) this.currentNode = previousNode;
      return previousNode;
    } else {
      if (this._walkerStack.length > 1) {
        this._walkerStack.shift();
        let newNode = this.previousNode();
        if (newNode) this.currentNode = newNode;
        return newNode;
      } else return null;
    }
  }
  /**
   * @deprecated
   */
  nextSibling() {
    return null;
  }
  /**
   * @deprecated
   */
  previousSibling() {
    return null;
  }
  /**
   * @deprecated
   */
  parentNode() {
    return null;
  }
  constructor(doc, root, whatToShow, filter) {
    this._walkerStack = [];
    this._currentSetFor = /* @__PURE__ */ new Set();
    this._acceptNode = (node) => {
      if (node.nodeType === Node.ELEMENT_NODE) {
        const shadowRoot2 = node.shadowRoot;
        if (shadowRoot2) {
          const walker = this._doc.createTreeWalker(shadowRoot2, this.whatToShow, {
            acceptNode: this._acceptNode
          });
          this._walkerStack.unshift(walker);
          return NodeFilter.FILTER_ACCEPT;
        } else {
          var _this_filter;
          if (typeof this.filter === "function") return this.filter(node);
          else if ((_this_filter = this.filter) === null || _this_filter === void 0 ? void 0 : _this_filter.acceptNode) return this.filter.acceptNode(node);
          else if (this.filter === null) return NodeFilter.FILTER_ACCEPT;
        }
      }
      return NodeFilter.FILTER_SKIP;
    };
    this._doc = doc;
    this.root = root;
    this.filter = filter !== null && filter !== void 0 ? filter : null;
    this.whatToShow = whatToShow !== null && whatToShow !== void 0 ? whatToShow : NodeFilter.SHOW_ALL;
    this._currentNode = root;
    this._walkerStack.unshift(doc.createTreeWalker(root, whatToShow, this._acceptNode));
    const shadowRoot = root.shadowRoot;
    if (shadowRoot) {
      const walker = this._doc.createTreeWalker(shadowRoot, this.whatToShow, {
        acceptNode: this._acceptNode
      });
      this._walkerStack.unshift(walker);
    }
  }
};
function $dfc540311bf7f109$export$4d0f8be8b12a7ef6(doc, root, whatToShow, filter) {
  if ((0, $f4e2df6bd15f8569$export$98658e8c59125e6a)()) return new $dfc540311bf7f109$export$63eb3ababa9c55c4(doc, root, whatToShow, filter);
  return doc.createTreeWalker(root, whatToShow, filter);
}

// node_modules/@react-aria/utils/dist/mergeProps.mjs
function $3ef42575df84b30b$export$9d1611c77c2fe928(...args) {
  let result = {
    ...args[0]
  };
  for (let i = 1; i < args.length; i++) {
    let props = args[i];
    for (let key in props) {
      let a = result[key];
      let b = props[key];
      if (typeof a === "function" && typeof b === "function" && // This is a lot faster than a regex.
      key[0] === "o" && key[1] === "n" && key.charCodeAt(2) >= /* 'A' */
      65 && key.charCodeAt(2) <= /* 'Z' */
      90) result[key] = (0, $ff5963eb1fccf552$export$e08e3b67e392101e)(a, b);
      else if ((key === "className" || key === "UNSAFE_className") && typeof a === "string" && typeof b === "string") result[key] = (0, clsx_default)(a, b);
      else if (key === "id" && a && b) result.id = (0, $bdb11010cef70236$export$cd8c9cb68f842629)(a, b);
      else result[key] = b !== void 0 ? b : a;
    }
  }
  return result;
}

// node_modules/@react-aria/utils/dist/mergeRefs.mjs
function $5dc95899b306f630$export$c9058316764c140e(...refs) {
  if (refs.length === 1 && refs[0]) return refs[0];
  return (value) => {
    let hasCleanup = false;
    const cleanups = refs.map((ref) => {
      const cleanup = $5dc95899b306f630$var$setRef(ref, value);
      hasCleanup || (hasCleanup = typeof cleanup == "function");
      return cleanup;
    });
    if (hasCleanup) return () => {
      cleanups.forEach((cleanup, i) => {
        if (typeof cleanup === "function") cleanup();
        else $5dc95899b306f630$var$setRef(refs[i], null);
      });
    };
  };
}
function $5dc95899b306f630$var$setRef(ref, value) {
  if (typeof ref === "function") return ref(value);
  else if (ref != null) ref.current = value;
}

// node_modules/@react-aria/utils/dist/filterDOMProps.mjs
var $65484d02dcb7eb3e$var$DOMPropNames = /* @__PURE__ */ new Set([
  "id"
]);
var $65484d02dcb7eb3e$var$labelablePropNames = /* @__PURE__ */ new Set([
  "aria-label",
  "aria-labelledby",
  "aria-describedby",
  "aria-details"
]);
var $65484d02dcb7eb3e$var$linkPropNames = /* @__PURE__ */ new Set([
  "href",
  "hrefLang",
  "target",
  "rel",
  "download",
  "ping",
  "referrerPolicy"
]);
var $65484d02dcb7eb3e$var$propRe = /^(data-.*)$/;
function $65484d02dcb7eb3e$export$457c3d6518dd4c6f(props, opts = {}) {
  let { labelable, isLink, propNames } = opts;
  let filteredProps = {};
  for (const prop in props) if (Object.prototype.hasOwnProperty.call(props, prop) && ($65484d02dcb7eb3e$var$DOMPropNames.has(prop) || labelable && $65484d02dcb7eb3e$var$labelablePropNames.has(prop) || isLink && $65484d02dcb7eb3e$var$linkPropNames.has(prop) || (propNames === null || propNames === void 0 ? void 0 : propNames.has(prop)) || $65484d02dcb7eb3e$var$propRe.test(prop))) filteredProps[prop] = props[prop];
  return filteredProps;
}

// node_modules/@react-aria/utils/dist/focusWithoutScrolling.mjs
function $7215afc6de606d6b$export$de79e2c695e052f3(element) {
  if ($7215afc6de606d6b$var$supportsPreventScroll()) element.focus({
    preventScroll: true
  });
  else {
    let scrollableElements = $7215afc6de606d6b$var$getScrollableElements(element);
    element.focus();
    $7215afc6de606d6b$var$restoreScrollPosition(scrollableElements);
  }
}
var $7215afc6de606d6b$var$supportsPreventScrollCached = null;
function $7215afc6de606d6b$var$supportsPreventScroll() {
  if ($7215afc6de606d6b$var$supportsPreventScrollCached == null) {
    $7215afc6de606d6b$var$supportsPreventScrollCached = false;
    try {
      let focusElem = document.createElement("div");
      focusElem.focus({
        get preventScroll() {
          $7215afc6de606d6b$var$supportsPreventScrollCached = true;
          return true;
        }
      });
    } catch {
    }
  }
  return $7215afc6de606d6b$var$supportsPreventScrollCached;
}
function $7215afc6de606d6b$var$getScrollableElements(element) {
  let parent = element.parentNode;
  let scrollableElements = [];
  let rootScrollingElement = document.scrollingElement || document.documentElement;
  while (parent instanceof HTMLElement && parent !== rootScrollingElement) {
    if (parent.offsetHeight < parent.scrollHeight || parent.offsetWidth < parent.scrollWidth) scrollableElements.push({
      element: parent,
      scrollTop: parent.scrollTop,
      scrollLeft: parent.scrollLeft
    });
    parent = parent.parentNode;
  }
  if (rootScrollingElement instanceof HTMLElement) scrollableElements.push({
    element: rootScrollingElement,
    scrollTop: rootScrollingElement.scrollTop,
    scrollLeft: rootScrollingElement.scrollLeft
  });
  return scrollableElements;
}
function $7215afc6de606d6b$var$restoreScrollPosition(scrollableElements) {
  for (let { element, scrollTop, scrollLeft } of scrollableElements) {
    element.scrollTop = scrollTop;
    element.scrollLeft = scrollLeft;
  }
}

// node_modules/@react-aria/utils/dist/platform.mjs
function $c87311424ea30a05$var$testUserAgent(re) {
  var _window_navigator_userAgentData;
  if (typeof window === "undefined" || window.navigator == null) return false;
  return ((_window_navigator_userAgentData = window.navigator["userAgentData"]) === null || _window_navigator_userAgentData === void 0 ? void 0 : _window_navigator_userAgentData.brands.some((brand) => re.test(brand.brand))) || re.test(window.navigator.userAgent);
}
function $c87311424ea30a05$var$testPlatform(re) {
  var _window_navigator_userAgentData;
  return typeof window !== "undefined" && window.navigator != null ? re.test(((_window_navigator_userAgentData = window.navigator["userAgentData"]) === null || _window_navigator_userAgentData === void 0 ? void 0 : _window_navigator_userAgentData.platform) || window.navigator.platform) : false;
}
function $c87311424ea30a05$var$cached(fn) {
  if (false) return fn;
  let res = null;
  return () => {
    if (res == null) res = fn();
    return res;
  };
}
var $c87311424ea30a05$export$9ac100e40613ea10 = $c87311424ea30a05$var$cached(function() {
  return $c87311424ea30a05$var$testPlatform(/^Mac/i);
});
var $c87311424ea30a05$export$186c6964ca17d99 = $c87311424ea30a05$var$cached(function() {
  return $c87311424ea30a05$var$testPlatform(/^iPhone/i);
});
var $c87311424ea30a05$export$7bef049ce92e4224 = $c87311424ea30a05$var$cached(function() {
  return $c87311424ea30a05$var$testPlatform(/^iPad/i) || // iPadOS 13 lies and says it's a Mac, but we can distinguish by detecting touch support.
  $c87311424ea30a05$export$9ac100e40613ea10() && navigator.maxTouchPoints > 1;
});
var $c87311424ea30a05$export$fedb369cb70207f1 = $c87311424ea30a05$var$cached(function() {
  return $c87311424ea30a05$export$186c6964ca17d99() || $c87311424ea30a05$export$7bef049ce92e4224();
});
var $c87311424ea30a05$export$e1865c3bedcd822b = $c87311424ea30a05$var$cached(function() {
  return $c87311424ea30a05$export$9ac100e40613ea10() || $c87311424ea30a05$export$fedb369cb70207f1();
});
var $c87311424ea30a05$export$78551043582a6a98 = $c87311424ea30a05$var$cached(function() {
  return $c87311424ea30a05$var$testUserAgent(/AppleWebKit/i) && !$c87311424ea30a05$export$6446a186d09e379e();
});
var $c87311424ea30a05$export$6446a186d09e379e = $c87311424ea30a05$var$cached(function() {
  return $c87311424ea30a05$var$testUserAgent(/Chrome/i);
});
var $c87311424ea30a05$export$a11b0059900ceec8 = $c87311424ea30a05$var$cached(function() {
  return $c87311424ea30a05$var$testUserAgent(/Android/i);
});
var $c87311424ea30a05$export$b7d78993b74f766d = $c87311424ea30a05$var$cached(function() {
  return $c87311424ea30a05$var$testUserAgent(/Firefox/i);
});

// node_modules/@react-aria/utils/dist/openLink.mjs
var import_react7 = __toESM(require_react(), 1);
var $ea8dcbcb9ea1b556$var$RouterContext = (0, import_react7.createContext)({
  isNative: true,
  open: $ea8dcbcb9ea1b556$var$openSyntheticLink,
  useHref: (href) => href
});
function $ea8dcbcb9ea1b556$export$323e4fc2fa4753fb(props) {
  let { children, navigate, useHref } = props;
  let ctx = (0, import_react7.useMemo)(() => ({
    isNative: false,
    open: (target, modifiers, href, routerOptions) => {
      $ea8dcbcb9ea1b556$var$getSyntheticLink(target, (link) => {
        if ($ea8dcbcb9ea1b556$export$efa8c9099e530235(link, modifiers)) navigate(href, routerOptions);
        else $ea8dcbcb9ea1b556$export$95185d699e05d4d7(link, modifiers);
      });
    },
    useHref: useHref || ((href) => href)
  }), [
    navigate,
    useHref
  ]);
  return (0, import_react7.default).createElement($ea8dcbcb9ea1b556$var$RouterContext.Provider, {
    value: ctx
  }, children);
}
function $ea8dcbcb9ea1b556$export$9a302a45f65d0572() {
  return (0, import_react7.useContext)($ea8dcbcb9ea1b556$var$RouterContext);
}
function $ea8dcbcb9ea1b556$export$efa8c9099e530235(link, modifiers) {
  let target = link.getAttribute("target");
  return (!target || target === "_self") && link.origin === location.origin && !link.hasAttribute("download") && !modifiers.metaKey && // open in new tab (mac)
  !modifiers.ctrlKey && // open in new tab (windows)
  !modifiers.altKey && // download
  !modifiers.shiftKey;
}
function $ea8dcbcb9ea1b556$export$95185d699e05d4d7(target, modifiers, setOpening = true) {
  var _window_event_type, _window_event;
  let { metaKey, ctrlKey, altKey, shiftKey } = modifiers;
  if ((0, $c87311424ea30a05$export$b7d78993b74f766d)() && ((_window_event = window.event) === null || _window_event === void 0 ? void 0 : (_window_event_type = _window_event.type) === null || _window_event_type === void 0 ? void 0 : _window_event_type.startsWith("key")) && target.target === "_blank") {
    if ((0, $c87311424ea30a05$export$9ac100e40613ea10)()) metaKey = true;
    else ctrlKey = true;
  }
  let event = (0, $c87311424ea30a05$export$78551043582a6a98)() && (0, $c87311424ea30a05$export$9ac100e40613ea10)() && !(0, $c87311424ea30a05$export$7bef049ce92e4224)() && true ? new KeyboardEvent("keydown", {
    keyIdentifier: "Enter",
    metaKey,
    ctrlKey,
    altKey,
    shiftKey
  }) : new MouseEvent("click", {
    metaKey,
    ctrlKey,
    altKey,
    shiftKey,
    bubbles: true,
    cancelable: true
  });
  $ea8dcbcb9ea1b556$export$95185d699e05d4d7.isOpening = setOpening;
  (0, $7215afc6de606d6b$export$de79e2c695e052f3)(target);
  target.dispatchEvent(event);
  $ea8dcbcb9ea1b556$export$95185d699e05d4d7.isOpening = false;
}
$ea8dcbcb9ea1b556$export$95185d699e05d4d7.isOpening = false;
function $ea8dcbcb9ea1b556$var$getSyntheticLink(target, open) {
  if (target instanceof HTMLAnchorElement) open(target);
  else if (target.hasAttribute("data-href")) {
    let link = document.createElement("a");
    link.href = target.getAttribute("data-href");
    if (target.hasAttribute("data-target")) link.target = target.getAttribute("data-target");
    if (target.hasAttribute("data-rel")) link.rel = target.getAttribute("data-rel");
    if (target.hasAttribute("data-download")) link.download = target.getAttribute("data-download");
    if (target.hasAttribute("data-ping")) link.ping = target.getAttribute("data-ping");
    if (target.hasAttribute("data-referrer-policy")) link.referrerPolicy = target.getAttribute("data-referrer-policy");
    target.appendChild(link);
    open(link);
    target.removeChild(link);
  }
}
function $ea8dcbcb9ea1b556$var$openSyntheticLink(target, modifiers) {
  $ea8dcbcb9ea1b556$var$getSyntheticLink(target, (link) => $ea8dcbcb9ea1b556$export$95185d699e05d4d7(link, modifiers));
}
function $ea8dcbcb9ea1b556$export$bdc77b0c0a3a85d6(props) {
  let router = $ea8dcbcb9ea1b556$export$9a302a45f65d0572();
  var _props_href;
  const href = router.useHref((_props_href = props.href) !== null && _props_href !== void 0 ? _props_href : "");
  return {
    "data-href": props.href ? href : void 0,
    "data-target": props.target,
    "data-rel": props.rel,
    "data-download": props.download,
    "data-ping": props.ping,
    "data-referrer-policy": props.referrerPolicy
  };
}
function $ea8dcbcb9ea1b556$export$7e924b3091a3bd18(props) {
  let router = $ea8dcbcb9ea1b556$export$9a302a45f65d0572();
  var _props_href;
  const href = router.useHref((_props_href = props === null || props === void 0 ? void 0 : props.href) !== null && _props_href !== void 0 ? _props_href : "");
  return {
    href: (props === null || props === void 0 ? void 0 : props.href) ? href : void 0,
    target: props === null || props === void 0 ? void 0 : props.target,
    rel: props === null || props === void 0 ? void 0 : props.rel,
    download: props === null || props === void 0 ? void 0 : props.download,
    ping: props === null || props === void 0 ? void 0 : props.ping,
    referrerPolicy: props === null || props === void 0 ? void 0 : props.referrerPolicy
  };
}

// node_modules/@react-aria/utils/dist/runAfterTransition.mjs
var $bbed8b41f857bcc0$var$transitionsByElement = /* @__PURE__ */ new Map();
var $bbed8b41f857bcc0$var$transitionCallbacks = /* @__PURE__ */ new Set();
function $bbed8b41f857bcc0$var$setupGlobalEvents() {
  if (typeof window === "undefined") return;
  function isTransitionEvent(event) {
    return "propertyName" in event;
  }
  let onTransitionStart = (e) => {
    if (!isTransitionEvent(e) || !e.target) return;
    let transitions = $bbed8b41f857bcc0$var$transitionsByElement.get(e.target);
    if (!transitions) {
      transitions = /* @__PURE__ */ new Set();
      $bbed8b41f857bcc0$var$transitionsByElement.set(e.target, transitions);
      e.target.addEventListener("transitioncancel", onTransitionEnd, {
        once: true
      });
    }
    transitions.add(e.propertyName);
  };
  let onTransitionEnd = (e) => {
    if (!isTransitionEvent(e) || !e.target) return;
    let properties = $bbed8b41f857bcc0$var$transitionsByElement.get(e.target);
    if (!properties) return;
    properties.delete(e.propertyName);
    if (properties.size === 0) {
      e.target.removeEventListener("transitioncancel", onTransitionEnd);
      $bbed8b41f857bcc0$var$transitionsByElement.delete(e.target);
    }
    if ($bbed8b41f857bcc0$var$transitionsByElement.size === 0) {
      for (let cb of $bbed8b41f857bcc0$var$transitionCallbacks) cb();
      $bbed8b41f857bcc0$var$transitionCallbacks.clear();
    }
  };
  document.body.addEventListener("transitionrun", onTransitionStart);
  document.body.addEventListener("transitionend", onTransitionEnd);
}
if (typeof document !== "undefined") {
  if (document.readyState !== "loading") $bbed8b41f857bcc0$var$setupGlobalEvents();
  else document.addEventListener("DOMContentLoaded", $bbed8b41f857bcc0$var$setupGlobalEvents);
}
function $bbed8b41f857bcc0$var$cleanupDetachedElements() {
  for (const [eventTarget] of $bbed8b41f857bcc0$var$transitionsByElement)
    if ("isConnected" in eventTarget && !eventTarget.isConnected) $bbed8b41f857bcc0$var$transitionsByElement.delete(eventTarget);
}
function $bbed8b41f857bcc0$export$24490316f764c430(fn) {
  requestAnimationFrame(() => {
    $bbed8b41f857bcc0$var$cleanupDetachedElements();
    if ($bbed8b41f857bcc0$var$transitionsByElement.size === 0) fn();
    else $bbed8b41f857bcc0$var$transitionCallbacks.add(fn);
  });
}

// node_modules/@react-aria/utils/dist/useDrag1D.mjs
var import_react8 = __toESM(require_react(), 1);

// node_modules/@react-aria/utils/dist/useGlobalListeners.mjs
var import_react9 = __toESM(require_react(), 1);
function $03deb23ff14920c4$export$4eaf04e54aa8eed6() {
  let globalListeners = (0, import_react9.useRef)(/* @__PURE__ */ new Map());
  let addGlobalListener = (0, import_react9.useCallback)((eventTarget, type, listener, options) => {
    let fn = (options === null || options === void 0 ? void 0 : options.once) ? (...args) => {
      globalListeners.current.delete(listener);
      listener(...args);
    } : listener;
    globalListeners.current.set(listener, {
      type,
      eventTarget,
      fn,
      options
    });
    eventTarget.addEventListener(type, fn, options);
  }, []);
  let removeGlobalListener = (0, import_react9.useCallback)((eventTarget, type, listener, options) => {
    var _globalListeners_current_get;
    let fn = ((_globalListeners_current_get = globalListeners.current.get(listener)) === null || _globalListeners_current_get === void 0 ? void 0 : _globalListeners_current_get.fn) || listener;
    eventTarget.removeEventListener(type, fn, options);
    globalListeners.current.delete(listener);
  }, []);
  let removeAllGlobalListeners = (0, import_react9.useCallback)(() => {
    globalListeners.current.forEach((value, key) => {
      removeGlobalListener(value.eventTarget, value.type, key, value.options);
    });
  }, [
    removeGlobalListener
  ]);
  (0, import_react9.useEffect)(() => {
    return removeAllGlobalListeners;
  }, [
    removeAllGlobalListeners
  ]);
  return {
    addGlobalListener,
    removeGlobalListener,
    removeAllGlobalListeners
  };
}

// node_modules/@react-aria/utils/dist/useLabels.mjs
function $313b98861ee5dd6c$export$d6875122194c7b44(props, defaultLabel) {
  let { id, "aria-label": label, "aria-labelledby": labelledBy } = props;
  id = (0, $bdb11010cef70236$export$f680877a34711e37)(id);
  if (labelledBy && label) {
    let ids = /* @__PURE__ */ new Set([
      id,
      ...labelledBy.trim().split(/\s+/)
    ]);
    labelledBy = [
      ...ids
    ].join(" ");
  } else if (labelledBy) labelledBy = labelledBy.trim().split(/\s+/).join(" ");
  if (!label && !labelledBy && defaultLabel) label = defaultLabel;
  return {
    id,
    "aria-label": label,
    "aria-labelledby": labelledBy
  };
}

// node_modules/@react-aria/utils/dist/useObjectRef.mjs
var import_react10 = __toESM(require_react(), 1);
function $df56164dff5785e2$export$4338b53315abf666(ref) {
  const objRef = (0, import_react10.useRef)(null);
  const cleanupRef = (0, import_react10.useRef)(void 0);
  const refEffect = (0, import_react10.useCallback)((instance) => {
    if (typeof ref === "function") {
      const refCallback = ref;
      const refCleanup = refCallback(instance);
      return () => {
        if (typeof refCleanup === "function") refCleanup();
        else refCallback(null);
      };
    } else if (ref) {
      ref.current = instance;
      return () => {
        ref.current = null;
      };
    }
  }, [
    ref
  ]);
  return (0, import_react10.useMemo)(() => ({
    get current() {
      return objRef.current;
    },
    set current(value) {
      objRef.current = value;
      if (cleanupRef.current) {
        cleanupRef.current();
        cleanupRef.current = void 0;
      }
      if (value != null) cleanupRef.current = refEffect(value);
    }
  }), [
    refEffect
  ]);
}

// node_modules/@react-aria/utils/dist/useUpdateEffect.mjs
var import_react11 = __toESM(require_react(), 1);
function $4f58c5f72bcf79f7$export$496315a1608d9602(effect, dependencies) {
  const isInitialMount = (0, import_react11.useRef)(true);
  const lastDeps = (0, import_react11.useRef)(null);
  (0, import_react11.useEffect)(() => {
    isInitialMount.current = true;
    return () => {
      isInitialMount.current = false;
    };
  }, []);
  (0, import_react11.useEffect)(() => {
    let prevDeps = lastDeps.current;
    if (isInitialMount.current) isInitialMount.current = false;
    else if (!prevDeps || dependencies.some((dep, i) => !Object.is(dep, prevDeps[i]))) effect();
    lastDeps.current = dependencies;
  }, dependencies);
}

// node_modules/@react-aria/utils/dist/useUpdateLayoutEffect.mjs
var import_react12 = __toESM(require_react(), 1);
function $ca9b37712f007381$export$72ef708ab07251f1(effect, dependencies) {
  const isInitialMount = (0, import_react12.useRef)(true);
  const lastDeps = (0, import_react12.useRef)(null);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    isInitialMount.current = true;
    return () => {
      isInitialMount.current = false;
    };
  }, []);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    if (isInitialMount.current) isInitialMount.current = false;
    else if (!lastDeps.current || dependencies.some((dep, i) => !Object.is(dep, lastDeps[i]))) effect();
    lastDeps.current = dependencies;
  }, dependencies);
}

// node_modules/@react-aria/utils/dist/useResizeObserver.mjs
var import_react13 = __toESM(require_react(), 1);
function $9daab02d461809db$var$hasResizeObserver() {
  return typeof window.ResizeObserver !== "undefined";
}
function $9daab02d461809db$export$683480f191c0e3ea(options) {
  const { ref, box, onResize } = options;
  (0, import_react13.useEffect)(() => {
    let element = ref === null || ref === void 0 ? void 0 : ref.current;
    if (!element) return;
    if (!$9daab02d461809db$var$hasResizeObserver()) {
      window.addEventListener("resize", onResize, false);
      return () => {
        window.removeEventListener("resize", onResize, false);
      };
    } else {
      const resizeObserverInstance = new window.ResizeObserver((entries) => {
        if (!entries.length) return;
        onResize();
      });
      resizeObserverInstance.observe(element, {
        box
      });
      return () => {
        if (element) resizeObserverInstance.unobserve(element);
      };
    }
  }, [
    onResize,
    ref,
    box
  ]);
}

// node_modules/@react-aria/utils/dist/useSyncRef.mjs
function $e7801be82b4b2a53$export$4debdb1a3f0fa79e(context, ref) {
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    if (context && context.ref && ref) {
      context.ref.current = ref.current;
      return () => {
        if (context.ref) context.ref.current = null;
      };
    }
  });
}

// node_modules/@react-aria/utils/dist/isScrollable.mjs
function $cc38e7bd3fc7b213$export$2bb74740c4e19def(node, checkForOverflow) {
  if (!node) return false;
  let style = window.getComputedStyle(node);
  let isScrollable = /(auto|scroll)/.test(style.overflow + style.overflowX + style.overflowY);
  if (isScrollable && checkForOverflow) isScrollable = node.scrollHeight !== node.clientHeight || node.scrollWidth !== node.clientWidth;
  return isScrollable;
}

// node_modules/@react-aria/utils/dist/getScrollParent.mjs
function $62d8ded9296f3872$export$cfa2225e87938781(node, checkForOverflow) {
  let scrollableNode = node;
  if ((0, $cc38e7bd3fc7b213$export$2bb74740c4e19def)(scrollableNode, checkForOverflow)) scrollableNode = scrollableNode.parentElement;
  while (scrollableNode && !(0, $cc38e7bd3fc7b213$export$2bb74740c4e19def)(scrollableNode, checkForOverflow)) scrollableNode = scrollableNode.parentElement;
  return scrollableNode || document.scrollingElement || document.documentElement;
}

// node_modules/@react-aria/utils/dist/getScrollParents.mjs
function $a40c673dc9f6d9c7$export$94ed1c92c7beeb22(node, checkForOverflow) {
  const scrollParents = [];
  while (node && node !== document.documentElement) {
    if ((0, $cc38e7bd3fc7b213$export$2bb74740c4e19def)(node, checkForOverflow)) scrollParents.push(node);
    node = node.parentElement;
  }
  return scrollParents;
}

// node_modules/@react-aria/utils/dist/useViewportSize.mjs
var import_react14 = __toESM(require_react(), 1);
var $5df64b3807dc15ee$var$visualViewport = typeof document !== "undefined" && window.visualViewport;
function $5df64b3807dc15ee$export$d699905dd57c73ca() {
  let isSSR = (0, $b5e257d569688ac6$export$535bd6ca7f90a273)();
  let [size, setSize] = (0, import_react14.useState)(() => isSSR ? {
    width: 0,
    height: 0
  } : $5df64b3807dc15ee$var$getViewportSize());
  (0, import_react14.useEffect)(() => {
    let onResize = () => {
      setSize((size2) => {
        let newSize = $5df64b3807dc15ee$var$getViewportSize();
        if (newSize.width === size2.width && newSize.height === size2.height) return size2;
        return newSize;
      });
    };
    if (!$5df64b3807dc15ee$var$visualViewport) window.addEventListener("resize", onResize);
    else $5df64b3807dc15ee$var$visualViewport.addEventListener("resize", onResize);
    return () => {
      if (!$5df64b3807dc15ee$var$visualViewport) window.removeEventListener("resize", onResize);
      else $5df64b3807dc15ee$var$visualViewport.removeEventListener("resize", onResize);
    };
  }, []);
  return size;
}
function $5df64b3807dc15ee$var$getViewportSize() {
  return {
    width: $5df64b3807dc15ee$var$visualViewport && ($5df64b3807dc15ee$var$visualViewport === null || $5df64b3807dc15ee$var$visualViewport === void 0 ? void 0 : $5df64b3807dc15ee$var$visualViewport.width) || window.innerWidth,
    height: $5df64b3807dc15ee$var$visualViewport && ($5df64b3807dc15ee$var$visualViewport === null || $5df64b3807dc15ee$var$visualViewport === void 0 ? void 0 : $5df64b3807dc15ee$var$visualViewport.height) || window.innerHeight
  };
}

// node_modules/@react-aria/utils/dist/useDescription.mjs
var import_react15 = __toESM(require_react(), 1);
var $ef06256079686ba0$var$descriptionId = 0;
var $ef06256079686ba0$var$descriptionNodes = /* @__PURE__ */ new Map();
function $ef06256079686ba0$export$f8aeda7b10753fa1(description) {
  let [id, setId] = (0, import_react15.useState)();
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    if (!description) return;
    let desc = $ef06256079686ba0$var$descriptionNodes.get(description);
    if (!desc) {
      let id2 = `react-aria-description-${$ef06256079686ba0$var$descriptionId++}`;
      setId(id2);
      let node = document.createElement("div");
      node.id = id2;
      node.style.display = "none";
      node.textContent = description;
      document.body.appendChild(node);
      desc = {
        refCount: 0,
        element: node
      };
      $ef06256079686ba0$var$descriptionNodes.set(description, desc);
    } else setId(desc.element.id);
    desc.refCount++;
    return () => {
      if (desc && --desc.refCount === 0) {
        desc.element.remove();
        $ef06256079686ba0$var$descriptionNodes.delete(description);
      }
    };
  }, [
    description
  ]);
  return {
    "aria-describedby": description ? id : void 0
  };
}

// node_modules/@react-aria/utils/dist/useEvent.mjs
var import_react16 = __toESM(require_react(), 1);
function $e9faafb641e167db$export$90fc3a17d93f704c(ref, event, handler, options) {
  let handleEvent = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)(handler);
  let isDisabled = handler == null;
  (0, import_react16.useEffect)(() => {
    if (isDisabled || !ref.current) return;
    let element = ref.current;
    element.addEventListener(event, handleEvent, options);
    return () => {
      element.removeEventListener(event, handleEvent, options);
    };
  }, [
    ref,
    event,
    options,
    isDisabled,
    handleEvent
  ]);
}

// node_modules/@react-aria/utils/dist/scrollIntoView.mjs
function $2f04cbc44ee30ce0$export$53a0910f038337bd(scrollView, element) {
  let offsetX = $2f04cbc44ee30ce0$var$relativeOffset(scrollView, element, "left");
  let offsetY = $2f04cbc44ee30ce0$var$relativeOffset(scrollView, element, "top");
  let width = element.offsetWidth;
  let height = element.offsetHeight;
  let x = scrollView.scrollLeft;
  let y = scrollView.scrollTop;
  let { borderTopWidth, borderLeftWidth, scrollPaddingTop, scrollPaddingRight, scrollPaddingBottom, scrollPaddingLeft } = getComputedStyle(scrollView);
  let borderAdjustedX = x + parseInt(borderLeftWidth, 10);
  let borderAdjustedY = y + parseInt(borderTopWidth, 10);
  let maxX = borderAdjustedX + scrollView.clientWidth;
  let maxY = borderAdjustedY + scrollView.clientHeight;
  let scrollPaddingTopNumber = parseInt(scrollPaddingTop, 10) || 0;
  let scrollPaddingBottomNumber = parseInt(scrollPaddingBottom, 10) || 0;
  let scrollPaddingRightNumber = parseInt(scrollPaddingRight, 10) || 0;
  let scrollPaddingLeftNumber = parseInt(scrollPaddingLeft, 10) || 0;
  if (offsetX <= x + scrollPaddingLeftNumber) x = offsetX - parseInt(borderLeftWidth, 10) - scrollPaddingLeftNumber;
  else if (offsetX + width > maxX - scrollPaddingRightNumber) x += offsetX + width - maxX + scrollPaddingRightNumber;
  if (offsetY <= borderAdjustedY + scrollPaddingTopNumber) y = offsetY - parseInt(borderTopWidth, 10) - scrollPaddingTopNumber;
  else if (offsetY + height > maxY - scrollPaddingBottomNumber) y += offsetY + height - maxY + scrollPaddingBottomNumber;
  scrollView.scrollLeft = x;
  scrollView.scrollTop = y;
}
function $2f04cbc44ee30ce0$var$relativeOffset(ancestor, child, axis) {
  const prop = axis === "left" ? "offsetLeft" : "offsetTop";
  let sum = 0;
  while (child.offsetParent) {
    sum += child[prop];
    if (child.offsetParent === ancestor) break;
    else if (child.offsetParent.contains(ancestor)) {
      sum -= ancestor[prop];
      break;
    }
    child = child.offsetParent;
  }
  return sum;
}
function $2f04cbc44ee30ce0$export$c826860796309d1b(targetElement, opts) {
  if (targetElement && document.contains(targetElement)) {
    let root = document.scrollingElement || document.documentElement;
    let isScrollPrevented = window.getComputedStyle(root).overflow === "hidden";
    if (!isScrollPrevented) {
      var _targetElement_scrollIntoView;
      let { left: originalLeft, top: originalTop } = targetElement.getBoundingClientRect();
      targetElement === null || targetElement === void 0 ? void 0 : (_targetElement_scrollIntoView = targetElement.scrollIntoView) === null || _targetElement_scrollIntoView === void 0 ? void 0 : _targetElement_scrollIntoView.call(targetElement, {
        block: "nearest"
      });
      let { left: newLeft, top: newTop } = targetElement.getBoundingClientRect();
      if (Math.abs(originalLeft - newLeft) > 1 || Math.abs(originalTop - newTop) > 1) {
        var _opts_containingElement_scrollIntoView, _opts_containingElement, _targetElement_scrollIntoView1;
        opts === null || opts === void 0 ? void 0 : (_opts_containingElement = opts.containingElement) === null || _opts_containingElement === void 0 ? void 0 : (_opts_containingElement_scrollIntoView = _opts_containingElement.scrollIntoView) === null || _opts_containingElement_scrollIntoView === void 0 ? void 0 : _opts_containingElement_scrollIntoView.call(_opts_containingElement, {
          block: "center",
          inline: "center"
        });
        (_targetElement_scrollIntoView1 = targetElement.scrollIntoView) === null || _targetElement_scrollIntoView1 === void 0 ? void 0 : _targetElement_scrollIntoView1.call(targetElement, {
          block: "nearest"
        });
      }
    } else {
      let scrollParents = (0, $a40c673dc9f6d9c7$export$94ed1c92c7beeb22)(targetElement);
      for (let scrollParent of scrollParents) $2f04cbc44ee30ce0$export$53a0910f038337bd(scrollParent, targetElement);
    }
  }
}

// node_modules/@react-aria/utils/dist/isVirtualEvent.mjs
function $6a7db85432448f7f$export$60278871457622de(event) {
  if (event.mozInputSource === 0 && event.isTrusted) return true;
  if ((0, $c87311424ea30a05$export$a11b0059900ceec8)() && event.pointerType) return event.type === "click" && event.buttons === 1;
  return event.detail === 0 && !event.pointerType;
}
function $6a7db85432448f7f$export$29bf1b5f2c56cf63(event) {
  return !(0, $c87311424ea30a05$export$a11b0059900ceec8)() && event.width === 0 && event.height === 0 || event.width === 1 && event.height === 1 && event.pressure === 0 && event.detail === 0 && event.pointerType === "mouse";
}

// node_modules/@react-aria/utils/dist/useDeepMemo.mjs
var import_react17 = __toESM(require_react(), 1);
function $5a387cc49350e6db$export$722debc0e56fea39(value, isEqual) {
  let lastValue = (0, import_react17.useRef)(null);
  if (value && lastValue.current && isEqual(value, lastValue.current)) value = lastValue.current;
  lastValue.current = value;
  return value;
}

// node_modules/@react-aria/utils/dist/useFormReset.mjs
var import_react18 = __toESM(require_react(), 1);
function $99facab73266f662$export$5add1d006293d136(ref, initialValue, onReset) {
  let resetValue = (0, import_react18.useRef)(initialValue);
  let handleReset = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)(() => {
    if (onReset) onReset(resetValue.current);
  });
  (0, import_react18.useEffect)(() => {
    var _ref_current;
    let form = ref === null || ref === void 0 ? void 0 : (_ref_current = ref.current) === null || _ref_current === void 0 ? void 0 : _ref_current.form;
    form === null || form === void 0 ? void 0 : form.addEventListener("reset", handleReset);
    return () => {
      form === null || form === void 0 ? void 0 : form.removeEventListener("reset", handleReset);
    };
  }, [
    ref,
    handleReset
  ]);
}

// node_modules/@react-aria/utils/dist/useLoadMore.mjs
var import_react19 = __toESM(require_react(), 1);
function $26f7f3da73fcd9d6$export$7717c92ee915373e(props, ref) {
  let { isLoading, onLoadMore, scrollOffset = 1, items } = props;
  let isLoadingRef = (0, import_react19.useRef)(isLoading);
  let prevProps = (0, import_react19.useRef)(props);
  let onScroll = (0, import_react19.useCallback)(() => {
    if (ref.current && !isLoadingRef.current && onLoadMore) {
      let shouldLoadMore = ref.current.scrollHeight - ref.current.scrollTop - ref.current.clientHeight < ref.current.clientHeight * scrollOffset;
      if (shouldLoadMore) {
        isLoadingRef.current = true;
        onLoadMore();
      }
    }
  }, [
    onLoadMore,
    ref,
    scrollOffset
  ]);
  let lastItems = (0, import_react19.useRef)(items);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    if (props !== prevProps.current) {
      isLoadingRef.current = isLoading;
      prevProps.current = props;
    }
    let shouldLoadMore = (ref === null || ref === void 0 ? void 0 : ref.current) && !isLoadingRef.current && onLoadMore && (!items || items !== lastItems.current) && ref.current.clientHeight === ref.current.scrollHeight;
    if (shouldLoadMore) {
      isLoadingRef.current = true;
      onLoadMore === null || onLoadMore === void 0 ? void 0 : onLoadMore();
    }
    lastItems.current = items;
  }, [
    isLoading,
    onLoadMore,
    props,
    ref,
    items
  ]);
  (0, $e9faafb641e167db$export$90fc3a17d93f704c)(ref, "scroll", onScroll);
}

// node_modules/@react-aria/utils/dist/useLoadMoreSentinel.mjs
var import_react20 = __toESM(require_react(), 1);
function $a5fa973c1850dd36$export$90a12e6abf95cbe0(props, ref) {
  let { collection, onLoadMore, scrollOffset = 1 } = props;
  let sentinelObserver = (0, import_react20.useRef)(null);
  let triggerLoadMore = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((entries) => {
    for (let entry of entries)
      if (entry.isIntersecting && onLoadMore) onLoadMore();
  });
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    if (ref.current) {
      sentinelObserver.current = new IntersectionObserver(triggerLoadMore, {
        root: (0, $62d8ded9296f3872$export$cfa2225e87938781)(ref === null || ref === void 0 ? void 0 : ref.current),
        rootMargin: `0px ${100 * scrollOffset}% ${100 * scrollOffset}% ${100 * scrollOffset}%`
      });
      sentinelObserver.current.observe(ref.current);
    }
    return () => {
      if (sentinelObserver.current) sentinelObserver.current.disconnect();
    };
  }, [
    collection,
    triggerLoadMore,
    ref,
    scrollOffset
  ]);
}

// node_modules/@react-aria/utils/dist/inertValue.mjs
var import_react21 = __toESM(require_react(), 1);
function $cdc5a6778b766db2$export$a9d04c5684123369(value) {
  const pieces = (0, import_react21.version).split(".");
  const major = parseInt(pieces[0], 10);
  if (major >= 19) return value;
  return value ? "true" : void 0;
}

// node_modules/@react-aria/utils/dist/constants.mjs
var $5671b20cf9b562b2$export$447a38995de2c711 = "react-aria-clear-focus";
var $5671b20cf9b562b2$export$831c820ad60f9d12 = "react-aria-focus";

// node_modules/@react-aria/utils/dist/keyboard.mjs
function $21f1aa98acb08317$export$16792effe837dba3(e) {
  if ((0, $c87311424ea30a05$export$9ac100e40613ea10)()) return e.metaKey;
  return e.ctrlKey;
}

// node_modules/@react-aria/utils/dist/animation.mjs
var import_react_dom = __toESM(require_react_dom(), 1);
var import_react22 = __toESM(require_react(), 1);
function $d3f049242431219c$export$6d3443f2c48bfc20(ref, isReady = true) {
  let [isEntering, setEntering] = (0, import_react22.useState)(true);
  let isAnimationReady = isEntering && isReady;
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    if (isAnimationReady && ref.current && "getAnimations" in ref.current) {
      for (let animation of ref.current.getAnimations()) if (animation instanceof CSSTransition) animation.cancel();
    }
  }, [
    ref,
    isAnimationReady
  ]);
  $d3f049242431219c$var$useAnimation(ref, isAnimationReady, (0, import_react22.useCallback)(() => setEntering(false), []));
  return isAnimationReady;
}
function $d3f049242431219c$export$45fda7c47f93fd48(ref, isOpen) {
  let [exitState, setExitState] = (0, import_react22.useState)(isOpen ? "open" : "closed");
  switch (exitState) {
    case "open":
      if (!isOpen) setExitState("exiting");
      break;
    case "closed":
    case "exiting":
      if (isOpen) setExitState("open");
      break;
  }
  let isExiting = exitState === "exiting";
  $d3f049242431219c$var$useAnimation(ref, isExiting, (0, import_react22.useCallback)(() => {
    setExitState((state) => state === "exiting" ? "closed" : state);
  }, []));
  return isExiting;
}
function $d3f049242431219c$var$useAnimation(ref, isActive, onEnd) {
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    if (isActive && ref.current) {
      if (!("getAnimations" in ref.current)) {
        onEnd();
        return;
      }
      let animations = ref.current.getAnimations();
      if (animations.length === 0) {
        onEnd();
        return;
      }
      let canceled = false;
      Promise.all(animations.map((a) => a.finished)).then(() => {
        if (!canceled) (0, import_react_dom.flushSync)(() => {
          onEnd();
        });
      }).catch(() => {
      });
      return () => {
        canceled = true;
      };
    }
  }, [
    ref,
    isActive,
    onEnd
  ]);
}

// node_modules/@react-aria/utils/dist/isFocusable.mjs
var $b4b717babfbb907b$var$focusableElements = [
  "input:not([disabled]):not([type=hidden])",
  "select:not([disabled])",
  "textarea:not([disabled])",
  "button:not([disabled])",
  "a[href]",
  "area[href]",
  "summary",
  "iframe",
  "object",
  "embed",
  "audio[controls]",
  "video[controls]",
  '[contenteditable]:not([contenteditable^="false"])'
];
var $b4b717babfbb907b$var$FOCUSABLE_ELEMENT_SELECTOR = $b4b717babfbb907b$var$focusableElements.join(":not([hidden]),") + ",[tabindex]:not([disabled]):not([hidden])";
$b4b717babfbb907b$var$focusableElements.push('[tabindex]:not([tabindex="-1"]):not([disabled])');
var $b4b717babfbb907b$var$TABBABLE_ELEMENT_SELECTOR = $b4b717babfbb907b$var$focusableElements.join(':not([hidden]):not([tabindex="-1"]),');
function $b4b717babfbb907b$export$4c063cf1350e6fed(element) {
  return element.matches($b4b717babfbb907b$var$FOCUSABLE_ELEMENT_SELECTOR);
}
function $b4b717babfbb907b$export$bebd5a1431fec25d(element) {
  return element.matches($b4b717babfbb907b$var$TABBABLE_ELEMENT_SELECTOR);
}

// node_modules/@react-stately/utils/dist/useControlledState.mjs
var import_react23 = __toESM(require_react(), 1);
function $458b0a5536c1a7cf$export$40bfa8c7b0832715(value, defaultValue, onChange) {
  let [stateValue, setStateValue] = (0, import_react23.useState)(value || defaultValue);
  let isControlledRef = (0, import_react23.useRef)(value !== void 0);
  let isControlled = value !== void 0;
  (0, import_react23.useEffect)(() => {
    let wasControlled = isControlledRef.current;
    if (wasControlled !== isControlled && true) console.warn(`WARN: A component changed from ${wasControlled ? "controlled" : "uncontrolled"} to ${isControlled ? "controlled" : "uncontrolled"}.`);
    isControlledRef.current = isControlled;
  }, [
    isControlled
  ]);
  let currentValue = isControlled ? value : stateValue;
  let setValue = (0, import_react23.useCallback)((value2, ...args) => {
    let onChangeCaller = (value3, ...onChangeArgs) => {
      if (onChange) {
        if (!Object.is(currentValue, value3)) onChange(value3, ...onChangeArgs);
      }
      if (!isControlled)
        currentValue = value3;
    };
    if (typeof value2 === "function") {
      if (true) console.warn("We can not support a function callback. See Github Issues for details https://github.com/adobe/react-spectrum/issues/2320");
      let updateFunction = (oldValue, ...functionArgs) => {
        let interceptedValue = value2(isControlled ? currentValue : oldValue, ...functionArgs);
        onChangeCaller(interceptedValue, ...args);
        if (!isControlled) return interceptedValue;
        return oldValue;
      };
      setStateValue(updateFunction);
    } else {
      if (!isControlled) setStateValue(value2);
      onChangeCaller(value2, ...args);
    }
  }, [
    isControlled,
    currentValue,
    onChange
  ]);
  return [
    currentValue,
    setValue
  ];
}

// node_modules/@react-stately/utils/dist/number.mjs
function $9446cca9a3875146$export$7d15b64cf5a3a4c4(value, min = -Infinity, max = Infinity) {
  let newValue = Math.min(Math.max(value, min), max);
  return newValue;
}
function $9446cca9a3875146$export$e1a7b8e69ef6c52f(value, step) {
  let roundedValue = value;
  let stepString = step.toString();
  let pointIndex = stepString.indexOf(".");
  let precision = pointIndex >= 0 ? stepString.length - pointIndex : 0;
  if (precision > 0) {
    let pow = Math.pow(10, precision);
    roundedValue = Math.round(roundedValue * pow) / pow;
  }
  return roundedValue;
}
function $9446cca9a3875146$export$cb6e0bb50bc19463(value, min, max, step) {
  min = Number(min);
  max = Number(max);
  let remainder = (value - (isNaN(min) ? 0 : min)) % step;
  let snappedValue = $9446cca9a3875146$export$e1a7b8e69ef6c52f(Math.abs(remainder) * 2 >= step ? value + Math.sign(remainder) * (step - Math.abs(remainder)) : value - remainder, step);
  if (!isNaN(min)) {
    if (snappedValue < min) snappedValue = min;
    else if (!isNaN(max) && snappedValue > max) snappedValue = min + Math.floor($9446cca9a3875146$export$e1a7b8e69ef6c52f((max - min) / step, step)) * step;
  } else if (!isNaN(max) && snappedValue > max) snappedValue = Math.floor($9446cca9a3875146$export$e1a7b8e69ef6c52f(max / step, step)) * step;
  snappedValue = $9446cca9a3875146$export$e1a7b8e69ef6c52f(snappedValue, step);
  return snappedValue;
}
function $9446cca9a3875146$export$b6268554fba451f(value, digits, base = 10) {
  const pow = Math.pow(base, digits);
  return Math.round(value * pow) / pow;
}

// node_modules/react-aria-components/dist/utils.mjs
var import_react24 = __toESM(require_react(), 1);
var $64fa3d84918910a7$export$c62b8e45d58ddad9 = Symbol("default");
function $64fa3d84918910a7$export$2881499e37b75b9a({ values, children }) {
  for (let [Context, value] of values)
    children = (0, import_react24.default).createElement(Context.Provider, {
      value
    }, children);
  return children;
}
function $64fa3d84918910a7$export$4d86445c2cf5e3(props) {
  let { className, style, children, defaultClassName, defaultChildren, defaultStyle, values } = props;
  return (0, import_react24.useMemo)(() => {
    let computedClassName;
    let computedStyle;
    let computedChildren;
    if (typeof className === "function") computedClassName = className({
      ...values,
      defaultClassName
    });
    else computedClassName = className;
    if (typeof style === "function") computedStyle = style({
      ...values,
      defaultStyle: defaultStyle || {}
    });
    else computedStyle = style;
    if (typeof children === "function") computedChildren = children({
      ...values,
      defaultChildren
    });
    else if (children == null) computedChildren = defaultChildren;
    else computedChildren = children;
    return {
      className: computedClassName !== null && computedClassName !== void 0 ? computedClassName : defaultClassName,
      style: computedStyle || defaultStyle ? {
        ...defaultStyle,
        ...computedStyle
      } : void 0,
      children: computedChildren !== null && computedChildren !== void 0 ? computedChildren : defaultChildren,
      "data-rac": ""
    };
  }, [
    className,
    style,
    children,
    defaultClassName,
    defaultChildren,
    defaultStyle,
    values
  ]);
}
function $64fa3d84918910a7$export$c245e6201fed2f75(value, wrap) {
  return (renderProps) => wrap(typeof value === "function" ? value(renderProps) : value, renderProps);
}
function $64fa3d84918910a7$export$fabf2dc03a41866e(context, slot) {
  let ctx = (0, import_react24.useContext)(context);
  if (slot === null)
    return null;
  if (ctx && typeof ctx === "object" && "slots" in ctx && ctx.slots) {
    let slotKey = slot || $64fa3d84918910a7$export$c62b8e45d58ddad9;
    if (!ctx.slots[slotKey]) {
      let availableSlots = new Intl.ListFormat().format(Object.keys(ctx.slots).map((p) => `"${p}"`));
      let errorMessage = slot ? `Invalid slot "${slot}".` : "A slot prop is required.";
      throw new Error(`${errorMessage} Valid slot names are ${availableSlots}.`);
    }
    return ctx.slots[slotKey];
  }
  return ctx;
}
function $64fa3d84918910a7$export$29f1550f4b0d4415(props, ref, context) {
  let ctx = $64fa3d84918910a7$export$fabf2dc03a41866e(context, props.slot) || {};
  let { ref: contextRef, ...contextProps } = ctx;
  let mergedRef = (0, $df56164dff5785e2$export$4338b53315abf666)((0, import_react24.useMemo)(() => (0, $5dc95899b306f630$export$c9058316764c140e)(ref, contextRef), [
    ref,
    contextRef
  ]));
  let mergedProps = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(contextProps, props);
  if ("style" in contextProps && contextProps.style && "style" in props && props.style) {
    if (typeof contextProps.style === "function" || typeof props.style === "function")
      mergedProps.style = (renderProps) => {
        let contextStyle = typeof contextProps.style === "function" ? contextProps.style(renderProps) : contextProps.style;
        let defaultStyle = {
          ...renderProps.defaultStyle,
          ...contextStyle
        };
        let style = typeof props.style === "function" ? props.style({
          ...renderProps,
          defaultStyle
        }) : props.style;
        return {
          ...defaultStyle,
          ...style
        };
      };
    else
      mergedProps.style = {
        ...contextProps.style,
        ...props.style
      };
  }
  return [
    mergedProps,
    mergedRef
  ];
}
function $64fa3d84918910a7$export$9d4c57ee4c6ffdd8(initialState = true) {
  let [hasSlot, setHasSlot] = (0, import_react24.useState)(initialState);
  let hasRun = (0, import_react24.useRef)(false);
  let ref = (0, import_react24.useCallback)((el) => {
    hasRun.current = true;
    setHasSlot(!!el);
  }, []);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    if (!hasRun.current) setHasSlot(false);
  }, []);
  return [
    ref,
    hasSlot
  ];
}
function $64fa3d84918910a7$export$ef03459518577ad4(props) {
  const prefix = /^(data-.*)$/;
  let filteredProps = {};
  for (const prop in props) if (!prefix.test(prop)) filteredProps[prop] = props[prop];
  return filteredProps;
}

// node_modules/@react-aria/collections/dist/BaseCollection.mjs
var $23b9f4fcf0fe224b$export$d68d59712b04d9d1 = class _$23b9f4fcf0fe224b$export$d68d59712b04d9d1 {
  get childNodes() {
    throw new Error("childNodes is not supported");
  }
  clone() {
    let node = new _$23b9f4fcf0fe224b$export$d68d59712b04d9d1(this.type, this.key);
    node.value = this.value;
    node.level = this.level;
    node.hasChildNodes = this.hasChildNodes;
    node.rendered = this.rendered;
    node.textValue = this.textValue;
    node["aria-label"] = this["aria-label"];
    node.index = this.index;
    node.parentKey = this.parentKey;
    node.prevKey = this.prevKey;
    node.nextKey = this.nextKey;
    node.firstChildKey = this.firstChildKey;
    node.lastChildKey = this.lastChildKey;
    node.props = this.props;
    node.render = this.render;
    node.colSpan = this.colSpan;
    node.colIndex = this.colIndex;
    return node;
  }
  constructor(type, key) {
    this.value = null;
    this.level = 0;
    this.hasChildNodes = false;
    this.rendered = null;
    this.textValue = "";
    this["aria-label"] = void 0;
    this.index = 0;
    this.parentKey = null;
    this.prevKey = null;
    this.nextKey = null;
    this.firstChildKey = null;
    this.lastChildKey = null;
    this.props = {};
    this.colSpan = null;
    this.colIndex = null;
    this.type = type;
    this.key = key;
  }
};
var $23b9f4fcf0fe224b$export$408d25a4e12db025 = class _$23b9f4fcf0fe224b$export$408d25a4e12db025 {
  get size() {
    return this.keyMap.size;
  }
  getKeys() {
    return this.keyMap.keys();
  }
  *[Symbol.iterator]() {
    let node = this.firstKey != null ? this.keyMap.get(this.firstKey) : void 0;
    while (node) {
      yield node;
      node = node.nextKey != null ? this.keyMap.get(node.nextKey) : void 0;
    }
  }
  getChildren(key) {
    let keyMap = this.keyMap;
    return {
      *[Symbol.iterator]() {
        let parent = keyMap.get(key);
        let node = (parent === null || parent === void 0 ? void 0 : parent.firstChildKey) != null ? keyMap.get(parent.firstChildKey) : null;
        while (node) {
          yield node;
          node = node.nextKey != null ? keyMap.get(node.nextKey) : void 0;
        }
      }
    };
  }
  getKeyBefore(key) {
    let node = this.keyMap.get(key);
    if (!node) return null;
    if (node.prevKey != null) {
      node = this.keyMap.get(node.prevKey);
      while (node && node.type !== "item" && node.lastChildKey != null) node = this.keyMap.get(node.lastChildKey);
      var _node_key;
      return (_node_key = node === null || node === void 0 ? void 0 : node.key) !== null && _node_key !== void 0 ? _node_key : null;
    }
    return node.parentKey;
  }
  getKeyAfter(key) {
    let node = this.keyMap.get(key);
    if (!node) return null;
    if (node.type !== "item" && node.firstChildKey != null) return node.firstChildKey;
    while (node) {
      if (node.nextKey != null) return node.nextKey;
      if (node.parentKey != null) node = this.keyMap.get(node.parentKey);
      else return null;
    }
    return null;
  }
  getFirstKey() {
    return this.firstKey;
  }
  getLastKey() {
    let node = this.lastKey != null ? this.keyMap.get(this.lastKey) : null;
    while ((node === null || node === void 0 ? void 0 : node.lastChildKey) != null) node = this.keyMap.get(node.lastChildKey);
    var _node_key;
    return (_node_key = node === null || node === void 0 ? void 0 : node.key) !== null && _node_key !== void 0 ? _node_key : null;
  }
  getItem(key) {
    var _this_keyMap_get;
    return (_this_keyMap_get = this.keyMap.get(key)) !== null && _this_keyMap_get !== void 0 ? _this_keyMap_get : null;
  }
  at() {
    throw new Error("Not implemented");
  }
  clone() {
    let Constructor = this.constructor;
    let collection = new Constructor();
    collection.keyMap = new Map(this.keyMap);
    collection.firstKey = this.firstKey;
    collection.lastKey = this.lastKey;
    return collection;
  }
  addNode(node) {
    if (this.frozen) throw new Error("Cannot add a node to a frozen collection");
    this.keyMap.set(node.key, node);
  }
  removeNode(key) {
    if (this.frozen) throw new Error("Cannot remove a node to a frozen collection");
    this.keyMap.delete(key);
  }
  commit(firstKey, lastKey, isSSR = false) {
    if (this.frozen) throw new Error("Cannot commit a frozen collection");
    this.firstKey = firstKey;
    this.lastKey = lastKey;
    this.frozen = !isSSR;
  }
  // TODO: this is pretty specific to menu, will need to check if it is generic enough
  // Will need to handle varying levels I assume but will revisit after I get searchable menu working for base menu
  // TODO: an alternative is to simply walk the collection and add all item nodes that match the filter and any sections/separators we encounter
  // to an array, then walk that new array and fix all the next/Prev keys while adding them to the new collection
  UNSTABLE_filter(filterFn) {
    let newCollection = new _$23b9f4fcf0fe224b$export$408d25a4e12db025();
    let lastNode = null;
    for (let node of this) {
      if (node.type === "section" && node.hasChildNodes) {
        let clonedSection = node.clone();
        let lastChildInSection = null;
        for (let child of this.getChildren(node.key)) if ($23b9f4fcf0fe224b$var$shouldKeepNode(child, filterFn, this, newCollection)) {
          let clonedChild = child.clone();
          if (lastChildInSection == null) clonedSection.firstChildKey = clonedChild.key;
          if (newCollection.firstKey == null) newCollection.firstKey = clonedSection.key;
          if (lastChildInSection && lastChildInSection.parentKey === clonedChild.parentKey) {
            lastChildInSection.nextKey = clonedChild.key;
            clonedChild.prevKey = lastChildInSection.key;
          } else clonedChild.prevKey = null;
          clonedChild.nextKey = null;
          newCollection.addNode(clonedChild);
          lastChildInSection = clonedChild;
        }
        if (lastChildInSection) {
          if (lastChildInSection.type !== "header") {
            clonedSection.lastChildKey = lastChildInSection.key;
            if (lastNode == null) clonedSection.prevKey = null;
            else if (lastNode.type === "section" || lastNode.type === "separator") {
              lastNode.nextKey = clonedSection.key;
              clonedSection.prevKey = lastNode.key;
            }
            clonedSection.nextKey = null;
            lastNode = clonedSection;
            newCollection.addNode(clonedSection);
          } else {
            if (newCollection.firstKey === clonedSection.key) newCollection.firstKey = null;
            newCollection.removeNode(lastChildInSection.key);
          }
        }
      } else if (node.type === "separator") {
        let clonedSeparator = node.clone();
        clonedSeparator.nextKey = null;
        if ((lastNode === null || lastNode === void 0 ? void 0 : lastNode.type) === "section") {
          lastNode.nextKey = clonedSeparator.key;
          clonedSeparator.prevKey = lastNode.key;
          lastNode = clonedSeparator;
          newCollection.addNode(clonedSeparator);
        }
      } else {
        let clonedNode = node.clone();
        if ($23b9f4fcf0fe224b$var$shouldKeepNode(clonedNode, filterFn, this, newCollection)) {
          if (newCollection.firstKey == null) newCollection.firstKey = clonedNode.key;
          if (lastNode != null && lastNode.type !== "section" && lastNode.type !== "separator" && lastNode.parentKey === clonedNode.parentKey) {
            lastNode.nextKey = clonedNode.key;
            clonedNode.prevKey = lastNode.key;
          } else clonedNode.prevKey = null;
          clonedNode.nextKey = null;
          newCollection.addNode(clonedNode);
          lastNode = clonedNode;
        }
      }
    }
    if ((lastNode === null || lastNode === void 0 ? void 0 : lastNode.type) === "separator" && lastNode.nextKey === null) {
      let lastSection;
      if (lastNode.prevKey != null) {
        lastSection = newCollection.getItem(lastNode.prevKey);
        lastSection.nextKey = null;
      }
      newCollection.removeNode(lastNode.key);
      lastNode = lastSection;
    }
    newCollection.lastKey = (lastNode === null || lastNode === void 0 ? void 0 : lastNode.key) || null;
    return newCollection;
  }
  constructor() {
    this.keyMap = /* @__PURE__ */ new Map();
    this.firstKey = null;
    this.lastKey = null;
    this.frozen = false;
  }
};
function $23b9f4fcf0fe224b$var$shouldKeepNode(node, filterFn, oldCollection, newCollection) {
  if (node.type === "subdialogtrigger" || node.type === "submenutrigger") {
    let triggerChild = [
      ...oldCollection.getChildren(node.key)
    ][0];
    if (triggerChild && filterFn(triggerChild.textValue)) {
      let clonedChild = triggerChild.clone();
      newCollection.addNode(clonedChild);
      return true;
    } else return false;
  } else if (node.type === "header") return true;
  else return filterFn(node.textValue);
}

// node_modules/@react-aria/collections/dist/Document.mjs
var $681cc3c98f569e39$export$410b0c854570d131 = class {
  *[Symbol.iterator]() {
    let node = this.firstChild;
    while (node) {
      yield node;
      node = node.nextSibling;
    }
  }
  get firstChild() {
    return this._firstChild;
  }
  set firstChild(firstChild) {
    this._firstChild = firstChild;
    this.ownerDocument.markDirty(this);
  }
  get lastChild() {
    return this._lastChild;
  }
  set lastChild(lastChild) {
    this._lastChild = lastChild;
    this.ownerDocument.markDirty(this);
  }
  get previousSibling() {
    return this._previousSibling;
  }
  set previousSibling(previousSibling) {
    this._previousSibling = previousSibling;
    this.ownerDocument.markDirty(this);
  }
  get nextSibling() {
    return this._nextSibling;
  }
  set nextSibling(nextSibling) {
    this._nextSibling = nextSibling;
    this.ownerDocument.markDirty(this);
  }
  get parentNode() {
    return this._parentNode;
  }
  set parentNode(parentNode) {
    this._parentNode = parentNode;
    this.ownerDocument.markDirty(this);
  }
  get isConnected() {
    var _this_parentNode;
    return ((_this_parentNode = this.parentNode) === null || _this_parentNode === void 0 ? void 0 : _this_parentNode.isConnected) || false;
  }
  invalidateChildIndices(child) {
    if (this._minInvalidChildIndex == null || !this._minInvalidChildIndex.isConnected || child.index < this._minInvalidChildIndex.index) {
      this._minInvalidChildIndex = child;
      this.ownerDocument.markDirty(this);
    }
  }
  updateChildIndices() {
    let node = this._minInvalidChildIndex;
    while (node) {
      node.index = node.previousSibling ? node.previousSibling.index + 1 : 0;
      node = node.nextSibling;
    }
    this._minInvalidChildIndex = null;
  }
  appendChild(child) {
    if (child.parentNode) child.parentNode.removeChild(child);
    if (this.firstChild == null) this.firstChild = child;
    if (this.lastChild) {
      this.lastChild.nextSibling = child;
      child.index = this.lastChild.index + 1;
      child.previousSibling = this.lastChild;
    } else {
      child.previousSibling = null;
      child.index = 0;
    }
    child.parentNode = this;
    child.nextSibling = null;
    this.lastChild = child;
    this.ownerDocument.markDirty(this);
    if (this.isConnected) this.ownerDocument.queueUpdate();
  }
  insertBefore(newNode, referenceNode) {
    if (referenceNode == null) return this.appendChild(newNode);
    if (newNode.parentNode) newNode.parentNode.removeChild(newNode);
    newNode.nextSibling = referenceNode;
    newNode.previousSibling = referenceNode.previousSibling;
    newNode.index = referenceNode.index - 1;
    if (this.firstChild === referenceNode) this.firstChild = newNode;
    else if (referenceNode.previousSibling) referenceNode.previousSibling.nextSibling = newNode;
    referenceNode.previousSibling = newNode;
    newNode.parentNode = referenceNode.parentNode;
    this.invalidateChildIndices(newNode);
    if (this.isConnected) this.ownerDocument.queueUpdate();
  }
  removeChild(child) {
    if (child.parentNode !== this || !this.ownerDocument.isMounted) return;
    if (this._minInvalidChildIndex === child) this._minInvalidChildIndex = null;
    if (child.nextSibling) {
      this.invalidateChildIndices(child.nextSibling);
      child.nextSibling.previousSibling = child.previousSibling;
    }
    if (child.previousSibling) child.previousSibling.nextSibling = child.nextSibling;
    if (this.firstChild === child) this.firstChild = child.nextSibling;
    if (this.lastChild === child) this.lastChild = child.previousSibling;
    child.parentNode = null;
    child.nextSibling = null;
    child.previousSibling = null;
    child.index = 0;
    this.ownerDocument.markDirty(child);
    if (this.isConnected) this.ownerDocument.queueUpdate();
  }
  addEventListener() {
  }
  removeEventListener() {
  }
  get previousVisibleSibling() {
    let node = this.previousSibling;
    while (node && node.isHidden) node = node.previousSibling;
    return node;
  }
  get nextVisibleSibling() {
    let node = this.nextSibling;
    while (node && node.isHidden) node = node.nextSibling;
    return node;
  }
  get firstVisibleChild() {
    let node = this.firstChild;
    while (node && node.isHidden) node = node.nextSibling;
    return node;
  }
  get lastVisibleChild() {
    let node = this.lastChild;
    while (node && node.isHidden) node = node.previousSibling;
    return node;
  }
  constructor(ownerDocument) {
    this._firstChild = null;
    this._lastChild = null;
    this._previousSibling = null;
    this._nextSibling = null;
    this._parentNode = null;
    this._minInvalidChildIndex = null;
    this.ownerDocument = ownerDocument;
  }
};
var $681cc3c98f569e39$export$dc064fe9e59310fd = class _$681cc3c98f569e39$export$dc064fe9e59310fd extends $681cc3c98f569e39$export$410b0c854570d131 {
  get index() {
    return this._index;
  }
  set index(index) {
    this._index = index;
    this.ownerDocument.markDirty(this);
  }
  get level() {
    if (this.parentNode instanceof _$681cc3c98f569e39$export$dc064fe9e59310fd) return this.parentNode.level + (this.node.type === "item" ? 1 : 0);
    return 0;
  }
  /**
  * Lazily gets a mutable instance of a Node. If the node has already
  * been cloned during this update cycle, it just returns the existing one.
  */
  getMutableNode() {
    if (!this.isMutated) {
      this.node = this.node.clone();
      this.isMutated = true;
    }
    this.ownerDocument.markDirty(this);
    return this.node;
  }
  updateNode() {
    var _this_previousVisibleSibling, _this_firstVisibleChild, _this_lastVisibleChild;
    let nextSibling = this.nextVisibleSibling;
    let node = this.getMutableNode();
    node.index = this.index;
    node.level = this.level;
    node.parentKey = this.parentNode instanceof _$681cc3c98f569e39$export$dc064fe9e59310fd ? this.parentNode.node.key : null;
    var _this_previousVisibleSibling_node_key;
    node.prevKey = (_this_previousVisibleSibling_node_key = (_this_previousVisibleSibling = this.previousVisibleSibling) === null || _this_previousVisibleSibling === void 0 ? void 0 : _this_previousVisibleSibling.node.key) !== null && _this_previousVisibleSibling_node_key !== void 0 ? _this_previousVisibleSibling_node_key : null;
    var _nextSibling_node_key;
    node.nextKey = (_nextSibling_node_key = nextSibling === null || nextSibling === void 0 ? void 0 : nextSibling.node.key) !== null && _nextSibling_node_key !== void 0 ? _nextSibling_node_key : null;
    node.hasChildNodes = !!this.firstChild;
    var _this_firstVisibleChild_node_key;
    node.firstChildKey = (_this_firstVisibleChild_node_key = (_this_firstVisibleChild = this.firstVisibleChild) === null || _this_firstVisibleChild === void 0 ? void 0 : _this_firstVisibleChild.node.key) !== null && _this_firstVisibleChild_node_key !== void 0 ? _this_firstVisibleChild_node_key : null;
    var _this_lastVisibleChild_node_key;
    node.lastChildKey = (_this_lastVisibleChild_node_key = (_this_lastVisibleChild = this.lastVisibleChild) === null || _this_lastVisibleChild === void 0 ? void 0 : _this_lastVisibleChild.node.key) !== null && _this_lastVisibleChild_node_key !== void 0 ? _this_lastVisibleChild_node_key : null;
    if ((node.colSpan != null || node.colIndex != null) && nextSibling) {
      var _node_colIndex, _node_colSpan;
      let nextColIndex = ((_node_colIndex = node.colIndex) !== null && _node_colIndex !== void 0 ? _node_colIndex : node.index) + ((_node_colSpan = node.colSpan) !== null && _node_colSpan !== void 0 ? _node_colSpan : 1);
      if (nextColIndex !== nextSibling.node.colIndex) {
        let siblingNode = nextSibling.getMutableNode();
        siblingNode.colIndex = nextColIndex;
      }
    }
  }
  setProps(obj, ref, rendered, render) {
    let node = this.getMutableNode();
    let { value: value1, textValue, id, ...props } = obj;
    props.ref = ref;
    node.props = props;
    node.rendered = rendered;
    node.render = render;
    node.value = value1;
    node.textValue = textValue || (typeof props.children === "string" ? props.children : "") || obj["aria-label"] || "";
    if (id != null && id !== node.key) {
      if (this.hasSetProps) throw new Error("Cannot change the id of an item");
      node.key = id;
    }
    if (props.colSpan != null) node.colSpan = props.colSpan;
    this.hasSetProps = true;
    if (this.isConnected) this.ownerDocument.queueUpdate();
  }
  get style() {
    let element = this;
    return {
      get display() {
        return element.isHidden ? "none" : "";
      },
      set display(value) {
        let isHidden = value === "none";
        if (element.isHidden !== isHidden) {
          var _element_parentNode, _element_parentNode1;
          if (((_element_parentNode = element.parentNode) === null || _element_parentNode === void 0 ? void 0 : _element_parentNode.firstVisibleChild) === element || ((_element_parentNode1 = element.parentNode) === null || _element_parentNode1 === void 0 ? void 0 : _element_parentNode1.lastVisibleChild) === element) element.ownerDocument.markDirty(element.parentNode);
          let prev = element.previousVisibleSibling;
          let next = element.nextVisibleSibling;
          if (prev) element.ownerDocument.markDirty(prev);
          if (next) element.ownerDocument.markDirty(next);
          element.isHidden = isHidden;
          element.ownerDocument.markDirty(element);
        }
      }
    };
  }
  hasAttribute() {
  }
  setAttribute() {
  }
  setAttributeNS() {
  }
  removeAttribute() {
  }
  constructor(type, ownerDocument) {
    super(ownerDocument), this.nodeType = 8, this.isMutated = true, this._index = 0, this.hasSetProps = false, this.isHidden = false;
    this.node = new (0, $23b9f4fcf0fe224b$export$d68d59712b04d9d1)(type, `react-aria-${++ownerDocument.nodeId}`);
  }
};
var $681cc3c98f569e39$export$b34a105447964f9f = class extends $681cc3c98f569e39$export$410b0c854570d131 {
  get isConnected() {
    return this.isMounted;
  }
  createElement(type) {
    return new $681cc3c98f569e39$export$dc064fe9e59310fd(type, this);
  }
  getMutableCollection() {
    if (!this.nextCollection) this.nextCollection = this.collection.clone();
    return this.nextCollection;
  }
  markDirty(node) {
    this.dirtyNodes.add(node);
  }
  addNode(element) {
    if (element.isHidden) return;
    let collection = this.getMutableCollection();
    if (!collection.getItem(element.node.key)) for (let child of element) this.addNode(child);
    collection.addNode(element.node);
  }
  removeNode(node) {
    for (let child of node) this.removeNode(child);
    let collection = this.getMutableCollection();
    collection.removeNode(node.node.key);
  }
  /** Finalizes the collection update, updating all nodes and freezing the collection. */
  getCollection() {
    if (this.inSubscription) return this.collection.clone();
    this.queuedRender = false;
    this.updateCollection();
    return this.collection;
  }
  updateCollection() {
    for (let element of this.dirtyNodes) if (element instanceof $681cc3c98f569e39$export$dc064fe9e59310fd && (!element.isConnected || element.isHidden)) this.removeNode(element);
    else element.updateChildIndices();
    for (let element of this.dirtyNodes) if (element instanceof $681cc3c98f569e39$export$dc064fe9e59310fd) {
      if (element.isConnected && !element.isHidden) {
        element.updateNode();
        this.addNode(element);
      }
      element.isMutated = false;
    }
    this.dirtyNodes.clear();
    if (this.nextCollection) {
      var _this_firstVisibleChild, _this_lastVisibleChild;
      var _this_firstVisibleChild_node_key, _this_lastVisibleChild_node_key;
      this.nextCollection.commit((_this_firstVisibleChild_node_key = (_this_firstVisibleChild = this.firstVisibleChild) === null || _this_firstVisibleChild === void 0 ? void 0 : _this_firstVisibleChild.node.key) !== null && _this_firstVisibleChild_node_key !== void 0 ? _this_firstVisibleChild_node_key : null, (_this_lastVisibleChild_node_key = (_this_lastVisibleChild = this.lastVisibleChild) === null || _this_lastVisibleChild === void 0 ? void 0 : _this_lastVisibleChild.node.key) !== null && _this_lastVisibleChild_node_key !== void 0 ? _this_lastVisibleChild_node_key : null, this.isSSR);
      if (!this.isSSR) {
        this.collection = this.nextCollection;
        this.nextCollection = null;
      }
    }
  }
  queueUpdate() {
    if (this.dirtyNodes.size === 0 || this.queuedRender) return;
    this.queuedRender = true;
    this.inSubscription = true;
    for (let fn of this.subscriptions) fn();
    this.inSubscription = false;
  }
  subscribe(fn) {
    this.subscriptions.add(fn);
    return () => this.subscriptions.delete(fn);
  }
  resetAfterSSR() {
    if (this.isSSR) {
      this.isSSR = false;
      this.firstChild = null;
      this.lastChild = null;
      this.nodeId = 0;
    }
  }
  constructor(collection) {
    super(null), this.nodeType = 11, this.ownerDocument = this, this.dirtyNodes = /* @__PURE__ */ new Set(), this.isSSR = false, this.nodeId = 0, this.nodesByProps = /* @__PURE__ */ new WeakMap(), this.isMounted = true, this.nextCollection = null, this.subscriptions = /* @__PURE__ */ new Set(), this.queuedRender = false, this.inSubscription = false;
    this.collection = collection;
    this.nextCollection = collection;
  }
};

// node_modules/@react-aria/collections/dist/useCachedChildren.mjs
var import_react25 = __toESM(require_react(), 1);
function $e948873055cbafe4$export$727c8fc270210f13(props) {
  let { children, items, idScope, addIdAndValue, dependencies = [] } = props;
  let cache = (0, import_react25.useMemo)(() => /* @__PURE__ */ new WeakMap(), dependencies);
  return (0, import_react25.useMemo)(() => {
    if (items && typeof children === "function") {
      let res = [];
      for (let item of items) {
        let rendered = cache.get(item);
        if (!rendered) {
          rendered = children(item);
          var _rendered_props_id, _ref;
          let key = (_ref = (_rendered_props_id = rendered.props.id) !== null && _rendered_props_id !== void 0 ? _rendered_props_id : item.key) !== null && _ref !== void 0 ? _ref : item.id;
          if (key == null) throw new Error("Could not determine key for item");
          if (idScope) key = idScope + ":" + key;
          rendered = (0, import_react25.cloneElement)(rendered, addIdAndValue ? {
            key,
            id: key,
            value: item
          } : {
            key
          });
          cache.set(item, rendered);
        }
        res.push(rendered);
      }
      return res;
    } else if (typeof children !== "function") return children;
  }, [
    children,
    items,
    cache,
    idScope,
    addIdAndValue
  ]);
}

// node_modules/@react-aria/collections/dist/Hidden.mjs
var import_react26 = __toESM(require_react(), 1);
if (typeof HTMLTemplateElement !== "undefined") {
  const getFirstChild = Object.getOwnPropertyDescriptor(Node.prototype, "firstChild").get;
  Object.defineProperty(HTMLTemplateElement.prototype, "firstChild", {
    configurable: true,
    enumerable: true,
    get: function() {
      if (this.dataset.reactAriaHidden) return this.content.firstChild;
      else return getFirstChild.call(this);
    }
  });
}
var $f39a9eba43920ace$export$94b6d0abf7d33e8c = (0, import_react26.createContext)(false);
function $f39a9eba43920ace$export$8dc98ba7eadeaa56(props) {
  let isHidden = (0, import_react26.useContext)($f39a9eba43920ace$export$94b6d0abf7d33e8c);
  if (isHidden)
    return (0, import_react26.default).createElement((0, import_react26.default).Fragment, null, props.children);
  let children = (0, import_react26.default).createElement($f39a9eba43920ace$export$94b6d0abf7d33e8c.Provider, {
    value: true
  }, props.children);
  return (0, import_react26.default).createElement("template", {
    "data-react-aria-hidden": true
  }, children);
}
function $f39a9eba43920ace$export$86427a43e3e48ebb(fn) {
  let Wrapper = (props, ref) => {
    let isHidden = (0, import_react26.useContext)($f39a9eba43920ace$export$94b6d0abf7d33e8c);
    if (isHidden) return null;
    return fn(props, ref);
  };
  Wrapper.displayName = fn.displayName || fn.name;
  return (0, import_react26.forwardRef)(Wrapper);
}
function $f39a9eba43920ace$export$b5d7cc18bb8d2b59() {
  return (0, import_react26.useContext)($f39a9eba43920ace$export$94b6d0abf7d33e8c);
}

// node_modules/@react-aria/collections/dist/CollectionBuilder.mjs
var import_react_dom3 = __toESM(require_react_dom(), 1);

// node_modules/@react-aria/interactions/dist/utils.mjs
var import_react27 = __toESM(require_react(), 1);
function $8a9cb279dc87e130$export$525bc4921d56d4a(nativeEvent) {
  let event = nativeEvent;
  event.nativeEvent = nativeEvent;
  event.isDefaultPrevented = () => event.defaultPrevented;
  event.isPropagationStopped = () => event.cancelBubble;
  event.persist = () => {
  };
  return event;
}
function $8a9cb279dc87e130$export$c2b7abe5d61ec696(event, target) {
  Object.defineProperty(event, "target", {
    value: target
  });
  Object.defineProperty(event, "currentTarget", {
    value: target
  });
}
function $8a9cb279dc87e130$export$715c682d09d639cc(onBlur) {
  let stateRef = (0, import_react27.useRef)({
    isFocused: false,
    observer: null
  });
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    const state = stateRef.current;
    return () => {
      if (state.observer) {
        state.observer.disconnect();
        state.observer = null;
      }
    };
  }, []);
  let dispatchBlur = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e) => {
    onBlur === null || onBlur === void 0 ? void 0 : onBlur(e);
  });
  return (0, import_react27.useCallback)((e) => {
    if (e.target instanceof HTMLButtonElement || e.target instanceof HTMLInputElement || e.target instanceof HTMLTextAreaElement || e.target instanceof HTMLSelectElement) {
      stateRef.current.isFocused = true;
      let target = e.target;
      let onBlurHandler = (e2) => {
        stateRef.current.isFocused = false;
        if (target.disabled) {
          let event = $8a9cb279dc87e130$export$525bc4921d56d4a(e2);
          dispatchBlur(event);
        }
        if (stateRef.current.observer) {
          stateRef.current.observer.disconnect();
          stateRef.current.observer = null;
        }
      };
      target.addEventListener("focusout", onBlurHandler, {
        once: true
      });
      stateRef.current.observer = new MutationObserver(() => {
        if (stateRef.current.isFocused && target.disabled) {
          var _stateRef_current_observer;
          (_stateRef_current_observer = stateRef.current.observer) === null || _stateRef_current_observer === void 0 ? void 0 : _stateRef_current_observer.disconnect();
          let relatedTargetEl = target === document.activeElement ? null : document.activeElement;
          target.dispatchEvent(new FocusEvent("blur", {
            relatedTarget: relatedTargetEl
          }));
          target.dispatchEvent(new FocusEvent("focusout", {
            bubbles: true,
            relatedTarget: relatedTargetEl
          }));
        }
      });
      stateRef.current.observer.observe(target, {
        attributes: true,
        attributeFilter: [
          "disabled"
        ]
      });
    }
  }, [
    dispatchBlur
  ]);
}
var $8a9cb279dc87e130$export$fda7da73ab5d4c48 = false;
function $8a9cb279dc87e130$export$cabe61c495ee3649(target) {
  while (target && !(0, $b4b717babfbb907b$export$4c063cf1350e6fed)(target)) target = target.parentElement;
  let window2 = (0, $431fbd86ca7dc216$export$f21a1ffae260145a)(target);
  let activeElement = window2.document.activeElement;
  if (!activeElement || activeElement === target) return;
  $8a9cb279dc87e130$export$fda7da73ab5d4c48 = true;
  let isRefocusing = false;
  let onBlur = (e) => {
    if (e.target === activeElement || isRefocusing) e.stopImmediatePropagation();
  };
  let onFocusOut = (e) => {
    if (e.target === activeElement || isRefocusing) {
      e.stopImmediatePropagation();
      if (!target && !isRefocusing) {
        isRefocusing = true;
        (0, $7215afc6de606d6b$export$de79e2c695e052f3)(activeElement);
        cleanup();
      }
    }
  };
  let onFocus = (e) => {
    if (e.target === target || isRefocusing) e.stopImmediatePropagation();
  };
  let onFocusIn = (e) => {
    if (e.target === target || isRefocusing) {
      e.stopImmediatePropagation();
      if (!isRefocusing) {
        isRefocusing = true;
        (0, $7215afc6de606d6b$export$de79e2c695e052f3)(activeElement);
        cleanup();
      }
    }
  };
  window2.addEventListener("blur", onBlur, true);
  window2.addEventListener("focusout", onFocusOut, true);
  window2.addEventListener("focusin", onFocusIn, true);
  window2.addEventListener("focus", onFocus, true);
  let cleanup = () => {
    cancelAnimationFrame(raf);
    window2.removeEventListener("blur", onBlur, true);
    window2.removeEventListener("focusout", onFocusOut, true);
    window2.removeEventListener("focusin", onFocusIn, true);
    window2.removeEventListener("focus", onFocus, true);
    $8a9cb279dc87e130$export$fda7da73ab5d4c48 = false;
    isRefocusing = false;
  };
  let raf = requestAnimationFrame(cleanup);
  return cleanup;
}

// node_modules/@react-aria/interactions/dist/textSelection.mjs
var $14c0b72509d70225$var$state = "default";
var $14c0b72509d70225$var$savedUserSelect = "";
var $14c0b72509d70225$var$modifiedElementMap = /* @__PURE__ */ new WeakMap();
function $14c0b72509d70225$export$16a4697467175487(target) {
  if ((0, $c87311424ea30a05$export$fedb369cb70207f1)()) {
    if ($14c0b72509d70225$var$state === "default") {
      const documentObject = (0, $431fbd86ca7dc216$export$b204af158042fbac)(target);
      $14c0b72509d70225$var$savedUserSelect = documentObject.documentElement.style.webkitUserSelect;
      documentObject.documentElement.style.webkitUserSelect = "none";
    }
    $14c0b72509d70225$var$state = "disabled";
  } else if (target instanceof HTMLElement || target instanceof SVGElement) {
    let property = "userSelect" in target.style ? "userSelect" : "webkitUserSelect";
    $14c0b72509d70225$var$modifiedElementMap.set(target, target.style[property]);
    target.style[property] = "none";
  }
}
function $14c0b72509d70225$export$b0d6fa1ab32e3295(target) {
  if ((0, $c87311424ea30a05$export$fedb369cb70207f1)()) {
    if ($14c0b72509d70225$var$state !== "disabled") return;
    $14c0b72509d70225$var$state = "restoring";
    setTimeout(() => {
      (0, $bbed8b41f857bcc0$export$24490316f764c430)(() => {
        if ($14c0b72509d70225$var$state === "restoring") {
          const documentObject = (0, $431fbd86ca7dc216$export$b204af158042fbac)(target);
          if (documentObject.documentElement.style.webkitUserSelect === "none") documentObject.documentElement.style.webkitUserSelect = $14c0b72509d70225$var$savedUserSelect || "";
          $14c0b72509d70225$var$savedUserSelect = "";
          $14c0b72509d70225$var$state = "default";
        }
      });
    }, 300);
  } else if (target instanceof HTMLElement || target instanceof SVGElement) {
    if (target && $14c0b72509d70225$var$modifiedElementMap.has(target)) {
      let targetOldUserSelect = $14c0b72509d70225$var$modifiedElementMap.get(target);
      let property = "userSelect" in target.style ? "userSelect" : "webkitUserSelect";
      if (target.style[property] === "none") target.style[property] = targetOldUserSelect;
      if (target.getAttribute("style") === "") target.removeAttribute("style");
      $14c0b72509d70225$var$modifiedElementMap.delete(target);
    }
  }
}

// node_modules/@react-aria/interactions/dist/context.mjs
var import_react28 = __toESM(require_react(), 1);
var $ae1eeba8b9eafd08$export$5165eccb35aaadb5 = (0, import_react28.default).createContext({
  register: () => {
  }
});
$ae1eeba8b9eafd08$export$5165eccb35aaadb5.displayName = "PressResponderContext";

// node_modules/@swc/helpers/esm/_class_apply_descriptor_get.js
function _class_apply_descriptor_get(receiver, descriptor) {
  if (descriptor.get) return descriptor.get.call(receiver);
  return descriptor.value;
}

// node_modules/@swc/helpers/esm/_class_extract_field_descriptor.js
function _class_extract_field_descriptor(receiver, privateMap, action) {
  if (!privateMap.has(receiver)) throw new TypeError("attempted to " + action + " private field on non-instance");
  return privateMap.get(receiver);
}

// node_modules/@swc/helpers/esm/_class_private_field_get.js
function _class_private_field_get(receiver, privateMap) {
  var descriptor = _class_extract_field_descriptor(receiver, privateMap, "get");
  return _class_apply_descriptor_get(receiver, descriptor);
}

// node_modules/@swc/helpers/esm/_check_private_redeclaration.js
function _check_private_redeclaration(obj, privateCollection) {
  if (privateCollection.has(obj)) {
    throw new TypeError("Cannot initialize the same private elements twice on an object");
  }
}

// node_modules/@swc/helpers/esm/_class_private_field_init.js
function _class_private_field_init(obj, privateMap, value) {
  _check_private_redeclaration(obj, privateMap);
  privateMap.set(obj, value);
}

// node_modules/@swc/helpers/esm/_class_apply_descriptor_set.js
function _class_apply_descriptor_set(receiver, descriptor, value) {
  if (descriptor.set) descriptor.set.call(receiver, value);
  else {
    if (!descriptor.writable) {
      throw new TypeError("attempted to set read only private field");
    }
    descriptor.value = value;
  }
}

// node_modules/@swc/helpers/esm/_class_private_field_set.js
function _class_private_field_set(receiver, privateMap, value) {
  var descriptor = _class_extract_field_descriptor(receiver, privateMap, "set");
  _class_apply_descriptor_set(receiver, descriptor, value);
  return value;
}

// node_modules/@react-aria/interactions/dist/usePress.mjs
var import_react_dom2 = __toESM(require_react_dom(), 1);
var import_react29 = __toESM(require_react(), 1);
function $f6c31cce2adf654f$var$usePressResponderContext(props) {
  let context = (0, import_react29.useContext)((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb5));
  if (context) {
    let { register, ...contextProps } = context;
    props = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(contextProps, props);
    register();
  }
  (0, $e7801be82b4b2a53$export$4debdb1a3f0fa79e)(context, props.ref);
  return props;
}
var $f6c31cce2adf654f$var$_shouldStopPropagation = /* @__PURE__ */ new WeakMap();
var $f6c31cce2adf654f$var$PressEvent = class {
  continuePropagation() {
    (0, _class_private_field_set)(this, $f6c31cce2adf654f$var$_shouldStopPropagation, false);
  }
  get shouldStopPropagation() {
    return (0, _class_private_field_get)(this, $f6c31cce2adf654f$var$_shouldStopPropagation);
  }
  constructor(type, pointerType, originalEvent, state) {
    (0, _class_private_field_init)(this, $f6c31cce2adf654f$var$_shouldStopPropagation, {
      writable: true,
      value: void 0
    });
    (0, _class_private_field_set)(this, $f6c31cce2adf654f$var$_shouldStopPropagation, true);
    var _state_target;
    let currentTarget = (_state_target = state === null || state === void 0 ? void 0 : state.target) !== null && _state_target !== void 0 ? _state_target : originalEvent.currentTarget;
    const rect = currentTarget === null || currentTarget === void 0 ? void 0 : currentTarget.getBoundingClientRect();
    let x, y = 0;
    let clientX, clientY = null;
    if (originalEvent.clientX != null && originalEvent.clientY != null) {
      clientX = originalEvent.clientX;
      clientY = originalEvent.clientY;
    }
    if (rect) {
      if (clientX != null && clientY != null) {
        x = clientX - rect.left;
        y = clientY - rect.top;
      } else {
        x = rect.width / 2;
        y = rect.height / 2;
      }
    }
    this.type = type;
    this.pointerType = pointerType;
    this.target = originalEvent.currentTarget;
    this.shiftKey = originalEvent.shiftKey;
    this.metaKey = originalEvent.metaKey;
    this.ctrlKey = originalEvent.ctrlKey;
    this.altKey = originalEvent.altKey;
    this.x = x;
    this.y = y;
  }
};
var $f6c31cce2adf654f$var$LINK_CLICKED = Symbol("linkClicked");
var $f6c31cce2adf654f$var$STYLE_ID = "react-aria-pressable-style";
var $f6c31cce2adf654f$var$PRESSABLE_ATTRIBUTE = "data-react-aria-pressable";
function $f6c31cce2adf654f$export$45712eceda6fad21(props) {
  let { onPress, onPressChange, onPressStart, onPressEnd, onPressUp, onClick, isDisabled, isPressed: isPressedProp, preventFocusOnPress, shouldCancelOnPointerExit, allowTextSelectionOnPress, ref: domRef, ...domProps } = $f6c31cce2adf654f$var$usePressResponderContext(props);
  let [isPressed, setPressed] = (0, import_react29.useState)(false);
  let ref = (0, import_react29.useRef)({
    isPressed: false,
    ignoreEmulatedMouseEvents: false,
    didFirePressStart: false,
    isTriggeringEvent: false,
    activePointerId: null,
    target: null,
    isOverTarget: false,
    pointerType: null,
    disposables: []
  });
  let { addGlobalListener, removeAllGlobalListeners } = (0, $03deb23ff14920c4$export$4eaf04e54aa8eed6)();
  let triggerPressStart = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((originalEvent, pointerType) => {
    let state = ref.current;
    if (isDisabled || state.didFirePressStart) return false;
    let shouldStopPropagation = true;
    state.isTriggeringEvent = true;
    if (onPressStart) {
      let event = new $f6c31cce2adf654f$var$PressEvent("pressstart", pointerType, originalEvent);
      onPressStart(event);
      shouldStopPropagation = event.shouldStopPropagation;
    }
    if (onPressChange) onPressChange(true);
    state.isTriggeringEvent = false;
    state.didFirePressStart = true;
    setPressed(true);
    return shouldStopPropagation;
  });
  let triggerPressEnd = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((originalEvent, pointerType, wasPressed = true) => {
    let state = ref.current;
    if (!state.didFirePressStart) return false;
    state.didFirePressStart = false;
    state.isTriggeringEvent = true;
    let shouldStopPropagation = true;
    if (onPressEnd) {
      let event = new $f6c31cce2adf654f$var$PressEvent("pressend", pointerType, originalEvent);
      onPressEnd(event);
      shouldStopPropagation = event.shouldStopPropagation;
    }
    if (onPressChange) onPressChange(false);
    setPressed(false);
    if (onPress && wasPressed && !isDisabled) {
      let event = new $f6c31cce2adf654f$var$PressEvent("press", pointerType, originalEvent);
      onPress(event);
      shouldStopPropagation && (shouldStopPropagation = event.shouldStopPropagation);
    }
    state.isTriggeringEvent = false;
    return shouldStopPropagation;
  });
  let triggerPressUp = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((originalEvent, pointerType) => {
    let state = ref.current;
    if (isDisabled) return false;
    if (onPressUp) {
      state.isTriggeringEvent = true;
      let event = new $f6c31cce2adf654f$var$PressEvent("pressup", pointerType, originalEvent);
      onPressUp(event);
      state.isTriggeringEvent = false;
      return event.shouldStopPropagation;
    }
    return true;
  });
  let cancel = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e) => {
    let state = ref.current;
    if (state.isPressed && state.target) {
      if (state.didFirePressStart && state.pointerType != null) triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType, false);
      state.isPressed = false;
      state.isOverTarget = false;
      state.activePointerId = null;
      state.pointerType = null;
      removeAllGlobalListeners();
      if (!allowTextSelectionOnPress) (0, $14c0b72509d70225$export$b0d6fa1ab32e3295)(state.target);
      for (let dispose of state.disposables) dispose();
      state.disposables = [];
    }
  });
  let cancelOnPointerExit = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e) => {
    if (shouldCancelOnPointerExit) cancel(e);
  });
  let triggerClick = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e) => {
    onClick === null || onClick === void 0 ? void 0 : onClick(e);
  });
  let triggerSyntheticClick = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e, target) => {
    if (onClick) {
      let event = new MouseEvent("click", e);
      (0, $8a9cb279dc87e130$export$c2b7abe5d61ec696)(event, target);
      onClick((0, $8a9cb279dc87e130$export$525bc4921d56d4a)(event));
    }
  });
  let pressProps = (0, import_react29.useMemo)(() => {
    let state = ref.current;
    let pressProps2 = {
      onKeyDown(e) {
        if ($f6c31cce2adf654f$var$isValidKeyboardEvent(e.nativeEvent, e.currentTarget) && (0, $d4ee10de306f2510$export$4282f70798064fe0)(e.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent))) {
          var _state_metaKeyEvents;
          if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard((0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent), e.key)) e.preventDefault();
          let shouldStopPropagation = true;
          if (!state.isPressed && !e.repeat) {
            state.target = e.currentTarget;
            state.isPressed = true;
            state.pointerType = "keyboard";
            shouldStopPropagation = triggerPressStart(e, "keyboard");
            let originalTarget = e.currentTarget;
            let pressUp = (e2) => {
              if ($f6c31cce2adf654f$var$isValidKeyboardEvent(e2, originalTarget) && !e2.repeat && (0, $d4ee10de306f2510$export$4282f70798064fe0)(originalTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e2)) && state.target) triggerPressUp($f6c31cce2adf654f$var$createEvent(state.target, e2), "keyboard");
            };
            addGlobalListener((0, $431fbd86ca7dc216$export$b204af158042fbac)(e.currentTarget), "keyup", (0, $ff5963eb1fccf552$export$e08e3b67e392101e)(pressUp, onKeyUp), true);
          }
          if (shouldStopPropagation) e.stopPropagation();
          if (e.metaKey && (0, $c87311424ea30a05$export$9ac100e40613ea10)()) (_state_metaKeyEvents = state.metaKeyEvents) === null || _state_metaKeyEvents === void 0 ? void 0 : _state_metaKeyEvents.set(e.key, e.nativeEvent);
        } else if (e.key === "Meta") state.metaKeyEvents = /* @__PURE__ */ new Map();
      },
      onClick(e) {
        if (e && !(0, $d4ee10de306f2510$export$4282f70798064fe0)(e.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent))) return;
        if (e && e.button === 0 && !state.isTriggeringEvent && !(0, $ea8dcbcb9ea1b556$export$95185d699e05d4d7).isOpening) {
          let shouldStopPropagation = true;
          if (isDisabled) e.preventDefault();
          if (!state.ignoreEmulatedMouseEvents && !state.isPressed && (state.pointerType === "virtual" || (0, $6a7db85432448f7f$export$60278871457622de)(e.nativeEvent))) {
            let stopPressStart = triggerPressStart(e, "virtual");
            let stopPressUp = triggerPressUp(e, "virtual");
            let stopPressEnd = triggerPressEnd(e, "virtual");
            triggerClick(e);
            shouldStopPropagation = stopPressStart && stopPressUp && stopPressEnd;
          } else if (state.isPressed && state.pointerType !== "keyboard") {
            let pointerType = state.pointerType || e.nativeEvent.pointerType || "virtual";
            let stopPressUp = triggerPressUp($f6c31cce2adf654f$var$createEvent(e.currentTarget, e), pointerType);
            let stopPressEnd = triggerPressEnd($f6c31cce2adf654f$var$createEvent(e.currentTarget, e), pointerType, true);
            shouldStopPropagation = stopPressUp && stopPressEnd;
            state.isOverTarget = false;
            triggerClick(e);
            cancel(e);
          }
          state.ignoreEmulatedMouseEvents = false;
          if (shouldStopPropagation) e.stopPropagation();
        }
      }
    };
    let onKeyUp = (e) => {
      var _state_metaKeyEvents;
      if (state.isPressed && state.target && $f6c31cce2adf654f$var$isValidKeyboardEvent(e, state.target)) {
        var _state_metaKeyEvents1;
        if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard((0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e), e.key)) e.preventDefault();
        let target = (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e);
        let wasPressed = (0, $d4ee10de306f2510$export$4282f70798064fe0)(state.target, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e));
        triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), "keyboard", wasPressed);
        if (wasPressed) triggerSyntheticClick(e, state.target);
        removeAllGlobalListeners();
        if (e.key !== "Enter" && $f6c31cce2adf654f$var$isHTMLAnchorLink(state.target) && (0, $d4ee10de306f2510$export$4282f70798064fe0)(state.target, target) && !e[$f6c31cce2adf654f$var$LINK_CLICKED]) {
          e[$f6c31cce2adf654f$var$LINK_CLICKED] = true;
          (0, $ea8dcbcb9ea1b556$export$95185d699e05d4d7)(state.target, e, false);
        }
        state.isPressed = false;
        (_state_metaKeyEvents1 = state.metaKeyEvents) === null || _state_metaKeyEvents1 === void 0 ? void 0 : _state_metaKeyEvents1.delete(e.key);
      } else if (e.key === "Meta" && ((_state_metaKeyEvents = state.metaKeyEvents) === null || _state_metaKeyEvents === void 0 ? void 0 : _state_metaKeyEvents.size)) {
        var _state_target;
        let events = state.metaKeyEvents;
        state.metaKeyEvents = void 0;
        for (let event of events.values()) (_state_target = state.target) === null || _state_target === void 0 ? void 0 : _state_target.dispatchEvent(new KeyboardEvent("keyup", event));
      }
    };
    if (typeof PointerEvent !== "undefined") {
      pressProps2.onPointerDown = (e) => {
        if (e.button !== 0 || !(0, $d4ee10de306f2510$export$4282f70798064fe0)(e.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent))) return;
        if ((0, $6a7db85432448f7f$export$29bf1b5f2c56cf63)(e.nativeEvent)) {
          state.pointerType = "virtual";
          return;
        }
        state.pointerType = e.pointerType;
        let shouldStopPropagation = true;
        if (!state.isPressed) {
          state.isPressed = true;
          state.isOverTarget = true;
          state.activePointerId = e.pointerId;
          state.target = e.currentTarget;
          if (!allowTextSelectionOnPress) (0, $14c0b72509d70225$export$16a4697467175487)(state.target);
          shouldStopPropagation = triggerPressStart(e, state.pointerType);
          let target = (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent);
          if ("releasePointerCapture" in target) target.releasePointerCapture(e.pointerId);
          addGlobalListener((0, $431fbd86ca7dc216$export$b204af158042fbac)(e.currentTarget), "pointerup", onPointerUp, false);
          addGlobalListener((0, $431fbd86ca7dc216$export$b204af158042fbac)(e.currentTarget), "pointercancel", onPointerCancel, false);
        }
        if (shouldStopPropagation) e.stopPropagation();
      };
      pressProps2.onMouseDown = (e) => {
        if (!(0, $d4ee10de306f2510$export$4282f70798064fe0)(e.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent))) return;
        if (e.button === 0) {
          if (preventFocusOnPress) {
            let dispose = (0, $8a9cb279dc87e130$export$cabe61c495ee3649)(e.target);
            if (dispose) state.disposables.push(dispose);
          }
          e.stopPropagation();
        }
      };
      pressProps2.onPointerUp = (e) => {
        if (!(0, $d4ee10de306f2510$export$4282f70798064fe0)(e.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent)) || state.pointerType === "virtual") return;
        if (e.button === 0 && !state.isPressed) triggerPressUp(e, state.pointerType || e.pointerType);
      };
      pressProps2.onPointerEnter = (e) => {
        if (e.pointerId === state.activePointerId && state.target && !state.isOverTarget && state.pointerType != null) {
          state.isOverTarget = true;
          triggerPressStart($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType);
        }
      };
      pressProps2.onPointerLeave = (e) => {
        if (e.pointerId === state.activePointerId && state.target && state.isOverTarget && state.pointerType != null) {
          state.isOverTarget = false;
          triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType, false);
          cancelOnPointerExit(e);
        }
      };
      let onPointerUp = (e) => {
        if (e.pointerId === state.activePointerId && state.isPressed && e.button === 0 && state.target) {
          if ((0, $d4ee10de306f2510$export$4282f70798064fe0)(state.target, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e)) && state.pointerType != null) {
            let clicked = false;
            let timeout = setTimeout(() => {
              if (state.isPressed && state.target instanceof HTMLElement) {
                if (clicked) cancel(e);
                else {
                  (0, $7215afc6de606d6b$export$de79e2c695e052f3)(state.target);
                  state.target.click();
                }
              }
            }, 80);
            addGlobalListener(e.currentTarget, "click", () => clicked = true, true);
            state.disposables.push(() => clearTimeout(timeout));
          } else cancel(e);
          state.isOverTarget = false;
        }
      };
      let onPointerCancel = (e) => {
        cancel(e);
      };
      pressProps2.onDragStart = (e) => {
        if (!(0, $d4ee10de306f2510$export$4282f70798064fe0)(e.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent))) return;
        cancel(e);
      };
    } else if (false) {
      pressProps2.onMouseDown = (e) => {
        if (e.button !== 0 || !(0, $d4ee10de306f2510$export$4282f70798064fe0)(e.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent))) return;
        if (state.ignoreEmulatedMouseEvents) {
          e.stopPropagation();
          return;
        }
        state.isPressed = true;
        state.isOverTarget = true;
        state.target = e.currentTarget;
        state.pointerType = (0, $6a7db85432448f7f$export$60278871457622de)(e.nativeEvent) ? "virtual" : "mouse";
        let shouldStopPropagation = (0, import_react_dom2.flushSync)(() => triggerPressStart(e, state.pointerType));
        if (shouldStopPropagation) e.stopPropagation();
        if (preventFocusOnPress) {
          let dispose = (0, $8a9cb279dc87e130$export$cabe61c495ee3649)(e.target);
          if (dispose) state.disposables.push(dispose);
        }
        addGlobalListener((0, $431fbd86ca7dc216$export$b204af158042fbac)(e.currentTarget), "mouseup", onMouseUp, false);
      };
      pressProps2.onMouseEnter = (e) => {
        if (!(0, $d4ee10de306f2510$export$4282f70798064fe0)(e.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent))) return;
        let shouldStopPropagation = true;
        if (state.isPressed && !state.ignoreEmulatedMouseEvents && state.pointerType != null) {
          state.isOverTarget = true;
          shouldStopPropagation = triggerPressStart(e, state.pointerType);
        }
        if (shouldStopPropagation) e.stopPropagation();
      };
      pressProps2.onMouseLeave = (e) => {
        if (!(0, $d4ee10de306f2510$export$4282f70798064fe0)(e.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent))) return;
        let shouldStopPropagation = true;
        if (state.isPressed && !state.ignoreEmulatedMouseEvents && state.pointerType != null) {
          state.isOverTarget = false;
          shouldStopPropagation = triggerPressEnd(e, state.pointerType, false);
          cancelOnPointerExit(e);
        }
        if (shouldStopPropagation) e.stopPropagation();
      };
      pressProps2.onMouseUp = (e) => {
        if (!(0, $d4ee10de306f2510$export$4282f70798064fe0)(e.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent))) return;
        if (!state.ignoreEmulatedMouseEvents && e.button === 0 && !state.isPressed) triggerPressUp(e, state.pointerType || "mouse");
      };
      let onMouseUp = (e) => {
        if (e.button !== 0) return;
        if (state.ignoreEmulatedMouseEvents) {
          state.ignoreEmulatedMouseEvents = false;
          return;
        }
        if (state.target && state.target.contains(e.target) && state.pointerType != null) ;
        else cancel(e);
        state.isOverTarget = false;
      };
      pressProps2.onTouchStart = (e) => {
        if (!(0, $d4ee10de306f2510$export$4282f70798064fe0)(e.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent))) return;
        let touch = $f6c31cce2adf654f$var$getTouchFromEvent(e.nativeEvent);
        if (!touch) return;
        state.activePointerId = touch.identifier;
        state.ignoreEmulatedMouseEvents = true;
        state.isOverTarget = true;
        state.isPressed = true;
        state.target = e.currentTarget;
        state.pointerType = "touch";
        if (!allowTextSelectionOnPress) (0, $14c0b72509d70225$export$16a4697467175487)(state.target);
        let shouldStopPropagation = triggerPressStart($f6c31cce2adf654f$var$createTouchEvent(state.target, e), state.pointerType);
        if (shouldStopPropagation) e.stopPropagation();
        addGlobalListener((0, $431fbd86ca7dc216$export$f21a1ffae260145a)(e.currentTarget), "scroll", onScroll, true);
      };
      pressProps2.onTouchMove = (e) => {
        if (!(0, $d4ee10de306f2510$export$4282f70798064fe0)(e.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent))) return;
        if (!state.isPressed) {
          e.stopPropagation();
          return;
        }
        let touch = $f6c31cce2adf654f$var$getTouchById(e.nativeEvent, state.activePointerId);
        let shouldStopPropagation = true;
        if (touch && $f6c31cce2adf654f$var$isOverTarget(touch, e.currentTarget)) {
          if (!state.isOverTarget && state.pointerType != null) {
            state.isOverTarget = true;
            shouldStopPropagation = triggerPressStart($f6c31cce2adf654f$var$createTouchEvent(state.target, e), state.pointerType);
          }
        } else if (state.isOverTarget && state.pointerType != null) {
          state.isOverTarget = false;
          shouldStopPropagation = triggerPressEnd($f6c31cce2adf654f$var$createTouchEvent(state.target, e), state.pointerType, false);
          cancelOnPointerExit($f6c31cce2adf654f$var$createTouchEvent(state.target, e));
        }
        if (shouldStopPropagation) e.stopPropagation();
      };
      pressProps2.onTouchEnd = (e) => {
        if (!(0, $d4ee10de306f2510$export$4282f70798064fe0)(e.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent))) return;
        if (!state.isPressed) {
          e.stopPropagation();
          return;
        }
        let touch = $f6c31cce2adf654f$var$getTouchById(e.nativeEvent, state.activePointerId);
        let shouldStopPropagation = true;
        if (touch && $f6c31cce2adf654f$var$isOverTarget(touch, e.currentTarget) && state.pointerType != null) {
          triggerPressUp($f6c31cce2adf654f$var$createTouchEvent(state.target, e), state.pointerType);
          shouldStopPropagation = triggerPressEnd($f6c31cce2adf654f$var$createTouchEvent(state.target, e), state.pointerType);
          triggerSyntheticClick(e.nativeEvent, state.target);
        } else if (state.isOverTarget && state.pointerType != null) shouldStopPropagation = triggerPressEnd($f6c31cce2adf654f$var$createTouchEvent(state.target, e), state.pointerType, false);
        if (shouldStopPropagation) e.stopPropagation();
        state.isPressed = false;
        state.activePointerId = null;
        state.isOverTarget = false;
        state.ignoreEmulatedMouseEvents = true;
        if (state.target && !allowTextSelectionOnPress) (0, $14c0b72509d70225$export$b0d6fa1ab32e3295)(state.target);
        removeAllGlobalListeners();
      };
      pressProps2.onTouchCancel = (e) => {
        if (!(0, $d4ee10de306f2510$export$4282f70798064fe0)(e.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent))) return;
        e.stopPropagation();
        if (state.isPressed) cancel($f6c31cce2adf654f$var$createTouchEvent(state.target, e));
      };
      let onScroll = (e) => {
        if (state.isPressed && (0, $d4ee10de306f2510$export$4282f70798064fe0)((0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e), state.target)) cancel({
          currentTarget: state.target,
          shiftKey: false,
          ctrlKey: false,
          metaKey: false,
          altKey: false
        });
      };
      pressProps2.onDragStart = (e) => {
        if (!(0, $d4ee10de306f2510$export$4282f70798064fe0)(e.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent))) return;
        cancel(e);
      };
    }
    return pressProps2;
  }, [
    addGlobalListener,
    isDisabled,
    preventFocusOnPress,
    removeAllGlobalListeners,
    allowTextSelectionOnPress,
    cancel,
    cancelOnPointerExit,
    triggerPressEnd,
    triggerPressStart,
    triggerPressUp,
    triggerClick,
    triggerSyntheticClick
  ]);
  (0, import_react29.useEffect)(() => {
    if (!domRef || false) return;
    const ownerDocument = (0, $431fbd86ca7dc216$export$b204af158042fbac)(domRef.current);
    if (!ownerDocument || !ownerDocument.head || ownerDocument.getElementById($f6c31cce2adf654f$var$STYLE_ID)) return;
    const style = ownerDocument.createElement("style");
    style.id = $f6c31cce2adf654f$var$STYLE_ID;
    style.textContent = `
@layer {
  [${$f6c31cce2adf654f$var$PRESSABLE_ATTRIBUTE}] {
    touch-action: pan-x pan-y pinch-zoom;
  }
}
    `.trim();
    ownerDocument.head.prepend(style);
  }, [
    domRef
  ]);
  (0, import_react29.useEffect)(() => {
    let state = ref.current;
    return () => {
      var _state_target;
      if (!allowTextSelectionOnPress) (0, $14c0b72509d70225$export$b0d6fa1ab32e3295)((_state_target = state.target) !== null && _state_target !== void 0 ? _state_target : void 0);
      for (let dispose of state.disposables) dispose();
      state.disposables = [];
    };
  }, [
    allowTextSelectionOnPress
  ]);
  return {
    isPressed: isPressedProp || isPressed,
    pressProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(domProps, pressProps, {
      [$f6c31cce2adf654f$var$PRESSABLE_ATTRIBUTE]: true
    })
  };
}
function $f6c31cce2adf654f$var$isHTMLAnchorLink(target) {
  return target.tagName === "A" && target.hasAttribute("href");
}
function $f6c31cce2adf654f$var$isValidKeyboardEvent(event, currentTarget) {
  const { key, code } = event;
  const element = currentTarget;
  const role = element.getAttribute("role");
  return (key === "Enter" || key === " " || key === "Spacebar" || code === "Space") && !(element instanceof (0, $431fbd86ca7dc216$export$f21a1ffae260145a)(element).HTMLInputElement && !$f6c31cce2adf654f$var$isValidInputKey(element, key) || element instanceof (0, $431fbd86ca7dc216$export$f21a1ffae260145a)(element).HTMLTextAreaElement || element.isContentEditable) && // Links should only trigger with Enter key
  !((role === "link" || !role && $f6c31cce2adf654f$var$isHTMLAnchorLink(element)) && key !== "Enter");
}
function $f6c31cce2adf654f$var$createEvent(target, e) {
  let clientX = e.clientX;
  let clientY = e.clientY;
  return {
    currentTarget: target,
    shiftKey: e.shiftKey,
    ctrlKey: e.ctrlKey,
    metaKey: e.metaKey,
    altKey: e.altKey,
    clientX,
    clientY
  };
}
function $f6c31cce2adf654f$var$shouldPreventDefaultUp(target) {
  if (target instanceof HTMLInputElement) return false;
  if (target instanceof HTMLButtonElement) return target.type !== "submit" && target.type !== "reset";
  if ($f6c31cce2adf654f$var$isHTMLAnchorLink(target)) return false;
  return true;
}
function $f6c31cce2adf654f$var$shouldPreventDefaultKeyboard(target, key) {
  if (target instanceof HTMLInputElement) return !$f6c31cce2adf654f$var$isValidInputKey(target, key);
  return $f6c31cce2adf654f$var$shouldPreventDefaultUp(target);
}
var $f6c31cce2adf654f$var$nonTextInputTypes = /* @__PURE__ */ new Set([
  "checkbox",
  "radio",
  "range",
  "color",
  "file",
  "image",
  "button",
  "submit",
  "reset"
]);
function $f6c31cce2adf654f$var$isValidInputKey(target, key) {
  return target.type === "checkbox" || target.type === "radio" ? key === " " : $f6c31cce2adf654f$var$nonTextInputTypes.has(target.type);
}

// node_modules/@react-aria/interactions/dist/useFocusVisible.mjs
var import_react30 = __toESM(require_react(), 1);
var $507fabe10e71c6fb$var$currentModality = null;
var $507fabe10e71c6fb$var$changeHandlers = /* @__PURE__ */ new Set();
var $507fabe10e71c6fb$export$d90243b58daecda7 = /* @__PURE__ */ new Map();
var $507fabe10e71c6fb$var$hasEventBeforeFocus = false;
var $507fabe10e71c6fb$var$hasBlurredWindowRecently = false;
var $507fabe10e71c6fb$var$FOCUS_VISIBLE_INPUT_KEYS = {
  Tab: true,
  Escape: true
};
function $507fabe10e71c6fb$var$triggerChangeHandlers(modality, e) {
  for (let handler of $507fabe10e71c6fb$var$changeHandlers) handler(modality, e);
}
function $507fabe10e71c6fb$var$isValidKey(e) {
  return !(e.metaKey || !(0, $c87311424ea30a05$export$9ac100e40613ea10)() && e.altKey || e.ctrlKey || e.key === "Control" || e.key === "Shift" || e.key === "Meta");
}
function $507fabe10e71c6fb$var$handleKeyboardEvent(e) {
  $507fabe10e71c6fb$var$hasEventBeforeFocus = true;
  if ($507fabe10e71c6fb$var$isValidKey(e)) {
    $507fabe10e71c6fb$var$currentModality = "keyboard";
    $507fabe10e71c6fb$var$triggerChangeHandlers("keyboard", e);
  }
}
function $507fabe10e71c6fb$var$handlePointerEvent(e) {
  $507fabe10e71c6fb$var$currentModality = "pointer";
  if (e.type === "mousedown" || e.type === "pointerdown") {
    $507fabe10e71c6fb$var$hasEventBeforeFocus = true;
    $507fabe10e71c6fb$var$triggerChangeHandlers("pointer", e);
  }
}
function $507fabe10e71c6fb$var$handleClickEvent(e) {
  if ((0, $6a7db85432448f7f$export$60278871457622de)(e)) {
    $507fabe10e71c6fb$var$hasEventBeforeFocus = true;
    $507fabe10e71c6fb$var$currentModality = "virtual";
  }
}
function $507fabe10e71c6fb$var$handleFocusEvent(e) {
  if (e.target === window || e.target === document || (0, $8a9cb279dc87e130$export$fda7da73ab5d4c48) || !e.isTrusted) return;
  if (!$507fabe10e71c6fb$var$hasEventBeforeFocus && !$507fabe10e71c6fb$var$hasBlurredWindowRecently) {
    $507fabe10e71c6fb$var$currentModality = "virtual";
    $507fabe10e71c6fb$var$triggerChangeHandlers("virtual", e);
  }
  $507fabe10e71c6fb$var$hasEventBeforeFocus = false;
  $507fabe10e71c6fb$var$hasBlurredWindowRecently = false;
}
function $507fabe10e71c6fb$var$handleWindowBlur() {
  if (0, $8a9cb279dc87e130$export$fda7da73ab5d4c48) return;
  $507fabe10e71c6fb$var$hasEventBeforeFocus = false;
  $507fabe10e71c6fb$var$hasBlurredWindowRecently = true;
}
function $507fabe10e71c6fb$var$setupGlobalFocusEvents(element) {
  if (typeof window === "undefined" || typeof document === "undefined" || $507fabe10e71c6fb$export$d90243b58daecda7.get((0, $431fbd86ca7dc216$export$f21a1ffae260145a)(element))) return;
  const windowObject = (0, $431fbd86ca7dc216$export$f21a1ffae260145a)(element);
  const documentObject = (0, $431fbd86ca7dc216$export$b204af158042fbac)(element);
  let focus = windowObject.HTMLElement.prototype.focus;
  windowObject.HTMLElement.prototype.focus = function() {
    $507fabe10e71c6fb$var$hasEventBeforeFocus = true;
    focus.apply(this, arguments);
  };
  documentObject.addEventListener("keydown", $507fabe10e71c6fb$var$handleKeyboardEvent, true);
  documentObject.addEventListener("keyup", $507fabe10e71c6fb$var$handleKeyboardEvent, true);
  documentObject.addEventListener("click", $507fabe10e71c6fb$var$handleClickEvent, true);
  windowObject.addEventListener("focus", $507fabe10e71c6fb$var$handleFocusEvent, true);
  windowObject.addEventListener("blur", $507fabe10e71c6fb$var$handleWindowBlur, false);
  if (typeof PointerEvent !== "undefined") {
    documentObject.addEventListener("pointerdown", $507fabe10e71c6fb$var$handlePointerEvent, true);
    documentObject.addEventListener("pointermove", $507fabe10e71c6fb$var$handlePointerEvent, true);
    documentObject.addEventListener("pointerup", $507fabe10e71c6fb$var$handlePointerEvent, true);
  } else if (false) {
    documentObject.addEventListener("mousedown", $507fabe10e71c6fb$var$handlePointerEvent, true);
    documentObject.addEventListener("mousemove", $507fabe10e71c6fb$var$handlePointerEvent, true);
    documentObject.addEventListener("mouseup", $507fabe10e71c6fb$var$handlePointerEvent, true);
  }
  windowObject.addEventListener("beforeunload", () => {
    $507fabe10e71c6fb$var$tearDownWindowFocusTracking(element);
  }, {
    once: true
  });
  $507fabe10e71c6fb$export$d90243b58daecda7.set(windowObject, {
    focus
  });
}
var $507fabe10e71c6fb$var$tearDownWindowFocusTracking = (element, loadListener) => {
  const windowObject = (0, $431fbd86ca7dc216$export$f21a1ffae260145a)(element);
  const documentObject = (0, $431fbd86ca7dc216$export$b204af158042fbac)(element);
  if (loadListener) documentObject.removeEventListener("DOMContentLoaded", loadListener);
  if (!$507fabe10e71c6fb$export$d90243b58daecda7.has(windowObject)) return;
  windowObject.HTMLElement.prototype.focus = $507fabe10e71c6fb$export$d90243b58daecda7.get(windowObject).focus;
  documentObject.removeEventListener("keydown", $507fabe10e71c6fb$var$handleKeyboardEvent, true);
  documentObject.removeEventListener("keyup", $507fabe10e71c6fb$var$handleKeyboardEvent, true);
  documentObject.removeEventListener("click", $507fabe10e71c6fb$var$handleClickEvent, true);
  windowObject.removeEventListener("focus", $507fabe10e71c6fb$var$handleFocusEvent, true);
  windowObject.removeEventListener("blur", $507fabe10e71c6fb$var$handleWindowBlur, false);
  if (typeof PointerEvent !== "undefined") {
    documentObject.removeEventListener("pointerdown", $507fabe10e71c6fb$var$handlePointerEvent, true);
    documentObject.removeEventListener("pointermove", $507fabe10e71c6fb$var$handlePointerEvent, true);
    documentObject.removeEventListener("pointerup", $507fabe10e71c6fb$var$handlePointerEvent, true);
  } else if (false) {
    documentObject.removeEventListener("mousedown", $507fabe10e71c6fb$var$handlePointerEvent, true);
    documentObject.removeEventListener("mousemove", $507fabe10e71c6fb$var$handlePointerEvent, true);
    documentObject.removeEventListener("mouseup", $507fabe10e71c6fb$var$handlePointerEvent, true);
  }
  $507fabe10e71c6fb$export$d90243b58daecda7.delete(windowObject);
};
function $507fabe10e71c6fb$export$2f1888112f558a7d(element) {
  const documentObject = (0, $431fbd86ca7dc216$export$b204af158042fbac)(element);
  let loadListener;
  if (documentObject.readyState !== "loading") $507fabe10e71c6fb$var$setupGlobalFocusEvents(element);
  else {
    loadListener = () => {
      $507fabe10e71c6fb$var$setupGlobalFocusEvents(element);
    };
    documentObject.addEventListener("DOMContentLoaded", loadListener);
  }
  return () => $507fabe10e71c6fb$var$tearDownWindowFocusTracking(element, loadListener);
}
if (typeof document !== "undefined") $507fabe10e71c6fb$export$2f1888112f558a7d();
function $507fabe10e71c6fb$export$b9b3dfddab17db27() {
  return $507fabe10e71c6fb$var$currentModality !== "pointer";
}
function $507fabe10e71c6fb$export$630ff653c5ada6a9() {
  return $507fabe10e71c6fb$var$currentModality;
}
function $507fabe10e71c6fb$export$8397ddfc504fdb9a(modality) {
  $507fabe10e71c6fb$var$currentModality = modality;
  $507fabe10e71c6fb$var$triggerChangeHandlers(modality, null);
}
function $507fabe10e71c6fb$export$98e20ec92f614cfe() {
  $507fabe10e71c6fb$var$setupGlobalFocusEvents();
  let [modality, setModality] = (0, import_react30.useState)($507fabe10e71c6fb$var$currentModality);
  (0, import_react30.useEffect)(() => {
    let handler = () => {
      setModality($507fabe10e71c6fb$var$currentModality);
    };
    $507fabe10e71c6fb$var$changeHandlers.add(handler);
    return () => {
      $507fabe10e71c6fb$var$changeHandlers.delete(handler);
    };
  }, []);
  return (0, $b5e257d569688ac6$export$535bd6ca7f90a273)() ? null : modality;
}
var $507fabe10e71c6fb$var$nonTextInputTypes = /* @__PURE__ */ new Set([
  "checkbox",
  "radio",
  "range",
  "color",
  "file",
  "image",
  "button",
  "submit",
  "reset"
]);
function $507fabe10e71c6fb$var$isKeyboardFocusEvent(isTextInput, modality, e) {
  let document1 = (0, $431fbd86ca7dc216$export$b204af158042fbac)(e === null || e === void 0 ? void 0 : e.target);
  const IHTMLInputElement = typeof window !== "undefined" ? (0, $431fbd86ca7dc216$export$f21a1ffae260145a)(e === null || e === void 0 ? void 0 : e.target).HTMLInputElement : HTMLInputElement;
  const IHTMLTextAreaElement = typeof window !== "undefined" ? (0, $431fbd86ca7dc216$export$f21a1ffae260145a)(e === null || e === void 0 ? void 0 : e.target).HTMLTextAreaElement : HTMLTextAreaElement;
  const IHTMLElement = typeof window !== "undefined" ? (0, $431fbd86ca7dc216$export$f21a1ffae260145a)(e === null || e === void 0 ? void 0 : e.target).HTMLElement : HTMLElement;
  const IKeyboardEvent = typeof window !== "undefined" ? (0, $431fbd86ca7dc216$export$f21a1ffae260145a)(e === null || e === void 0 ? void 0 : e.target).KeyboardEvent : KeyboardEvent;
  isTextInput = isTextInput || document1.activeElement instanceof IHTMLInputElement && !$507fabe10e71c6fb$var$nonTextInputTypes.has(document1.activeElement.type) || document1.activeElement instanceof IHTMLTextAreaElement || document1.activeElement instanceof IHTMLElement && document1.activeElement.isContentEditable;
  return !(isTextInput && modality === "keyboard" && e instanceof IKeyboardEvent && !$507fabe10e71c6fb$var$FOCUS_VISIBLE_INPUT_KEYS[e.key]);
}
function $507fabe10e71c6fb$export$ec71b4b83ac08ec3(fn, deps, opts) {
  $507fabe10e71c6fb$var$setupGlobalFocusEvents();
  (0, import_react30.useEffect)(() => {
    let handler = (modality, e) => {
      if (!$507fabe10e71c6fb$var$isKeyboardFocusEvent(!!(opts === null || opts === void 0 ? void 0 : opts.isTextInput), modality, e)) return;
      fn($507fabe10e71c6fb$export$b9b3dfddab17db27());
    };
    $507fabe10e71c6fb$var$changeHandlers.add(handler);
    return () => {
      $507fabe10e71c6fb$var$changeHandlers.delete(handler);
    };
  }, deps);
}

// node_modules/@react-aria/interactions/dist/focusSafely.mjs
function $3ad3f6e1647bc98d$export$80f3e147d781571c(element) {
  const ownerDocument = (0, $431fbd86ca7dc216$export$b204af158042fbac)(element);
  const activeElement = (0, $d4ee10de306f2510$export$cd4e5573fbe2b576)(ownerDocument);
  if ((0, $507fabe10e71c6fb$export$630ff653c5ada6a9)() === "virtual") {
    let lastFocusedElement = activeElement;
    (0, $bbed8b41f857bcc0$export$24490316f764c430)(() => {
      if ((0, $d4ee10de306f2510$export$cd4e5573fbe2b576)(ownerDocument) === lastFocusedElement && element.isConnected) (0, $7215afc6de606d6b$export$de79e2c695e052f3)(element);
    });
  } else (0, $7215afc6de606d6b$export$de79e2c695e052f3)(element);
}

// node_modules/@react-aria/interactions/dist/useFocus.mjs
var import_react31 = __toESM(require_react(), 1);
function $a1ea59d68270f0dd$export$f8168d8dd8fd66e6(props) {
  let { isDisabled, onFocus: onFocusProp, onBlur: onBlurProp, onFocusChange } = props;
  const onBlur = (0, import_react31.useCallback)((e) => {
    if (e.target === e.currentTarget) {
      if (onBlurProp) onBlurProp(e);
      if (onFocusChange) onFocusChange(false);
      return true;
    }
  }, [
    onBlurProp,
    onFocusChange
  ]);
  const onSyntheticFocus = (0, $8a9cb279dc87e130$export$715c682d09d639cc)(onBlur);
  const onFocus = (0, import_react31.useCallback)((e) => {
    const ownerDocument = (0, $431fbd86ca7dc216$export$b204af158042fbac)(e.target);
    const activeElement = ownerDocument ? (0, $d4ee10de306f2510$export$cd4e5573fbe2b576)(ownerDocument) : (0, $d4ee10de306f2510$export$cd4e5573fbe2b576)();
    if (e.target === e.currentTarget && activeElement === (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent)) {
      if (onFocusProp) onFocusProp(e);
      if (onFocusChange) onFocusChange(true);
      onSyntheticFocus(e);
    }
  }, [
    onFocusChange,
    onFocusProp,
    onSyntheticFocus
  ]);
  return {
    focusProps: {
      onFocus: !isDisabled && (onFocusProp || onFocusChange || onBlurProp) ? onFocus : void 0,
      onBlur: !isDisabled && (onBlurProp || onFocusChange) ? onBlur : void 0
    }
  };
}

// node_modules/@react-aria/interactions/dist/createEventHandler.mjs
function $93925083ecbb358c$export$48d1ea6320830260(handler) {
  if (!handler) return void 0;
  let shouldStopPropagation = true;
  return (e) => {
    let event = {
      ...e,
      preventDefault() {
        e.preventDefault();
      },
      isDefaultPrevented() {
        return e.isDefaultPrevented();
      },
      stopPropagation() {
        if (shouldStopPropagation && true) console.error("stopPropagation is now the default behavior for events in React Spectrum. You can use continuePropagation() to revert this behavior.");
        else shouldStopPropagation = true;
      },
      continuePropagation() {
        shouldStopPropagation = false;
      },
      isPropagationStopped() {
        return shouldStopPropagation;
      }
    };
    handler(event);
    if (shouldStopPropagation) e.stopPropagation();
  };
}

// node_modules/@react-aria/interactions/dist/useKeyboard.mjs
function $46d819fcbaf35654$export$8f71654801c2f7cd(props) {
  return {
    keyboardProps: props.isDisabled ? {} : {
      onKeyDown: (0, $93925083ecbb358c$export$48d1ea6320830260)(props.onKeyDown),
      onKeyUp: (0, $93925083ecbb358c$export$48d1ea6320830260)(props.onKeyUp)
    }
  };
}

// node_modules/@react-aria/interactions/dist/useFocusable.mjs
var import_react32 = __toESM(require_react(), 1);
var $f645667febf57a63$export$f9762fab77588ecb = (0, import_react32.default).createContext(null);
function $f645667febf57a63$var$useFocusableContext(ref) {
  let context = (0, import_react32.useContext)($f645667febf57a63$export$f9762fab77588ecb) || {};
  (0, $e7801be82b4b2a53$export$4debdb1a3f0fa79e)(context, ref);
  let { ref: _, ...otherProps } = context;
  return otherProps;
}
var $f645667febf57a63$export$13f3202a3e5ddd5 = (0, import_react32.default).forwardRef(function FocusableProvider(props, ref) {
  let { children, ...otherProps } = props;
  let objRef = (0, $df56164dff5785e2$export$4338b53315abf666)(ref);
  let context = {
    ...otherProps,
    ref: objRef
  };
  return (0, import_react32.default).createElement($f645667febf57a63$export$f9762fab77588ecb.Provider, {
    value: context
  }, children);
});
function $f645667febf57a63$export$4c014de7c8940b4c(props, domRef) {
  let { focusProps } = (0, $a1ea59d68270f0dd$export$f8168d8dd8fd66e6)(props);
  let { keyboardProps } = (0, $46d819fcbaf35654$export$8f71654801c2f7cd)(props);
  let interactions = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(focusProps, keyboardProps);
  let domProps = $f645667febf57a63$var$useFocusableContext(domRef);
  let interactionProps = props.isDisabled ? {} : domProps;
  let autoFocusRef = (0, import_react32.useRef)(props.autoFocus);
  (0, import_react32.useEffect)(() => {
    if (autoFocusRef.current && domRef.current) (0, $3ad3f6e1647bc98d$export$80f3e147d781571c)(domRef.current);
    autoFocusRef.current = false;
  }, [
    domRef
  ]);
  let tabIndex = props.excludeFromTabOrder ? -1 : 0;
  if (props.isDisabled) tabIndex = void 0;
  return {
    focusableProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)({
      ...interactions,
      tabIndex
    }, interactionProps)
  };
}
var $f645667febf57a63$export$35a3bebf7ef2d934 = (0, import_react32.forwardRef)(({ children, ...props }, ref) => {
  ref = (0, $df56164dff5785e2$export$4338b53315abf666)(ref);
  let { focusableProps } = $f645667febf57a63$export$4c014de7c8940b4c(props, ref);
  let child = (0, import_react32.default).Children.only(children);
  (0, import_react32.useEffect)(() => {
    if (false) return;
    let el = ref.current;
    if (!el || !(el instanceof (0, $431fbd86ca7dc216$export$f21a1ffae260145a)(el).Element)) {
      console.error("<Focusable> child must forward its ref to a DOM element.");
      return;
    }
    if (!props.isDisabled && !(0, $b4b717babfbb907b$export$4c063cf1350e6fed)(el)) {
      console.warn("<Focusable> child must be focusable. Please ensure the tabIndex prop is passed through.");
      return;
    }
    if (el.localName !== "button" && el.localName !== "input" && el.localName !== "select" && el.localName !== "textarea" && el.localName !== "a" && el.localName !== "area" && el.localName !== "summary" && el.localName !== "img" && el.localName !== "svg") {
      let role = el.getAttribute("role");
      if (!role) console.warn("<Focusable> child must have an interactive ARIA role.");
      else if (
        // https://w3c.github.io/aria/#widget_roles
        role !== "application" && role !== "button" && role !== "checkbox" && role !== "combobox" && role !== "gridcell" && role !== "link" && role !== "menuitem" && role !== "menuitemcheckbox" && role !== "menuitemradio" && role !== "option" && role !== "radio" && role !== "searchbox" && role !== "separator" && role !== "slider" && role !== "spinbutton" && role !== "switch" && role !== "tab" && role !== "tabpanel" && role !== "textbox" && role !== "treeitem" && // aria-describedby is also announced on these roles
        role !== "img" && role !== "meter" && role !== "progressbar"
      ) console.warn(`<Focusable> child must have an interactive ARIA role. Got "${role}".`);
    }
  }, [
    ref,
    props.isDisabled
  ]);
  let childRef = parseInt((0, import_react32.default).version, 10) < 19 ? child.ref : child.props.ref;
  return (0, import_react32.default).cloneElement(child, {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(focusableProps, child.props),
    // @ts-ignore
    ref: (0, $5dc95899b306f630$export$c9058316764c140e)(childRef, ref)
  });
});

// node_modules/@react-aria/interactions/dist/Pressable.mjs
var import_react33 = __toESM(require_react(), 1);
var $3b117e43dc0ca95d$export$27c701ed9e449e99 = (0, import_react33.default).forwardRef(({ children, ...props }, ref) => {
  ref = (0, $df56164dff5785e2$export$4338b53315abf666)(ref);
  let { pressProps } = (0, $f6c31cce2adf654f$export$45712eceda6fad21)({
    ...props,
    ref
  });
  let { focusableProps } = (0, $f645667febf57a63$export$4c014de7c8940b4c)(props, ref);
  let child = (0, import_react33.default).Children.only(children);
  (0, import_react33.useEffect)(() => {
    if (false) return;
    let el = ref.current;
    if (!el || !(el instanceof (0, $431fbd86ca7dc216$export$f21a1ffae260145a)(el).Element)) {
      console.error("<Pressable> child must forward its ref to a DOM element.");
      return;
    }
    if (!props.isDisabled && !(0, $b4b717babfbb907b$export$4c063cf1350e6fed)(el)) {
      console.warn("<Pressable> child must be focusable. Please ensure the tabIndex prop is passed through.");
      return;
    }
    if (el.localName !== "button" && el.localName !== "input" && el.localName !== "select" && el.localName !== "textarea" && el.localName !== "a" && el.localName !== "area" && el.localName !== "summary") {
      let role = el.getAttribute("role");
      if (!role) console.warn("<Pressable> child must have an interactive ARIA role.");
      else if (
        // https://w3c.github.io/aria/#widget_roles
        role !== "application" && role !== "button" && role !== "checkbox" && role !== "combobox" && role !== "gridcell" && role !== "link" && role !== "menuitem" && role !== "menuitemcheckbox" && role !== "menuitemradio" && role !== "option" && role !== "radio" && role !== "searchbox" && role !== "separator" && role !== "slider" && role !== "spinbutton" && role !== "switch" && role !== "tab" && role !== "textbox" && role !== "treeitem"
      ) console.warn(`<Pressable> child must have an interactive ARIA role. Got "${role}".`);
    }
  }, [
    ref,
    props.isDisabled
  ]);
  let childRef = parseInt((0, import_react33.default).version, 10) < 19 ? child.ref : child.props.ref;
  return (0, import_react33.default).cloneElement(child, {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(pressProps, focusableProps, child.props),
    // @ts-ignore
    ref: (0, $5dc95899b306f630$export$c9058316764c140e)(childRef, ref)
  });
});

// node_modules/@react-aria/interactions/dist/PressResponder.mjs
var import_react34 = __toESM(require_react(), 1);
var $f1ab8c75478c6f73$export$3351871ee4b288b8 = (0, import_react34.default).forwardRef(({ children, ...props }, ref) => {
  let isRegistered = (0, import_react34.useRef)(false);
  let prevContext = (0, import_react34.useContext)((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb5));
  ref = (0, $df56164dff5785e2$export$4338b53315abf666)(ref || (prevContext === null || prevContext === void 0 ? void 0 : prevContext.ref));
  let context = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(prevContext || {}, {
    ...props,
    ref,
    register() {
      isRegistered.current = true;
      if (prevContext) prevContext.register();
    }
  });
  (0, $e7801be82b4b2a53$export$4debdb1a3f0fa79e)(prevContext, ref);
  (0, import_react34.useEffect)(() => {
    if (!isRegistered.current) {
      if (true) console.warn("A PressResponder was rendered without a pressable child. Either call the usePress hook, or wrap your DOM node with <Pressable> component.");
      isRegistered.current = true;
    }
  }, []);
  return (0, import_react34.default).createElement((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb5).Provider, {
    value: context
  }, children);
});
function $f1ab8c75478c6f73$export$cf75428e0b9ed1ea({ children }) {
  let context = (0, import_react34.useMemo)(() => ({
    register: () => {
    }
  }), []);
  return (0, import_react34.default).createElement((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb5).Provider, {
    value: context
  }, children);
}

// node_modules/@react-aria/interactions/dist/useFocusWithin.mjs
var import_react35 = __toESM(require_react(), 1);
function $9ab94262bd0047c7$export$420e68273165f4ec(props) {
  let { isDisabled, onBlurWithin, onFocusWithin, onFocusWithinChange } = props;
  let state = (0, import_react35.useRef)({
    isFocusWithin: false
  });
  let { addGlobalListener, removeAllGlobalListeners } = (0, $03deb23ff14920c4$export$4eaf04e54aa8eed6)();
  let onBlur = (0, import_react35.useCallback)((e) => {
    if (!e.currentTarget.contains(e.target)) return;
    if (state.current.isFocusWithin && !e.currentTarget.contains(e.relatedTarget)) {
      state.current.isFocusWithin = false;
      removeAllGlobalListeners();
      if (onBlurWithin) onBlurWithin(e);
      if (onFocusWithinChange) onFocusWithinChange(false);
    }
  }, [
    onBlurWithin,
    onFocusWithinChange,
    state,
    removeAllGlobalListeners
  ]);
  let onSyntheticFocus = (0, $8a9cb279dc87e130$export$715c682d09d639cc)(onBlur);
  let onFocus = (0, import_react35.useCallback)((e) => {
    if (!e.currentTarget.contains(e.target)) return;
    const ownerDocument = (0, $431fbd86ca7dc216$export$b204af158042fbac)(e.target);
    const activeElement = (0, $d4ee10de306f2510$export$cd4e5573fbe2b576)(ownerDocument);
    if (!state.current.isFocusWithin && activeElement === (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e.nativeEvent)) {
      if (onFocusWithin) onFocusWithin(e);
      if (onFocusWithinChange) onFocusWithinChange(true);
      state.current.isFocusWithin = true;
      onSyntheticFocus(e);
      let currentTarget = e.currentTarget;
      addGlobalListener(ownerDocument, "focus", (e2) => {
        if (state.current.isFocusWithin && !(0, $d4ee10de306f2510$export$4282f70798064fe0)(currentTarget, e2.target)) {
          let nativeEvent = new ownerDocument.defaultView.FocusEvent("blur", {
            relatedTarget: e2.target
          });
          (0, $8a9cb279dc87e130$export$c2b7abe5d61ec696)(nativeEvent, currentTarget);
          let event = (0, $8a9cb279dc87e130$export$525bc4921d56d4a)(nativeEvent);
          onBlur(event);
        }
      }, {
        capture: true
      });
    }
  }, [
    onFocusWithin,
    onFocusWithinChange,
    onSyntheticFocus,
    addGlobalListener,
    onBlur
  ]);
  if (isDisabled) return {
    focusWithinProps: {
      // These cannot be null, that would conflict in mergeProps
      onFocus: void 0,
      onBlur: void 0
    }
  };
  return {
    focusWithinProps: {
      onFocus,
      onBlur
    }
  };
}

// node_modules/@react-aria/interactions/dist/useHover.mjs
var import_react36 = __toESM(require_react(), 1);
var $6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents = false;
var $6179b936705e76d3$var$hoverCount = 0;
function $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents() {
  $6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents = true;
  setTimeout(() => {
    $6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents = false;
  }, 50);
}
function $6179b936705e76d3$var$handleGlobalPointerEvent(e) {
  if (e.pointerType === "touch") $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents();
}
function $6179b936705e76d3$var$setupGlobalTouchEvents() {
  if (typeof document === "undefined") return;
  if (typeof PointerEvent !== "undefined") document.addEventListener("pointerup", $6179b936705e76d3$var$handleGlobalPointerEvent);
  else if (false) document.addEventListener("touchend", $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents);
  $6179b936705e76d3$var$hoverCount++;
  return () => {
    $6179b936705e76d3$var$hoverCount--;
    if ($6179b936705e76d3$var$hoverCount > 0) return;
    if (typeof PointerEvent !== "undefined") document.removeEventListener("pointerup", $6179b936705e76d3$var$handleGlobalPointerEvent);
    else if (false) document.removeEventListener("touchend", $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents);
  };
}
function $6179b936705e76d3$export$ae780daf29e6d456(props) {
  let { onHoverStart, onHoverChange, onHoverEnd, isDisabled } = props;
  let [isHovered, setHovered] = (0, import_react36.useState)(false);
  let state = (0, import_react36.useRef)({
    isHovered: false,
    ignoreEmulatedMouseEvents: false,
    pointerType: "",
    target: null
  }).current;
  (0, import_react36.useEffect)($6179b936705e76d3$var$setupGlobalTouchEvents, []);
  let { addGlobalListener, removeAllGlobalListeners } = (0, $03deb23ff14920c4$export$4eaf04e54aa8eed6)();
  let { hoverProps, triggerHoverEnd } = (0, import_react36.useMemo)(() => {
    let triggerHoverStart = (event, pointerType) => {
      state.pointerType = pointerType;
      if (isDisabled || pointerType === "touch" || state.isHovered || !event.currentTarget.contains(event.target)) return;
      state.isHovered = true;
      let target = event.currentTarget;
      state.target = target;
      addGlobalListener((0, $431fbd86ca7dc216$export$b204af158042fbac)(event.target), "pointerover", (e) => {
        if (state.isHovered && state.target && !(0, $d4ee10de306f2510$export$4282f70798064fe0)(state.target, e.target)) triggerHoverEnd2(e, e.pointerType);
      }, {
        capture: true
      });
      if (onHoverStart) onHoverStart({
        type: "hoverstart",
        target,
        pointerType
      });
      if (onHoverChange) onHoverChange(true);
      setHovered(true);
    };
    let triggerHoverEnd2 = (event, pointerType) => {
      let target = state.target;
      state.pointerType = "";
      state.target = null;
      if (pointerType === "touch" || !state.isHovered || !target) return;
      state.isHovered = false;
      removeAllGlobalListeners();
      if (onHoverEnd) onHoverEnd({
        type: "hoverend",
        target,
        pointerType
      });
      if (onHoverChange) onHoverChange(false);
      setHovered(false);
    };
    let hoverProps2 = {};
    if (typeof PointerEvent !== "undefined") {
      hoverProps2.onPointerEnter = (e) => {
        if ($6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents && e.pointerType === "mouse") return;
        triggerHoverStart(e, e.pointerType);
      };
      hoverProps2.onPointerLeave = (e) => {
        if (!isDisabled && e.currentTarget.contains(e.target)) triggerHoverEnd2(e, e.pointerType);
      };
    } else if (false) {
      hoverProps2.onTouchStart = () => {
        state.ignoreEmulatedMouseEvents = true;
      };
      hoverProps2.onMouseEnter = (e) => {
        if (!state.ignoreEmulatedMouseEvents && !$6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents) triggerHoverStart(e, "mouse");
        state.ignoreEmulatedMouseEvents = false;
      };
      hoverProps2.onMouseLeave = (e) => {
        if (!isDisabled && e.currentTarget.contains(e.target)) triggerHoverEnd2(e, "mouse");
      };
    }
    return {
      hoverProps: hoverProps2,
      triggerHoverEnd: triggerHoverEnd2
    };
  }, [
    onHoverStart,
    onHoverChange,
    onHoverEnd,
    isDisabled,
    state,
    addGlobalListener,
    removeAllGlobalListeners
  ]);
  (0, import_react36.useEffect)(() => {
    if (isDisabled) triggerHoverEnd({
      currentTarget: state.target
    }, state.pointerType);
  }, [
    isDisabled
  ]);
  return {
    hoverProps,
    isHovered
  };
}

// node_modules/@react-aria/interactions/dist/useInteractOutside.mjs
var import_react37 = __toESM(require_react(), 1);
function $e0b6e0b68ec7f50f$export$872b660ac5a1ff98(props) {
  let { ref, onInteractOutside, isDisabled, onInteractOutsideStart } = props;
  let stateRef = (0, import_react37.useRef)({
    isPointerDown: false,
    ignoreEmulatedMouseEvents: false
  });
  let onPointerDown = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e) => {
    if (onInteractOutside && $e0b6e0b68ec7f50f$var$isValidEvent(e, ref)) {
      if (onInteractOutsideStart) onInteractOutsideStart(e);
      stateRef.current.isPointerDown = true;
    }
  });
  let triggerInteractOutside = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e) => {
    if (onInteractOutside) onInteractOutside(e);
  });
  (0, import_react37.useEffect)(() => {
    let state = stateRef.current;
    if (isDisabled) return;
    const element = ref.current;
    const documentObject = (0, $431fbd86ca7dc216$export$b204af158042fbac)(element);
    if (typeof PointerEvent !== "undefined") {
      let onClick = (e) => {
        if (state.isPointerDown && $e0b6e0b68ec7f50f$var$isValidEvent(e, ref)) triggerInteractOutside(e);
        state.isPointerDown = false;
      };
      documentObject.addEventListener("pointerdown", onPointerDown, true);
      documentObject.addEventListener("click", onClick, true);
      return () => {
        documentObject.removeEventListener("pointerdown", onPointerDown, true);
        documentObject.removeEventListener("click", onClick, true);
      };
    } else if (false) {
      let onMouseUp = (e) => {
        if (state.ignoreEmulatedMouseEvents) state.ignoreEmulatedMouseEvents = false;
        else if (state.isPointerDown && $e0b6e0b68ec7f50f$var$isValidEvent(e, ref)) triggerInteractOutside(e);
        state.isPointerDown = false;
      };
      let onTouchEnd = (e) => {
        state.ignoreEmulatedMouseEvents = true;
        if (state.isPointerDown && $e0b6e0b68ec7f50f$var$isValidEvent(e, ref)) triggerInteractOutside(e);
        state.isPointerDown = false;
      };
      documentObject.addEventListener("mousedown", onPointerDown, true);
      documentObject.addEventListener("mouseup", onMouseUp, true);
      documentObject.addEventListener("touchstart", onPointerDown, true);
      documentObject.addEventListener("touchend", onTouchEnd, true);
      return () => {
        documentObject.removeEventListener("mousedown", onPointerDown, true);
        documentObject.removeEventListener("mouseup", onMouseUp, true);
        documentObject.removeEventListener("touchstart", onPointerDown, true);
        documentObject.removeEventListener("touchend", onTouchEnd, true);
      };
    }
  }, [
    ref,
    isDisabled,
    onPointerDown,
    triggerInteractOutside
  ]);
}
function $e0b6e0b68ec7f50f$var$isValidEvent(event, ref) {
  if (event.button > 0) return false;
  if (event.target) {
    const ownerDocument = event.target.ownerDocument;
    if (!ownerDocument || !ownerDocument.documentElement.contains(event.target)) return false;
    if (event.target.closest("[data-react-aria-top-layer]")) return false;
  }
  if (!ref.current) return false;
  return !event.composedPath().includes(ref.current);
}

// node_modules/@react-aria/interactions/dist/useMove.mjs
var import_react38 = __toESM(require_react(), 1);
function $e8a7022cf87cba2a$export$36da96379f79f245(props) {
  let { onMoveStart, onMove, onMoveEnd } = props;
  let state = (0, import_react38.useRef)({
    didMove: false,
    lastPosition: null,
    id: null
  });
  let { addGlobalListener, removeGlobalListener } = (0, $03deb23ff14920c4$export$4eaf04e54aa8eed6)();
  let move = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((originalEvent, pointerType, deltaX, deltaY) => {
    if (deltaX === 0 && deltaY === 0) return;
    if (!state.current.didMove) {
      state.current.didMove = true;
      onMoveStart === null || onMoveStart === void 0 ? void 0 : onMoveStart({
        type: "movestart",
        pointerType,
        shiftKey: originalEvent.shiftKey,
        metaKey: originalEvent.metaKey,
        ctrlKey: originalEvent.ctrlKey,
        altKey: originalEvent.altKey
      });
    }
    onMove === null || onMove === void 0 ? void 0 : onMove({
      type: "move",
      pointerType,
      deltaX,
      deltaY,
      shiftKey: originalEvent.shiftKey,
      metaKey: originalEvent.metaKey,
      ctrlKey: originalEvent.ctrlKey,
      altKey: originalEvent.altKey
    });
  });
  let end = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((originalEvent, pointerType) => {
    (0, $14c0b72509d70225$export$b0d6fa1ab32e3295)();
    if (state.current.didMove) onMoveEnd === null || onMoveEnd === void 0 ? void 0 : onMoveEnd({
      type: "moveend",
      pointerType,
      shiftKey: originalEvent.shiftKey,
      metaKey: originalEvent.metaKey,
      ctrlKey: originalEvent.ctrlKey,
      altKey: originalEvent.altKey
    });
  });
  let moveProps = (0, import_react38.useMemo)(() => {
    let moveProps2 = {};
    let start = () => {
      (0, $14c0b72509d70225$export$16a4697467175487)();
      state.current.didMove = false;
    };
    if (typeof PointerEvent === "undefined" && false) {
      let onMouseMove = (e) => {
        if (e.button === 0) {
          var _state_current_lastPosition, _state_current_lastPosition1;
          var _state_current_lastPosition_pageX, _state_current_lastPosition_pageY;
          move(e, "mouse", e.pageX - ((_state_current_lastPosition_pageX = (_state_current_lastPosition = state.current.lastPosition) === null || _state_current_lastPosition === void 0 ? void 0 : _state_current_lastPosition.pageX) !== null && _state_current_lastPosition_pageX !== void 0 ? _state_current_lastPosition_pageX : 0), e.pageY - ((_state_current_lastPosition_pageY = (_state_current_lastPosition1 = state.current.lastPosition) === null || _state_current_lastPosition1 === void 0 ? void 0 : _state_current_lastPosition1.pageY) !== null && _state_current_lastPosition_pageY !== void 0 ? _state_current_lastPosition_pageY : 0));
          state.current.lastPosition = {
            pageX: e.pageX,
            pageY: e.pageY
          };
        }
      };
      let onMouseUp = (e) => {
        if (e.button === 0) {
          end(e, "mouse");
          removeGlobalListener(window, "mousemove", onMouseMove, false);
          removeGlobalListener(window, "mouseup", onMouseUp, false);
        }
      };
      moveProps2.onMouseDown = (e) => {
        if (e.button === 0) {
          start();
          e.stopPropagation();
          e.preventDefault();
          state.current.lastPosition = {
            pageX: e.pageX,
            pageY: e.pageY
          };
          addGlobalListener(window, "mousemove", onMouseMove, false);
          addGlobalListener(window, "mouseup", onMouseUp, false);
        }
      };
      let onTouchMove = (e) => {
        let touch = [
          ...e.changedTouches
        ].findIndex(({ identifier }) => identifier === state.current.id);
        if (touch >= 0) {
          var _state_current_lastPosition, _state_current_lastPosition1;
          let { pageX, pageY } = e.changedTouches[touch];
          var _state_current_lastPosition_pageX, _state_current_lastPosition_pageY;
          move(e, "touch", pageX - ((_state_current_lastPosition_pageX = (_state_current_lastPosition = state.current.lastPosition) === null || _state_current_lastPosition === void 0 ? void 0 : _state_current_lastPosition.pageX) !== null && _state_current_lastPosition_pageX !== void 0 ? _state_current_lastPosition_pageX : 0), pageY - ((_state_current_lastPosition_pageY = (_state_current_lastPosition1 = state.current.lastPosition) === null || _state_current_lastPosition1 === void 0 ? void 0 : _state_current_lastPosition1.pageY) !== null && _state_current_lastPosition_pageY !== void 0 ? _state_current_lastPosition_pageY : 0));
          state.current.lastPosition = {
            pageX,
            pageY
          };
        }
      };
      let onTouchEnd = (e) => {
        let touch = [
          ...e.changedTouches
        ].findIndex(({ identifier }) => identifier === state.current.id);
        if (touch >= 0) {
          end(e, "touch");
          state.current.id = null;
          removeGlobalListener(window, "touchmove", onTouchMove);
          removeGlobalListener(window, "touchend", onTouchEnd);
          removeGlobalListener(window, "touchcancel", onTouchEnd);
        }
      };
      moveProps2.onTouchStart = (e) => {
        if (e.changedTouches.length === 0 || state.current.id != null) return;
        let { pageX, pageY, identifier } = e.changedTouches[0];
        start();
        e.stopPropagation();
        e.preventDefault();
        state.current.lastPosition = {
          pageX,
          pageY
        };
        state.current.id = identifier;
        addGlobalListener(window, "touchmove", onTouchMove, false);
        addGlobalListener(window, "touchend", onTouchEnd, false);
        addGlobalListener(window, "touchcancel", onTouchEnd, false);
      };
    } else {
      let onPointerMove = (e) => {
        if (e.pointerId === state.current.id) {
          var _state_current_lastPosition, _state_current_lastPosition1;
          let pointerType = e.pointerType || "mouse";
          var _state_current_lastPosition_pageX, _state_current_lastPosition_pageY;
          move(e, pointerType, e.pageX - ((_state_current_lastPosition_pageX = (_state_current_lastPosition = state.current.lastPosition) === null || _state_current_lastPosition === void 0 ? void 0 : _state_current_lastPosition.pageX) !== null && _state_current_lastPosition_pageX !== void 0 ? _state_current_lastPosition_pageX : 0), e.pageY - ((_state_current_lastPosition_pageY = (_state_current_lastPosition1 = state.current.lastPosition) === null || _state_current_lastPosition1 === void 0 ? void 0 : _state_current_lastPosition1.pageY) !== null && _state_current_lastPosition_pageY !== void 0 ? _state_current_lastPosition_pageY : 0));
          state.current.lastPosition = {
            pageX: e.pageX,
            pageY: e.pageY
          };
        }
      };
      let onPointerUp = (e) => {
        if (e.pointerId === state.current.id) {
          let pointerType = e.pointerType || "mouse";
          end(e, pointerType);
          state.current.id = null;
          removeGlobalListener(window, "pointermove", onPointerMove, false);
          removeGlobalListener(window, "pointerup", onPointerUp, false);
          removeGlobalListener(window, "pointercancel", onPointerUp, false);
        }
      };
      moveProps2.onPointerDown = (e) => {
        if (e.button === 0 && state.current.id == null) {
          start();
          e.stopPropagation();
          e.preventDefault();
          state.current.lastPosition = {
            pageX: e.pageX,
            pageY: e.pageY
          };
          state.current.id = e.pointerId;
          addGlobalListener(window, "pointermove", onPointerMove, false);
          addGlobalListener(window, "pointerup", onPointerUp, false);
          addGlobalListener(window, "pointercancel", onPointerUp, false);
        }
      };
    }
    let triggerKeyboardMove = (e, deltaX, deltaY) => {
      start();
      move(e, "keyboard", deltaX, deltaY);
      end(e, "keyboard");
    };
    moveProps2.onKeyDown = (e) => {
      switch (e.key) {
        case "Left":
        case "ArrowLeft":
          e.preventDefault();
          e.stopPropagation();
          triggerKeyboardMove(e, -1, 0);
          break;
        case "Right":
        case "ArrowRight":
          e.preventDefault();
          e.stopPropagation();
          triggerKeyboardMove(e, 1, 0);
          break;
        case "Up":
        case "ArrowUp":
          e.preventDefault();
          e.stopPropagation();
          triggerKeyboardMove(e, 0, -1);
          break;
        case "Down":
        case "ArrowDown":
          e.preventDefault();
          e.stopPropagation();
          triggerKeyboardMove(e, 0, 1);
          break;
      }
    };
    return moveProps2;
  }, [
    state,
    addGlobalListener,
    removeGlobalListener,
    move,
    end
  ]);
  return {
    moveProps
  };
}

// node_modules/@react-aria/interactions/dist/useScrollWheel.mjs
var import_react39 = __toESM(require_react(), 1);
function $7d0a636d7a4dcefd$export$2123ff2b87c81ca(props, ref) {
  let { onScroll, isDisabled } = props;
  let onScrollHandler = (0, import_react39.useCallback)((e) => {
    if (e.ctrlKey) return;
    e.preventDefault();
    e.stopPropagation();
    if (onScroll) onScroll({
      deltaX: e.deltaX,
      deltaY: e.deltaY
    });
  }, [
    onScroll
  ]);
  (0, $e9faafb641e167db$export$90fc3a17d93f704c)(ref, "wheel", isDisabled ? void 0 : onScrollHandler);
}

// node_modules/@react-aria/interactions/dist/useLongPress.mjs
var import_react40 = __toESM(require_react(), 1);
var $8a26561d2877236e$var$DEFAULT_THRESHOLD = 500;
function $8a26561d2877236e$export$c24ed0104d07eab9(props) {
  let { isDisabled, onLongPressStart, onLongPressEnd, onLongPress, threshold = $8a26561d2877236e$var$DEFAULT_THRESHOLD, accessibilityDescription } = props;
  const timeRef = (0, import_react40.useRef)(void 0);
  let { addGlobalListener, removeGlobalListener } = (0, $03deb23ff14920c4$export$4eaf04e54aa8eed6)();
  let { pressProps } = (0, $f6c31cce2adf654f$export$45712eceda6fad21)({
    isDisabled,
    onPressStart(e) {
      e.continuePropagation();
      if (e.pointerType === "mouse" || e.pointerType === "touch") {
        if (onLongPressStart) onLongPressStart({
          ...e,
          type: "longpressstart"
        });
        timeRef.current = setTimeout(() => {
          e.target.dispatchEvent(new PointerEvent("pointercancel", {
            bubbles: true
          }));
          if ((0, $431fbd86ca7dc216$export$b204af158042fbac)(e.target).activeElement !== e.target) (0, $7215afc6de606d6b$export$de79e2c695e052f3)(e.target);
          if (onLongPress) onLongPress({
            ...e,
            type: "longpress"
          });
          timeRef.current = void 0;
        }, threshold);
        if (e.pointerType === "touch") {
          let onContextMenu = (e2) => {
            e2.preventDefault();
          };
          addGlobalListener(e.target, "contextmenu", onContextMenu, {
            once: true
          });
          addGlobalListener(window, "pointerup", () => {
            setTimeout(() => {
              removeGlobalListener(e.target, "contextmenu", onContextMenu);
            }, 30);
          }, {
            once: true
          });
        }
      }
    },
    onPressEnd(e) {
      if (timeRef.current) clearTimeout(timeRef.current);
      if (onLongPressEnd && (e.pointerType === "mouse" || e.pointerType === "touch")) onLongPressEnd({
        ...e,
        type: "longpressend"
      });
    }
  });
  let descriptionProps = (0, $ef06256079686ba0$export$f8aeda7b10753fa1)(onLongPress && !isDisabled ? accessibilityDescription : void 0);
  return {
    longPressProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(pressProps, descriptionProps)
  };
}

// node_modules/@react-aria/collections/dist/CollectionBuilder.mjs
var import_react41 = __toESM(require_react(), 1);
var import_shim = __toESM(require_shim(), 1);
var $e1995378a142960e$var$ShallowRenderContext = (0, import_react41.createContext)(false);
var $e1995378a142960e$var$CollectionDocumentContext = (0, import_react41.createContext)(null);
function $e1995378a142960e$export$bf788dd355e3a401(props) {
  let doc = (0, import_react41.useContext)($e1995378a142960e$var$CollectionDocumentContext);
  if (doc)
    return props.content;
  let { collection, document: document2 } = $e1995378a142960e$var$useCollectionDocument(props.createCollection);
  return (0, import_react41.default).createElement((0, import_react41.default).Fragment, null, (0, import_react41.default).createElement((0, $f39a9eba43920ace$export$8dc98ba7eadeaa56), null, (0, import_react41.default).createElement($e1995378a142960e$var$CollectionDocumentContext.Provider, {
    value: document2
  }, props.content)), (0, import_react41.default).createElement($e1995378a142960e$var$CollectionInner, {
    render: props.children,
    collection
  }));
}
function $e1995378a142960e$var$CollectionInner({ collection, render }) {
  return render(collection);
}
function $e1995378a142960e$var$useSyncExternalStoreFallback(subscribe, getSnapshot, getServerSnapshot) {
  let isSSR = (0, $b5e257d569688ac6$export$535bd6ca7f90a273)();
  let isSSRRef = (0, import_react41.useRef)(isSSR);
  isSSRRef.current = isSSR;
  let getSnapshotWrapper = (0, import_react41.useCallback)(() => {
    return isSSRRef.current ? getServerSnapshot() : getSnapshot();
  }, [
    getSnapshot,
    getServerSnapshot
  ]);
  return (0, import_shim.useSyncExternalStore)(subscribe, getSnapshotWrapper);
}
var $e1995378a142960e$var$useSyncExternalStore = typeof (0, import_react41.default)["useSyncExternalStore"] === "function" ? (0, import_react41.default)["useSyncExternalStore"] : $e1995378a142960e$var$useSyncExternalStoreFallback;
function $e1995378a142960e$var$useCollectionDocument(createCollection) {
  let [document2] = (0, import_react41.useState)(() => new (0, $681cc3c98f569e39$export$b34a105447964f9f)((createCollection === null || createCollection === void 0 ? void 0 : createCollection()) || new (0, $23b9f4fcf0fe224b$export$408d25a4e12db025)()));
  let subscribe = (0, import_react41.useCallback)((fn) => document2.subscribe(fn), [
    document2
  ]);
  let getSnapshot = (0, import_react41.useCallback)(() => {
    let collection2 = document2.getCollection();
    if (document2.isSSR)
      document2.resetAfterSSR();
    return collection2;
  }, [
    document2
  ]);
  let getServerSnapshot = (0, import_react41.useCallback)(() => {
    document2.isSSR = true;
    return document2.getCollection();
  }, [
    document2
  ]);
  let collection = $e1995378a142960e$var$useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    document2.isMounted = true;
    return () => {
      document2.isMounted = false;
    };
  }, [
    document2
  ]);
  return {
    collection,
    document: document2
  };
}
var $e1995378a142960e$var$SSRContext = (0, import_react41.createContext)(null);
function $e1995378a142960e$var$useSSRCollectionNode(Type, props, ref, rendered, children, render) {
  let itemRef = (0, import_react41.useCallback)((element) => {
    element === null || element === void 0 ? void 0 : element.setProps(props, ref, rendered, render);
  }, [
    props,
    ref,
    rendered,
    render
  ]);
  let parentNode = (0, import_react41.useContext)($e1995378a142960e$var$SSRContext);
  if (parentNode) {
    let element = parentNode.ownerDocument.nodesByProps.get(props);
    if (!element) {
      element = parentNode.ownerDocument.createElement(Type);
      element.setProps(props, ref, rendered, render);
      parentNode.appendChild(element);
      parentNode.ownerDocument.updateCollection();
      parentNode.ownerDocument.nodesByProps.set(props, element);
    }
    return children ? (0, import_react41.default).createElement($e1995378a142960e$var$SSRContext.Provider, {
      value: element
    }, children) : null;
  }
  return (0, import_react41.default).createElement(Type, {
    ref: itemRef
  }, children);
}
function $e1995378a142960e$export$18af5c7a9e9b3664(type, render) {
  let Component = ({ node }) => render(node.props, node.props.ref, node);
  let Result = (0, import_react41.forwardRef)((props, ref) => {
    let focusableProps = (0, import_react41.useContext)((0, $f645667febf57a63$export$f9762fab77588ecb));
    let isShallow = (0, import_react41.useContext)($e1995378a142960e$var$ShallowRenderContext);
    if (!isShallow) {
      if (render.length >= 3) throw new Error(render.name + " cannot be rendered outside a collection.");
      return render(props, ref);
    }
    return $e1995378a142960e$var$useSSRCollectionNode(type, props, ref, "children" in props ? props.children : null, null, (node) => (
      // Forward FocusableContext to real DOM tree so tooltips work.
      (0, import_react41.default).createElement((0, $f645667febf57a63$export$f9762fab77588ecb).Provider, {
        value: focusableProps
      }, (0, import_react41.default).createElement(Component, {
        node
      }))
    ));
  });
  Result.displayName = render.name;
  return Result;
}
function $e1995378a142960e$export$e953bb1cd0f19726(type, render, useChildren = $e1995378a142960e$var$useCollectionChildren) {
  let Component = ({ node }) => render(node.props, node.props.ref, node);
  let Result = (0, import_react41.forwardRef)((props, ref) => {
    let children = useChildren(props);
    var _useSSRCollectionNode;
    return (_useSSRCollectionNode = $e1995378a142960e$var$useSSRCollectionNode(type, props, ref, null, children, (node) => (0, import_react41.default).createElement(Component, {
      node
    }))) !== null && _useSSRCollectionNode !== void 0 ? _useSSRCollectionNode : (0, import_react41.default).createElement((0, import_react41.default).Fragment, null);
  });
  Result.displayName = render.name;
  return Result;
}
function $e1995378a142960e$var$useCollectionChildren(options) {
  return (0, $e948873055cbafe4$export$727c8fc270210f13)({
    ...options,
    addIdAndValue: true
  });
}
var $e1995378a142960e$var$CollectionContext = (0, import_react41.createContext)(null);
function $e1995378a142960e$export$fb8073518f34e6ec(props) {
  let ctx = (0, import_react41.useContext)($e1995378a142960e$var$CollectionContext);
  let dependencies = ((ctx === null || ctx === void 0 ? void 0 : ctx.dependencies) || []).concat(props.dependencies);
  let idScope = props.idScope || (ctx === null || ctx === void 0 ? void 0 : ctx.idScope);
  let children = $e1995378a142960e$var$useCollectionChildren({
    ...props,
    idScope,
    dependencies
  });
  let doc = (0, import_react41.useContext)($e1995378a142960e$var$CollectionDocumentContext);
  if (doc) children = (0, import_react41.default).createElement($e1995378a142960e$var$CollectionRoot, null, children);
  ctx = (0, import_react41.useMemo)(() => ({
    dependencies,
    idScope
  }), [
    idScope,
    ...dependencies
  ]);
  return (0, import_react41.default).createElement($e1995378a142960e$var$CollectionContext.Provider, {
    value: ctx
  }, children);
}
function $e1995378a142960e$var$CollectionRoot({ children }) {
  let doc = (0, import_react41.useContext)($e1995378a142960e$var$CollectionDocumentContext);
  let wrappedChildren = (0, import_react41.useMemo)(() => (0, import_react41.default).createElement($e1995378a142960e$var$CollectionDocumentContext.Provider, {
    value: null
  }, (0, import_react41.default).createElement($e1995378a142960e$var$ShallowRenderContext.Provider, {
    value: true
  }, children)), [
    children
  ]);
  return (0, $b5e257d569688ac6$export$535bd6ca7f90a273)() ? (0, import_react41.default).createElement($e1995378a142960e$var$SSRContext.Provider, {
    value: doc
  }, wrappedChildren) : (0, import_react_dom3.createPortal)(wrappedChildren, doc);
}

// node_modules/@react-aria/link/dist/useLink.mjs
function $298d61e98472621b$export$dcf14c9974fe2767(props, ref) {
  let { elementType = "a", onPress, onPressStart, onPressEnd, onClick, isDisabled, ...otherProps } = props;
  let linkProps = {};
  if (elementType !== "a") linkProps = {
    role: "link",
    tabIndex: !isDisabled ? 0 : void 0
  };
  let { focusableProps } = (0, $f645667febf57a63$export$4c014de7c8940b4c)(props, ref);
  let { pressProps, isPressed } = (0, $f6c31cce2adf654f$export$45712eceda6fad21)({
    onPress,
    onPressStart,
    onPressEnd,
    onClick,
    isDisabled,
    ref
  });
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(otherProps, {
    labelable: true
  });
  let interactionHandlers = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(focusableProps, pressProps);
  let router = (0, $ea8dcbcb9ea1b556$export$9a302a45f65d0572)();
  let routerLinkProps = (0, $ea8dcbcb9ea1b556$export$7e924b3091a3bd18)(props);
  return {
    isPressed,
    linkProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(domProps, routerLinkProps, {
      ...interactionHandlers,
      ...linkProps,
      "aria-disabled": isDisabled || void 0,
      "aria-current": props["aria-current"],
      onClick: (e) => {
        var _pressProps_onClick;
        (_pressProps_onClick = pressProps.onClick) === null || _pressProps_onClick === void 0 ? void 0 : _pressProps_onClick.call(pressProps, e);
        if (!router.isNative && e.currentTarget instanceof HTMLAnchorElement && e.currentTarget.href && // If props are applied to a router Link component, it may have already prevented default.
        !e.isDefaultPrevented() && (0, $ea8dcbcb9ea1b556$export$efa8c9099e530235)(e.currentTarget, e) && props.href) {
          e.preventDefault();
          router.open(e.currentTarget, e, props.href, props.routerOptions);
        }
      }
    })
  };
}

// node_modules/@react-aria/breadcrumbs/dist/ar-AE.mjs
var $b91590b2dc47de39$exports = {};
$b91590b2dc47de39$exports = {
  "breadcrumbs": `عناصر الواجهة`
};

// node_modules/@react-aria/breadcrumbs/dist/bg-BG.mjs
var $55b0693b2cf3fe91$exports = {};
$55b0693b2cf3fe91$exports = {
  "breadcrumbs": `Трохи хляб`
};

// node_modules/@react-aria/breadcrumbs/dist/cs-CZ.mjs
var $6ec1ed7729e948cc$exports = {};
$6ec1ed7729e948cc$exports = {
  "breadcrumbs": `Popis cesty`
};

// node_modules/@react-aria/breadcrumbs/dist/da-DK.mjs
var $5a41bb2baa6861e4$exports = {};
$5a41bb2baa6861e4$exports = {
  "breadcrumbs": `Brødkrummer`
};

// node_modules/@react-aria/breadcrumbs/dist/de-DE.mjs
var $f28bbea439e87eca$exports = {};
$f28bbea439e87eca$exports = {
  "breadcrumbs": `Breadcrumbs`
};

// node_modules/@react-aria/breadcrumbs/dist/el-GR.mjs
var $b3eca51cb720961a$exports = {};
$b3eca51cb720961a$exports = {
  "breadcrumbs": `Πλοηγήσεις breadcrumb`
};

// node_modules/@react-aria/breadcrumbs/dist/en-US.mjs
var $0b39b205118db415$exports = {};
$0b39b205118db415$exports = {
  "breadcrumbs": `Breadcrumbs`
};

// node_modules/@react-aria/breadcrumbs/dist/es-ES.mjs
var $f467c0ee7bfb0950$exports = {};
$f467c0ee7bfb0950$exports = {
  "breadcrumbs": `Migas de pan`
};

// node_modules/@react-aria/breadcrumbs/dist/et-EE.mjs
var $ab711d2ffb4cdf3d$exports = {};
$ab711d2ffb4cdf3d$exports = {
  "breadcrumbs": `Lingiread`
};

// node_modules/@react-aria/breadcrumbs/dist/fi-FI.mjs
var $b63105d663e6f9d5$exports = {};
$b63105d663e6f9d5$exports = {
  "breadcrumbs": `Navigointilinkit`
};

// node_modules/@react-aria/breadcrumbs/dist/fr-FR.mjs
var $9d2ed7be7fcdc2a1$exports = {};
$9d2ed7be7fcdc2a1$exports = {
  "breadcrumbs": `Chemin de navigation`
};

// node_modules/@react-aria/breadcrumbs/dist/he-IL.mjs
var $c5704294d85c7b5d$exports = {};
$c5704294d85c7b5d$exports = {
  "breadcrumbs": `שבילי ניווט`
};

// node_modules/@react-aria/breadcrumbs/dist/hr-HR.mjs
var $20c975671d6bbc63$exports = {};
$20c975671d6bbc63$exports = {
  "breadcrumbs": `Navigacijski putovi`
};

// node_modules/@react-aria/breadcrumbs/dist/hu-HU.mjs
var $2569ca3917233115$exports = {};
$2569ca3917233115$exports = {
  "breadcrumbs": `Morzsamenü`
};

// node_modules/@react-aria/breadcrumbs/dist/it-IT.mjs
var $caa152f7f8e96c85$exports = {};
$caa152f7f8e96c85$exports = {
  "breadcrumbs": `Breadcrumb`
};

// node_modules/@react-aria/breadcrumbs/dist/ja-JP.mjs
var $cbc6af0cc98fad10$exports = {};
$cbc6af0cc98fad10$exports = {
  "breadcrumbs": `パンくずリスト`
};

// node_modules/@react-aria/breadcrumbs/dist/ko-KR.mjs
var $ad9be5d332b4d607$exports = {};
$ad9be5d332b4d607$exports = {
  "breadcrumbs": `탐색 표시`
};

// node_modules/@react-aria/breadcrumbs/dist/lt-LT.mjs
var $659de19a00ff9617$exports = {};
$659de19a00ff9617$exports = {
  "breadcrumbs": `Naršymo kelias`
};

// node_modules/@react-aria/breadcrumbs/dist/lv-LV.mjs
var $173e9fb4d14fe309$exports = {};
$173e9fb4d14fe309$exports = {
  "breadcrumbs": `Atpakaļceļi`
};

// node_modules/@react-aria/breadcrumbs/dist/nb-NO.mjs
var $d8e2640a066567a9$exports = {};
$d8e2640a066567a9$exports = {
  "breadcrumbs": `Navigasjonsstier`
};

// node_modules/@react-aria/breadcrumbs/dist/nl-NL.mjs
var $d71fd764236c0d12$exports = {};
$d71fd764236c0d12$exports = {
  "breadcrumbs": `Broodkruimels`
};

// node_modules/@react-aria/breadcrumbs/dist/pl-PL.mjs
var $f4ad3faf9f4aaec6$exports = {};
$f4ad3faf9f4aaec6$exports = {
  "breadcrumbs": `Struktura nawigacyjna`
};

// node_modules/@react-aria/breadcrumbs/dist/pt-BR.mjs
var $9703be9d55d8e9c2$exports = {};
$9703be9d55d8e9c2$exports = {
  "breadcrumbs": `Caminho detalhado`
};

// node_modules/@react-aria/breadcrumbs/dist/pt-PT.mjs
var $7e23baec8a14f309$exports = {};
$7e23baec8a14f309$exports = {
  "breadcrumbs": `Categorias`
};

// node_modules/@react-aria/breadcrumbs/dist/ro-RO.mjs
var $568f95594049d56e$exports = {};
$568f95594049d56e$exports = {
  "breadcrumbs": `Miez de pâine`
};

// node_modules/@react-aria/breadcrumbs/dist/ru-RU.mjs
var $625df06cecc70764$exports = {};
$625df06cecc70764$exports = {
  "breadcrumbs": `Навигация`
};

// node_modules/@react-aria/breadcrumbs/dist/sk-SK.mjs
var $b5a67525f3a2f594$exports = {};
$b5a67525f3a2f594$exports = {
  "breadcrumbs": `Navigačné prvky Breadcrumbs`
};

// node_modules/@react-aria/breadcrumbs/dist/sl-SI.mjs
var $16125922964febca$exports = {};
$16125922964febca$exports = {
  "breadcrumbs": `Drobtine`
};

// node_modules/@react-aria/breadcrumbs/dist/sr-SP.mjs
var $de104bf355206bcf$exports = {};
$de104bf355206bcf$exports = {
  "breadcrumbs": `Putanje navigacije`
};

// node_modules/@react-aria/breadcrumbs/dist/sv-SE.mjs
var $d5ab76bcbadc9c07$exports = {};
$d5ab76bcbadc9c07$exports = {
  "breadcrumbs": `Sökvägar`
};

// node_modules/@react-aria/breadcrumbs/dist/tr-TR.mjs
var $a6a1af5968159b55$exports = {};
$a6a1af5968159b55$exports = {
  "breadcrumbs": `İçerik haritaları`
};

// node_modules/@react-aria/breadcrumbs/dist/uk-UA.mjs
var $5204a30f0d17ffec$exports = {};
$5204a30f0d17ffec$exports = {
  "breadcrumbs": `Навігаційна стежка`
};

// node_modules/@react-aria/breadcrumbs/dist/zh-CN.mjs
var $8d15e736e12d3dfd$exports = {};
$8d15e736e12d3dfd$exports = {
  "breadcrumbs": `导航栏`
};

// node_modules/@react-aria/breadcrumbs/dist/zh-TW.mjs
var $f8c49dd804b75140$exports = {};
$f8c49dd804b75140$exports = {
  "breadcrumbs": `導覽列`
};

// node_modules/@react-aria/breadcrumbs/dist/intlStrings.mjs
var $8229b34715874f89$exports = {};
$8229b34715874f89$exports = {
  "ar-AE": $b91590b2dc47de39$exports,
  "bg-BG": $55b0693b2cf3fe91$exports,
  "cs-CZ": $6ec1ed7729e948cc$exports,
  "da-DK": $5a41bb2baa6861e4$exports,
  "de-DE": $f28bbea439e87eca$exports,
  "el-GR": $b3eca51cb720961a$exports,
  "en-US": $0b39b205118db415$exports,
  "es-ES": $f467c0ee7bfb0950$exports,
  "et-EE": $ab711d2ffb4cdf3d$exports,
  "fi-FI": $b63105d663e6f9d5$exports,
  "fr-FR": $9d2ed7be7fcdc2a1$exports,
  "he-IL": $c5704294d85c7b5d$exports,
  "hr-HR": $20c975671d6bbc63$exports,
  "hu-HU": $2569ca3917233115$exports,
  "it-IT": $caa152f7f8e96c85$exports,
  "ja-JP": $cbc6af0cc98fad10$exports,
  "ko-KR": $ad9be5d332b4d607$exports,
  "lt-LT": $659de19a00ff9617$exports,
  "lv-LV": $173e9fb4d14fe309$exports,
  "nb-NO": $d8e2640a066567a9$exports,
  "nl-NL": $d71fd764236c0d12$exports,
  "pl-PL": $f4ad3faf9f4aaec6$exports,
  "pt-BR": $9703be9d55d8e9c2$exports,
  "pt-PT": $7e23baec8a14f309$exports,
  "ro-RO": $568f95594049d56e$exports,
  "ru-RU": $625df06cecc70764$exports,
  "sk-SK": $b5a67525f3a2f594$exports,
  "sl-SI": $16125922964febca$exports,
  "sr-SP": $de104bf355206bcf$exports,
  "sv-SE": $d5ab76bcbadc9c07$exports,
  "tr-TR": $a6a1af5968159b55$exports,
  "uk-UA": $5204a30f0d17ffec$exports,
  "zh-CN": $8d15e736e12d3dfd$exports,
  "zh-TW": $f8c49dd804b75140$exports
};

// node_modules/@react-aria/i18n/dist/utils.mjs
var $148a7a147e38ea7f$var$RTL_SCRIPTS = /* @__PURE__ */ new Set([
  "Arab",
  "Syrc",
  "Samr",
  "Mand",
  "Thaa",
  "Mend",
  "Nkoo",
  "Adlm",
  "Rohg",
  "Hebr"
]);
var $148a7a147e38ea7f$var$RTL_LANGS = /* @__PURE__ */ new Set([
  "ae",
  "ar",
  "arc",
  "bcc",
  "bqi",
  "ckb",
  "dv",
  "fa",
  "glk",
  "he",
  "ku",
  "mzn",
  "nqo",
  "pnb",
  "ps",
  "sd",
  "ug",
  "ur",
  "yi"
]);
function $148a7a147e38ea7f$export$702d680b21cbd764(localeString) {
  if (Intl.Locale) {
    let locale = new Intl.Locale(localeString).maximize();
    let textInfo = typeof locale.getTextInfo === "function" ? locale.getTextInfo() : locale.textInfo;
    if (textInfo) return textInfo.direction === "rtl";
    if (locale.script) return $148a7a147e38ea7f$var$RTL_SCRIPTS.has(locale.script);
  }
  let lang = localeString.split("-")[0];
  return $148a7a147e38ea7f$var$RTL_LANGS.has(lang);
}

// node_modules/@react-aria/i18n/dist/useDefaultLocale.mjs
var import_react42 = __toESM(require_react(), 1);
var $1e5a04cdaf7d1af8$var$localeSymbol = Symbol.for("react-aria.i18n.locale");
function $1e5a04cdaf7d1af8$export$f09106e7c6677ec5() {
  let locale = typeof window !== "undefined" && window[$1e5a04cdaf7d1af8$var$localeSymbol] || typeof navigator !== "undefined" && (navigator.language || navigator.userLanguage) || "en-US";
  try {
    Intl.DateTimeFormat.supportedLocalesOf([
      locale
    ]);
  } catch {
    locale = "en-US";
  }
  return {
    locale,
    direction: (0, $148a7a147e38ea7f$export$702d680b21cbd764)(locale) ? "rtl" : "ltr"
  };
}
var $1e5a04cdaf7d1af8$var$currentLocale = $1e5a04cdaf7d1af8$export$f09106e7c6677ec5();
var $1e5a04cdaf7d1af8$var$listeners = /* @__PURE__ */ new Set();
function $1e5a04cdaf7d1af8$var$updateLocale() {
  $1e5a04cdaf7d1af8$var$currentLocale = $1e5a04cdaf7d1af8$export$f09106e7c6677ec5();
  for (let listener of $1e5a04cdaf7d1af8$var$listeners) listener($1e5a04cdaf7d1af8$var$currentLocale);
}
function $1e5a04cdaf7d1af8$export$188ec29ebc2bdc3a() {
  let isSSR = (0, $b5e257d569688ac6$export$535bd6ca7f90a273)();
  let [defaultLocale, setDefaultLocale] = (0, import_react42.useState)($1e5a04cdaf7d1af8$var$currentLocale);
  (0, import_react42.useEffect)(() => {
    if ($1e5a04cdaf7d1af8$var$listeners.size === 0) window.addEventListener("languagechange", $1e5a04cdaf7d1af8$var$updateLocale);
    $1e5a04cdaf7d1af8$var$listeners.add(setDefaultLocale);
    return () => {
      $1e5a04cdaf7d1af8$var$listeners.delete(setDefaultLocale);
      if ($1e5a04cdaf7d1af8$var$listeners.size === 0) window.removeEventListener("languagechange", $1e5a04cdaf7d1af8$var$updateLocale);
    };
  }, []);
  if (isSSR) return {
    locale: "en-US",
    direction: "ltr"
  };
  return defaultLocale;
}

// node_modules/@react-aria/i18n/dist/context.mjs
var import_react43 = __toESM(require_react(), 1);
var $18f2051aff69b9bf$var$I18nContext = (0, import_react43.default).createContext(null);
function $18f2051aff69b9bf$export$a54013f0d02a8f82(props) {
  let { locale, children } = props;
  let defaultLocale = (0, $1e5a04cdaf7d1af8$export$188ec29ebc2bdc3a)();
  let value = (0, import_react43.default).useMemo(() => {
    if (!locale) return defaultLocale;
    return {
      locale,
      direction: (0, $148a7a147e38ea7f$export$702d680b21cbd764)(locale) ? "rtl" : "ltr"
    };
  }, [
    defaultLocale,
    locale
  ]);
  return (0, import_react43.default).createElement($18f2051aff69b9bf$var$I18nContext.Provider, {
    value
  }, children);
}
function $18f2051aff69b9bf$export$43bb16f9c6d9e3f7() {
  let defaultLocale = (0, $1e5a04cdaf7d1af8$export$188ec29ebc2bdc3a)();
  let context = (0, import_react43.useContext)($18f2051aff69b9bf$var$I18nContext);
  return context || defaultLocale;
}

// node_modules/tslib/tslib.es6.mjs
var extendStatics = function(d, b) {
  extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
    d2.__proto__ = b2;
  } || function(d2, b2) {
    for (var p in b2) if (Object.prototype.hasOwnProperty.call(b2, p)) d2[p] = b2[p];
  };
  return extendStatics(d, b);
};
function __extends(d, b) {
  if (typeof b !== "function" && b !== null)
    throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
  extendStatics(d, b);
  function __() {
    this.constructor = d;
  }
  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}
var __assign = function() {
  __assign = Object.assign || function __assign2(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }
    return t;
  };
  return __assign.apply(this, arguments);
};
function __rest(s, e) {
  var t = {};
  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
    t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
}
function __spreadArray(to, from, pack) {
  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
    if (ar || !(i in from)) {
      if (!ar) ar = Array.prototype.slice.call(from, 0, i);
      ar[i] = from[i];
    }
  }
  return to.concat(ar || Array.prototype.slice.call(from));
}

// node_modules/@formatjs/fast-memoize/lib/index.js
function memoize(fn, options) {
  var cache = options && options.cache ? options.cache : cacheDefault;
  var serializer = options && options.serializer ? options.serializer : serializerDefault;
  var strategy = options && options.strategy ? options.strategy : strategyDefault;
  return strategy(fn, {
    cache,
    serializer
  });
}
function isPrimitive(value) {
  return value == null || typeof value === "number" || typeof value === "boolean";
}
function monadic(fn, cache, serializer, arg) {
  var cacheKey = isPrimitive(arg) ? arg : serializer(arg);
  var computedValue = cache.get(cacheKey);
  if (typeof computedValue === "undefined") {
    computedValue = fn.call(this, arg);
    cache.set(cacheKey, computedValue);
  }
  return computedValue;
}
function variadic(fn, cache, serializer) {
  var args = Array.prototype.slice.call(arguments, 3);
  var cacheKey = serializer(args);
  var computedValue = cache.get(cacheKey);
  if (typeof computedValue === "undefined") {
    computedValue = fn.apply(this, args);
    cache.set(cacheKey, computedValue);
  }
  return computedValue;
}
function assemble(fn, context, strategy, cache, serialize) {
  return strategy.bind(context, fn, cache, serialize);
}
function strategyDefault(fn, options) {
  var strategy = fn.length === 1 ? monadic : variadic;
  return assemble(fn, this, strategy, options.cache.create(), options.serializer);
}
function strategyVariadic(fn, options) {
  return assemble(fn, this, variadic, options.cache.create(), options.serializer);
}
function strategyMonadic(fn, options) {
  return assemble(fn, this, monadic, options.cache.create(), options.serializer);
}
var serializerDefault = function() {
  return JSON.stringify(arguments);
};
var ObjectWithoutPrototypeCache = (
  /** @class */
  function() {
    function ObjectWithoutPrototypeCache2() {
      this.cache = /* @__PURE__ */ Object.create(null);
    }
    ObjectWithoutPrototypeCache2.prototype.get = function(key) {
      return this.cache[key];
    };
    ObjectWithoutPrototypeCache2.prototype.set = function(key, value) {
      this.cache[key] = value;
    };
    return ObjectWithoutPrototypeCache2;
  }()
);
var cacheDefault = {
  create: function create() {
    return new ObjectWithoutPrototypeCache();
  }
};
var strategies = {
  variadic: strategyVariadic,
  monadic: strategyMonadic
};

// node_modules/@formatjs/icu-messageformat-parser/lib/error.js
var ErrorKind;
(function(ErrorKind2) {
  ErrorKind2[ErrorKind2["EXPECT_ARGUMENT_CLOSING_BRACE"] = 1] = "EXPECT_ARGUMENT_CLOSING_BRACE";
  ErrorKind2[ErrorKind2["EMPTY_ARGUMENT"] = 2] = "EMPTY_ARGUMENT";
  ErrorKind2[ErrorKind2["MALFORMED_ARGUMENT"] = 3] = "MALFORMED_ARGUMENT";
  ErrorKind2[ErrorKind2["EXPECT_ARGUMENT_TYPE"] = 4] = "EXPECT_ARGUMENT_TYPE";
  ErrorKind2[ErrorKind2["INVALID_ARGUMENT_TYPE"] = 5] = "INVALID_ARGUMENT_TYPE";
  ErrorKind2[ErrorKind2["EXPECT_ARGUMENT_STYLE"] = 6] = "EXPECT_ARGUMENT_STYLE";
  ErrorKind2[ErrorKind2["INVALID_NUMBER_SKELETON"] = 7] = "INVALID_NUMBER_SKELETON";
  ErrorKind2[ErrorKind2["INVALID_DATE_TIME_SKELETON"] = 8] = "INVALID_DATE_TIME_SKELETON";
  ErrorKind2[ErrorKind2["EXPECT_NUMBER_SKELETON"] = 9] = "EXPECT_NUMBER_SKELETON";
  ErrorKind2[ErrorKind2["EXPECT_DATE_TIME_SKELETON"] = 10] = "EXPECT_DATE_TIME_SKELETON";
  ErrorKind2[ErrorKind2["UNCLOSED_QUOTE_IN_ARGUMENT_STYLE"] = 11] = "UNCLOSED_QUOTE_IN_ARGUMENT_STYLE";
  ErrorKind2[ErrorKind2["EXPECT_SELECT_ARGUMENT_OPTIONS"] = 12] = "EXPECT_SELECT_ARGUMENT_OPTIONS";
  ErrorKind2[ErrorKind2["EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE"] = 13] = "EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE";
  ErrorKind2[ErrorKind2["INVALID_PLURAL_ARGUMENT_OFFSET_VALUE"] = 14] = "INVALID_PLURAL_ARGUMENT_OFFSET_VALUE";
  ErrorKind2[ErrorKind2["EXPECT_SELECT_ARGUMENT_SELECTOR"] = 15] = "EXPECT_SELECT_ARGUMENT_SELECTOR";
  ErrorKind2[ErrorKind2["EXPECT_PLURAL_ARGUMENT_SELECTOR"] = 16] = "EXPECT_PLURAL_ARGUMENT_SELECTOR";
  ErrorKind2[ErrorKind2["EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT"] = 17] = "EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT";
  ErrorKind2[ErrorKind2["EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT"] = 18] = "EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT";
  ErrorKind2[ErrorKind2["INVALID_PLURAL_ARGUMENT_SELECTOR"] = 19] = "INVALID_PLURAL_ARGUMENT_SELECTOR";
  ErrorKind2[ErrorKind2["DUPLICATE_PLURAL_ARGUMENT_SELECTOR"] = 20] = "DUPLICATE_PLURAL_ARGUMENT_SELECTOR";
  ErrorKind2[ErrorKind2["DUPLICATE_SELECT_ARGUMENT_SELECTOR"] = 21] = "DUPLICATE_SELECT_ARGUMENT_SELECTOR";
  ErrorKind2[ErrorKind2["MISSING_OTHER_CLAUSE"] = 22] = "MISSING_OTHER_CLAUSE";
  ErrorKind2[ErrorKind2["INVALID_TAG"] = 23] = "INVALID_TAG";
  ErrorKind2[ErrorKind2["INVALID_TAG_NAME"] = 25] = "INVALID_TAG_NAME";
  ErrorKind2[ErrorKind2["UNMATCHED_CLOSING_TAG"] = 26] = "UNMATCHED_CLOSING_TAG";
  ErrorKind2[ErrorKind2["UNCLOSED_TAG"] = 27] = "UNCLOSED_TAG";
})(ErrorKind || (ErrorKind = {}));

// node_modules/@formatjs/icu-messageformat-parser/lib/types.js
var TYPE;
(function(TYPE2) {
  TYPE2[TYPE2["literal"] = 0] = "literal";
  TYPE2[TYPE2["argument"] = 1] = "argument";
  TYPE2[TYPE2["number"] = 2] = "number";
  TYPE2[TYPE2["date"] = 3] = "date";
  TYPE2[TYPE2["time"] = 4] = "time";
  TYPE2[TYPE2["select"] = 5] = "select";
  TYPE2[TYPE2["plural"] = 6] = "plural";
  TYPE2[TYPE2["pound"] = 7] = "pound";
  TYPE2[TYPE2["tag"] = 8] = "tag";
})(TYPE || (TYPE = {}));
var SKELETON_TYPE;
(function(SKELETON_TYPE2) {
  SKELETON_TYPE2[SKELETON_TYPE2["number"] = 0] = "number";
  SKELETON_TYPE2[SKELETON_TYPE2["dateTime"] = 1] = "dateTime";
})(SKELETON_TYPE || (SKELETON_TYPE = {}));
function isLiteralElement(el) {
  return el.type === TYPE.literal;
}
function isArgumentElement(el) {
  return el.type === TYPE.argument;
}
function isNumberElement(el) {
  return el.type === TYPE.number;
}
function isDateElement(el) {
  return el.type === TYPE.date;
}
function isTimeElement(el) {
  return el.type === TYPE.time;
}
function isSelectElement(el) {
  return el.type === TYPE.select;
}
function isPluralElement(el) {
  return el.type === TYPE.plural;
}
function isPoundElement(el) {
  return el.type === TYPE.pound;
}
function isTagElement(el) {
  return el.type === TYPE.tag;
}
function isNumberSkeleton(el) {
  return !!(el && typeof el === "object" && el.type === SKELETON_TYPE.number);
}
function isDateTimeSkeleton(el) {
  return !!(el && typeof el === "object" && el.type === SKELETON_TYPE.dateTime);
}

// node_modules/@formatjs/icu-messageformat-parser/lib/regex.generated.js
var SPACE_SEPARATOR_REGEX = /[ \xA0\u1680\u2000-\u200A\u202F\u205F\u3000]/;

// node_modules/@formatjs/icu-skeleton-parser/lib/date-time.js
var DATE_TIME_REGEX = /(?:[Eec]{1,6}|G{1,5}|[Qq]{1,5}|(?:[yYur]+|U{1,5})|[ML]{1,5}|d{1,2}|D{1,3}|F{1}|[abB]{1,5}|[hkHK]{1,2}|w{1,2}|W{1}|m{1,2}|s{1,2}|[zZOvVxX]{1,4})(?=([^']*'[^']*')*[^']*$)/g;
function parseDateTimeSkeleton(skeleton) {
  var result = {};
  skeleton.replace(DATE_TIME_REGEX, function(match) {
    var len = match.length;
    switch (match[0]) {
      // Era
      case "G":
        result.era = len === 4 ? "long" : len === 5 ? "narrow" : "short";
        break;
      // Year
      case "y":
        result.year = len === 2 ? "2-digit" : "numeric";
        break;
      case "Y":
      case "u":
      case "U":
      case "r":
        throw new RangeError("`Y/u/U/r` (year) patterns are not supported, use `y` instead");
      // Quarter
      case "q":
      case "Q":
        throw new RangeError("`q/Q` (quarter) patterns are not supported");
      // Month
      case "M":
      case "L":
        result.month = ["numeric", "2-digit", "short", "long", "narrow"][len - 1];
        break;
      // Week
      case "w":
      case "W":
        throw new RangeError("`w/W` (week) patterns are not supported");
      case "d":
        result.day = ["numeric", "2-digit"][len - 1];
        break;
      case "D":
      case "F":
      case "g":
        throw new RangeError("`D/F/g` (day) patterns are not supported, use `d` instead");
      // Weekday
      case "E":
        result.weekday = len === 4 ? "long" : len === 5 ? "narrow" : "short";
        break;
      case "e":
        if (len < 4) {
          throw new RangeError("`e..eee` (weekday) patterns are not supported");
        }
        result.weekday = ["short", "long", "narrow", "short"][len - 4];
        break;
      case "c":
        if (len < 4) {
          throw new RangeError("`c..ccc` (weekday) patterns are not supported");
        }
        result.weekday = ["short", "long", "narrow", "short"][len - 4];
        break;
      // Period
      case "a":
        result.hour12 = true;
        break;
      case "b":
      // am, pm, noon, midnight
      case "B":
        throw new RangeError("`b/B` (period) patterns are not supported, use `a` instead");
      // Hour
      case "h":
        result.hourCycle = "h12";
        result.hour = ["numeric", "2-digit"][len - 1];
        break;
      case "H":
        result.hourCycle = "h23";
        result.hour = ["numeric", "2-digit"][len - 1];
        break;
      case "K":
        result.hourCycle = "h11";
        result.hour = ["numeric", "2-digit"][len - 1];
        break;
      case "k":
        result.hourCycle = "h24";
        result.hour = ["numeric", "2-digit"][len - 1];
        break;
      case "j":
      case "J":
      case "C":
        throw new RangeError("`j/J/C` (hour) patterns are not supported, use `h/H/K/k` instead");
      // Minute
      case "m":
        result.minute = ["numeric", "2-digit"][len - 1];
        break;
      // Second
      case "s":
        result.second = ["numeric", "2-digit"][len - 1];
        break;
      case "S":
      case "A":
        throw new RangeError("`S/A` (second) patterns are not supported, use `s` instead");
      // Zone
      case "z":
        result.timeZoneName = len < 4 ? "short" : "long";
        break;
      case "Z":
      // 1..3, 4, 5: The ISO8601 varios formats
      case "O":
      // 1, 4: milliseconds in day short, long
      case "v":
      // 1, 4: generic non-location format
      case "V":
      // 1, 2, 3, 4: time zone ID or city
      case "X":
      // 1, 2, 3, 4: The ISO8601 varios formats
      case "x":
        throw new RangeError("`Z/O/v/V/X/x` (timeZone) patterns are not supported, use `z` instead");
    }
    return "";
  });
  return result;
}

// node_modules/@formatjs/icu-skeleton-parser/lib/regex.generated.js
var WHITE_SPACE_REGEX = /[\t-\r \x85\u200E\u200F\u2028\u2029]/i;

// node_modules/@formatjs/icu-skeleton-parser/lib/number.js
function parseNumberSkeletonFromString(skeleton) {
  if (skeleton.length === 0) {
    throw new Error("Number skeleton cannot be empty");
  }
  var stringTokens = skeleton.split(WHITE_SPACE_REGEX).filter(function(x) {
    return x.length > 0;
  });
  var tokens = [];
  for (var _i = 0, stringTokens_1 = stringTokens; _i < stringTokens_1.length; _i++) {
    var stringToken = stringTokens_1[_i];
    var stemAndOptions = stringToken.split("/");
    if (stemAndOptions.length === 0) {
      throw new Error("Invalid number skeleton");
    }
    var stem = stemAndOptions[0], options = stemAndOptions.slice(1);
    for (var _a2 = 0, options_1 = options; _a2 < options_1.length; _a2++) {
      var option = options_1[_a2];
      if (option.length === 0) {
        throw new Error("Invalid number skeleton");
      }
    }
    tokens.push({ stem, options });
  }
  return tokens;
}
function icuUnitToEcma(unit) {
  return unit.replace(/^(.*?)-/, "");
}
var FRACTION_PRECISION_REGEX = /^\.(?:(0+)(\*)?|(#+)|(0+)(#+))$/g;
var SIGNIFICANT_PRECISION_REGEX = /^(@+)?(\+|#+)?[rs]?$/g;
var INTEGER_WIDTH_REGEX = /(\*)(0+)|(#+)(0+)|(0+)/g;
var CONCISE_INTEGER_WIDTH_REGEX = /^(0+)$/;
function parseSignificantPrecision(str) {
  var result = {};
  if (str[str.length - 1] === "r") {
    result.roundingPriority = "morePrecision";
  } else if (str[str.length - 1] === "s") {
    result.roundingPriority = "lessPrecision";
  }
  str.replace(SIGNIFICANT_PRECISION_REGEX, function(_, g1, g2) {
    if (typeof g2 !== "string") {
      result.minimumSignificantDigits = g1.length;
      result.maximumSignificantDigits = g1.length;
    } else if (g2 === "+") {
      result.minimumSignificantDigits = g1.length;
    } else if (g1[0] === "#") {
      result.maximumSignificantDigits = g1.length;
    } else {
      result.minimumSignificantDigits = g1.length;
      result.maximumSignificantDigits = g1.length + (typeof g2 === "string" ? g2.length : 0);
    }
    return "";
  });
  return result;
}
function parseSign(str) {
  switch (str) {
    case "sign-auto":
      return {
        signDisplay: "auto"
      };
    case "sign-accounting":
    case "()":
      return {
        currencySign: "accounting"
      };
    case "sign-always":
    case "+!":
      return {
        signDisplay: "always"
      };
    case "sign-accounting-always":
    case "()!":
      return {
        signDisplay: "always",
        currencySign: "accounting"
      };
    case "sign-except-zero":
    case "+?":
      return {
        signDisplay: "exceptZero"
      };
    case "sign-accounting-except-zero":
    case "()?":
      return {
        signDisplay: "exceptZero",
        currencySign: "accounting"
      };
    case "sign-never":
    case "+_":
      return {
        signDisplay: "never"
      };
  }
}
function parseConciseScientificAndEngineeringStem(stem) {
  var result;
  if (stem[0] === "E" && stem[1] === "E") {
    result = {
      notation: "engineering"
    };
    stem = stem.slice(2);
  } else if (stem[0] === "E") {
    result = {
      notation: "scientific"
    };
    stem = stem.slice(1);
  }
  if (result) {
    var signDisplay = stem.slice(0, 2);
    if (signDisplay === "+!") {
      result.signDisplay = "always";
      stem = stem.slice(2);
    } else if (signDisplay === "+?") {
      result.signDisplay = "exceptZero";
      stem = stem.slice(2);
    }
    if (!CONCISE_INTEGER_WIDTH_REGEX.test(stem)) {
      throw new Error("Malformed concise eng/scientific notation");
    }
    result.minimumIntegerDigits = stem.length;
  }
  return result;
}
function parseNotationOptions(opt) {
  var result = {};
  var signOpts = parseSign(opt);
  if (signOpts) {
    return signOpts;
  }
  return result;
}
function parseNumberSkeleton(tokens) {
  var result = {};
  for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {
    var token = tokens_1[_i];
    switch (token.stem) {
      case "percent":
      case "%":
        result.style = "percent";
        continue;
      case "%x100":
        result.style = "percent";
        result.scale = 100;
        continue;
      case "currency":
        result.style = "currency";
        result.currency = token.options[0];
        continue;
      case "group-off":
      case ",_":
        result.useGrouping = false;
        continue;
      case "precision-integer":
      case ".":
        result.maximumFractionDigits = 0;
        continue;
      case "measure-unit":
      case "unit":
        result.style = "unit";
        result.unit = icuUnitToEcma(token.options[0]);
        continue;
      case "compact-short":
      case "K":
        result.notation = "compact";
        result.compactDisplay = "short";
        continue;
      case "compact-long":
      case "KK":
        result.notation = "compact";
        result.compactDisplay = "long";
        continue;
      case "scientific":
        result = __assign(__assign(__assign({}, result), { notation: "scientific" }), token.options.reduce(function(all, opt2) {
          return __assign(__assign({}, all), parseNotationOptions(opt2));
        }, {}));
        continue;
      case "engineering":
        result = __assign(__assign(__assign({}, result), { notation: "engineering" }), token.options.reduce(function(all, opt2) {
          return __assign(__assign({}, all), parseNotationOptions(opt2));
        }, {}));
        continue;
      case "notation-simple":
        result.notation = "standard";
        continue;
      // https://github.com/unicode-org/icu/blob/master/icu4c/source/i18n/unicode/unumberformatter.h
      case "unit-width-narrow":
        result.currencyDisplay = "narrowSymbol";
        result.unitDisplay = "narrow";
        continue;
      case "unit-width-short":
        result.currencyDisplay = "code";
        result.unitDisplay = "short";
        continue;
      case "unit-width-full-name":
        result.currencyDisplay = "name";
        result.unitDisplay = "long";
        continue;
      case "unit-width-iso-code":
        result.currencyDisplay = "symbol";
        continue;
      case "scale":
        result.scale = parseFloat(token.options[0]);
        continue;
      case "rounding-mode-floor":
        result.roundingMode = "floor";
        continue;
      case "rounding-mode-ceiling":
        result.roundingMode = "ceil";
        continue;
      case "rounding-mode-down":
        result.roundingMode = "trunc";
        continue;
      case "rounding-mode-up":
        result.roundingMode = "expand";
        continue;
      case "rounding-mode-half-even":
        result.roundingMode = "halfEven";
        continue;
      case "rounding-mode-half-down":
        result.roundingMode = "halfTrunc";
        continue;
      case "rounding-mode-half-up":
        result.roundingMode = "halfExpand";
        continue;
      // https://unicode-org.github.io/icu/userguide/format_parse/numbers/skeletons.html#integer-width
      case "integer-width":
        if (token.options.length > 1) {
          throw new RangeError("integer-width stems only accept a single optional option");
        }
        token.options[0].replace(INTEGER_WIDTH_REGEX, function(_, g1, g2, g3, g4, g5) {
          if (g1) {
            result.minimumIntegerDigits = g2.length;
          } else if (g3 && g4) {
            throw new Error("We currently do not support maximum integer digits");
          } else if (g5) {
            throw new Error("We currently do not support exact integer digits");
          }
          return "";
        });
        continue;
    }
    if (CONCISE_INTEGER_WIDTH_REGEX.test(token.stem)) {
      result.minimumIntegerDigits = token.stem.length;
      continue;
    }
    if (FRACTION_PRECISION_REGEX.test(token.stem)) {
      if (token.options.length > 1) {
        throw new RangeError("Fraction-precision stems only accept a single optional option");
      }
      token.stem.replace(FRACTION_PRECISION_REGEX, function(_, g1, g2, g3, g4, g5) {
        if (g2 === "*") {
          result.minimumFractionDigits = g1.length;
        } else if (g3 && g3[0] === "#") {
          result.maximumFractionDigits = g3.length;
        } else if (g4 && g5) {
          result.minimumFractionDigits = g4.length;
          result.maximumFractionDigits = g4.length + g5.length;
        } else {
          result.minimumFractionDigits = g1.length;
          result.maximumFractionDigits = g1.length;
        }
        return "";
      });
      var opt = token.options[0];
      if (opt === "w") {
        result = __assign(__assign({}, result), { trailingZeroDisplay: "stripIfInteger" });
      } else if (opt) {
        result = __assign(__assign({}, result), parseSignificantPrecision(opt));
      }
      continue;
    }
    if (SIGNIFICANT_PRECISION_REGEX.test(token.stem)) {
      result = __assign(__assign({}, result), parseSignificantPrecision(token.stem));
      continue;
    }
    var signOpts = parseSign(token.stem);
    if (signOpts) {
      result = __assign(__assign({}, result), signOpts);
    }
    var conciseScientificAndEngineeringOpts = parseConciseScientificAndEngineeringStem(token.stem);
    if (conciseScientificAndEngineeringOpts) {
      result = __assign(__assign({}, result), conciseScientificAndEngineeringOpts);
    }
  }
  return result;
}

// node_modules/@formatjs/icu-messageformat-parser/lib/time-data.generated.js
var timeData = {
  "001": [
    "H",
    "h"
  ],
  "419": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "AC": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "AD": [
    "H",
    "hB"
  ],
  "AE": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "AF": [
    "H",
    "hb",
    "hB",
    "h"
  ],
  "AG": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "AI": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "AL": [
    "h",
    "H",
    "hB"
  ],
  "AM": [
    "H",
    "hB"
  ],
  "AO": [
    "H",
    "hB"
  ],
  "AR": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "AS": [
    "h",
    "H"
  ],
  "AT": [
    "H",
    "hB"
  ],
  "AU": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "AW": [
    "H",
    "hB"
  ],
  "AX": [
    "H"
  ],
  "AZ": [
    "H",
    "hB",
    "h"
  ],
  "BA": [
    "H",
    "hB",
    "h"
  ],
  "BB": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "BD": [
    "h",
    "hB",
    "H"
  ],
  "BE": [
    "H",
    "hB"
  ],
  "BF": [
    "H",
    "hB"
  ],
  "BG": [
    "H",
    "hB",
    "h"
  ],
  "BH": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "BI": [
    "H",
    "h"
  ],
  "BJ": [
    "H",
    "hB"
  ],
  "BL": [
    "H",
    "hB"
  ],
  "BM": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "BN": [
    "hb",
    "hB",
    "h",
    "H"
  ],
  "BO": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "BQ": [
    "H"
  ],
  "BR": [
    "H",
    "hB"
  ],
  "BS": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "BT": [
    "h",
    "H"
  ],
  "BW": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "BY": [
    "H",
    "h"
  ],
  "BZ": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "CA": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "CC": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "CD": [
    "hB",
    "H"
  ],
  "CF": [
    "H",
    "h",
    "hB"
  ],
  "CG": [
    "H",
    "hB"
  ],
  "CH": [
    "H",
    "hB",
    "h"
  ],
  "CI": [
    "H",
    "hB"
  ],
  "CK": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "CL": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "CM": [
    "H",
    "h",
    "hB"
  ],
  "CN": [
    "H",
    "hB",
    "hb",
    "h"
  ],
  "CO": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "CP": [
    "H"
  ],
  "CR": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "CU": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "CV": [
    "H",
    "hB"
  ],
  "CW": [
    "H",
    "hB"
  ],
  "CX": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "CY": [
    "h",
    "H",
    "hb",
    "hB"
  ],
  "CZ": [
    "H"
  ],
  "DE": [
    "H",
    "hB"
  ],
  "DG": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "DJ": [
    "h",
    "H"
  ],
  "DK": [
    "H"
  ],
  "DM": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "DO": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "DZ": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "EA": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "EC": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "EE": [
    "H",
    "hB"
  ],
  "EG": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "EH": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "ER": [
    "h",
    "H"
  ],
  "ES": [
    "H",
    "hB",
    "h",
    "hb"
  ],
  "ET": [
    "hB",
    "hb",
    "h",
    "H"
  ],
  "FI": [
    "H"
  ],
  "FJ": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "FK": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "FM": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "FO": [
    "H",
    "h"
  ],
  "FR": [
    "H",
    "hB"
  ],
  "GA": [
    "H",
    "hB"
  ],
  "GB": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "GD": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "GE": [
    "H",
    "hB",
    "h"
  ],
  "GF": [
    "H",
    "hB"
  ],
  "GG": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "GH": [
    "h",
    "H"
  ],
  "GI": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "GL": [
    "H",
    "h"
  ],
  "GM": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "GN": [
    "H",
    "hB"
  ],
  "GP": [
    "H",
    "hB"
  ],
  "GQ": [
    "H",
    "hB",
    "h",
    "hb"
  ],
  "GR": [
    "h",
    "H",
    "hb",
    "hB"
  ],
  "GT": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "GU": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "GW": [
    "H",
    "hB"
  ],
  "GY": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "HK": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "HN": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "HR": [
    "H",
    "hB"
  ],
  "HU": [
    "H",
    "h"
  ],
  "IC": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "ID": [
    "H"
  ],
  "IE": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "IL": [
    "H",
    "hB"
  ],
  "IM": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "IN": [
    "h",
    "H"
  ],
  "IO": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "IQ": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "IR": [
    "hB",
    "H"
  ],
  "IS": [
    "H"
  ],
  "IT": [
    "H",
    "hB"
  ],
  "JE": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "JM": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "JO": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "JP": [
    "H",
    "K",
    "h"
  ],
  "KE": [
    "hB",
    "hb",
    "H",
    "h"
  ],
  "KG": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "KH": [
    "hB",
    "h",
    "H",
    "hb"
  ],
  "KI": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "KM": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "KN": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "KP": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "KR": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "KW": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "KY": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "KZ": [
    "H",
    "hB"
  ],
  "LA": [
    "H",
    "hb",
    "hB",
    "h"
  ],
  "LB": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "LC": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "LI": [
    "H",
    "hB",
    "h"
  ],
  "LK": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "LR": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "LS": [
    "h",
    "H"
  ],
  "LT": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "LU": [
    "H",
    "h",
    "hB"
  ],
  "LV": [
    "H",
    "hB",
    "hb",
    "h"
  ],
  "LY": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "MA": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "MC": [
    "H",
    "hB"
  ],
  "MD": [
    "H",
    "hB"
  ],
  "ME": [
    "H",
    "hB",
    "h"
  ],
  "MF": [
    "H",
    "hB"
  ],
  "MG": [
    "H",
    "h"
  ],
  "MH": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "MK": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "ML": [
    "H"
  ],
  "MM": [
    "hB",
    "hb",
    "H",
    "h"
  ],
  "MN": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "MO": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "MP": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "MQ": [
    "H",
    "hB"
  ],
  "MR": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "MS": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "MT": [
    "H",
    "h"
  ],
  "MU": [
    "H",
    "h"
  ],
  "MV": [
    "H",
    "h"
  ],
  "MW": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "MX": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "MY": [
    "hb",
    "hB",
    "h",
    "H"
  ],
  "MZ": [
    "H",
    "hB"
  ],
  "NA": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "NC": [
    "H",
    "hB"
  ],
  "NE": [
    "H"
  ],
  "NF": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "NG": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "NI": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "NL": [
    "H",
    "hB"
  ],
  "NO": [
    "H",
    "h"
  ],
  "NP": [
    "H",
    "h",
    "hB"
  ],
  "NR": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "NU": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "NZ": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "OM": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "PA": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "PE": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "PF": [
    "H",
    "h",
    "hB"
  ],
  "PG": [
    "h",
    "H"
  ],
  "PH": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "PK": [
    "h",
    "hB",
    "H"
  ],
  "PL": [
    "H",
    "h"
  ],
  "PM": [
    "H",
    "hB"
  ],
  "PN": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "PR": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "PS": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "PT": [
    "H",
    "hB"
  ],
  "PW": [
    "h",
    "H"
  ],
  "PY": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "QA": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "RE": [
    "H",
    "hB"
  ],
  "RO": [
    "H",
    "hB"
  ],
  "RS": [
    "H",
    "hB",
    "h"
  ],
  "RU": [
    "H"
  ],
  "RW": [
    "H",
    "h"
  ],
  "SA": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "SB": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "SC": [
    "H",
    "h",
    "hB"
  ],
  "SD": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "SE": [
    "H"
  ],
  "SG": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "SH": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "SI": [
    "H",
    "hB"
  ],
  "SJ": [
    "H"
  ],
  "SK": [
    "H"
  ],
  "SL": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "SM": [
    "H",
    "h",
    "hB"
  ],
  "SN": [
    "H",
    "h",
    "hB"
  ],
  "SO": [
    "h",
    "H"
  ],
  "SR": [
    "H",
    "hB"
  ],
  "SS": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "ST": [
    "H",
    "hB"
  ],
  "SV": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "SX": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "SY": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "SZ": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "TA": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "TC": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "TD": [
    "h",
    "H",
    "hB"
  ],
  "TF": [
    "H",
    "h",
    "hB"
  ],
  "TG": [
    "H",
    "hB"
  ],
  "TH": [
    "H",
    "h"
  ],
  "TJ": [
    "H",
    "h"
  ],
  "TL": [
    "H",
    "hB",
    "hb",
    "h"
  ],
  "TM": [
    "H",
    "h"
  ],
  "TN": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "TO": [
    "h",
    "H"
  ],
  "TR": [
    "H",
    "hB"
  ],
  "TT": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "TW": [
    "hB",
    "hb",
    "h",
    "H"
  ],
  "TZ": [
    "hB",
    "hb",
    "H",
    "h"
  ],
  "UA": [
    "H",
    "hB",
    "h"
  ],
  "UG": [
    "hB",
    "hb",
    "H",
    "h"
  ],
  "UM": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "US": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "UY": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "UZ": [
    "H",
    "hB",
    "h"
  ],
  "VA": [
    "H",
    "h",
    "hB"
  ],
  "VC": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "VE": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "VG": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "VI": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "VN": [
    "H",
    "h"
  ],
  "VU": [
    "h",
    "H"
  ],
  "WF": [
    "H",
    "hB"
  ],
  "WS": [
    "h",
    "H"
  ],
  "XK": [
    "H",
    "hB",
    "h"
  ],
  "YE": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "YT": [
    "H",
    "hB"
  ],
  "ZA": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "ZM": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "ZW": [
    "H",
    "h"
  ],
  "af-ZA": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "ar-001": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "ca-ES": [
    "H",
    "h",
    "hB"
  ],
  "en-001": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "en-HK": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "en-IL": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "en-MY": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "es-BR": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "es-ES": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "es-GQ": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "fr-CA": [
    "H",
    "h",
    "hB"
  ],
  "gl-ES": [
    "H",
    "h",
    "hB"
  ],
  "gu-IN": [
    "hB",
    "hb",
    "h",
    "H"
  ],
  "hi-IN": [
    "hB",
    "h",
    "H"
  ],
  "it-CH": [
    "H",
    "h",
    "hB"
  ],
  "it-IT": [
    "H",
    "h",
    "hB"
  ],
  "kn-IN": [
    "hB",
    "h",
    "H"
  ],
  "ml-IN": [
    "hB",
    "h",
    "H"
  ],
  "mr-IN": [
    "hB",
    "hb",
    "h",
    "H"
  ],
  "pa-IN": [
    "hB",
    "hb",
    "h",
    "H"
  ],
  "ta-IN": [
    "hB",
    "h",
    "hb",
    "H"
  ],
  "te-IN": [
    "hB",
    "h",
    "H"
  ],
  "zu-ZA": [
    "H",
    "hB",
    "hb",
    "h"
  ]
};

// node_modules/@formatjs/icu-messageformat-parser/lib/date-time-pattern-generator.js
function getBestPattern(skeleton, locale) {
  var skeletonCopy = "";
  for (var patternPos = 0; patternPos < skeleton.length; patternPos++) {
    var patternChar = skeleton.charAt(patternPos);
    if (patternChar === "j") {
      var extraLength = 0;
      while (patternPos + 1 < skeleton.length && skeleton.charAt(patternPos + 1) === patternChar) {
        extraLength++;
        patternPos++;
      }
      var hourLen = 1 + (extraLength & 1);
      var dayPeriodLen = extraLength < 2 ? 1 : 3 + (extraLength >> 1);
      var dayPeriodChar = "a";
      var hourChar = getDefaultHourSymbolFromLocale(locale);
      if (hourChar == "H" || hourChar == "k") {
        dayPeriodLen = 0;
      }
      while (dayPeriodLen-- > 0) {
        skeletonCopy += dayPeriodChar;
      }
      while (hourLen-- > 0) {
        skeletonCopy = hourChar + skeletonCopy;
      }
    } else if (patternChar === "J") {
      skeletonCopy += "H";
    } else {
      skeletonCopy += patternChar;
    }
  }
  return skeletonCopy;
}
function getDefaultHourSymbolFromLocale(locale) {
  var hourCycle = locale.hourCycle;
  if (hourCycle === void 0 && // @ts-ignore hourCycle(s) is not identified yet
  locale.hourCycles && // @ts-ignore
  locale.hourCycles.length) {
    hourCycle = locale.hourCycles[0];
  }
  if (hourCycle) {
    switch (hourCycle) {
      case "h24":
        return "k";
      case "h23":
        return "H";
      case "h12":
        return "h";
      case "h11":
        return "K";
      default:
        throw new Error("Invalid hourCycle");
    }
  }
  var languageTag = locale.language;
  var regionTag;
  if (languageTag !== "root") {
    regionTag = locale.maximize().region;
  }
  var hourCycles = timeData[regionTag || ""] || timeData[languageTag || ""] || timeData["".concat(languageTag, "-001")] || timeData["001"];
  return hourCycles[0];
}

// node_modules/@formatjs/icu-messageformat-parser/lib/parser.js
var _a;
var SPACE_SEPARATOR_START_REGEX = new RegExp("^".concat(SPACE_SEPARATOR_REGEX.source, "*"));
var SPACE_SEPARATOR_END_REGEX = new RegExp("".concat(SPACE_SEPARATOR_REGEX.source, "*$"));
function createLocation(start, end) {
  return { start, end };
}
var hasNativeStartsWith = !!String.prototype.startsWith && "_a".startsWith("a", 1);
var hasNativeFromCodePoint = !!String.fromCodePoint;
var hasNativeFromEntries = !!Object.fromEntries;
var hasNativeCodePointAt = !!String.prototype.codePointAt;
var hasTrimStart = !!String.prototype.trimStart;
var hasTrimEnd = !!String.prototype.trimEnd;
var hasNativeIsSafeInteger = !!Number.isSafeInteger;
var isSafeInteger = hasNativeIsSafeInteger ? Number.isSafeInteger : function(n) {
  return typeof n === "number" && isFinite(n) && Math.floor(n) === n && Math.abs(n) <= 9007199254740991;
};
var REGEX_SUPPORTS_U_AND_Y = true;
try {
  re = RE("([^\\p{White_Space}\\p{Pattern_Syntax}]*)", "yu");
  REGEX_SUPPORTS_U_AND_Y = ((_a = re.exec("a")) === null || _a === void 0 ? void 0 : _a[0]) === "a";
} catch (_) {
  REGEX_SUPPORTS_U_AND_Y = false;
}
var re;
var startsWith = hasNativeStartsWith ? (
  // Native
  function startsWith2(s, search, position) {
    return s.startsWith(search, position);
  }
) : (
  // For IE11
  function startsWith3(s, search, position) {
    return s.slice(position, position + search.length) === search;
  }
);
var fromCodePoint = hasNativeFromCodePoint ? String.fromCodePoint : (
  // IE11
  function fromCodePoint2() {
    var codePoints = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      codePoints[_i] = arguments[_i];
    }
    var elements = "";
    var length = codePoints.length;
    var i = 0;
    var code;
    while (length > i) {
      code = codePoints[i++];
      if (code > 1114111)
        throw RangeError(code + " is not a valid code point");
      elements += code < 65536 ? String.fromCharCode(code) : String.fromCharCode(((code -= 65536) >> 10) + 55296, code % 1024 + 56320);
    }
    return elements;
  }
);
var fromEntries = (
  // native
  hasNativeFromEntries ? Object.fromEntries : (
    // Ponyfill
    function fromEntries2(entries) {
      var obj = {};
      for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {
        var _a2 = entries_1[_i], k = _a2[0], v = _a2[1];
        obj[k] = v;
      }
      return obj;
    }
  )
);
var codePointAt = hasNativeCodePointAt ? (
  // Native
  function codePointAt2(s, index) {
    return s.codePointAt(index);
  }
) : (
  // IE 11
  function codePointAt3(s, index) {
    var size = s.length;
    if (index < 0 || index >= size) {
      return void 0;
    }
    var first = s.charCodeAt(index);
    var second;
    return first < 55296 || first > 56319 || index + 1 === size || (second = s.charCodeAt(index + 1)) < 56320 || second > 57343 ? first : (first - 55296 << 10) + (second - 56320) + 65536;
  }
);
var trimStart = hasTrimStart ? (
  // Native
  function trimStart2(s) {
    return s.trimStart();
  }
) : (
  // Ponyfill
  function trimStart3(s) {
    return s.replace(SPACE_SEPARATOR_START_REGEX, "");
  }
);
var trimEnd = hasTrimEnd ? (
  // Native
  function trimEnd2(s) {
    return s.trimEnd();
  }
) : (
  // Ponyfill
  function trimEnd3(s) {
    return s.replace(SPACE_SEPARATOR_END_REGEX, "");
  }
);
function RE(s, flag) {
  return new RegExp(s, flag);
}
var matchIdentifierAtIndex;
if (REGEX_SUPPORTS_U_AND_Y) {
  IDENTIFIER_PREFIX_RE_1 = RE("([^\\p{White_Space}\\p{Pattern_Syntax}]*)", "yu");
  matchIdentifierAtIndex = function matchIdentifierAtIndex2(s, index) {
    var _a2;
    IDENTIFIER_PREFIX_RE_1.lastIndex = index;
    var match = IDENTIFIER_PREFIX_RE_1.exec(s);
    return (_a2 = match[1]) !== null && _a2 !== void 0 ? _a2 : "";
  };
} else {
  matchIdentifierAtIndex = function matchIdentifierAtIndex2(s, index) {
    var match = [];
    while (true) {
      var c = codePointAt(s, index);
      if (c === void 0 || _isWhiteSpace(c) || _isPatternSyntax(c)) {
        break;
      }
      match.push(c);
      index += c >= 65536 ? 2 : 1;
    }
    return fromCodePoint.apply(void 0, match);
  };
}
var IDENTIFIER_PREFIX_RE_1;
var Parser = (
  /** @class */
  function() {
    function Parser2(message, options) {
      if (options === void 0) {
        options = {};
      }
      this.message = message;
      this.position = { offset: 0, line: 1, column: 1 };
      this.ignoreTag = !!options.ignoreTag;
      this.locale = options.locale;
      this.requiresOtherClause = !!options.requiresOtherClause;
      this.shouldParseSkeletons = !!options.shouldParseSkeletons;
    }
    Parser2.prototype.parse = function() {
      if (this.offset() !== 0) {
        throw Error("parser can only be used once");
      }
      return this.parseMessage(0, "", false);
    };
    Parser2.prototype.parseMessage = function(nestingLevel, parentArgType, expectingCloseTag) {
      var elements = [];
      while (!this.isEOF()) {
        var char = this.char();
        if (char === 123) {
          var result = this.parseArgument(nestingLevel, expectingCloseTag);
          if (result.err) {
            return result;
          }
          elements.push(result.val);
        } else if (char === 125 && nestingLevel > 0) {
          break;
        } else if (char === 35 && (parentArgType === "plural" || parentArgType === "selectordinal")) {
          var position = this.clonePosition();
          this.bump();
          elements.push({
            type: TYPE.pound,
            location: createLocation(position, this.clonePosition())
          });
        } else if (char === 60 && !this.ignoreTag && this.peek() === 47) {
          if (expectingCloseTag) {
            break;
          } else {
            return this.error(ErrorKind.UNMATCHED_CLOSING_TAG, createLocation(this.clonePosition(), this.clonePosition()));
          }
        } else if (char === 60 && !this.ignoreTag && _isAlpha(this.peek() || 0)) {
          var result = this.parseTag(nestingLevel, parentArgType);
          if (result.err) {
            return result;
          }
          elements.push(result.val);
        } else {
          var result = this.parseLiteral(nestingLevel, parentArgType);
          if (result.err) {
            return result;
          }
          elements.push(result.val);
        }
      }
      return { val: elements, err: null };
    };
    Parser2.prototype.parseTag = function(nestingLevel, parentArgType) {
      var startPosition = this.clonePosition();
      this.bump();
      var tagName = this.parseTagName();
      this.bumpSpace();
      if (this.bumpIf("/>")) {
        return {
          val: {
            type: TYPE.literal,
            value: "<".concat(tagName, "/>"),
            location: createLocation(startPosition, this.clonePosition())
          },
          err: null
        };
      } else if (this.bumpIf(">")) {
        var childrenResult = this.parseMessage(nestingLevel + 1, parentArgType, true);
        if (childrenResult.err) {
          return childrenResult;
        }
        var children = childrenResult.val;
        var endTagStartPosition = this.clonePosition();
        if (this.bumpIf("</")) {
          if (this.isEOF() || !_isAlpha(this.char())) {
            return this.error(ErrorKind.INVALID_TAG, createLocation(endTagStartPosition, this.clonePosition()));
          }
          var closingTagNameStartPosition = this.clonePosition();
          var closingTagName = this.parseTagName();
          if (tagName !== closingTagName) {
            return this.error(ErrorKind.UNMATCHED_CLOSING_TAG, createLocation(closingTagNameStartPosition, this.clonePosition()));
          }
          this.bumpSpace();
          if (!this.bumpIf(">")) {
            return this.error(ErrorKind.INVALID_TAG, createLocation(endTagStartPosition, this.clonePosition()));
          }
          return {
            val: {
              type: TYPE.tag,
              value: tagName,
              children,
              location: createLocation(startPosition, this.clonePosition())
            },
            err: null
          };
        } else {
          return this.error(ErrorKind.UNCLOSED_TAG, createLocation(startPosition, this.clonePosition()));
        }
      } else {
        return this.error(ErrorKind.INVALID_TAG, createLocation(startPosition, this.clonePosition()));
      }
    };
    Parser2.prototype.parseTagName = function() {
      var startOffset = this.offset();
      this.bump();
      while (!this.isEOF() && _isPotentialElementNameChar(this.char())) {
        this.bump();
      }
      return this.message.slice(startOffset, this.offset());
    };
    Parser2.prototype.parseLiteral = function(nestingLevel, parentArgType) {
      var start = this.clonePosition();
      var value = "";
      while (true) {
        var parseQuoteResult = this.tryParseQuote(parentArgType);
        if (parseQuoteResult) {
          value += parseQuoteResult;
          continue;
        }
        var parseUnquotedResult = this.tryParseUnquoted(nestingLevel, parentArgType);
        if (parseUnquotedResult) {
          value += parseUnquotedResult;
          continue;
        }
        var parseLeftAngleResult = this.tryParseLeftAngleBracket();
        if (parseLeftAngleResult) {
          value += parseLeftAngleResult;
          continue;
        }
        break;
      }
      var location2 = createLocation(start, this.clonePosition());
      return {
        val: { type: TYPE.literal, value, location: location2 },
        err: null
      };
    };
    Parser2.prototype.tryParseLeftAngleBracket = function() {
      if (!this.isEOF() && this.char() === 60 && (this.ignoreTag || // If at the opening tag or closing tag position, bail.
      !_isAlphaOrSlash(this.peek() || 0))) {
        this.bump();
        return "<";
      }
      return null;
    };
    Parser2.prototype.tryParseQuote = function(parentArgType) {
      if (this.isEOF() || this.char() !== 39) {
        return null;
      }
      switch (this.peek()) {
        case 39:
          this.bump();
          this.bump();
          return "'";
        // '{', '<', '>', '}'
        case 123:
        case 60:
        case 62:
        case 125:
          break;
        case 35:
          if (parentArgType === "plural" || parentArgType === "selectordinal") {
            break;
          }
          return null;
        default:
          return null;
      }
      this.bump();
      var codePoints = [this.char()];
      this.bump();
      while (!this.isEOF()) {
        var ch = this.char();
        if (ch === 39) {
          if (this.peek() === 39) {
            codePoints.push(39);
            this.bump();
          } else {
            this.bump();
            break;
          }
        } else {
          codePoints.push(ch);
        }
        this.bump();
      }
      return fromCodePoint.apply(void 0, codePoints);
    };
    Parser2.prototype.tryParseUnquoted = function(nestingLevel, parentArgType) {
      if (this.isEOF()) {
        return null;
      }
      var ch = this.char();
      if (ch === 60 || ch === 123 || ch === 35 && (parentArgType === "plural" || parentArgType === "selectordinal") || ch === 125 && nestingLevel > 0) {
        return null;
      } else {
        this.bump();
        return fromCodePoint(ch);
      }
    };
    Parser2.prototype.parseArgument = function(nestingLevel, expectingCloseTag) {
      var openingBracePosition = this.clonePosition();
      this.bump();
      this.bumpSpace();
      if (this.isEOF()) {
        return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));
      }
      if (this.char() === 125) {
        this.bump();
        return this.error(ErrorKind.EMPTY_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));
      }
      var value = this.parseIdentifierIfPossible().value;
      if (!value) {
        return this.error(ErrorKind.MALFORMED_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));
      }
      this.bumpSpace();
      if (this.isEOF()) {
        return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));
      }
      switch (this.char()) {
        // Simple argument: `{name}`
        case 125: {
          this.bump();
          return {
            val: {
              type: TYPE.argument,
              // value does not include the opening and closing braces.
              value,
              location: createLocation(openingBracePosition, this.clonePosition())
            },
            err: null
          };
        }
        // Argument with options: `{name, format, ...}`
        case 44: {
          this.bump();
          this.bumpSpace();
          if (this.isEOF()) {
            return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));
          }
          return this.parseArgumentOptions(nestingLevel, expectingCloseTag, value, openingBracePosition);
        }
        default:
          return this.error(ErrorKind.MALFORMED_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));
      }
    };
    Parser2.prototype.parseIdentifierIfPossible = function() {
      var startingPosition = this.clonePosition();
      var startOffset = this.offset();
      var value = matchIdentifierAtIndex(this.message, startOffset);
      var endOffset = startOffset + value.length;
      this.bumpTo(endOffset);
      var endPosition = this.clonePosition();
      var location2 = createLocation(startingPosition, endPosition);
      return { value, location: location2 };
    };
    Parser2.prototype.parseArgumentOptions = function(nestingLevel, expectingCloseTag, value, openingBracePosition) {
      var _a2;
      var typeStartPosition = this.clonePosition();
      var argType = this.parseIdentifierIfPossible().value;
      var typeEndPosition = this.clonePosition();
      switch (argType) {
        case "":
          return this.error(ErrorKind.EXPECT_ARGUMENT_TYPE, createLocation(typeStartPosition, typeEndPosition));
        case "number":
        case "date":
        case "time": {
          this.bumpSpace();
          var styleAndLocation = null;
          if (this.bumpIf(",")) {
            this.bumpSpace();
            var styleStartPosition = this.clonePosition();
            var result = this.parseSimpleArgStyleIfPossible();
            if (result.err) {
              return result;
            }
            var style = trimEnd(result.val);
            if (style.length === 0) {
              return this.error(ErrorKind.EXPECT_ARGUMENT_STYLE, createLocation(this.clonePosition(), this.clonePosition()));
            }
            var styleLocation = createLocation(styleStartPosition, this.clonePosition());
            styleAndLocation = { style, styleLocation };
          }
          var argCloseResult = this.tryParseArgumentClose(openingBracePosition);
          if (argCloseResult.err) {
            return argCloseResult;
          }
          var location_1 = createLocation(openingBracePosition, this.clonePosition());
          if (styleAndLocation && startsWith(styleAndLocation === null || styleAndLocation === void 0 ? void 0 : styleAndLocation.style, "::", 0)) {
            var skeleton = trimStart(styleAndLocation.style.slice(2));
            if (argType === "number") {
              var result = this.parseNumberSkeletonFromString(skeleton, styleAndLocation.styleLocation);
              if (result.err) {
                return result;
              }
              return {
                val: { type: TYPE.number, value, location: location_1, style: result.val },
                err: null
              };
            } else {
              if (skeleton.length === 0) {
                return this.error(ErrorKind.EXPECT_DATE_TIME_SKELETON, location_1);
              }
              var dateTimePattern = skeleton;
              if (this.locale) {
                dateTimePattern = getBestPattern(skeleton, this.locale);
              }
              var style = {
                type: SKELETON_TYPE.dateTime,
                pattern: dateTimePattern,
                location: styleAndLocation.styleLocation,
                parsedOptions: this.shouldParseSkeletons ? parseDateTimeSkeleton(dateTimePattern) : {}
              };
              var type = argType === "date" ? TYPE.date : TYPE.time;
              return {
                val: { type, value, location: location_1, style },
                err: null
              };
            }
          }
          return {
            val: {
              type: argType === "number" ? TYPE.number : argType === "date" ? TYPE.date : TYPE.time,
              value,
              location: location_1,
              style: (_a2 = styleAndLocation === null || styleAndLocation === void 0 ? void 0 : styleAndLocation.style) !== null && _a2 !== void 0 ? _a2 : null
            },
            err: null
          };
        }
        case "plural":
        case "selectordinal":
        case "select": {
          var typeEndPosition_1 = this.clonePosition();
          this.bumpSpace();
          if (!this.bumpIf(",")) {
            return this.error(ErrorKind.EXPECT_SELECT_ARGUMENT_OPTIONS, createLocation(typeEndPosition_1, __assign({}, typeEndPosition_1)));
          }
          this.bumpSpace();
          var identifierAndLocation = this.parseIdentifierIfPossible();
          var pluralOffset = 0;
          if (argType !== "select" && identifierAndLocation.value === "offset") {
            if (!this.bumpIf(":")) {
              return this.error(ErrorKind.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE, createLocation(this.clonePosition(), this.clonePosition()));
            }
            this.bumpSpace();
            var result = this.tryParseDecimalInteger(ErrorKind.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE, ErrorKind.INVALID_PLURAL_ARGUMENT_OFFSET_VALUE);
            if (result.err) {
              return result;
            }
            this.bumpSpace();
            identifierAndLocation = this.parseIdentifierIfPossible();
            pluralOffset = result.val;
          }
          var optionsResult = this.tryParsePluralOrSelectOptions(nestingLevel, argType, expectingCloseTag, identifierAndLocation);
          if (optionsResult.err) {
            return optionsResult;
          }
          var argCloseResult = this.tryParseArgumentClose(openingBracePosition);
          if (argCloseResult.err) {
            return argCloseResult;
          }
          var location_2 = createLocation(openingBracePosition, this.clonePosition());
          if (argType === "select") {
            return {
              val: {
                type: TYPE.select,
                value,
                options: fromEntries(optionsResult.val),
                location: location_2
              },
              err: null
            };
          } else {
            return {
              val: {
                type: TYPE.plural,
                value,
                options: fromEntries(optionsResult.val),
                offset: pluralOffset,
                pluralType: argType === "plural" ? "cardinal" : "ordinal",
                location: location_2
              },
              err: null
            };
          }
        }
        default:
          return this.error(ErrorKind.INVALID_ARGUMENT_TYPE, createLocation(typeStartPosition, typeEndPosition));
      }
    };
    Parser2.prototype.tryParseArgumentClose = function(openingBracePosition) {
      if (this.isEOF() || this.char() !== 125) {
        return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));
      }
      this.bump();
      return { val: true, err: null };
    };
    Parser2.prototype.parseSimpleArgStyleIfPossible = function() {
      var nestedBraces = 0;
      var startPosition = this.clonePosition();
      while (!this.isEOF()) {
        var ch = this.char();
        switch (ch) {
          case 39: {
            this.bump();
            var apostrophePosition = this.clonePosition();
            if (!this.bumpUntil("'")) {
              return this.error(ErrorKind.UNCLOSED_QUOTE_IN_ARGUMENT_STYLE, createLocation(apostrophePosition, this.clonePosition()));
            }
            this.bump();
            break;
          }
          case 123: {
            nestedBraces += 1;
            this.bump();
            break;
          }
          case 125: {
            if (nestedBraces > 0) {
              nestedBraces -= 1;
            } else {
              return {
                val: this.message.slice(startPosition.offset, this.offset()),
                err: null
              };
            }
            break;
          }
          default:
            this.bump();
            break;
        }
      }
      return {
        val: this.message.slice(startPosition.offset, this.offset()),
        err: null
      };
    };
    Parser2.prototype.parseNumberSkeletonFromString = function(skeleton, location2) {
      var tokens = [];
      try {
        tokens = parseNumberSkeletonFromString(skeleton);
      } catch (e) {
        return this.error(ErrorKind.INVALID_NUMBER_SKELETON, location2);
      }
      return {
        val: {
          type: SKELETON_TYPE.number,
          tokens,
          location: location2,
          parsedOptions: this.shouldParseSkeletons ? parseNumberSkeleton(tokens) : {}
        },
        err: null
      };
    };
    Parser2.prototype.tryParsePluralOrSelectOptions = function(nestingLevel, parentArgType, expectCloseTag, parsedFirstIdentifier) {
      var _a2;
      var hasOtherClause = false;
      var options = [];
      var parsedSelectors = /* @__PURE__ */ new Set();
      var selector = parsedFirstIdentifier.value, selectorLocation = parsedFirstIdentifier.location;
      while (true) {
        if (selector.length === 0) {
          var startPosition = this.clonePosition();
          if (parentArgType !== "select" && this.bumpIf("=")) {
            var result = this.tryParseDecimalInteger(ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR, ErrorKind.INVALID_PLURAL_ARGUMENT_SELECTOR);
            if (result.err) {
              return result;
            }
            selectorLocation = createLocation(startPosition, this.clonePosition());
            selector = this.message.slice(startPosition.offset, this.offset());
          } else {
            break;
          }
        }
        if (parsedSelectors.has(selector)) {
          return this.error(parentArgType === "select" ? ErrorKind.DUPLICATE_SELECT_ARGUMENT_SELECTOR : ErrorKind.DUPLICATE_PLURAL_ARGUMENT_SELECTOR, selectorLocation);
        }
        if (selector === "other") {
          hasOtherClause = true;
        }
        this.bumpSpace();
        var openingBracePosition = this.clonePosition();
        if (!this.bumpIf("{")) {
          return this.error(parentArgType === "select" ? ErrorKind.EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT : ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT, createLocation(this.clonePosition(), this.clonePosition()));
        }
        var fragmentResult = this.parseMessage(nestingLevel + 1, parentArgType, expectCloseTag);
        if (fragmentResult.err) {
          return fragmentResult;
        }
        var argCloseResult = this.tryParseArgumentClose(openingBracePosition);
        if (argCloseResult.err) {
          return argCloseResult;
        }
        options.push([
          selector,
          {
            value: fragmentResult.val,
            location: createLocation(openingBracePosition, this.clonePosition())
          }
        ]);
        parsedSelectors.add(selector);
        this.bumpSpace();
        _a2 = this.parseIdentifierIfPossible(), selector = _a2.value, selectorLocation = _a2.location;
      }
      if (options.length === 0) {
        return this.error(parentArgType === "select" ? ErrorKind.EXPECT_SELECT_ARGUMENT_SELECTOR : ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR, createLocation(this.clonePosition(), this.clonePosition()));
      }
      if (this.requiresOtherClause && !hasOtherClause) {
        return this.error(ErrorKind.MISSING_OTHER_CLAUSE, createLocation(this.clonePosition(), this.clonePosition()));
      }
      return { val: options, err: null };
    };
    Parser2.prototype.tryParseDecimalInteger = function(expectNumberError, invalidNumberError) {
      var sign = 1;
      var startingPosition = this.clonePosition();
      if (this.bumpIf("+")) {
      } else if (this.bumpIf("-")) {
        sign = -1;
      }
      var hasDigits = false;
      var decimal = 0;
      while (!this.isEOF()) {
        var ch = this.char();
        if (ch >= 48 && ch <= 57) {
          hasDigits = true;
          decimal = decimal * 10 + (ch - 48);
          this.bump();
        } else {
          break;
        }
      }
      var location2 = createLocation(startingPosition, this.clonePosition());
      if (!hasDigits) {
        return this.error(expectNumberError, location2);
      }
      decimal *= sign;
      if (!isSafeInteger(decimal)) {
        return this.error(invalidNumberError, location2);
      }
      return { val: decimal, err: null };
    };
    Parser2.prototype.offset = function() {
      return this.position.offset;
    };
    Parser2.prototype.isEOF = function() {
      return this.offset() === this.message.length;
    };
    Parser2.prototype.clonePosition = function() {
      return {
        offset: this.position.offset,
        line: this.position.line,
        column: this.position.column
      };
    };
    Parser2.prototype.char = function() {
      var offset = this.position.offset;
      if (offset >= this.message.length) {
        throw Error("out of bound");
      }
      var code = codePointAt(this.message, offset);
      if (code === void 0) {
        throw Error("Offset ".concat(offset, " is at invalid UTF-16 code unit boundary"));
      }
      return code;
    };
    Parser2.prototype.error = function(kind, location2) {
      return {
        val: null,
        err: {
          kind,
          message: this.message,
          location: location2
        }
      };
    };
    Parser2.prototype.bump = function() {
      if (this.isEOF()) {
        return;
      }
      var code = this.char();
      if (code === 10) {
        this.position.line += 1;
        this.position.column = 1;
        this.position.offset += 1;
      } else {
        this.position.column += 1;
        this.position.offset += code < 65536 ? 1 : 2;
      }
    };
    Parser2.prototype.bumpIf = function(prefix) {
      if (startsWith(this.message, prefix, this.offset())) {
        for (var i = 0; i < prefix.length; i++) {
          this.bump();
        }
        return true;
      }
      return false;
    };
    Parser2.prototype.bumpUntil = function(pattern) {
      var currentOffset = this.offset();
      var index = this.message.indexOf(pattern, currentOffset);
      if (index >= 0) {
        this.bumpTo(index);
        return true;
      } else {
        this.bumpTo(this.message.length);
        return false;
      }
    };
    Parser2.prototype.bumpTo = function(targetOffset) {
      if (this.offset() > targetOffset) {
        throw Error("targetOffset ".concat(targetOffset, " must be greater than or equal to the current offset ").concat(this.offset()));
      }
      targetOffset = Math.min(targetOffset, this.message.length);
      while (true) {
        var offset = this.offset();
        if (offset === targetOffset) {
          break;
        }
        if (offset > targetOffset) {
          throw Error("targetOffset ".concat(targetOffset, " is at invalid UTF-16 code unit boundary"));
        }
        this.bump();
        if (this.isEOF()) {
          break;
        }
      }
    };
    Parser2.prototype.bumpSpace = function() {
      while (!this.isEOF() && _isWhiteSpace(this.char())) {
        this.bump();
      }
    };
    Parser2.prototype.peek = function() {
      if (this.isEOF()) {
        return null;
      }
      var code = this.char();
      var offset = this.offset();
      var nextCode = this.message.charCodeAt(offset + (code >= 65536 ? 2 : 1));
      return nextCode !== null && nextCode !== void 0 ? nextCode : null;
    };
    return Parser2;
  }()
);
function _isAlpha(codepoint) {
  return codepoint >= 97 && codepoint <= 122 || codepoint >= 65 && codepoint <= 90;
}
function _isAlphaOrSlash(codepoint) {
  return _isAlpha(codepoint) || codepoint === 47;
}
function _isPotentialElementNameChar(c) {
  return c === 45 || c === 46 || c >= 48 && c <= 57 || c === 95 || c >= 97 && c <= 122 || c >= 65 && c <= 90 || c == 183 || c >= 192 && c <= 214 || c >= 216 && c <= 246 || c >= 248 && c <= 893 || c >= 895 && c <= 8191 || c >= 8204 && c <= 8205 || c >= 8255 && c <= 8256 || c >= 8304 && c <= 8591 || c >= 11264 && c <= 12271 || c >= 12289 && c <= 55295 || c >= 63744 && c <= 64975 || c >= 65008 && c <= 65533 || c >= 65536 && c <= 983039;
}
function _isWhiteSpace(c) {
  return c >= 9 && c <= 13 || c === 32 || c === 133 || c >= 8206 && c <= 8207 || c === 8232 || c === 8233;
}
function _isPatternSyntax(c) {
  return c >= 33 && c <= 35 || c === 36 || c >= 37 && c <= 39 || c === 40 || c === 41 || c === 42 || c === 43 || c === 44 || c === 45 || c >= 46 && c <= 47 || c >= 58 && c <= 59 || c >= 60 && c <= 62 || c >= 63 && c <= 64 || c === 91 || c === 92 || c === 93 || c === 94 || c === 96 || c === 123 || c === 124 || c === 125 || c === 126 || c === 161 || c >= 162 && c <= 165 || c === 166 || c === 167 || c === 169 || c === 171 || c === 172 || c === 174 || c === 176 || c === 177 || c === 182 || c === 187 || c === 191 || c === 215 || c === 247 || c >= 8208 && c <= 8213 || c >= 8214 && c <= 8215 || c === 8216 || c === 8217 || c === 8218 || c >= 8219 && c <= 8220 || c === 8221 || c === 8222 || c === 8223 || c >= 8224 && c <= 8231 || c >= 8240 && c <= 8248 || c === 8249 || c === 8250 || c >= 8251 && c <= 8254 || c >= 8257 && c <= 8259 || c === 8260 || c === 8261 || c === 8262 || c >= 8263 && c <= 8273 || c === 8274 || c === 8275 || c >= 8277 && c <= 8286 || c >= 8592 && c <= 8596 || c >= 8597 && c <= 8601 || c >= 8602 && c <= 8603 || c >= 8604 && c <= 8607 || c === 8608 || c >= 8609 && c <= 8610 || c === 8611 || c >= 8612 && c <= 8613 || c === 8614 || c >= 8615 && c <= 8621 || c === 8622 || c >= 8623 && c <= 8653 || c >= 8654 && c <= 8655 || c >= 8656 && c <= 8657 || c === 8658 || c === 8659 || c === 8660 || c >= 8661 && c <= 8691 || c >= 8692 && c <= 8959 || c >= 8960 && c <= 8967 || c === 8968 || c === 8969 || c === 8970 || c === 8971 || c >= 8972 && c <= 8991 || c >= 8992 && c <= 8993 || c >= 8994 && c <= 9e3 || c === 9001 || c === 9002 || c >= 9003 && c <= 9083 || c === 9084 || c >= 9085 && c <= 9114 || c >= 9115 && c <= 9139 || c >= 9140 && c <= 9179 || c >= 9180 && c <= 9185 || c >= 9186 && c <= 9254 || c >= 9255 && c <= 9279 || c >= 9280 && c <= 9290 || c >= 9291 && c <= 9311 || c >= 9472 && c <= 9654 || c === 9655 || c >= 9656 && c <= 9664 || c === 9665 || c >= 9666 && c <= 9719 || c >= 9720 && c <= 9727 || c >= 9728 && c <= 9838 || c === 9839 || c >= 9840 && c <= 10087 || c === 10088 || c === 10089 || c === 10090 || c === 10091 || c === 10092 || c === 10093 || c === 10094 || c === 10095 || c === 10096 || c === 10097 || c === 10098 || c === 10099 || c === 10100 || c === 10101 || c >= 10132 && c <= 10175 || c >= 10176 && c <= 10180 || c === 10181 || c === 10182 || c >= 10183 && c <= 10213 || c === 10214 || c === 10215 || c === 10216 || c === 10217 || c === 10218 || c === 10219 || c === 10220 || c === 10221 || c === 10222 || c === 10223 || c >= 10224 && c <= 10239 || c >= 10240 && c <= 10495 || c >= 10496 && c <= 10626 || c === 10627 || c === 10628 || c === 10629 || c === 10630 || c === 10631 || c === 10632 || c === 10633 || c === 10634 || c === 10635 || c === 10636 || c === 10637 || c === 10638 || c === 10639 || c === 10640 || c === 10641 || c === 10642 || c === 10643 || c === 10644 || c === 10645 || c === 10646 || c === 10647 || c === 10648 || c >= 10649 && c <= 10711 || c === 10712 || c === 10713 || c === 10714 || c === 10715 || c >= 10716 && c <= 10747 || c === 10748 || c === 10749 || c >= 10750 && c <= 11007 || c >= 11008 && c <= 11055 || c >= 11056 && c <= 11076 || c >= 11077 && c <= 11078 || c >= 11079 && c <= 11084 || c >= 11085 && c <= 11123 || c >= 11124 && c <= 11125 || c >= 11126 && c <= 11157 || c === 11158 || c >= 11159 && c <= 11263 || c >= 11776 && c <= 11777 || c === 11778 || c === 11779 || c === 11780 || c === 11781 || c >= 11782 && c <= 11784 || c === 11785 || c === 11786 || c === 11787 || c === 11788 || c === 11789 || c >= 11790 && c <= 11798 || c === 11799 || c >= 11800 && c <= 11801 || c === 11802 || c === 11803 || c === 11804 || c === 11805 || c >= 11806 && c <= 11807 || c === 11808 || c === 11809 || c === 11810 || c === 11811 || c === 11812 || c === 11813 || c === 11814 || c === 11815 || c === 11816 || c === 11817 || c >= 11818 && c <= 11822 || c === 11823 || c >= 11824 && c <= 11833 || c >= 11834 && c <= 11835 || c >= 11836 && c <= 11839 || c === 11840 || c === 11841 || c === 11842 || c >= 11843 && c <= 11855 || c >= 11856 && c <= 11857 || c === 11858 || c >= 11859 && c <= 11903 || c >= 12289 && c <= 12291 || c === 12296 || c === 12297 || c === 12298 || c === 12299 || c === 12300 || c === 12301 || c === 12302 || c === 12303 || c === 12304 || c === 12305 || c >= 12306 && c <= 12307 || c === 12308 || c === 12309 || c === 12310 || c === 12311 || c === 12312 || c === 12313 || c === 12314 || c === 12315 || c === 12316 || c === 12317 || c >= 12318 && c <= 12319 || c === 12320 || c === 12336 || c === 64830 || c === 64831 || c >= 65093 && c <= 65094;
}

// node_modules/@formatjs/icu-messageformat-parser/lib/index.js
function pruneLocation(els) {
  els.forEach(function(el) {
    delete el.location;
    if (isSelectElement(el) || isPluralElement(el)) {
      for (var k in el.options) {
        delete el.options[k].location;
        pruneLocation(el.options[k].value);
      }
    } else if (isNumberElement(el) && isNumberSkeleton(el.style)) {
      delete el.style.location;
    } else if ((isDateElement(el) || isTimeElement(el)) && isDateTimeSkeleton(el.style)) {
      delete el.style.location;
    } else if (isTagElement(el)) {
      pruneLocation(el.children);
    }
  });
}
function parse(message, opts) {
  if (opts === void 0) {
    opts = {};
  }
  opts = __assign({ shouldParseSkeletons: true, requiresOtherClause: true }, opts);
  var result = new Parser(message, opts).parse();
  if (result.err) {
    var error = SyntaxError(ErrorKind[result.err.kind]);
    error.location = result.err.location;
    error.originalMessage = result.err.message;
    throw error;
  }
  if (!(opts === null || opts === void 0 ? void 0 : opts.captureLocation)) {
    pruneLocation(result.val);
  }
  return result.val;
}

// node_modules/intl-messageformat/lib/src/error.js
var ErrorCode;
(function(ErrorCode2) {
  ErrorCode2["MISSING_VALUE"] = "MISSING_VALUE";
  ErrorCode2["INVALID_VALUE"] = "INVALID_VALUE";
  ErrorCode2["MISSING_INTL_API"] = "MISSING_INTL_API";
})(ErrorCode || (ErrorCode = {}));
var FormatError = (
  /** @class */
  function(_super) {
    __extends(FormatError2, _super);
    function FormatError2(msg, code, originalMessage) {
      var _this = _super.call(this, msg) || this;
      _this.code = code;
      _this.originalMessage = originalMessage;
      return _this;
    }
    FormatError2.prototype.toString = function() {
      return "[formatjs Error: ".concat(this.code, "] ").concat(this.message);
    };
    return FormatError2;
  }(Error)
);
var InvalidValueError = (
  /** @class */
  function(_super) {
    __extends(InvalidValueError2, _super);
    function InvalidValueError2(variableId, value, options, originalMessage) {
      return _super.call(this, 'Invalid values for "'.concat(variableId, '": "').concat(value, '". Options are "').concat(Object.keys(options).join('", "'), '"'), ErrorCode.INVALID_VALUE, originalMessage) || this;
    }
    return InvalidValueError2;
  }(FormatError)
);
var InvalidValueTypeError = (
  /** @class */
  function(_super) {
    __extends(InvalidValueTypeError2, _super);
    function InvalidValueTypeError2(value, type, originalMessage) {
      return _super.call(this, 'Value for "'.concat(value, '" must be of type ').concat(type), ErrorCode.INVALID_VALUE, originalMessage) || this;
    }
    return InvalidValueTypeError2;
  }(FormatError)
);
var MissingValueError = (
  /** @class */
  function(_super) {
    __extends(MissingValueError2, _super);
    function MissingValueError2(variableId, originalMessage) {
      return _super.call(this, 'The intl string context variable "'.concat(variableId, '" was not provided to the string "').concat(originalMessage, '"'), ErrorCode.MISSING_VALUE, originalMessage) || this;
    }
    return MissingValueError2;
  }(FormatError)
);

// node_modules/intl-messageformat/lib/src/formatters.js
var PART_TYPE;
(function(PART_TYPE2) {
  PART_TYPE2[PART_TYPE2["literal"] = 0] = "literal";
  PART_TYPE2[PART_TYPE2["object"] = 1] = "object";
})(PART_TYPE || (PART_TYPE = {}));
function mergeLiteral(parts) {
  if (parts.length < 2) {
    return parts;
  }
  return parts.reduce(function(all, part) {
    var lastPart = all[all.length - 1];
    if (!lastPart || lastPart.type !== PART_TYPE.literal || part.type !== PART_TYPE.literal) {
      all.push(part);
    } else {
      lastPart.value += part.value;
    }
    return all;
  }, []);
}
function isFormatXMLElementFn(el) {
  return typeof el === "function";
}
function formatToParts(els, locales, formatters, formats, values, currentPluralValue, originalMessage) {
  if (els.length === 1 && isLiteralElement(els[0])) {
    return [
      {
        type: PART_TYPE.literal,
        value: els[0].value
      }
    ];
  }
  var result = [];
  for (var _i = 0, els_1 = els; _i < els_1.length; _i++) {
    var el = els_1[_i];
    if (isLiteralElement(el)) {
      result.push({
        type: PART_TYPE.literal,
        value: el.value
      });
      continue;
    }
    if (isPoundElement(el)) {
      if (typeof currentPluralValue === "number") {
        result.push({
          type: PART_TYPE.literal,
          value: formatters.getNumberFormat(locales).format(currentPluralValue)
        });
      }
      continue;
    }
    var varName = el.value;
    if (!(values && varName in values)) {
      throw new MissingValueError(varName, originalMessage);
    }
    var value = values[varName];
    if (isArgumentElement(el)) {
      if (!value || typeof value === "string" || typeof value === "number") {
        value = typeof value === "string" || typeof value === "number" ? String(value) : "";
      }
      result.push({
        type: typeof value === "string" ? PART_TYPE.literal : PART_TYPE.object,
        value
      });
      continue;
    }
    if (isDateElement(el)) {
      var style = typeof el.style === "string" ? formats.date[el.style] : isDateTimeSkeleton(el.style) ? el.style.parsedOptions : void 0;
      result.push({
        type: PART_TYPE.literal,
        value: formatters.getDateTimeFormat(locales, style).format(value)
      });
      continue;
    }
    if (isTimeElement(el)) {
      var style = typeof el.style === "string" ? formats.time[el.style] : isDateTimeSkeleton(el.style) ? el.style.parsedOptions : formats.time.medium;
      result.push({
        type: PART_TYPE.literal,
        value: formatters.getDateTimeFormat(locales, style).format(value)
      });
      continue;
    }
    if (isNumberElement(el)) {
      var style = typeof el.style === "string" ? formats.number[el.style] : isNumberSkeleton(el.style) ? el.style.parsedOptions : void 0;
      if (style && style.scale) {
        value = value * (style.scale || 1);
      }
      result.push({
        type: PART_TYPE.literal,
        value: formatters.getNumberFormat(locales, style).format(value)
      });
      continue;
    }
    if (isTagElement(el)) {
      var children = el.children, value_1 = el.value;
      var formatFn = values[value_1];
      if (!isFormatXMLElementFn(formatFn)) {
        throw new InvalidValueTypeError(value_1, "function", originalMessage);
      }
      var parts = formatToParts(children, locales, formatters, formats, values, currentPluralValue);
      var chunks = formatFn(parts.map(function(p) {
        return p.value;
      }));
      if (!Array.isArray(chunks)) {
        chunks = [chunks];
      }
      result.push.apply(result, chunks.map(function(c) {
        return {
          type: typeof c === "string" ? PART_TYPE.literal : PART_TYPE.object,
          value: c
        };
      }));
    }
    if (isSelectElement(el)) {
      var opt = el.options[value] || el.options.other;
      if (!opt) {
        throw new InvalidValueError(el.value, value, Object.keys(el.options), originalMessage);
      }
      result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values));
      continue;
    }
    if (isPluralElement(el)) {
      var opt = el.options["=".concat(value)];
      if (!opt) {
        if (!Intl.PluralRules) {
          throw new FormatError('Intl.PluralRules is not available in this environment.\nTry polyfilling it using "@formatjs/intl-pluralrules"\n', ErrorCode.MISSING_INTL_API, originalMessage);
        }
        var rule = formatters.getPluralRules(locales, { type: el.pluralType }).select(value - (el.offset || 0));
        opt = el.options[rule] || el.options.other;
      }
      if (!opt) {
        throw new InvalidValueError(el.value, value, Object.keys(el.options), originalMessage);
      }
      result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values, value - (el.offset || 0)));
      continue;
    }
  }
  return mergeLiteral(result);
}

// node_modules/intl-messageformat/lib/src/core.js
function mergeConfig(c1, c2) {
  if (!c2) {
    return c1;
  }
  return __assign(__assign(__assign({}, c1 || {}), c2 || {}), Object.keys(c1).reduce(function(all, k) {
    all[k] = __assign(__assign({}, c1[k]), c2[k] || {});
    return all;
  }, {}));
}
function mergeConfigs(defaultConfig, configs) {
  if (!configs) {
    return defaultConfig;
  }
  return Object.keys(defaultConfig).reduce(function(all, k) {
    all[k] = mergeConfig(defaultConfig[k], configs[k]);
    return all;
  }, __assign({}, defaultConfig));
}
function createFastMemoizeCache(store) {
  return {
    create: function() {
      return {
        get: function(key) {
          return store[key];
        },
        set: function(key, value) {
          store[key] = value;
        }
      };
    }
  };
}
function createDefaultFormatters(cache) {
  if (cache === void 0) {
    cache = {
      number: {},
      dateTime: {},
      pluralRules: {}
    };
  }
  return {
    getNumberFormat: memoize(function() {
      var _a2;
      var args = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }
      return new ((_a2 = Intl.NumberFormat).bind.apply(_a2, __spreadArray([void 0], args, false)))();
    }, {
      cache: createFastMemoizeCache(cache.number),
      strategy: strategies.variadic
    }),
    getDateTimeFormat: memoize(function() {
      var _a2;
      var args = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }
      return new ((_a2 = Intl.DateTimeFormat).bind.apply(_a2, __spreadArray([void 0], args, false)))();
    }, {
      cache: createFastMemoizeCache(cache.dateTime),
      strategy: strategies.variadic
    }),
    getPluralRules: memoize(function() {
      var _a2;
      var args = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }
      return new ((_a2 = Intl.PluralRules).bind.apply(_a2, __spreadArray([void 0], args, false)))();
    }, {
      cache: createFastMemoizeCache(cache.pluralRules),
      strategy: strategies.variadic
    })
  };
}
var IntlMessageFormat = (
  /** @class */
  function() {
    function IntlMessageFormat2(message, locales, overrideFormats, opts) {
      if (locales === void 0) {
        locales = IntlMessageFormat2.defaultLocale;
      }
      var _this = this;
      this.formatterCache = {
        number: {},
        dateTime: {},
        pluralRules: {}
      };
      this.format = function(values) {
        var parts = _this.formatToParts(values);
        if (parts.length === 1) {
          return parts[0].value;
        }
        var result = parts.reduce(function(all, part) {
          if (!all.length || part.type !== PART_TYPE.literal || typeof all[all.length - 1] !== "string") {
            all.push(part.value);
          } else {
            all[all.length - 1] += part.value;
          }
          return all;
        }, []);
        if (result.length <= 1) {
          return result[0] || "";
        }
        return result;
      };
      this.formatToParts = function(values) {
        return formatToParts(_this.ast, _this.locales, _this.formatters, _this.formats, values, void 0, _this.message);
      };
      this.resolvedOptions = function() {
        var _a3;
        return {
          locale: ((_a3 = _this.resolvedLocale) === null || _a3 === void 0 ? void 0 : _a3.toString()) || Intl.NumberFormat.supportedLocalesOf(_this.locales)[0]
        };
      };
      this.getAst = function() {
        return _this.ast;
      };
      this.locales = locales;
      this.resolvedLocale = IntlMessageFormat2.resolveLocale(locales);
      if (typeof message === "string") {
        this.message = message;
        if (!IntlMessageFormat2.__parse) {
          throw new TypeError("IntlMessageFormat.__parse must be set to process `message` of type `string`");
        }
        var _a2 = opts || {}, formatters = _a2.formatters, parseOpts = __rest(_a2, ["formatters"]);
        this.ast = IntlMessageFormat2.__parse(message, __assign(__assign({}, parseOpts), { locale: this.resolvedLocale }));
      } else {
        this.ast = message;
      }
      if (!Array.isArray(this.ast)) {
        throw new TypeError("A message must be provided as a String or AST.");
      }
      this.formats = mergeConfigs(IntlMessageFormat2.formats, overrideFormats);
      this.formatters = opts && opts.formatters || createDefaultFormatters(this.formatterCache);
    }
    Object.defineProperty(IntlMessageFormat2, "defaultLocale", {
      get: function() {
        if (!IntlMessageFormat2.memoizedDefaultLocale) {
          IntlMessageFormat2.memoizedDefaultLocale = new Intl.NumberFormat().resolvedOptions().locale;
        }
        return IntlMessageFormat2.memoizedDefaultLocale;
      },
      enumerable: false,
      configurable: true
    });
    IntlMessageFormat2.memoizedDefaultLocale = null;
    IntlMessageFormat2.resolveLocale = function(locales) {
      if (typeof Intl.Locale === "undefined") {
        return;
      }
      var supportedLocales = Intl.NumberFormat.supportedLocalesOf(locales);
      if (supportedLocales.length > 0) {
        return new Intl.Locale(supportedLocales[0]);
      }
      return new Intl.Locale(typeof locales === "string" ? locales : locales[0]);
    };
    IntlMessageFormat2.__parse = parse;
    IntlMessageFormat2.formats = {
      number: {
        integer: {
          maximumFractionDigits: 0
        },
        currency: {
          style: "currency"
        },
        percent: {
          style: "percent"
        }
      },
      date: {
        short: {
          month: "numeric",
          day: "numeric",
          year: "2-digit"
        },
        medium: {
          month: "short",
          day: "numeric",
          year: "numeric"
        },
        long: {
          month: "long",
          day: "numeric",
          year: "numeric"
        },
        full: {
          weekday: "long",
          month: "long",
          day: "numeric",
          year: "numeric"
        }
      },
      time: {
        short: {
          hour: "numeric",
          minute: "numeric"
        },
        medium: {
          hour: "numeric",
          minute: "numeric",
          second: "numeric"
        },
        long: {
          hour: "numeric",
          minute: "numeric",
          second: "numeric",
          timeZoneName: "short"
        },
        full: {
          hour: "numeric",
          minute: "numeric",
          second: "numeric",
          timeZoneName: "short"
        }
      }
    };
    return IntlMessageFormat2;
  }()
);

// node_modules/@react-aria/i18n/dist/useMessageFormatter.mjs
var import_react44 = __toESM(require_react(), 1);

// node_modules/@internationalized/string/dist/LocalizedStringDictionary.mjs
var $5b160d28a433310d$var$localeSymbol = Symbol.for("react-aria.i18n.locale");
var $5b160d28a433310d$var$stringsSymbol = Symbol.for("react-aria.i18n.strings");
var $5b160d28a433310d$var$cachedGlobalStrings = void 0;
var $5b160d28a433310d$export$c17fa47878dc55b6 = class _$5b160d28a433310d$export$c17fa47878dc55b6 {
  /** Returns a localized string for the given key and locale. */
  getStringForLocale(key, locale) {
    let strings = this.getStringsForLocale(locale);
    let string = strings[key];
    if (!string) throw new Error(`Could not find intl message ${key} in ${locale} locale`);
    return string;
  }
  /** Returns all localized strings for the given locale. */
  getStringsForLocale(locale) {
    let strings = this.strings[locale];
    if (!strings) {
      strings = $5b160d28a433310d$var$getStringsForLocale(locale, this.strings, this.defaultLocale);
      this.strings[locale] = strings;
    }
    return strings;
  }
  static getGlobalDictionaryForPackage(packageName) {
    if (typeof window === "undefined") return null;
    let locale = window[$5b160d28a433310d$var$localeSymbol];
    if ($5b160d28a433310d$var$cachedGlobalStrings === void 0) {
      let globalStrings = window[$5b160d28a433310d$var$stringsSymbol];
      if (!globalStrings) return null;
      $5b160d28a433310d$var$cachedGlobalStrings = {};
      for (let pkg in globalStrings) $5b160d28a433310d$var$cachedGlobalStrings[pkg] = new _$5b160d28a433310d$export$c17fa47878dc55b6({
        [locale]: globalStrings[pkg]
      }, locale);
    }
    let dictionary = $5b160d28a433310d$var$cachedGlobalStrings === null || $5b160d28a433310d$var$cachedGlobalStrings === void 0 ? void 0 : $5b160d28a433310d$var$cachedGlobalStrings[packageName];
    if (!dictionary) throw new Error(`Strings for package "${packageName}" were not included by LocalizedStringProvider. Please add it to the list passed to createLocalizedStringDictionary.`);
    return dictionary;
  }
  constructor(messages, defaultLocale = "en-US") {
    this.strings = Object.fromEntries(Object.entries(messages).filter(([, v]) => v));
    this.defaultLocale = defaultLocale;
  }
};
function $5b160d28a433310d$var$getStringsForLocale(locale, strings, defaultLocale = "en-US") {
  if (strings[locale]) return strings[locale];
  let language = $5b160d28a433310d$var$getLanguage(locale);
  if (strings[language]) return strings[language];
  for (let key in strings) {
    if (key.startsWith(language + "-")) return strings[key];
  }
  return strings[defaultLocale];
}
function $5b160d28a433310d$var$getLanguage(locale) {
  if (Intl.Locale)
    return new Intl.Locale(locale).language;
  return locale.split("-")[0];
}

// node_modules/@internationalized/string/dist/LocalizedStringFormatter.mjs
var $6db58dc88e78b024$var$pluralRulesCache = /* @__PURE__ */ new Map();
var $6db58dc88e78b024$var$numberFormatCache = /* @__PURE__ */ new Map();
var $6db58dc88e78b024$export$2f817fcdc4b89ae0 = class {
  /** Formats a localized string for the given key with the provided variables. */
  format(key, variables) {
    let message = this.strings.getStringForLocale(key, this.locale);
    return typeof message === "function" ? message(variables, this) : message;
  }
  plural(count, options, type = "cardinal") {
    let opt = options["=" + count];
    if (opt) return typeof opt === "function" ? opt() : opt;
    let key = this.locale + ":" + type;
    let pluralRules = $6db58dc88e78b024$var$pluralRulesCache.get(key);
    if (!pluralRules) {
      pluralRules = new Intl.PluralRules(this.locale, {
        type
      });
      $6db58dc88e78b024$var$pluralRulesCache.set(key, pluralRules);
    }
    let selected = pluralRules.select(count);
    opt = options[selected] || options.other;
    return typeof opt === "function" ? opt() : opt;
  }
  number(value) {
    let numberFormat = $6db58dc88e78b024$var$numberFormatCache.get(this.locale);
    if (!numberFormat) {
      numberFormat = new Intl.NumberFormat(this.locale);
      $6db58dc88e78b024$var$numberFormatCache.set(this.locale, numberFormat);
    }
    return numberFormat.format(value);
  }
  select(options, value) {
    let opt = options[value] || options.other;
    return typeof opt === "function" ? opt() : opt;
  }
  constructor(locale, strings) {
    this.locale = locale;
    this.strings = strings;
  }
};

// node_modules/@react-aria/i18n/dist/useLocalizedStringFormatter.mjs
var import_react45 = __toESM(require_react(), 1);
var $fca6afa0e843324b$var$cache = /* @__PURE__ */ new WeakMap();
function $fca6afa0e843324b$var$getCachedDictionary(strings) {
  let dictionary = $fca6afa0e843324b$var$cache.get(strings);
  if (!dictionary) {
    dictionary = new (0, $5b160d28a433310d$export$c17fa47878dc55b6)(strings);
    $fca6afa0e843324b$var$cache.set(strings, dictionary);
  }
  return dictionary;
}
function $fca6afa0e843324b$export$87b761675e8eaa10(strings, packageName) {
  return packageName && (0, $5b160d28a433310d$export$c17fa47878dc55b6).getGlobalDictionaryForPackage(packageName) || $fca6afa0e843324b$var$getCachedDictionary(strings);
}
function $fca6afa0e843324b$export$f12b703ca79dfbb1(strings, packageName) {
  let { locale } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let dictionary = $fca6afa0e843324b$export$87b761675e8eaa10(strings, packageName);
  return (0, import_react45.useMemo)(() => new (0, $6db58dc88e78b024$export$2f817fcdc4b89ae0)(locale, dictionary), [
    locale,
    dictionary
  ]);
}

// node_modules/@react-aria/i18n/dist/useListFormatter.mjs
var import_react46 = __toESM(require_react(), 1);

// node_modules/@internationalized/date/dist/utils.mjs
function $2b4dce13dd5a17fa$export$842a2cf37af977e1(amount, numerator) {
  return amount - numerator * Math.floor(amount / numerator);
}

// node_modules/@internationalized/date/dist/GregorianCalendar.mjs
var $3b62074eb05584b2$var$EPOCH = 1721426;
function $3b62074eb05584b2$export$f297eb839006d339(era, year, month, day) {
  year = $3b62074eb05584b2$export$c36e0ecb2d4fa69d(era, year);
  let y1 = year - 1;
  let monthOffset = -2;
  if (month <= 2) monthOffset = 0;
  else if ($3b62074eb05584b2$export$553d7fa8e3805fc0(year)) monthOffset = -1;
  return $3b62074eb05584b2$var$EPOCH - 1 + 365 * y1 + Math.floor(y1 / 4) - Math.floor(y1 / 100) + Math.floor(y1 / 400) + Math.floor((367 * month - 362) / 12 + monthOffset + day);
}
function $3b62074eb05584b2$export$553d7fa8e3805fc0(year) {
  return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);
}
function $3b62074eb05584b2$export$c36e0ecb2d4fa69d(era, year) {
  return era === "BC" ? 1 - year : year;
}
function $3b62074eb05584b2$export$4475b7e617eb123c(year) {
  let era = "AD";
  if (year <= 0) {
    era = "BC";
    year = 1 - year;
  }
  return [
    era,
    year
  ];
}
var $3b62074eb05584b2$var$daysInMonth = {
  standard: [
    31,
    28,
    31,
    30,
    31,
    30,
    31,
    31,
    30,
    31,
    30,
    31
  ],
  leapyear: [
    31,
    29,
    31,
    30,
    31,
    30,
    31,
    31,
    30,
    31,
    30,
    31
  ]
};
var $3b62074eb05584b2$export$80ee6245ec4f29ec = class {
  fromJulianDay(jd) {
    let jd0 = jd;
    let depoch = jd0 - $3b62074eb05584b2$var$EPOCH;
    let quadricent = Math.floor(depoch / 146097);
    let dqc = (0, $2b4dce13dd5a17fa$export$842a2cf37af977e1)(depoch, 146097);
    let cent = Math.floor(dqc / 36524);
    let dcent = (0, $2b4dce13dd5a17fa$export$842a2cf37af977e1)(dqc, 36524);
    let quad = Math.floor(dcent / 1461);
    let dquad = (0, $2b4dce13dd5a17fa$export$842a2cf37af977e1)(dcent, 1461);
    let yindex = Math.floor(dquad / 365);
    let extendedYear = quadricent * 400 + cent * 100 + quad * 4 + yindex + (cent !== 4 && yindex !== 4 ? 1 : 0);
    let [era, year] = $3b62074eb05584b2$export$4475b7e617eb123c(extendedYear);
    let yearDay = jd0 - $3b62074eb05584b2$export$f297eb839006d339(era, year, 1, 1);
    let leapAdj = 2;
    if (jd0 < $3b62074eb05584b2$export$f297eb839006d339(era, year, 3, 1)) leapAdj = 0;
    else if ($3b62074eb05584b2$export$553d7fa8e3805fc0(year)) leapAdj = 1;
    let month = Math.floor(((yearDay + leapAdj) * 12 + 373) / 367);
    let day = jd0 - $3b62074eb05584b2$export$f297eb839006d339(era, year, month, 1) + 1;
    return new (0, $35ea8db9cb2ccb90$export$99faa760c7908e4f)(era, year, month, day);
  }
  toJulianDay(date) {
    return $3b62074eb05584b2$export$f297eb839006d339(date.era, date.year, date.month, date.day);
  }
  getDaysInMonth(date) {
    return $3b62074eb05584b2$var$daysInMonth[$3b62074eb05584b2$export$553d7fa8e3805fc0(date.year) ? "leapyear" : "standard"][date.month - 1];
  }
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  getMonthsInYear(date) {
    return 12;
  }
  getDaysInYear(date) {
    return $3b62074eb05584b2$export$553d7fa8e3805fc0(date.year) ? 366 : 365;
  }
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  getYearsInEra(date) {
    return 9999;
  }
  getEras() {
    return [
      "BC",
      "AD"
    ];
  }
  isInverseEra(date) {
    return date.era === "BC";
  }
  balanceDate(date) {
    if (date.year <= 0) {
      date.era = date.era === "BC" ? "AD" : "BC";
      date.year = 1 - date.year;
    }
  }
  constructor() {
    this.identifier = "gregory";
  }
};

// node_modules/@internationalized/date/dist/weekStartData.mjs
var $2fe286d2fb449abb$export$7a5acbd77d414bd9 = {
  "001": 1,
  AD: 1,
  AE: 6,
  AF: 6,
  AI: 1,
  AL: 1,
  AM: 1,
  AN: 1,
  AR: 1,
  AT: 1,
  AU: 1,
  AX: 1,
  AZ: 1,
  BA: 1,
  BE: 1,
  BG: 1,
  BH: 6,
  BM: 1,
  BN: 1,
  BY: 1,
  CH: 1,
  CL: 1,
  CM: 1,
  CN: 1,
  CR: 1,
  CY: 1,
  CZ: 1,
  DE: 1,
  DJ: 6,
  DK: 1,
  DZ: 6,
  EC: 1,
  EE: 1,
  EG: 6,
  ES: 1,
  FI: 1,
  FJ: 1,
  FO: 1,
  FR: 1,
  GB: 1,
  GE: 1,
  GF: 1,
  GP: 1,
  GR: 1,
  HR: 1,
  HU: 1,
  IE: 1,
  IQ: 6,
  IR: 6,
  IS: 1,
  IT: 1,
  JO: 6,
  KG: 1,
  KW: 6,
  KZ: 1,
  LB: 1,
  LI: 1,
  LK: 1,
  LT: 1,
  LU: 1,
  LV: 1,
  LY: 6,
  MC: 1,
  MD: 1,
  ME: 1,
  MK: 1,
  MN: 1,
  MQ: 1,
  MV: 5,
  MY: 1,
  NL: 1,
  NO: 1,
  NZ: 1,
  OM: 6,
  PL: 1,
  QA: 6,
  RE: 1,
  RO: 1,
  RS: 1,
  RU: 1,
  SD: 6,
  SE: 1,
  SI: 1,
  SK: 1,
  SM: 1,
  SY: 6,
  TJ: 1,
  TM: 1,
  TR: 1,
  UA: 1,
  UY: 1,
  UZ: 1,
  VA: 1,
  VN: 1,
  XK: 1
};

// node_modules/@internationalized/date/dist/queries.mjs
function $14e0f24ef4ac5c92$export$ea39ec197993aef0(a, b) {
  b = (0, $11d87f3f76e88657$export$b4a036af3fc0b032)(b, a.calendar);
  return a.era === b.era && a.year === b.year && a.month === b.month && a.day === b.day;
}
function $14e0f24ef4ac5c92$export$a18c89cbd24170ff(a, b) {
  b = (0, $11d87f3f76e88657$export$b4a036af3fc0b032)(b, a.calendar);
  a = $14e0f24ef4ac5c92$export$a5a3b454ada2268e(a);
  b = $14e0f24ef4ac5c92$export$a5a3b454ada2268e(b);
  return a.era === b.era && a.year === b.year && a.month === b.month;
}
function $14e0f24ef4ac5c92$export$91b62ebf2ba703ee(a, b) {
  return $14e0f24ef4ac5c92$export$dbc69fd56b53d5e(a.calendar, b.calendar) && $14e0f24ef4ac5c92$export$ea39ec197993aef0(a, b);
}
function $14e0f24ef4ac5c92$export$dbc69fd56b53d5e(a, b) {
  var _a_isEqual, _b_isEqual;
  var _a_isEqual1, _ref;
  return (_ref = (_a_isEqual1 = (_a_isEqual = a.isEqual) === null || _a_isEqual === void 0 ? void 0 : _a_isEqual.call(a, b)) !== null && _a_isEqual1 !== void 0 ? _a_isEqual1 : (_b_isEqual = b.isEqual) === null || _b_isEqual === void 0 ? void 0 : _b_isEqual.call(b, a)) !== null && _ref !== void 0 ? _ref : a.identifier === b.identifier;
}
function $14e0f24ef4ac5c92$export$629b0a497aa65267(date, timeZone) {
  return $14e0f24ef4ac5c92$export$ea39ec197993aef0(date, $14e0f24ef4ac5c92$export$d0bdf45af03a6ea3(timeZone));
}
var $14e0f24ef4ac5c92$var$DAY_MAP = {
  sun: 0,
  mon: 1,
  tue: 2,
  wed: 3,
  thu: 4,
  fri: 5,
  sat: 6
};
function $14e0f24ef4ac5c92$export$2061056d06d7cdf7(date, locale, firstDayOfWeek) {
  let julian = date.calendar.toJulianDay(date);
  let weekStart = firstDayOfWeek ? $14e0f24ef4ac5c92$var$DAY_MAP[firstDayOfWeek] : $14e0f24ef4ac5c92$var$getWeekStart(locale);
  let dayOfWeek = Math.ceil(julian + 1 - weekStart) % 7;
  if (dayOfWeek < 0) dayOfWeek += 7;
  return dayOfWeek;
}
function $14e0f24ef4ac5c92$export$461939dd4422153(timeZone) {
  return (0, $11d87f3f76e88657$export$1b96692a1ba042ac)(Date.now(), timeZone);
}
function $14e0f24ef4ac5c92$export$d0bdf45af03a6ea3(timeZone) {
  return (0, $11d87f3f76e88657$export$93522d1a439f3617)($14e0f24ef4ac5c92$export$461939dd4422153(timeZone));
}
function $14e0f24ef4ac5c92$export$68781ddf31c0090f(a, b) {
  return a.calendar.toJulianDay(a) - b.calendar.toJulianDay(b);
}
function $14e0f24ef4ac5c92$export$c19a80a9721b80f6(a, b) {
  return $14e0f24ef4ac5c92$var$timeToMs(a) - $14e0f24ef4ac5c92$var$timeToMs(b);
}
function $14e0f24ef4ac5c92$var$timeToMs(a) {
  return a.hour * 36e5 + a.minute * 6e4 + a.second * 1e3 + a.millisecond;
}
var $14e0f24ef4ac5c92$var$localTimeZone = null;
function $14e0f24ef4ac5c92$export$aa8b41735afcabd2() {
  if ($14e0f24ef4ac5c92$var$localTimeZone == null) $14e0f24ef4ac5c92$var$localTimeZone = new Intl.DateTimeFormat().resolvedOptions().timeZone;
  return $14e0f24ef4ac5c92$var$localTimeZone;
}
function $14e0f24ef4ac5c92$export$a5a3b454ada2268e(date) {
  return date.subtract({
    days: date.day - 1
  });
}
function $14e0f24ef4ac5c92$export$a2258d9c4118825c(date) {
  return date.add({
    days: date.calendar.getDaysInMonth(date) - date.day
  });
}
function $14e0f24ef4ac5c92$export$f91e89d3d0406102(date) {
  return $14e0f24ef4ac5c92$export$a5a3b454ada2268e(date.subtract({
    months: date.month - 1
  }));
}
function $14e0f24ef4ac5c92$export$5412ac11713b72ad(date) {
  if (date.calendar.getMinimumMonthInYear) return date.calendar.getMinimumMonthInYear(date);
  return 1;
}
function $14e0f24ef4ac5c92$export$b2f4953d301981d5(date) {
  if (date.calendar.getMinimumDayInMonth) return date.calendar.getMinimumDayInMonth(date);
  return 1;
}
function $14e0f24ef4ac5c92$export$42c81a444fbfb5d4(date, locale, firstDayOfWeek) {
  let dayOfWeek = $14e0f24ef4ac5c92$export$2061056d06d7cdf7(date, locale, firstDayOfWeek);
  return date.subtract({
    days: dayOfWeek
  });
}
function $14e0f24ef4ac5c92$export$ef8b6d9133084f4e(date, locale, firstDayOfWeek) {
  return $14e0f24ef4ac5c92$export$42c81a444fbfb5d4(date, locale, firstDayOfWeek).add({
    days: 6
  });
}
var $14e0f24ef4ac5c92$var$cachedRegions = /* @__PURE__ */ new Map();
function $14e0f24ef4ac5c92$var$getRegion(locale) {
  if (Intl.Locale) {
    let region = $14e0f24ef4ac5c92$var$cachedRegions.get(locale);
    if (!region) {
      region = new Intl.Locale(locale).maximize().region;
      if (region) $14e0f24ef4ac5c92$var$cachedRegions.set(locale, region);
    }
    return region;
  }
  let part = locale.split("-")[1];
  return part === "u" ? void 0 : part;
}
function $14e0f24ef4ac5c92$var$getWeekStart(locale) {
  let region = $14e0f24ef4ac5c92$var$getRegion(locale);
  return region ? (0, $2fe286d2fb449abb$export$7a5acbd77d414bd9)[region] || 0 : 0;
}
function $14e0f24ef4ac5c92$export$ccc1b2479e7dd654(date, locale, firstDayOfWeek) {
  let days = date.calendar.getDaysInMonth(date);
  return Math.ceil(($14e0f24ef4ac5c92$export$2061056d06d7cdf7($14e0f24ef4ac5c92$export$a5a3b454ada2268e(date), locale, firstDayOfWeek) + days) / 7);
}
function $14e0f24ef4ac5c92$export$5c333a116e949cdd(a, b) {
  if (a && b) return a.compare(b) <= 0 ? a : b;
  return a || b;
}
function $14e0f24ef4ac5c92$export$a75f2bff57811055(a, b) {
  if (a && b) return a.compare(b) >= 0 ? a : b;
  return a || b;
}

// node_modules/@internationalized/date/dist/conversion.mjs
function $11d87f3f76e88657$export$bd4fb2bc8bb06fb(date) {
  date = $11d87f3f76e88657$export$b4a036af3fc0b032(date, new (0, $3b62074eb05584b2$export$80ee6245ec4f29ec)());
  let year = (0, $3b62074eb05584b2$export$c36e0ecb2d4fa69d)(date.era, date.year);
  return $11d87f3f76e88657$var$epochFromParts(year, date.month, date.day, date.hour, date.minute, date.second, date.millisecond);
}
function $11d87f3f76e88657$var$epochFromParts(year, month, day, hour, minute, second, millisecond) {
  let date = /* @__PURE__ */ new Date();
  date.setUTCHours(hour, minute, second, millisecond);
  date.setUTCFullYear(year, month - 1, day);
  return date.getTime();
}
function $11d87f3f76e88657$export$59c99f3515d3493f(ms, timeZone) {
  if (timeZone === "UTC") return 0;
  if (ms > 0 && timeZone === (0, $14e0f24ef4ac5c92$export$aa8b41735afcabd2)()) return new Date(ms).getTimezoneOffset() * -6e4;
  let { year, month, day, hour, minute, second } = $11d87f3f76e88657$var$getTimeZoneParts(ms, timeZone);
  let utc = $11d87f3f76e88657$var$epochFromParts(year, month, day, hour, minute, second, 0);
  return utc - Math.floor(ms / 1e3) * 1e3;
}
var $11d87f3f76e88657$var$formattersByTimeZone = /* @__PURE__ */ new Map();
function $11d87f3f76e88657$var$getTimeZoneParts(ms, timeZone) {
  let formatter = $11d87f3f76e88657$var$formattersByTimeZone.get(timeZone);
  if (!formatter) {
    formatter = new Intl.DateTimeFormat("en-US", {
      timeZone,
      hour12: false,
      era: "short",
      year: "numeric",
      month: "numeric",
      day: "numeric",
      hour: "numeric",
      minute: "numeric",
      second: "numeric"
    });
    $11d87f3f76e88657$var$formattersByTimeZone.set(timeZone, formatter);
  }
  let parts = formatter.formatToParts(new Date(ms));
  let namedParts = {};
  for (let part of parts) if (part.type !== "literal") namedParts[part.type] = part.value;
  return {
    // Firefox returns B instead of BC... https://bugzilla.mozilla.org/show_bug.cgi?id=1752253
    year: namedParts.era === "BC" || namedParts.era === "B" ? -namedParts.year + 1 : +namedParts.year,
    month: +namedParts.month,
    day: +namedParts.day,
    hour: namedParts.hour === "24" ? 0 : +namedParts.hour,
    minute: +namedParts.minute,
    second: +namedParts.second
  };
}
var $11d87f3f76e88657$var$DAYMILLIS = 864e5;
function $11d87f3f76e88657$var$getValidWallTimes(date, timeZone, earlier, later) {
  let found = earlier === later ? [
    earlier
  ] : [
    earlier,
    later
  ];
  return found.filter((absolute) => $11d87f3f76e88657$var$isValidWallTime(date, timeZone, absolute));
}
function $11d87f3f76e88657$var$isValidWallTime(date, timeZone, absolute) {
  let parts = $11d87f3f76e88657$var$getTimeZoneParts(absolute, timeZone);
  return date.year === parts.year && date.month === parts.month && date.day === parts.day && date.hour === parts.hour && date.minute === parts.minute && date.second === parts.second;
}
function $11d87f3f76e88657$export$5107c82f94518f5c(date, timeZone, disambiguation = "compatible") {
  let dateTime = $11d87f3f76e88657$export$b21e0b124e224484(date);
  if (timeZone === "UTC") return $11d87f3f76e88657$export$bd4fb2bc8bb06fb(dateTime);
  if (timeZone === (0, $14e0f24ef4ac5c92$export$aa8b41735afcabd2)() && disambiguation === "compatible") {
    dateTime = $11d87f3f76e88657$export$b4a036af3fc0b032(dateTime, new (0, $3b62074eb05584b2$export$80ee6245ec4f29ec)());
    let date2 = /* @__PURE__ */ new Date();
    let year = (0, $3b62074eb05584b2$export$c36e0ecb2d4fa69d)(dateTime.era, dateTime.year);
    date2.setFullYear(year, dateTime.month - 1, dateTime.day);
    date2.setHours(dateTime.hour, dateTime.minute, dateTime.second, dateTime.millisecond);
    return date2.getTime();
  }
  let ms = $11d87f3f76e88657$export$bd4fb2bc8bb06fb(dateTime);
  let offsetBefore = $11d87f3f76e88657$export$59c99f3515d3493f(ms - $11d87f3f76e88657$var$DAYMILLIS, timeZone);
  let offsetAfter = $11d87f3f76e88657$export$59c99f3515d3493f(ms + $11d87f3f76e88657$var$DAYMILLIS, timeZone);
  let valid = $11d87f3f76e88657$var$getValidWallTimes(dateTime, timeZone, ms - offsetBefore, ms - offsetAfter);
  if (valid.length === 1) return valid[0];
  if (valid.length > 1) switch (disambiguation) {
    // 'compatible' means 'earlier' for "fall back" transitions
    case "compatible":
    case "earlier":
      return valid[0];
    case "later":
      return valid[valid.length - 1];
    case "reject":
      throw new RangeError("Multiple possible absolute times found");
  }
  switch (disambiguation) {
    case "earlier":
      return Math.min(ms - offsetBefore, ms - offsetAfter);
    // 'compatible' means 'later' for "spring forward" transitions
    case "compatible":
    case "later":
      return Math.max(ms - offsetBefore, ms - offsetAfter);
    case "reject":
      throw new RangeError("No such absolute time found");
  }
}
function $11d87f3f76e88657$export$e67a095c620b86fe(dateTime, timeZone, disambiguation = "compatible") {
  return new Date($11d87f3f76e88657$export$5107c82f94518f5c(dateTime, timeZone, disambiguation));
}
function $11d87f3f76e88657$export$1b96692a1ba042ac(ms, timeZone) {
  let offset = $11d87f3f76e88657$export$59c99f3515d3493f(ms, timeZone);
  let date = new Date(ms + offset);
  let year = date.getUTCFullYear();
  let month = date.getUTCMonth() + 1;
  let day = date.getUTCDate();
  let hour = date.getUTCHours();
  let minute = date.getUTCMinutes();
  let second = date.getUTCSeconds();
  let millisecond = date.getUTCMilliseconds();
  return new (0, $35ea8db9cb2ccb90$export$d3b7288e7994edea)(year < 1 ? "BC" : "AD", year < 1 ? -year + 1 : year, month, day, timeZone, offset, hour, minute, second, millisecond);
}
function $11d87f3f76e88657$export$93522d1a439f3617(dateTime) {
  return new (0, $35ea8db9cb2ccb90$export$99faa760c7908e4f)(dateTime.calendar, dateTime.era, dateTime.year, dateTime.month, dateTime.day);
}
function $11d87f3f76e88657$export$b21e0b124e224484(date, time) {
  let hour = 0, minute = 0, second = 0, millisecond = 0;
  if ("timeZone" in date) ({ hour, minute, second, millisecond } = date);
  else if ("hour" in date && !time) return date;
  if (time) ({ hour, minute, second, millisecond } = time);
  return new (0, $35ea8db9cb2ccb90$export$ca871e8dbb80966f)(date.calendar, date.era, date.year, date.month, date.day, hour, minute, second, millisecond);
}
function $11d87f3f76e88657$export$d33f79e3ffc3dc83(dateTime) {
  return new (0, $35ea8db9cb2ccb90$export$680ea196effce5f)(dateTime.hour, dateTime.minute, dateTime.second, dateTime.millisecond);
}
function $11d87f3f76e88657$export$b4a036af3fc0b032(date, calendar) {
  if ((0, $14e0f24ef4ac5c92$export$dbc69fd56b53d5e)(date.calendar, calendar)) return date;
  let calendarDate = calendar.fromJulianDay(date.calendar.toJulianDay(date));
  let copy = date.copy();
  copy.calendar = calendar;
  copy.era = calendarDate.era;
  copy.year = calendarDate.year;
  copy.month = calendarDate.month;
  copy.day = calendarDate.day;
  (0, $735220c2d4774dd3$export$c4e2ecac49351ef2)(copy);
  return copy;
}
function $11d87f3f76e88657$export$84c95a83c799e074(date, timeZone, disambiguation) {
  if (date instanceof (0, $35ea8db9cb2ccb90$export$d3b7288e7994edea)) {
    if (date.timeZone === timeZone) return date;
    return $11d87f3f76e88657$export$538b00033cc11c75(date, timeZone);
  }
  let ms = $11d87f3f76e88657$export$5107c82f94518f5c(date, timeZone, disambiguation);
  return $11d87f3f76e88657$export$1b96692a1ba042ac(ms, timeZone);
}
function $11d87f3f76e88657$export$83aac07b4c37b25(date) {
  let ms = $11d87f3f76e88657$export$bd4fb2bc8bb06fb(date) - date.offset;
  return new Date(ms);
}
function $11d87f3f76e88657$export$538b00033cc11c75(date, timeZone) {
  let ms = $11d87f3f76e88657$export$bd4fb2bc8bb06fb(date) - date.offset;
  return $11d87f3f76e88657$export$b4a036af3fc0b032($11d87f3f76e88657$export$1b96692a1ba042ac(ms, timeZone), date.calendar);
}

// node_modules/@internationalized/date/dist/manipulation.mjs
var $735220c2d4774dd3$var$ONE_HOUR = 36e5;
function $735220c2d4774dd3$export$e16d8520af44a096(date, duration) {
  let mutableDate = date.copy();
  let days = "hour" in mutableDate ? $735220c2d4774dd3$var$addTimeFields(mutableDate, duration) : 0;
  $735220c2d4774dd3$var$addYears(mutableDate, duration.years || 0);
  if (mutableDate.calendar.balanceYearMonth) mutableDate.calendar.balanceYearMonth(mutableDate, date);
  mutableDate.month += duration.months || 0;
  $735220c2d4774dd3$var$balanceYearMonth(mutableDate);
  $735220c2d4774dd3$var$constrainMonthDay(mutableDate);
  mutableDate.day += (duration.weeks || 0) * 7;
  mutableDate.day += duration.days || 0;
  mutableDate.day += days;
  $735220c2d4774dd3$var$balanceDay(mutableDate);
  if (mutableDate.calendar.balanceDate) mutableDate.calendar.balanceDate(mutableDate);
  if (mutableDate.year < 1) {
    mutableDate.year = 1;
    mutableDate.month = 1;
    mutableDate.day = 1;
  }
  let maxYear = mutableDate.calendar.getYearsInEra(mutableDate);
  if (mutableDate.year > maxYear) {
    var _mutableDate_calendar_isInverseEra, _mutableDate_calendar;
    let isInverseEra = (_mutableDate_calendar_isInverseEra = (_mutableDate_calendar = mutableDate.calendar).isInverseEra) === null || _mutableDate_calendar_isInverseEra === void 0 ? void 0 : _mutableDate_calendar_isInverseEra.call(_mutableDate_calendar, mutableDate);
    mutableDate.year = maxYear;
    mutableDate.month = isInverseEra ? 1 : mutableDate.calendar.getMonthsInYear(mutableDate);
    mutableDate.day = isInverseEra ? 1 : mutableDate.calendar.getDaysInMonth(mutableDate);
  }
  if (mutableDate.month < 1) {
    mutableDate.month = 1;
    mutableDate.day = 1;
  }
  let maxMonth = mutableDate.calendar.getMonthsInYear(mutableDate);
  if (mutableDate.month > maxMonth) {
    mutableDate.month = maxMonth;
    mutableDate.day = mutableDate.calendar.getDaysInMonth(mutableDate);
  }
  mutableDate.day = Math.max(1, Math.min(mutableDate.calendar.getDaysInMonth(mutableDate), mutableDate.day));
  return mutableDate;
}
function $735220c2d4774dd3$var$addYears(date, years) {
  var _date_calendar_isInverseEra, _date_calendar;
  if ((_date_calendar_isInverseEra = (_date_calendar = date.calendar).isInverseEra) === null || _date_calendar_isInverseEra === void 0 ? void 0 : _date_calendar_isInverseEra.call(_date_calendar, date)) years = -years;
  date.year += years;
}
function $735220c2d4774dd3$var$balanceYearMonth(date) {
  while (date.month < 1) {
    $735220c2d4774dd3$var$addYears(date, -1);
    date.month += date.calendar.getMonthsInYear(date);
  }
  let monthsInYear = 0;
  while (date.month > (monthsInYear = date.calendar.getMonthsInYear(date))) {
    date.month -= monthsInYear;
    $735220c2d4774dd3$var$addYears(date, 1);
  }
}
function $735220c2d4774dd3$var$balanceDay(date) {
  while (date.day < 1) {
    date.month--;
    $735220c2d4774dd3$var$balanceYearMonth(date);
    date.day += date.calendar.getDaysInMonth(date);
  }
  while (date.day > date.calendar.getDaysInMonth(date)) {
    date.day -= date.calendar.getDaysInMonth(date);
    date.month++;
    $735220c2d4774dd3$var$balanceYearMonth(date);
  }
}
function $735220c2d4774dd3$var$constrainMonthDay(date) {
  date.month = Math.max(1, Math.min(date.calendar.getMonthsInYear(date), date.month));
  date.day = Math.max(1, Math.min(date.calendar.getDaysInMonth(date), date.day));
}
function $735220c2d4774dd3$export$c4e2ecac49351ef2(date) {
  if (date.calendar.constrainDate) date.calendar.constrainDate(date);
  date.year = Math.max(1, Math.min(date.calendar.getYearsInEra(date), date.year));
  $735220c2d4774dd3$var$constrainMonthDay(date);
}
function $735220c2d4774dd3$export$3e2544e88a25bff8(duration) {
  let inverseDuration = {};
  for (let key in duration) if (typeof duration[key] === "number") inverseDuration[key] = -duration[key];
  return inverseDuration;
}
function $735220c2d4774dd3$export$4e2d2ead65e5f7e3(date, duration) {
  return $735220c2d4774dd3$export$e16d8520af44a096(date, $735220c2d4774dd3$export$3e2544e88a25bff8(duration));
}
function $735220c2d4774dd3$export$adaa4cf7ef1b65be(date, fields) {
  let mutableDate = date.copy();
  if (fields.era != null) mutableDate.era = fields.era;
  if (fields.year != null) mutableDate.year = fields.year;
  if (fields.month != null) mutableDate.month = fields.month;
  if (fields.day != null) mutableDate.day = fields.day;
  $735220c2d4774dd3$export$c4e2ecac49351ef2(mutableDate);
  return mutableDate;
}
function $735220c2d4774dd3$export$e5d5e1c1822b6e56(value, fields) {
  let mutableValue = value.copy();
  if (fields.hour != null) mutableValue.hour = fields.hour;
  if (fields.minute != null) mutableValue.minute = fields.minute;
  if (fields.second != null) mutableValue.second = fields.second;
  if (fields.millisecond != null) mutableValue.millisecond = fields.millisecond;
  $735220c2d4774dd3$export$7555de1e070510cb(mutableValue);
  return mutableValue;
}
function $735220c2d4774dd3$var$balanceTime(time) {
  time.second += Math.floor(time.millisecond / 1e3);
  time.millisecond = $735220c2d4774dd3$var$nonNegativeMod(time.millisecond, 1e3);
  time.minute += Math.floor(time.second / 60);
  time.second = $735220c2d4774dd3$var$nonNegativeMod(time.second, 60);
  time.hour += Math.floor(time.minute / 60);
  time.minute = $735220c2d4774dd3$var$nonNegativeMod(time.minute, 60);
  let days = Math.floor(time.hour / 24);
  time.hour = $735220c2d4774dd3$var$nonNegativeMod(time.hour, 24);
  return days;
}
function $735220c2d4774dd3$export$7555de1e070510cb(time) {
  time.millisecond = Math.max(0, Math.min(time.millisecond, 1e3));
  time.second = Math.max(0, Math.min(time.second, 59));
  time.minute = Math.max(0, Math.min(time.minute, 59));
  time.hour = Math.max(0, Math.min(time.hour, 23));
}
function $735220c2d4774dd3$var$nonNegativeMod(a, b) {
  let result = a % b;
  if (result < 0) result += b;
  return result;
}
function $735220c2d4774dd3$var$addTimeFields(time, duration) {
  time.hour += duration.hours || 0;
  time.minute += duration.minutes || 0;
  time.second += duration.seconds || 0;
  time.millisecond += duration.milliseconds || 0;
  return $735220c2d4774dd3$var$balanceTime(time);
}
function $735220c2d4774dd3$export$7ed87b6bc2506470(time, duration) {
  let res = time.copy();
  $735220c2d4774dd3$var$addTimeFields(res, duration);
  return res;
}
function $735220c2d4774dd3$export$fe34d3a381cd7501(time, duration) {
  return $735220c2d4774dd3$export$7ed87b6bc2506470(time, $735220c2d4774dd3$export$3e2544e88a25bff8(duration));
}
function $735220c2d4774dd3$export$d52ced6badfb9a4c(value, field, amount, options) {
  let mutable = value.copy();
  switch (field) {
    case "era": {
      let eras = value.calendar.getEras();
      let eraIndex = eras.indexOf(value.era);
      if (eraIndex < 0) throw new Error("Invalid era: " + value.era);
      eraIndex = $735220c2d4774dd3$var$cycleValue(eraIndex, amount, 0, eras.length - 1, options === null || options === void 0 ? void 0 : options.round);
      mutable.era = eras[eraIndex];
      $735220c2d4774dd3$export$c4e2ecac49351ef2(mutable);
      break;
    }
    case "year":
      var _mutable_calendar_isInverseEra, _mutable_calendar;
      if ((_mutable_calendar_isInverseEra = (_mutable_calendar = mutable.calendar).isInverseEra) === null || _mutable_calendar_isInverseEra === void 0 ? void 0 : _mutable_calendar_isInverseEra.call(_mutable_calendar, mutable)) amount = -amount;
      mutable.year = $735220c2d4774dd3$var$cycleValue(value.year, amount, -Infinity, 9999, options === null || options === void 0 ? void 0 : options.round);
      if (mutable.year === -Infinity) mutable.year = 1;
      if (mutable.calendar.balanceYearMonth) mutable.calendar.balanceYearMonth(mutable, value);
      break;
    case "month":
      mutable.month = $735220c2d4774dd3$var$cycleValue(value.month, amount, 1, value.calendar.getMonthsInYear(value), options === null || options === void 0 ? void 0 : options.round);
      break;
    case "day":
      mutable.day = $735220c2d4774dd3$var$cycleValue(value.day, amount, 1, value.calendar.getDaysInMonth(value), options === null || options === void 0 ? void 0 : options.round);
      break;
    default:
      throw new Error("Unsupported field " + field);
  }
  if (value.calendar.balanceDate) value.calendar.balanceDate(mutable);
  $735220c2d4774dd3$export$c4e2ecac49351ef2(mutable);
  return mutable;
}
function $735220c2d4774dd3$export$dd02b3e0007dfe28(value, field, amount, options) {
  let mutable = value.copy();
  switch (field) {
    case "hour": {
      let hours = value.hour;
      let min = 0;
      let max = 23;
      if ((options === null || options === void 0 ? void 0 : options.hourCycle) === 12) {
        let isPM = hours >= 12;
        min = isPM ? 12 : 0;
        max = isPM ? 23 : 11;
      }
      mutable.hour = $735220c2d4774dd3$var$cycleValue(hours, amount, min, max, options === null || options === void 0 ? void 0 : options.round);
      break;
    }
    case "minute":
      mutable.minute = $735220c2d4774dd3$var$cycleValue(value.minute, amount, 0, 59, options === null || options === void 0 ? void 0 : options.round);
      break;
    case "second":
      mutable.second = $735220c2d4774dd3$var$cycleValue(value.second, amount, 0, 59, options === null || options === void 0 ? void 0 : options.round);
      break;
    case "millisecond":
      mutable.millisecond = $735220c2d4774dd3$var$cycleValue(value.millisecond, amount, 0, 999, options === null || options === void 0 ? void 0 : options.round);
      break;
    default:
      throw new Error("Unsupported field " + field);
  }
  return mutable;
}
function $735220c2d4774dd3$var$cycleValue(value, amount, min, max, round = false) {
  if (round) {
    value += Math.sign(amount);
    if (value < min) value = max;
    let div = Math.abs(amount);
    if (amount > 0) value = Math.ceil(value / div) * div;
    else value = Math.floor(value / div) * div;
    if (value > max) value = min;
  } else {
    value += amount;
    if (value < min) value = max - (min - value - 1);
    else if (value > max) value = min + (value - max - 1);
  }
  return value;
}
function $735220c2d4774dd3$export$96b1d28349274637(dateTime, duration) {
  let ms;
  if (duration.years != null && duration.years !== 0 || duration.months != null && duration.months !== 0 || duration.weeks != null && duration.weeks !== 0 || duration.days != null && duration.days !== 0) {
    let res2 = $735220c2d4774dd3$export$e16d8520af44a096((0, $11d87f3f76e88657$export$b21e0b124e224484)(dateTime), {
      years: duration.years,
      months: duration.months,
      weeks: duration.weeks,
      days: duration.days
    });
    ms = (0, $11d87f3f76e88657$export$5107c82f94518f5c)(res2, dateTime.timeZone);
  } else
    ms = (0, $11d87f3f76e88657$export$bd4fb2bc8bb06fb)(dateTime) - dateTime.offset;
  ms += duration.milliseconds || 0;
  ms += (duration.seconds || 0) * 1e3;
  ms += (duration.minutes || 0) * 6e4;
  ms += (duration.hours || 0) * 36e5;
  let res = (0, $11d87f3f76e88657$export$1b96692a1ba042ac)(ms, dateTime.timeZone);
  return (0, $11d87f3f76e88657$export$b4a036af3fc0b032)(res, dateTime.calendar);
}
function $735220c2d4774dd3$export$6814caac34ca03c7(dateTime, duration) {
  return $735220c2d4774dd3$export$96b1d28349274637(dateTime, $735220c2d4774dd3$export$3e2544e88a25bff8(duration));
}
function $735220c2d4774dd3$export$9a297d111fc86b79(dateTime, field, amount, options) {
  switch (field) {
    case "hour": {
      let min = 0;
      let max = 23;
      if ((options === null || options === void 0 ? void 0 : options.hourCycle) === 12) {
        let isPM = dateTime.hour >= 12;
        min = isPM ? 12 : 0;
        max = isPM ? 23 : 11;
      }
      let plainDateTime = (0, $11d87f3f76e88657$export$b21e0b124e224484)(dateTime);
      let minDate = (0, $11d87f3f76e88657$export$b4a036af3fc0b032)($735220c2d4774dd3$export$e5d5e1c1822b6e56(plainDateTime, {
        hour: min
      }), new (0, $3b62074eb05584b2$export$80ee6245ec4f29ec)());
      let minAbsolute = [
        (0, $11d87f3f76e88657$export$5107c82f94518f5c)(minDate, dateTime.timeZone, "earlier"),
        (0, $11d87f3f76e88657$export$5107c82f94518f5c)(minDate, dateTime.timeZone, "later")
      ].filter((ms2) => (0, $11d87f3f76e88657$export$1b96692a1ba042ac)(ms2, dateTime.timeZone).day === minDate.day)[0];
      let maxDate = (0, $11d87f3f76e88657$export$b4a036af3fc0b032)($735220c2d4774dd3$export$e5d5e1c1822b6e56(plainDateTime, {
        hour: max
      }), new (0, $3b62074eb05584b2$export$80ee6245ec4f29ec)());
      let maxAbsolute = [
        (0, $11d87f3f76e88657$export$5107c82f94518f5c)(maxDate, dateTime.timeZone, "earlier"),
        (0, $11d87f3f76e88657$export$5107c82f94518f5c)(maxDate, dateTime.timeZone, "later")
      ].filter((ms2) => (0, $11d87f3f76e88657$export$1b96692a1ba042ac)(ms2, dateTime.timeZone).day === maxDate.day).pop();
      let ms = (0, $11d87f3f76e88657$export$bd4fb2bc8bb06fb)(dateTime) - dateTime.offset;
      let hours = Math.floor(ms / $735220c2d4774dd3$var$ONE_HOUR);
      let remainder = ms % $735220c2d4774dd3$var$ONE_HOUR;
      ms = $735220c2d4774dd3$var$cycleValue(hours, amount, Math.floor(minAbsolute / $735220c2d4774dd3$var$ONE_HOUR), Math.floor(maxAbsolute / $735220c2d4774dd3$var$ONE_HOUR), options === null || options === void 0 ? void 0 : options.round) * $735220c2d4774dd3$var$ONE_HOUR + remainder;
      return (0, $11d87f3f76e88657$export$b4a036af3fc0b032)((0, $11d87f3f76e88657$export$1b96692a1ba042ac)(ms, dateTime.timeZone), dateTime.calendar);
    }
    case "minute":
    case "second":
    case "millisecond":
      return $735220c2d4774dd3$export$dd02b3e0007dfe28(dateTime, field, amount, options);
    case "era":
    case "year":
    case "month":
    case "day": {
      let res = $735220c2d4774dd3$export$d52ced6badfb9a4c((0, $11d87f3f76e88657$export$b21e0b124e224484)(dateTime), field, amount, options);
      let ms = (0, $11d87f3f76e88657$export$5107c82f94518f5c)(res, dateTime.timeZone);
      return (0, $11d87f3f76e88657$export$b4a036af3fc0b032)((0, $11d87f3f76e88657$export$1b96692a1ba042ac)(ms, dateTime.timeZone), dateTime.calendar);
    }
    default:
      throw new Error("Unsupported field " + field);
  }
}
function $735220c2d4774dd3$export$31b5430eb18be4f8(dateTime, fields, disambiguation) {
  let plainDateTime = (0, $11d87f3f76e88657$export$b21e0b124e224484)(dateTime);
  let res = $735220c2d4774dd3$export$e5d5e1c1822b6e56($735220c2d4774dd3$export$adaa4cf7ef1b65be(plainDateTime, fields), fields);
  if (res.compare(plainDateTime) === 0) return dateTime;
  let ms = (0, $11d87f3f76e88657$export$5107c82f94518f5c)(res, dateTime.timeZone, disambiguation);
  return (0, $11d87f3f76e88657$export$b4a036af3fc0b032)((0, $11d87f3f76e88657$export$1b96692a1ba042ac)(ms, dateTime.timeZone), dateTime.calendar);
}

// node_modules/@internationalized/date/dist/string.mjs
var $fae977aafc393c5c$var$requiredDurationTimeGroups = [
  "hours",
  "minutes",
  "seconds"
];
var $fae977aafc393c5c$var$requiredDurationGroups = [
  "years",
  "months",
  "weeks",
  "days",
  ...$fae977aafc393c5c$var$requiredDurationTimeGroups
];
function $fae977aafc393c5c$export$f59dee82248f5ad4(time) {
  return `${String(time.hour).padStart(2, "0")}:${String(time.minute).padStart(2, "0")}:${String(time.second).padStart(2, "0")}${time.millisecond ? String(time.millisecond / 1e3).slice(1) : ""}`;
}
function $fae977aafc393c5c$export$60dfd74aa96791bd(date) {
  let gregorianDate = (0, $11d87f3f76e88657$export$b4a036af3fc0b032)(date, new (0, $3b62074eb05584b2$export$80ee6245ec4f29ec)());
  let year;
  if (gregorianDate.era === "BC") year = gregorianDate.year === 1 ? "0000" : "-" + String(Math.abs(1 - gregorianDate.year)).padStart(6, "00");
  else year = String(gregorianDate.year).padStart(4, "0");
  return `${year}-${String(gregorianDate.month).padStart(2, "0")}-${String(gregorianDate.day).padStart(2, "0")}`;
}
function $fae977aafc393c5c$export$4223de14708adc63(date) {
  return `${$fae977aafc393c5c$export$60dfd74aa96791bd(date)}T${$fae977aafc393c5c$export$f59dee82248f5ad4(date)}`;
}
function $fae977aafc393c5c$var$offsetToString(offset) {
  let sign = Math.sign(offset) < 0 ? "-" : "+";
  offset = Math.abs(offset);
  let offsetHours = Math.floor(offset / 36e5);
  let offsetMinutes = offset % 36e5 / 6e4;
  return `${sign}${String(offsetHours).padStart(2, "0")}:${String(offsetMinutes).padStart(2, "0")}`;
}
function $fae977aafc393c5c$export$bf79f1ebf4b18792(date) {
  return `${$fae977aafc393c5c$export$4223de14708adc63(date)}${$fae977aafc393c5c$var$offsetToString(date.offset)}[${date.timeZone}]`;
}

// node_modules/@internationalized/date/dist/CalendarDate.mjs
function $35ea8db9cb2ccb90$var$shiftArgs(args) {
  let calendar = typeof args[0] === "object" ? args.shift() : new (0, $3b62074eb05584b2$export$80ee6245ec4f29ec)();
  let era;
  if (typeof args[0] === "string") era = args.shift();
  else {
    let eras = calendar.getEras();
    era = eras[eras.length - 1];
  }
  let year = args.shift();
  let month = args.shift();
  let day = args.shift();
  return [
    calendar,
    era,
    year,
    month,
    day
  ];
}
var $35ea8db9cb2ccb90$var$_type = /* @__PURE__ */ new WeakMap();
var $35ea8db9cb2ccb90$export$99faa760c7908e4f = class _$35ea8db9cb2ccb90$export$99faa760c7908e4f {
  /** Returns a copy of this date. */
  copy() {
    if (this.era) return new _$35ea8db9cb2ccb90$export$99faa760c7908e4f(this.calendar, this.era, this.year, this.month, this.day);
    else return new _$35ea8db9cb2ccb90$export$99faa760c7908e4f(this.calendar, this.year, this.month, this.day);
  }
  /** Returns a new `CalendarDate` with the given duration added to it. */
  add(duration) {
    return (0, $735220c2d4774dd3$export$e16d8520af44a096)(this, duration);
  }
  /** Returns a new `CalendarDate` with the given duration subtracted from it. */
  subtract(duration) {
    return (0, $735220c2d4774dd3$export$4e2d2ead65e5f7e3)(this, duration);
  }
  /** Returns a new `CalendarDate` with the given fields set to the provided values. Other fields will be constrained accordingly. */
  set(fields) {
    return (0, $735220c2d4774dd3$export$adaa4cf7ef1b65be)(this, fields);
  }
  /**
  * Returns a new `CalendarDate` with the given field adjusted by a specified amount.
  * When the resulting value reaches the limits of the field, it wraps around.
  */
  cycle(field, amount, options) {
    return (0, $735220c2d4774dd3$export$d52ced6badfb9a4c)(this, field, amount, options);
  }
  /** Converts the date to a native JavaScript Date object, with the time set to midnight in the given time zone. */
  toDate(timeZone) {
    return (0, $11d87f3f76e88657$export$e67a095c620b86fe)(this, timeZone);
  }
  /** Converts the date to an ISO 8601 formatted string. */
  toString() {
    return (0, $fae977aafc393c5c$export$60dfd74aa96791bd)(this);
  }
  /** Compares this date with another. A negative result indicates that this date is before the given one, and a positive date indicates that it is after. */
  compare(b) {
    return (0, $14e0f24ef4ac5c92$export$68781ddf31c0090f)(this, b);
  }
  constructor(...args) {
    (0, _class_private_field_init)(this, $35ea8db9cb2ccb90$var$_type, {
      writable: true,
      value: void 0
    });
    let [calendar, era, year, month, day] = $35ea8db9cb2ccb90$var$shiftArgs(args);
    this.calendar = calendar;
    this.era = era;
    this.year = year;
    this.month = month;
    this.day = day;
    (0, $735220c2d4774dd3$export$c4e2ecac49351ef2)(this);
  }
};
var $35ea8db9cb2ccb90$var$_type1 = /* @__PURE__ */ new WeakMap();
var $35ea8db9cb2ccb90$export$680ea196effce5f = class _$35ea8db9cb2ccb90$export$680ea196effce5f {
  /** Returns a copy of this time. */
  copy() {
    return new _$35ea8db9cb2ccb90$export$680ea196effce5f(this.hour, this.minute, this.second, this.millisecond);
  }
  /** Returns a new `Time` with the given duration added to it. */
  add(duration) {
    return (0, $735220c2d4774dd3$export$7ed87b6bc2506470)(this, duration);
  }
  /** Returns a new `Time` with the given duration subtracted from it. */
  subtract(duration) {
    return (0, $735220c2d4774dd3$export$fe34d3a381cd7501)(this, duration);
  }
  /** Returns a new `Time` with the given fields set to the provided values. Other fields will be constrained accordingly. */
  set(fields) {
    return (0, $735220c2d4774dd3$export$e5d5e1c1822b6e56)(this, fields);
  }
  /**
  * Returns a new `Time` with the given field adjusted by a specified amount.
  * When the resulting value reaches the limits of the field, it wraps around.
  */
  cycle(field, amount, options) {
    return (0, $735220c2d4774dd3$export$dd02b3e0007dfe28)(this, field, amount, options);
  }
  /** Converts the time to an ISO 8601 formatted string. */
  toString() {
    return (0, $fae977aafc393c5c$export$f59dee82248f5ad4)(this);
  }
  /** Compares this time with another. A negative result indicates that this time is before the given one, and a positive time indicates that it is after. */
  compare(b) {
    return (0, $14e0f24ef4ac5c92$export$c19a80a9721b80f6)(this, b);
  }
  constructor(hour = 0, minute = 0, second = 0, millisecond = 0) {
    (0, _class_private_field_init)(this, $35ea8db9cb2ccb90$var$_type1, {
      writable: true,
      value: void 0
    });
    this.hour = hour;
    this.minute = minute;
    this.second = second;
    this.millisecond = millisecond;
    (0, $735220c2d4774dd3$export$7555de1e070510cb)(this);
  }
};
var $35ea8db9cb2ccb90$var$_type2 = /* @__PURE__ */ new WeakMap();
var $35ea8db9cb2ccb90$export$ca871e8dbb80966f = class _$35ea8db9cb2ccb90$export$ca871e8dbb80966f {
  /** Returns a copy of this date. */
  copy() {
    if (this.era) return new _$35ea8db9cb2ccb90$export$ca871e8dbb80966f(this.calendar, this.era, this.year, this.month, this.day, this.hour, this.minute, this.second, this.millisecond);
    else return new _$35ea8db9cb2ccb90$export$ca871e8dbb80966f(this.calendar, this.year, this.month, this.day, this.hour, this.minute, this.second, this.millisecond);
  }
  /** Returns a new `CalendarDateTime` with the given duration added to it. */
  add(duration) {
    return (0, $735220c2d4774dd3$export$e16d8520af44a096)(this, duration);
  }
  /** Returns a new `CalendarDateTime` with the given duration subtracted from it. */
  subtract(duration) {
    return (0, $735220c2d4774dd3$export$4e2d2ead65e5f7e3)(this, duration);
  }
  /** Returns a new `CalendarDateTime` with the given fields set to the provided values. Other fields will be constrained accordingly. */
  set(fields) {
    return (0, $735220c2d4774dd3$export$adaa4cf7ef1b65be)((0, $735220c2d4774dd3$export$e5d5e1c1822b6e56)(this, fields), fields);
  }
  /**
  * Returns a new `CalendarDateTime` with the given field adjusted by a specified amount.
  * When the resulting value reaches the limits of the field, it wraps around.
  */
  cycle(field, amount, options) {
    switch (field) {
      case "era":
      case "year":
      case "month":
      case "day":
        return (0, $735220c2d4774dd3$export$d52ced6badfb9a4c)(this, field, amount, options);
      default:
        return (0, $735220c2d4774dd3$export$dd02b3e0007dfe28)(this, field, amount, options);
    }
  }
  /** Converts the date to a native JavaScript Date object in the given time zone. */
  toDate(timeZone, disambiguation) {
    return (0, $11d87f3f76e88657$export$e67a095c620b86fe)(this, timeZone, disambiguation);
  }
  /** Converts the date to an ISO 8601 formatted string. */
  toString() {
    return (0, $fae977aafc393c5c$export$4223de14708adc63)(this);
  }
  /** Compares this date with another. A negative result indicates that this date is before the given one, and a positive date indicates that it is after. */
  compare(b) {
    let res = (0, $14e0f24ef4ac5c92$export$68781ddf31c0090f)(this, b);
    if (res === 0) return (0, $14e0f24ef4ac5c92$export$c19a80a9721b80f6)(this, (0, $11d87f3f76e88657$export$b21e0b124e224484)(b));
    return res;
  }
  constructor(...args) {
    (0, _class_private_field_init)(this, $35ea8db9cb2ccb90$var$_type2, {
      writable: true,
      value: void 0
    });
    let [calendar, era, year, month, day] = $35ea8db9cb2ccb90$var$shiftArgs(args);
    this.calendar = calendar;
    this.era = era;
    this.year = year;
    this.month = month;
    this.day = day;
    this.hour = args.shift() || 0;
    this.minute = args.shift() || 0;
    this.second = args.shift() || 0;
    this.millisecond = args.shift() || 0;
    (0, $735220c2d4774dd3$export$c4e2ecac49351ef2)(this);
  }
};
var $35ea8db9cb2ccb90$var$_type3 = /* @__PURE__ */ new WeakMap();
var $35ea8db9cb2ccb90$export$d3b7288e7994edea = class _$35ea8db9cb2ccb90$export$d3b7288e7994edea {
  /** Returns a copy of this date. */
  copy() {
    if (this.era) return new _$35ea8db9cb2ccb90$export$d3b7288e7994edea(this.calendar, this.era, this.year, this.month, this.day, this.timeZone, this.offset, this.hour, this.minute, this.second, this.millisecond);
    else return new _$35ea8db9cb2ccb90$export$d3b7288e7994edea(this.calendar, this.year, this.month, this.day, this.timeZone, this.offset, this.hour, this.minute, this.second, this.millisecond);
  }
  /** Returns a new `ZonedDateTime` with the given duration added to it. */
  add(duration) {
    return (0, $735220c2d4774dd3$export$96b1d28349274637)(this, duration);
  }
  /** Returns a new `ZonedDateTime` with the given duration subtracted from it. */
  subtract(duration) {
    return (0, $735220c2d4774dd3$export$6814caac34ca03c7)(this, duration);
  }
  /** Returns a new `ZonedDateTime` with the given fields set to the provided values. Other fields will be constrained accordingly. */
  set(fields, disambiguation) {
    return (0, $735220c2d4774dd3$export$31b5430eb18be4f8)(this, fields, disambiguation);
  }
  /**
  * Returns a new `ZonedDateTime` with the given field adjusted by a specified amount.
  * When the resulting value reaches the limits of the field, it wraps around.
  */
  cycle(field, amount, options) {
    return (0, $735220c2d4774dd3$export$9a297d111fc86b79)(this, field, amount, options);
  }
  /** Converts the date to a native JavaScript Date object. */
  toDate() {
    return (0, $11d87f3f76e88657$export$83aac07b4c37b25)(this);
  }
  /** Converts the date to an ISO 8601 formatted string, including the UTC offset and time zone identifier. */
  toString() {
    return (0, $fae977aafc393c5c$export$bf79f1ebf4b18792)(this);
  }
  /** Converts the date to an ISO 8601 formatted string in UTC. */
  toAbsoluteString() {
    return this.toDate().toISOString();
  }
  /** Compares this date with another. A negative result indicates that this date is before the given one, and a positive date indicates that it is after. */
  compare(b) {
    return this.toDate().getTime() - (0, $11d87f3f76e88657$export$84c95a83c799e074)(b, this.timeZone).toDate().getTime();
  }
  constructor(...args) {
    (0, _class_private_field_init)(this, $35ea8db9cb2ccb90$var$_type3, {
      writable: true,
      value: void 0
    });
    let [calendar, era, year, month, day] = $35ea8db9cb2ccb90$var$shiftArgs(args);
    let timeZone = args.shift();
    let offset = args.shift();
    this.calendar = calendar;
    this.era = era;
    this.year = year;
    this.month = month;
    this.day = day;
    this.timeZone = timeZone;
    this.offset = offset;
    this.hour = args.shift() || 0;
    this.minute = args.shift() || 0;
    this.second = args.shift() || 0;
    this.millisecond = args.shift() || 0;
    (0, $735220c2d4774dd3$export$c4e2ecac49351ef2)(this);
  }
};

// node_modules/@internationalized/date/dist/JapaneseCalendar.mjs
var $62225008020f0a13$var$ERA_START_DATES = [
  [
    1868,
    9,
    8
  ],
  [
    1912,
    7,
    30
  ],
  [
    1926,
    12,
    25
  ],
  [
    1989,
    1,
    8
  ],
  [
    2019,
    5,
    1
  ]
];
var $62225008020f0a13$var$ERA_END_DATES = [
  [
    1912,
    7,
    29
  ],
  [
    1926,
    12,
    24
  ],
  [
    1989,
    1,
    7
  ],
  [
    2019,
    4,
    30
  ]
];
var $62225008020f0a13$var$ERA_ADDENDS = [
  1867,
  1911,
  1925,
  1988,
  2018
];
var $62225008020f0a13$var$ERA_NAMES = [
  "meiji",
  "taisho",
  "showa",
  "heisei",
  "reiwa"
];
function $62225008020f0a13$var$findEraFromGregorianDate(date) {
  const idx = $62225008020f0a13$var$ERA_START_DATES.findIndex(([year, month, day]) => {
    if (date.year < year) return true;
    if (date.year === year && date.month < month) return true;
    if (date.year === year && date.month === month && date.day < day) return true;
    return false;
  });
  if (idx === -1) return $62225008020f0a13$var$ERA_START_DATES.length - 1;
  if (idx === 0) return 0;
  return idx - 1;
}
function $62225008020f0a13$var$toGregorian(date) {
  let eraAddend = $62225008020f0a13$var$ERA_ADDENDS[$62225008020f0a13$var$ERA_NAMES.indexOf(date.era)];
  if (!eraAddend) throw new Error("Unknown era: " + date.era);
  return new (0, $35ea8db9cb2ccb90$export$99faa760c7908e4f)(date.year + eraAddend, date.month, date.day);
}
var $62225008020f0a13$export$b746ab2b60cdffbf = class extends (0, $3b62074eb05584b2$export$80ee6245ec4f29ec) {
  fromJulianDay(jd) {
    let date = super.fromJulianDay(jd);
    let era = $62225008020f0a13$var$findEraFromGregorianDate(date);
    return new (0, $35ea8db9cb2ccb90$export$99faa760c7908e4f)(this, $62225008020f0a13$var$ERA_NAMES[era], date.year - $62225008020f0a13$var$ERA_ADDENDS[era], date.month, date.day);
  }
  toJulianDay(date) {
    return super.toJulianDay($62225008020f0a13$var$toGregorian(date));
  }
  balanceDate(date) {
    let gregorianDate = $62225008020f0a13$var$toGregorian(date);
    let era = $62225008020f0a13$var$findEraFromGregorianDate(gregorianDate);
    if ($62225008020f0a13$var$ERA_NAMES[era] !== date.era) {
      date.era = $62225008020f0a13$var$ERA_NAMES[era];
      date.year = gregorianDate.year - $62225008020f0a13$var$ERA_ADDENDS[era];
    }
    this.constrainDate(date);
  }
  constrainDate(date) {
    let idx = $62225008020f0a13$var$ERA_NAMES.indexOf(date.era);
    let end = $62225008020f0a13$var$ERA_END_DATES[idx];
    if (end != null) {
      let [endYear, endMonth, endDay] = end;
      let maxYear = endYear - $62225008020f0a13$var$ERA_ADDENDS[idx];
      date.year = Math.max(1, Math.min(maxYear, date.year));
      if (date.year === maxYear) {
        date.month = Math.min(endMonth, date.month);
        if (date.month === endMonth) date.day = Math.min(endDay, date.day);
      }
    }
    if (date.year === 1 && idx >= 0) {
      let [, startMonth, startDay] = $62225008020f0a13$var$ERA_START_DATES[idx];
      date.month = Math.max(startMonth, date.month);
      if (date.month === startMonth) date.day = Math.max(startDay, date.day);
    }
  }
  getEras() {
    return $62225008020f0a13$var$ERA_NAMES;
  }
  getYearsInEra(date) {
    let era = $62225008020f0a13$var$ERA_NAMES.indexOf(date.era);
    let cur = $62225008020f0a13$var$ERA_START_DATES[era];
    let next = $62225008020f0a13$var$ERA_START_DATES[era + 1];
    if (next == null)
      return 9999 - cur[0] + 1;
    let years = next[0] - cur[0];
    if (date.month < next[1] || date.month === next[1] && date.day < next[2]) years++;
    return years;
  }
  getDaysInMonth(date) {
    return super.getDaysInMonth($62225008020f0a13$var$toGregorian(date));
  }
  getMinimumMonthInYear(date) {
    let start = $62225008020f0a13$var$getMinimums(date);
    return start ? start[1] : 1;
  }
  getMinimumDayInMonth(date) {
    let start = $62225008020f0a13$var$getMinimums(date);
    return start && date.month === start[1] ? start[2] : 1;
  }
  constructor(...args) {
    super(...args), this.identifier = "japanese";
  }
};
function $62225008020f0a13$var$getMinimums(date) {
  if (date.year === 1) {
    let idx = $62225008020f0a13$var$ERA_NAMES.indexOf(date.era);
    return $62225008020f0a13$var$ERA_START_DATES[idx];
  }
}

// node_modules/@internationalized/date/dist/BuddhistCalendar.mjs
var $8d73d47422ca7302$var$BUDDHIST_ERA_START = -543;
var $8d73d47422ca7302$export$42d20a78301dee44 = class extends (0, $3b62074eb05584b2$export$80ee6245ec4f29ec) {
  fromJulianDay(jd) {
    let gregorianDate = super.fromJulianDay(jd);
    let year = (0, $3b62074eb05584b2$export$c36e0ecb2d4fa69d)(gregorianDate.era, gregorianDate.year);
    return new (0, $35ea8db9cb2ccb90$export$99faa760c7908e4f)(this, year - $8d73d47422ca7302$var$BUDDHIST_ERA_START, gregorianDate.month, gregorianDate.day);
  }
  toJulianDay(date) {
    return super.toJulianDay($8d73d47422ca7302$var$toGregorian(date));
  }
  getEras() {
    return [
      "BE"
    ];
  }
  getDaysInMonth(date) {
    return super.getDaysInMonth($8d73d47422ca7302$var$toGregorian(date));
  }
  balanceDate() {
  }
  constructor(...args) {
    super(...args), this.identifier = "buddhist";
  }
};
function $8d73d47422ca7302$var$toGregorian(date) {
  let [era, year] = (0, $3b62074eb05584b2$export$4475b7e617eb123c)(date.year + $8d73d47422ca7302$var$BUDDHIST_ERA_START);
  return new (0, $35ea8db9cb2ccb90$export$99faa760c7908e4f)(era, year, date.month, date.day);
}

// node_modules/@internationalized/date/dist/TaiwanCalendar.mjs
var $5f31bd6f0c8940b2$var$TAIWAN_ERA_START = 1911;
function $5f31bd6f0c8940b2$var$gregorianYear(date) {
  return date.era === "minguo" ? date.year + $5f31bd6f0c8940b2$var$TAIWAN_ERA_START : 1 - date.year + $5f31bd6f0c8940b2$var$TAIWAN_ERA_START;
}
function $5f31bd6f0c8940b2$var$gregorianToTaiwan(year) {
  let y = year - $5f31bd6f0c8940b2$var$TAIWAN_ERA_START;
  if (y > 0) return [
    "minguo",
    y
  ];
  else return [
    "before_minguo",
    1 - y
  ];
}
var $5f31bd6f0c8940b2$export$65e01080afcb0799 = class extends (0, $3b62074eb05584b2$export$80ee6245ec4f29ec) {
  fromJulianDay(jd) {
    let date = super.fromJulianDay(jd);
    let extendedYear = (0, $3b62074eb05584b2$export$c36e0ecb2d4fa69d)(date.era, date.year);
    let [era, year] = $5f31bd6f0c8940b2$var$gregorianToTaiwan(extendedYear);
    return new (0, $35ea8db9cb2ccb90$export$99faa760c7908e4f)(this, era, year, date.month, date.day);
  }
  toJulianDay(date) {
    return super.toJulianDay($5f31bd6f0c8940b2$var$toGregorian(date));
  }
  getEras() {
    return [
      "before_minguo",
      "minguo"
    ];
  }
  balanceDate(date) {
    let [era, year] = $5f31bd6f0c8940b2$var$gregorianToTaiwan($5f31bd6f0c8940b2$var$gregorianYear(date));
    date.era = era;
    date.year = year;
  }
  isInverseEra(date) {
    return date.era === "before_minguo";
  }
  getDaysInMonth(date) {
    return super.getDaysInMonth($5f31bd6f0c8940b2$var$toGregorian(date));
  }
  getYearsInEra(date) {
    return date.era === "before_minguo" ? 9999 : 9999 - $5f31bd6f0c8940b2$var$TAIWAN_ERA_START;
  }
  constructor(...args) {
    super(...args), this.identifier = "roc";
  }
};
function $5f31bd6f0c8940b2$var$toGregorian(date) {
  let [era, year] = (0, $3b62074eb05584b2$export$4475b7e617eb123c)($5f31bd6f0c8940b2$var$gregorianYear(date));
  return new (0, $35ea8db9cb2ccb90$export$99faa760c7908e4f)(era, year, date.month, date.day);
}

// node_modules/@internationalized/date/dist/PersianCalendar.mjs
var $f3ed2e4472ae7e25$var$PERSIAN_EPOCH = 1948320;
var $f3ed2e4472ae7e25$var$MONTH_START = [
  0,
  31,
  62,
  93,
  124,
  155,
  186,
  216,
  246,
  276,
  306,
  336
  // Esfand
];
var $f3ed2e4472ae7e25$export$37fccdbfd14c5939 = class {
  fromJulianDay(jd) {
    let daysSinceEpoch = jd - $f3ed2e4472ae7e25$var$PERSIAN_EPOCH;
    let year = 1 + Math.floor((33 * daysSinceEpoch + 3) / 12053);
    let farvardin1 = 365 * (year - 1) + Math.floor((8 * year + 21) / 33);
    let dayOfYear = daysSinceEpoch - farvardin1;
    let month = dayOfYear < 216 ? Math.floor(dayOfYear / 31) : Math.floor((dayOfYear - 6) / 30);
    let day = dayOfYear - $f3ed2e4472ae7e25$var$MONTH_START[month] + 1;
    return new (0, $35ea8db9cb2ccb90$export$99faa760c7908e4f)(this, year, month + 1, day);
  }
  toJulianDay(date) {
    let jd = $f3ed2e4472ae7e25$var$PERSIAN_EPOCH - 1 + 365 * (date.year - 1) + Math.floor((8 * date.year + 21) / 33);
    jd += $f3ed2e4472ae7e25$var$MONTH_START[date.month - 1];
    jd += date.day;
    return jd;
  }
  getMonthsInYear() {
    return 12;
  }
  getDaysInMonth(date) {
    if (date.month <= 6) return 31;
    if (date.month <= 11) return 30;
    let isLeapYear = (0, $2b4dce13dd5a17fa$export$842a2cf37af977e1)(25 * date.year + 11, 33) < 8;
    return isLeapYear ? 30 : 29;
  }
  getEras() {
    return [
      "AP"
    ];
  }
  getYearsInEra() {
    return 9377;
  }
  constructor() {
    this.identifier = "persian";
  }
};

// node_modules/@internationalized/date/dist/IndianCalendar.mjs
var $82c358003bdda0a8$var$INDIAN_ERA_START = 78;
var $82c358003bdda0a8$var$INDIAN_YEAR_START = 80;
var $82c358003bdda0a8$export$39f31c639fa15726 = class extends (0, $3b62074eb05584b2$export$80ee6245ec4f29ec) {
  fromJulianDay(jd) {
    let date = super.fromJulianDay(jd);
    let indianYear = date.year - $82c358003bdda0a8$var$INDIAN_ERA_START;
    let yDay = jd - (0, $3b62074eb05584b2$export$f297eb839006d339)(date.era, date.year, 1, 1);
    let leapMonth;
    if (yDay < $82c358003bdda0a8$var$INDIAN_YEAR_START) {
      indianYear--;
      leapMonth = (0, $3b62074eb05584b2$export$553d7fa8e3805fc0)(date.year - 1) ? 31 : 30;
      yDay += leapMonth + 155 + 90 + 10;
    } else {
      leapMonth = (0, $3b62074eb05584b2$export$553d7fa8e3805fc0)(date.year) ? 31 : 30;
      yDay -= $82c358003bdda0a8$var$INDIAN_YEAR_START;
    }
    let indianMonth;
    let indianDay;
    if (yDay < leapMonth) {
      indianMonth = 1;
      indianDay = yDay + 1;
    } else {
      let mDay = yDay - leapMonth;
      if (mDay < 155) {
        indianMonth = Math.floor(mDay / 31) + 2;
        indianDay = mDay % 31 + 1;
      } else {
        mDay -= 155;
        indianMonth = Math.floor(mDay / 30) + 7;
        indianDay = mDay % 30 + 1;
      }
    }
    return new (0, $35ea8db9cb2ccb90$export$99faa760c7908e4f)(this, indianYear, indianMonth, indianDay);
  }
  toJulianDay(date) {
    let extendedYear = date.year + $82c358003bdda0a8$var$INDIAN_ERA_START;
    let [era, year] = (0, $3b62074eb05584b2$export$4475b7e617eb123c)(extendedYear);
    let leapMonth;
    let jd;
    if ((0, $3b62074eb05584b2$export$553d7fa8e3805fc0)(year)) {
      leapMonth = 31;
      jd = (0, $3b62074eb05584b2$export$f297eb839006d339)(era, year, 3, 21);
    } else {
      leapMonth = 30;
      jd = (0, $3b62074eb05584b2$export$f297eb839006d339)(era, year, 3, 22);
    }
    if (date.month === 1) return jd + date.day - 1;
    jd += leapMonth + Math.min(date.month - 2, 5) * 31;
    if (date.month >= 8) jd += (date.month - 7) * 30;
    jd += date.day - 1;
    return jd;
  }
  getDaysInMonth(date) {
    if (date.month === 1 && (0, $3b62074eb05584b2$export$553d7fa8e3805fc0)(date.year + $82c358003bdda0a8$var$INDIAN_ERA_START)) return 31;
    if (date.month >= 2 && date.month <= 6) return 31;
    return 30;
  }
  getYearsInEra() {
    return 9919;
  }
  getEras() {
    return [
      "saka"
    ];
  }
  balanceDate() {
  }
  constructor(...args) {
    super(...args), this.identifier = "indian";
  }
};

// node_modules/@internationalized/date/dist/IslamicCalendar.mjs
var $f2f3e0e3a817edbd$var$CIVIL_EPOC = 1948440;
var $f2f3e0e3a817edbd$var$ASTRONOMICAL_EPOC = 1948439;
var $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START = 1300;
var $f2f3e0e3a817edbd$var$UMALQURA_YEAR_END = 1600;
var $f2f3e0e3a817edbd$var$UMALQURA_START_DAYS = 460322;
function $f2f3e0e3a817edbd$var$islamicToJulianDay(epoch, year, month, day) {
  return day + Math.ceil(29.5 * (month - 1)) + (year - 1) * 354 + Math.floor((3 + 11 * year) / 30) + epoch - 1;
}
function $f2f3e0e3a817edbd$var$julianDayToIslamic(calendar, epoch, jd) {
  let year = Math.floor((30 * (jd - epoch) + 10646) / 10631);
  let month = Math.min(12, Math.ceil((jd - (29 + $f2f3e0e3a817edbd$var$islamicToJulianDay(epoch, year, 1, 1))) / 29.5) + 1);
  let day = jd - $f2f3e0e3a817edbd$var$islamicToJulianDay(epoch, year, month, 1) + 1;
  return new (0, $35ea8db9cb2ccb90$export$99faa760c7908e4f)(calendar, year, month, day);
}
function $f2f3e0e3a817edbd$var$isLeapYear(year) {
  return (14 + 11 * year) % 30 < 11;
}
var $f2f3e0e3a817edbd$export$2066795aadd37bfc = class {
  fromJulianDay(jd) {
    return $f2f3e0e3a817edbd$var$julianDayToIslamic(this, $f2f3e0e3a817edbd$var$CIVIL_EPOC, jd);
  }
  toJulianDay(date) {
    return $f2f3e0e3a817edbd$var$islamicToJulianDay($f2f3e0e3a817edbd$var$CIVIL_EPOC, date.year, date.month, date.day);
  }
  getDaysInMonth(date) {
    let length = 29 + date.month % 2;
    if (date.month === 12 && $f2f3e0e3a817edbd$var$isLeapYear(date.year)) length++;
    return length;
  }
  getMonthsInYear() {
    return 12;
  }
  getDaysInYear(date) {
    return $f2f3e0e3a817edbd$var$isLeapYear(date.year) ? 355 : 354;
  }
  getYearsInEra() {
    return 9665;
  }
  getEras() {
    return [
      "AH"
    ];
  }
  constructor() {
    this.identifier = "islamic-civil";
  }
};
var $f2f3e0e3a817edbd$export$37f0887f2f9d22f7 = class extends $f2f3e0e3a817edbd$export$2066795aadd37bfc {
  fromJulianDay(jd) {
    return $f2f3e0e3a817edbd$var$julianDayToIslamic(this, $f2f3e0e3a817edbd$var$ASTRONOMICAL_EPOC, jd);
  }
  toJulianDay(date) {
    return $f2f3e0e3a817edbd$var$islamicToJulianDay($f2f3e0e3a817edbd$var$ASTRONOMICAL_EPOC, date.year, date.month, date.day);
  }
  constructor(...args) {
    super(...args), this.identifier = "islamic-tbla";
  }
};
var $f2f3e0e3a817edbd$var$UMALQURA_DATA = "qgpUDckO1AbqBmwDrQpVBakGkgepC9QF2gpcBS0NlQZKB1QLagutBa4ETwoXBYsGpQbVCtYCWwmdBE0KJg2VDawFtgm6AlsKKwWVCsoG6Qr0AnYJtgJWCcoKpAvSC9kF3AJtCU0FpQpSC6ULtAW2CVcFlwJLBaMGUgdlC2oFqworBZUMSg2lDcoF1gpXCasESwmlClILagt1BXYCtwhbBFUFqQW0BdoJ3QRuAjYJqgpUDbIN1QXaAlsJqwRVCkkLZAtxC7QFtQpVCiUNkg7JDtQG6QprCasEkwpJDaQNsg25CroEWworBZUKKgtVC1wFvQQ9Ah0JlQpKC1oLbQW2AjsJmwRVBqkGVAdqC2wFrQpVBSkLkgupC9QF2gpaBasKlQVJB2QHqgu1BbYCVgpNDiULUgtqC60FrgIvCZcESwalBqwG1gpdBZ0ETQoWDZUNqgW1BdoCWwmtBJUFygbkBuoK9QS2AlYJqgpUC9IL2QXqAm0JrQSVCkoLpQuyBbUJ1gSXCkcFkwZJB1ULagVrCisFiwpGDaMNygXWCtsEawJLCaUKUgtpC3UFdgG3CFsCKwVlBbQF2gntBG0BtgimClINqQ3UBdoKWwmrBFMGKQdiB6kLsgW1ClUFJQuSDckO0gbpCmsFqwRVCikNVA2qDbUJugQ7CpsETQqqCtUK2gJdCV4ELgqaDFUNsga5BroEXQotBZUKUguoC7QLuQXaAloJSgukDdEO6AZqC20FNQWVBkoNqA3UDdoGWwWdAisGFQtKC5ULqgWuCi4JjwwnBZUGqgbWCl0FnQI=";
var $f2f3e0e3a817edbd$var$UMALQURA_MONTHLENGTH;
var $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START_TABLE;
function $f2f3e0e3a817edbd$var$umalquraYearStart(year) {
  return $f2f3e0e3a817edbd$var$UMALQURA_START_DAYS + $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START_TABLE[year - $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START];
}
function $f2f3e0e3a817edbd$var$umalquraMonthLength(year, month) {
  let idx = year - $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START;
  let mask = 1 << 11 - (month - 1);
  if (($f2f3e0e3a817edbd$var$UMALQURA_MONTHLENGTH[idx] & mask) === 0) return 29;
  else return 30;
}
function $f2f3e0e3a817edbd$var$umalquraMonthStart(year, month) {
  let day = $f2f3e0e3a817edbd$var$umalquraYearStart(year);
  for (let i = 1; i < month; i++) day += $f2f3e0e3a817edbd$var$umalquraMonthLength(year, i);
  return day;
}
function $f2f3e0e3a817edbd$var$umalquraYearLength(year) {
  return $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START_TABLE[year + 1 - $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START] - $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START_TABLE[year - $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START];
}
var $f2f3e0e3a817edbd$export$5baab4758c231076 = class extends $f2f3e0e3a817edbd$export$2066795aadd37bfc {
  fromJulianDay(jd) {
    let days = jd - $f2f3e0e3a817edbd$var$CIVIL_EPOC;
    let startDays = $f2f3e0e3a817edbd$var$umalquraYearStart($f2f3e0e3a817edbd$var$UMALQURA_YEAR_START);
    let endDays = $f2f3e0e3a817edbd$var$umalquraYearStart($f2f3e0e3a817edbd$var$UMALQURA_YEAR_END);
    if (days < startDays || days > endDays) return super.fromJulianDay(jd);
    else {
      let y = $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START - 1;
      let m = 1;
      let d = 1;
      while (d > 0) {
        y++;
        d = days - $f2f3e0e3a817edbd$var$umalquraYearStart(y) + 1;
        let yearLength = $f2f3e0e3a817edbd$var$umalquraYearLength(y);
        if (d === yearLength) {
          m = 12;
          break;
        } else if (d < yearLength) {
          let monthLength = $f2f3e0e3a817edbd$var$umalquraMonthLength(y, m);
          m = 1;
          while (d > monthLength) {
            d -= monthLength;
            m++;
            monthLength = $f2f3e0e3a817edbd$var$umalquraMonthLength(y, m);
          }
          break;
        }
      }
      return new (0, $35ea8db9cb2ccb90$export$99faa760c7908e4f)(this, y, m, days - $f2f3e0e3a817edbd$var$umalquraMonthStart(y, m) + 1);
    }
  }
  toJulianDay(date) {
    if (date.year < $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START || date.year > $f2f3e0e3a817edbd$var$UMALQURA_YEAR_END) return super.toJulianDay(date);
    return $f2f3e0e3a817edbd$var$CIVIL_EPOC + $f2f3e0e3a817edbd$var$umalquraMonthStart(date.year, date.month) + (date.day - 1);
  }
  getDaysInMonth(date) {
    if (date.year < $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START || date.year > $f2f3e0e3a817edbd$var$UMALQURA_YEAR_END) return super.getDaysInMonth(date);
    return $f2f3e0e3a817edbd$var$umalquraMonthLength(date.year, date.month);
  }
  getDaysInYear(date) {
    if (date.year < $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START || date.year > $f2f3e0e3a817edbd$var$UMALQURA_YEAR_END) return super.getDaysInYear(date);
    return $f2f3e0e3a817edbd$var$umalquraYearLength(date.year);
  }
  constructor() {
    super(), this.identifier = "islamic-umalqura";
    if (!$f2f3e0e3a817edbd$var$UMALQURA_MONTHLENGTH) $f2f3e0e3a817edbd$var$UMALQURA_MONTHLENGTH = new Uint16Array(Uint8Array.from(atob($f2f3e0e3a817edbd$var$UMALQURA_DATA), (c) => c.charCodeAt(0)).buffer);
    if (!$f2f3e0e3a817edbd$var$UMALQURA_YEAR_START_TABLE) {
      $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START_TABLE = new Uint32Array($f2f3e0e3a817edbd$var$UMALQURA_YEAR_END - $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START + 1);
      let yearStart = 0;
      for (let year = $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START; year <= $f2f3e0e3a817edbd$var$UMALQURA_YEAR_END; year++) {
        $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START_TABLE[year - $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START] = yearStart;
        for (let i = 1; i <= 12; i++) yearStart += $f2f3e0e3a817edbd$var$umalquraMonthLength(year, i);
      }
    }
  }
};

// node_modules/@internationalized/date/dist/HebrewCalendar.mjs
var $7c5f6fbf42389787$var$HEBREW_EPOCH = 347997;
var $7c5f6fbf42389787$var$HOUR_PARTS = 1080;
var $7c5f6fbf42389787$var$DAY_PARTS = 24 * $7c5f6fbf42389787$var$HOUR_PARTS;
var $7c5f6fbf42389787$var$MONTH_DAYS = 29;
var $7c5f6fbf42389787$var$MONTH_FRACT = 12 * $7c5f6fbf42389787$var$HOUR_PARTS + 793;
var $7c5f6fbf42389787$var$MONTH_PARTS = $7c5f6fbf42389787$var$MONTH_DAYS * $7c5f6fbf42389787$var$DAY_PARTS + $7c5f6fbf42389787$var$MONTH_FRACT;
function $7c5f6fbf42389787$var$isLeapYear(year) {
  return (0, $2b4dce13dd5a17fa$export$842a2cf37af977e1)(year * 7 + 1, 19) < 7;
}
function $7c5f6fbf42389787$var$hebrewDelay1(year) {
  let months = Math.floor((235 * year - 234) / 19);
  let parts = 12084 + 13753 * months;
  let day = months * 29 + Math.floor(parts / 25920);
  if ((0, $2b4dce13dd5a17fa$export$842a2cf37af977e1)(3 * (day + 1), 7) < 3) day += 1;
  return day;
}
function $7c5f6fbf42389787$var$hebrewDelay2(year) {
  let last = $7c5f6fbf42389787$var$hebrewDelay1(year - 1);
  let present = $7c5f6fbf42389787$var$hebrewDelay1(year);
  let next = $7c5f6fbf42389787$var$hebrewDelay1(year + 1);
  if (next - present === 356) return 2;
  if (present - last === 382) return 1;
  return 0;
}
function $7c5f6fbf42389787$var$startOfYear(year) {
  return $7c5f6fbf42389787$var$hebrewDelay1(year) + $7c5f6fbf42389787$var$hebrewDelay2(year);
}
function $7c5f6fbf42389787$var$getDaysInYear(year) {
  return $7c5f6fbf42389787$var$startOfYear(year + 1) - $7c5f6fbf42389787$var$startOfYear(year);
}
function $7c5f6fbf42389787$var$getYearType(year) {
  let yearLength = $7c5f6fbf42389787$var$getDaysInYear(year);
  if (yearLength > 380) yearLength -= 30;
  switch (yearLength) {
    case 353:
      return 0;
    // deficient
    case 354:
      return 1;
    // normal
    case 355:
      return 2;
  }
}
function $7c5f6fbf42389787$var$getDaysInMonth(year, month) {
  if (month >= 6 && !$7c5f6fbf42389787$var$isLeapYear(year)) month++;
  if (month === 4 || month === 7 || month === 9 || month === 11 || month === 13) return 29;
  let yearType = $7c5f6fbf42389787$var$getYearType(year);
  if (month === 2) return yearType === 2 ? 30 : 29;
  if (month === 3) return yearType === 0 ? 29 : 30;
  if (month === 6) return $7c5f6fbf42389787$var$isLeapYear(year) ? 30 : 0;
  return 30;
}
var $7c5f6fbf42389787$export$ca405048b8fb5af = class {
  fromJulianDay(jd) {
    let d = jd - $7c5f6fbf42389787$var$HEBREW_EPOCH;
    let m = d * $7c5f6fbf42389787$var$DAY_PARTS / $7c5f6fbf42389787$var$MONTH_PARTS;
    let year = Math.floor((19 * m + 234) / 235) + 1;
    let ys = $7c5f6fbf42389787$var$startOfYear(year);
    let dayOfYear = Math.floor(d - ys);
    while (dayOfYear < 1) {
      year--;
      ys = $7c5f6fbf42389787$var$startOfYear(year);
      dayOfYear = Math.floor(d - ys);
    }
    let month = 1;
    let monthStart = 0;
    while (monthStart < dayOfYear) {
      monthStart += $7c5f6fbf42389787$var$getDaysInMonth(year, month);
      month++;
    }
    month--;
    monthStart -= $7c5f6fbf42389787$var$getDaysInMonth(year, month);
    let day = dayOfYear - monthStart;
    return new (0, $35ea8db9cb2ccb90$export$99faa760c7908e4f)(this, year, month, day);
  }
  toJulianDay(date) {
    let jd = $7c5f6fbf42389787$var$startOfYear(date.year);
    for (let month = 1; month < date.month; month++) jd += $7c5f6fbf42389787$var$getDaysInMonth(date.year, month);
    return jd + date.day + $7c5f6fbf42389787$var$HEBREW_EPOCH;
  }
  getDaysInMonth(date) {
    return $7c5f6fbf42389787$var$getDaysInMonth(date.year, date.month);
  }
  getMonthsInYear(date) {
    return $7c5f6fbf42389787$var$isLeapYear(date.year) ? 13 : 12;
  }
  getDaysInYear(date) {
    return $7c5f6fbf42389787$var$getDaysInYear(date.year);
  }
  getYearsInEra() {
    return 9999;
  }
  getEras() {
    return [
      "AM"
    ];
  }
  balanceYearMonth(date, previousDate) {
    if (previousDate.year !== date.year) {
      if ($7c5f6fbf42389787$var$isLeapYear(previousDate.year) && !$7c5f6fbf42389787$var$isLeapYear(date.year) && previousDate.month > 6) date.month--;
      else if (!$7c5f6fbf42389787$var$isLeapYear(previousDate.year) && $7c5f6fbf42389787$var$isLeapYear(date.year) && previousDate.month > 6) date.month++;
    }
  }
  constructor() {
    this.identifier = "hebrew";
  }
};

// node_modules/@internationalized/date/dist/EthiopicCalendar.mjs
var $b956b2d7a6cf451f$var$ETHIOPIC_EPOCH = 1723856;
var $b956b2d7a6cf451f$var$COPTIC_EPOCH = 1824665;
var $b956b2d7a6cf451f$var$AMETE_MIHRET_DELTA = 5500;
function $b956b2d7a6cf451f$var$ceToJulianDay(epoch, year, month, day) {
  return epoch + 365 * year + Math.floor(year / 4) + 30 * (month - 1) + day - 1;
}
function $b956b2d7a6cf451f$var$julianDayToCE(epoch, jd) {
  let year = Math.floor(4 * (jd - epoch) / 1461);
  let month = 1 + Math.floor((jd - $b956b2d7a6cf451f$var$ceToJulianDay(epoch, year, 1, 1)) / 30);
  let day = jd + 1 - $b956b2d7a6cf451f$var$ceToJulianDay(epoch, year, month, 1);
  return [
    year,
    month,
    day
  ];
}
function $b956b2d7a6cf451f$var$getLeapDay(year) {
  return Math.floor(year % 4 / 3);
}
function $b956b2d7a6cf451f$var$getDaysInMonth(year, month) {
  if (month % 13 !== 0)
    return 30;
  else
    return $b956b2d7a6cf451f$var$getLeapDay(year) + 5;
}
var $b956b2d7a6cf451f$export$26ba6eab5e20cd7d = class {
  fromJulianDay(jd) {
    let [year, month, day] = $b956b2d7a6cf451f$var$julianDayToCE($b956b2d7a6cf451f$var$ETHIOPIC_EPOCH, jd);
    let era = "AM";
    if (year <= 0) {
      era = "AA";
      year += $b956b2d7a6cf451f$var$AMETE_MIHRET_DELTA;
    }
    return new (0, $35ea8db9cb2ccb90$export$99faa760c7908e4f)(this, era, year, month, day);
  }
  toJulianDay(date) {
    let year = date.year;
    if (date.era === "AA") year -= $b956b2d7a6cf451f$var$AMETE_MIHRET_DELTA;
    return $b956b2d7a6cf451f$var$ceToJulianDay($b956b2d7a6cf451f$var$ETHIOPIC_EPOCH, year, date.month, date.day);
  }
  getDaysInMonth(date) {
    return $b956b2d7a6cf451f$var$getDaysInMonth(date.year, date.month);
  }
  getMonthsInYear() {
    return 13;
  }
  getDaysInYear(date) {
    return 365 + $b956b2d7a6cf451f$var$getLeapDay(date.year);
  }
  getYearsInEra(date) {
    return date.era === "AA" ? 9999 : 9991;
  }
  getEras() {
    return [
      "AA",
      "AM"
    ];
  }
  constructor() {
    this.identifier = "ethiopic";
  }
};
var $b956b2d7a6cf451f$export$d72e0c37005a4914 = class extends $b956b2d7a6cf451f$export$26ba6eab5e20cd7d {
  fromJulianDay(jd) {
    let [year, month, day] = $b956b2d7a6cf451f$var$julianDayToCE($b956b2d7a6cf451f$var$ETHIOPIC_EPOCH, jd);
    year += $b956b2d7a6cf451f$var$AMETE_MIHRET_DELTA;
    return new (0, $35ea8db9cb2ccb90$export$99faa760c7908e4f)(this, "AA", year, month, day);
  }
  getEras() {
    return [
      "AA"
    ];
  }
  getYearsInEra() {
    return 9999;
  }
  constructor(...args) {
    super(...args), this.identifier = "ethioaa";
  }
};
var $b956b2d7a6cf451f$export$fe6243cbe1a4b7c1 = class extends $b956b2d7a6cf451f$export$26ba6eab5e20cd7d {
  fromJulianDay(jd) {
    let [year, month, day] = $b956b2d7a6cf451f$var$julianDayToCE($b956b2d7a6cf451f$var$COPTIC_EPOCH, jd);
    let era = "CE";
    if (year <= 0) {
      era = "BCE";
      year = 1 - year;
    }
    return new (0, $35ea8db9cb2ccb90$export$99faa760c7908e4f)(this, era, year, month, day);
  }
  toJulianDay(date) {
    let year = date.year;
    if (date.era === "BCE") year = 1 - year;
    return $b956b2d7a6cf451f$var$ceToJulianDay($b956b2d7a6cf451f$var$COPTIC_EPOCH, year, date.month, date.day);
  }
  getDaysInMonth(date) {
    let year = date.year;
    if (date.era === "BCE") year = 1 - year;
    return $b956b2d7a6cf451f$var$getDaysInMonth(year, date.month);
  }
  isInverseEra(date) {
    return date.era === "BCE";
  }
  balanceDate(date) {
    if (date.year <= 0) {
      date.era = date.era === "BCE" ? "CE" : "BCE";
      date.year = 1 - date.year;
    }
  }
  getEras() {
    return [
      "BCE",
      "CE"
    ];
  }
  getYearsInEra(date) {
    return date.era === "BCE" ? 9999 : 9715;
  }
  constructor(...args) {
    super(...args), this.identifier = "coptic";
  }
};

// node_modules/@internationalized/date/dist/createCalendar.mjs
function $64244302c3013299$export$dd0bbc9b26defe37(name) {
  switch (name) {
    case "buddhist":
      return new (0, $8d73d47422ca7302$export$42d20a78301dee44)();
    case "ethiopic":
      return new (0, $b956b2d7a6cf451f$export$26ba6eab5e20cd7d)();
    case "ethioaa":
      return new (0, $b956b2d7a6cf451f$export$d72e0c37005a4914)();
    case "coptic":
      return new (0, $b956b2d7a6cf451f$export$fe6243cbe1a4b7c1)();
    case "hebrew":
      return new (0, $7c5f6fbf42389787$export$ca405048b8fb5af)();
    case "indian":
      return new (0, $82c358003bdda0a8$export$39f31c639fa15726)();
    case "islamic-civil":
      return new (0, $f2f3e0e3a817edbd$export$2066795aadd37bfc)();
    case "islamic-tbla":
      return new (0, $f2f3e0e3a817edbd$export$37f0887f2f9d22f7)();
    case "islamic-umalqura":
      return new (0, $f2f3e0e3a817edbd$export$5baab4758c231076)();
    case "japanese":
      return new (0, $62225008020f0a13$export$b746ab2b60cdffbf)();
    case "persian":
      return new (0, $f3ed2e4472ae7e25$export$37fccdbfd14c5939)();
    case "roc":
      return new (0, $5f31bd6f0c8940b2$export$65e01080afcb0799)();
    case "gregory":
    default:
      return new (0, $3b62074eb05584b2$export$80ee6245ec4f29ec)();
  }
}

// node_modules/@internationalized/date/dist/DateFormatter.mjs
var $fb18d541ea1ad717$var$formatterCache = /* @__PURE__ */ new Map();
var $fb18d541ea1ad717$export$ad991b66133851cf = class {
  /** Formats a date as a string according to the locale and format options passed to the constructor. */
  format(value) {
    return this.formatter.format(value);
  }
  /** Formats a date to an array of parts such as separators, numbers, punctuation, and more. */
  formatToParts(value) {
    return this.formatter.formatToParts(value);
  }
  /** Formats a date range as a string. */
  formatRange(start, end) {
    if (typeof this.formatter.formatRange === "function")
      return this.formatter.formatRange(start, end);
    if (end < start) throw new RangeError("End date must be >= start date");
    return `${this.formatter.format(start)} – ${this.formatter.format(end)}`;
  }
  /** Formats a date range as an array of parts. */
  formatRangeToParts(start, end) {
    if (typeof this.formatter.formatRangeToParts === "function")
      return this.formatter.formatRangeToParts(start, end);
    if (end < start) throw new RangeError("End date must be >= start date");
    let startParts = this.formatter.formatToParts(start);
    let endParts = this.formatter.formatToParts(end);
    return [
      ...startParts.map((p) => ({
        ...p,
        source: "startRange"
      })),
      {
        type: "literal",
        value: " – ",
        source: "shared"
      },
      ...endParts.map((p) => ({
        ...p,
        source: "endRange"
      }))
    ];
  }
  /** Returns the resolved formatting options based on the values passed to the constructor. */
  resolvedOptions() {
    let resolvedOptions = this.formatter.resolvedOptions();
    if ($fb18d541ea1ad717$var$hasBuggyResolvedHourCycle()) {
      if (!this.resolvedHourCycle) this.resolvedHourCycle = $fb18d541ea1ad717$var$getResolvedHourCycle(resolvedOptions.locale, this.options);
      resolvedOptions.hourCycle = this.resolvedHourCycle;
      resolvedOptions.hour12 = this.resolvedHourCycle === "h11" || this.resolvedHourCycle === "h12";
    }
    if (resolvedOptions.calendar === "ethiopic-amete-alem") resolvedOptions.calendar = "ethioaa";
    return resolvedOptions;
  }
  constructor(locale, options = {}) {
    this.formatter = $fb18d541ea1ad717$var$getCachedDateFormatter(locale, options);
    this.options = options;
  }
};
var $fb18d541ea1ad717$var$hour12Preferences = {
  true: {
    // Only Japanese uses the h11 style for 12 hour time. All others use h12.
    ja: "h11"
  },
  false: {}
};
function $fb18d541ea1ad717$var$getCachedDateFormatter(locale, options = {}) {
  if (typeof options.hour12 === "boolean" && $fb18d541ea1ad717$var$hasBuggyHour12Behavior()) {
    options = {
      ...options
    };
    let pref = $fb18d541ea1ad717$var$hour12Preferences[String(options.hour12)][locale.split("-")[0]];
    let defaultHourCycle = options.hour12 ? "h12" : "h23";
    options.hourCycle = pref !== null && pref !== void 0 ? pref : defaultHourCycle;
    delete options.hour12;
  }
  let cacheKey = locale + (options ? Object.entries(options).sort((a, b) => a[0] < b[0] ? -1 : 1).join() : "");
  if ($fb18d541ea1ad717$var$formatterCache.has(cacheKey)) return $fb18d541ea1ad717$var$formatterCache.get(cacheKey);
  let numberFormatter = new Intl.DateTimeFormat(locale, options);
  $fb18d541ea1ad717$var$formatterCache.set(cacheKey, numberFormatter);
  return numberFormatter;
}
var $fb18d541ea1ad717$var$_hasBuggyHour12Behavior = null;
function $fb18d541ea1ad717$var$hasBuggyHour12Behavior() {
  if ($fb18d541ea1ad717$var$_hasBuggyHour12Behavior == null) $fb18d541ea1ad717$var$_hasBuggyHour12Behavior = new Intl.DateTimeFormat("en-US", {
    hour: "numeric",
    hour12: false
  }).format(new Date(2020, 2, 3, 0)) === "24";
  return $fb18d541ea1ad717$var$_hasBuggyHour12Behavior;
}
var $fb18d541ea1ad717$var$_hasBuggyResolvedHourCycle = null;
function $fb18d541ea1ad717$var$hasBuggyResolvedHourCycle() {
  if ($fb18d541ea1ad717$var$_hasBuggyResolvedHourCycle == null) $fb18d541ea1ad717$var$_hasBuggyResolvedHourCycle = new Intl.DateTimeFormat("fr", {
    hour: "numeric",
    hour12: false
  }).resolvedOptions().hourCycle === "h12";
  return $fb18d541ea1ad717$var$_hasBuggyResolvedHourCycle;
}
function $fb18d541ea1ad717$var$getResolvedHourCycle(locale, options) {
  if (!options.timeStyle && !options.hour) return void 0;
  locale = locale.replace(/(-u-)?-nu-[a-zA-Z0-9]+/, "");
  locale += (locale.includes("-u-") ? "" : "-u") + "-nu-latn";
  let formatter = $fb18d541ea1ad717$var$getCachedDateFormatter(locale, {
    ...options,
    timeZone: void 0
    // use local timezone
  });
  let min = parseInt(formatter.formatToParts(new Date(2020, 2, 3, 0)).find((p) => p.type === "hour").value, 10);
  let max = parseInt(formatter.formatToParts(new Date(2020, 2, 3, 23)).find((p) => p.type === "hour").value, 10);
  if (min === 0 && max === 23) return "h23";
  if (min === 24 && max === 23) return "h24";
  if (min === 0 && max === 11) return "h11";
  if (min === 12 && max === 11) return "h12";
  throw new Error("Unexpected hour cycle result");
}

// node_modules/@react-aria/i18n/dist/useDateFormatter.mjs
var import_react47 = __toESM(require_react(), 1);
function $896ba0a80a8f4d36$export$85fd5fdf27bacc79(options) {
  options = (0, $5a387cc49350e6db$export$722debc0e56fea39)(options !== null && options !== void 0 ? options : {}, $896ba0a80a8f4d36$var$isEqual);
  let { locale } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  return (0, import_react47.useMemo)(() => new (0, $fb18d541ea1ad717$export$ad991b66133851cf)(locale, options), [
    locale,
    options
  ]);
}
function $896ba0a80a8f4d36$var$isEqual(a, b) {
  if (a === b) return true;
  let aKeys = Object.keys(a);
  let bKeys = Object.keys(b);
  if (aKeys.length !== bKeys.length) return false;
  for (let key of aKeys) {
    if (b[key] !== a[key]) return false;
  }
  return true;
}

// node_modules/@internationalized/number/dist/NumberFormatter.mjs
var $488c6ddbf4ef74c2$var$formatterCache = /* @__PURE__ */ new Map();
var $488c6ddbf4ef74c2$var$supportsSignDisplay = false;
try {
  $488c6ddbf4ef74c2$var$supportsSignDisplay = new Intl.NumberFormat("de-DE", {
    signDisplay: "exceptZero"
  }).resolvedOptions().signDisplay === "exceptZero";
} catch {
}
var $488c6ddbf4ef74c2$var$supportsUnit = false;
try {
  $488c6ddbf4ef74c2$var$supportsUnit = new Intl.NumberFormat("de-DE", {
    style: "unit",
    unit: "degree"
  }).resolvedOptions().style === "unit";
} catch {
}
var $488c6ddbf4ef74c2$var$UNITS = {
  degree: {
    narrow: {
      default: "°",
      "ja-JP": " 度",
      "zh-TW": "度",
      "sl-SI": " °"
    }
  }
};
var $488c6ddbf4ef74c2$export$cc77c4ff7e8673c5 = class {
  /** Formats a number value as a string, according to the locale and options provided to the constructor. */
  format(value) {
    let res = "";
    if (!$488c6ddbf4ef74c2$var$supportsSignDisplay && this.options.signDisplay != null) res = $488c6ddbf4ef74c2$export$711b50b3c525e0f2(this.numberFormatter, this.options.signDisplay, value);
    else res = this.numberFormatter.format(value);
    if (this.options.style === "unit" && !$488c6ddbf4ef74c2$var$supportsUnit) {
      var _UNITS_unit;
      let { unit, unitDisplay = "short", locale } = this.resolvedOptions();
      if (!unit) return res;
      let values = (_UNITS_unit = $488c6ddbf4ef74c2$var$UNITS[unit]) === null || _UNITS_unit === void 0 ? void 0 : _UNITS_unit[unitDisplay];
      res += values[locale] || values.default;
    }
    return res;
  }
  /** Formats a number to an array of parts such as separators, digits, punctuation, and more. */
  formatToParts(value) {
    return this.numberFormatter.formatToParts(value);
  }
  /** Formats a number range as a string. */
  formatRange(start, end) {
    if (typeof this.numberFormatter.formatRange === "function") return this.numberFormatter.formatRange(start, end);
    if (end < start) throw new RangeError("End date must be >= start date");
    return `${this.format(start)} – ${this.format(end)}`;
  }
  /** Formats a number range as an array of parts. */
  formatRangeToParts(start, end) {
    if (typeof this.numberFormatter.formatRangeToParts === "function") return this.numberFormatter.formatRangeToParts(start, end);
    if (end < start) throw new RangeError("End date must be >= start date");
    let startParts = this.numberFormatter.formatToParts(start);
    let endParts = this.numberFormatter.formatToParts(end);
    return [
      ...startParts.map((p) => ({
        ...p,
        source: "startRange"
      })),
      {
        type: "literal",
        value: " – ",
        source: "shared"
      },
      ...endParts.map((p) => ({
        ...p,
        source: "endRange"
      }))
    ];
  }
  /** Returns the resolved formatting options based on the values passed to the constructor. */
  resolvedOptions() {
    let options = this.numberFormatter.resolvedOptions();
    if (!$488c6ddbf4ef74c2$var$supportsSignDisplay && this.options.signDisplay != null) options = {
      ...options,
      signDisplay: this.options.signDisplay
    };
    if (!$488c6ddbf4ef74c2$var$supportsUnit && this.options.style === "unit") options = {
      ...options,
      style: "unit",
      unit: this.options.unit,
      unitDisplay: this.options.unitDisplay
    };
    return options;
  }
  constructor(locale, options = {}) {
    this.numberFormatter = $488c6ddbf4ef74c2$var$getCachedNumberFormatter(locale, options);
    this.options = options;
  }
};
function $488c6ddbf4ef74c2$var$getCachedNumberFormatter(locale, options = {}) {
  let { numberingSystem } = options;
  if (numberingSystem && locale.includes("-nu-")) {
    if (!locale.includes("-u-")) locale += "-u-";
    locale += `-nu-${numberingSystem}`;
  }
  if (options.style === "unit" && !$488c6ddbf4ef74c2$var$supportsUnit) {
    var _UNITS_unit;
    let { unit, unitDisplay = "short" } = options;
    if (!unit) throw new Error('unit option must be provided with style: "unit"');
    if (!((_UNITS_unit = $488c6ddbf4ef74c2$var$UNITS[unit]) === null || _UNITS_unit === void 0 ? void 0 : _UNITS_unit[unitDisplay])) throw new Error(`Unsupported unit ${unit} with unitDisplay = ${unitDisplay}`);
    options = {
      ...options,
      style: "decimal"
    };
  }
  let cacheKey = locale + (options ? Object.entries(options).sort((a, b) => a[0] < b[0] ? -1 : 1).join() : "");
  if ($488c6ddbf4ef74c2$var$formatterCache.has(cacheKey)) return $488c6ddbf4ef74c2$var$formatterCache.get(cacheKey);
  let numberFormatter = new Intl.NumberFormat(locale, options);
  $488c6ddbf4ef74c2$var$formatterCache.set(cacheKey, numberFormatter);
  return numberFormatter;
}
function $488c6ddbf4ef74c2$export$711b50b3c525e0f2(numberFormat, signDisplay, num) {
  if (signDisplay === "auto") return numberFormat.format(num);
  else if (signDisplay === "never") return numberFormat.format(Math.abs(num));
  else {
    let needsPositiveSign = false;
    if (signDisplay === "always") needsPositiveSign = num > 0 || Object.is(num, 0);
    else if (signDisplay === "exceptZero") {
      if (Object.is(num, -0) || Object.is(num, 0)) num = Math.abs(num);
      else needsPositiveSign = num > 0;
    }
    if (needsPositiveSign) {
      let negative = numberFormat.format(-num);
      let noSign = numberFormat.format(num);
      let minus = negative.replace(noSign, "").replace(/\u200e|\u061C/, "");
      if ([
        ...minus
      ].length !== 1) console.warn("@react-aria/i18n polyfill for NumberFormat signDisplay: Unsupported case");
      let positive = negative.replace(noSign, "!!!").replace(minus, "+").replace("!!!", noSign);
      return positive;
    } else return numberFormat.format(num);
  }
}

// node_modules/@internationalized/number/dist/NumberParser.mjs
var $6c7bd7858deea686$var$CURRENCY_SIGN_REGEX = new RegExp("^.*\\(.*\\).*$");
var $6c7bd7858deea686$var$NUMBERING_SYSTEMS = [
  "latn",
  "arab",
  "hanidec",
  "deva",
  "beng"
];
var $6c7bd7858deea686$export$cd11ab140839f11d = class {
  /**
  * Parses the given string to a number. Returns NaN if a valid number could not be parsed.
  */
  parse(value) {
    return $6c7bd7858deea686$var$getNumberParserImpl(this.locale, this.options, value).parse(value);
  }
  /**
  * Returns whether the given string could potentially be a valid number. This should be used to
  * validate user input as the user types. If a `minValue` or `maxValue` is provided, the validity
  * of the minus/plus sign characters can be checked.
  */
  isValidPartialNumber(value, minValue, maxValue) {
    return $6c7bd7858deea686$var$getNumberParserImpl(this.locale, this.options, value).isValidPartialNumber(value, minValue, maxValue);
  }
  /**
  * Returns a numbering system for which the given string is valid in the current locale.
  * If no numbering system could be detected, the default numbering system for the current
  * locale is returned.
  */
  getNumberingSystem(value) {
    return $6c7bd7858deea686$var$getNumberParserImpl(this.locale, this.options, value).options.numberingSystem;
  }
  constructor(locale, options = {}) {
    this.locale = locale;
    this.options = options;
  }
};
var $6c7bd7858deea686$var$numberParserCache = /* @__PURE__ */ new Map();
function $6c7bd7858deea686$var$getNumberParserImpl(locale, options, value) {
  let defaultParser = $6c7bd7858deea686$var$getCachedNumberParser(locale, options);
  if (!locale.includes("-nu-") && !defaultParser.isValidPartialNumber(value)) {
    for (let numberingSystem of $6c7bd7858deea686$var$NUMBERING_SYSTEMS) if (numberingSystem !== defaultParser.options.numberingSystem) {
      let parser = $6c7bd7858deea686$var$getCachedNumberParser(locale + (locale.includes("-u-") ? "-nu-" : "-u-nu-") + numberingSystem, options);
      if (parser.isValidPartialNumber(value)) return parser;
    }
  }
  return defaultParser;
}
function $6c7bd7858deea686$var$getCachedNumberParser(locale, options) {
  let cacheKey = locale + (options ? Object.entries(options).sort((a, b) => a[0] < b[0] ? -1 : 1).join() : "");
  let parser = $6c7bd7858deea686$var$numberParserCache.get(cacheKey);
  if (!parser) {
    parser = new $6c7bd7858deea686$var$NumberParserImpl(locale, options);
    $6c7bd7858deea686$var$numberParserCache.set(cacheKey, parser);
  }
  return parser;
}
var $6c7bd7858deea686$var$NumberParserImpl = class {
  parse(value) {
    let fullySanitizedValue = this.sanitize(value);
    if (this.symbols.group)
      fullySanitizedValue = $6c7bd7858deea686$var$replaceAll(fullySanitizedValue, this.symbols.group, "");
    if (this.symbols.decimal) fullySanitizedValue = fullySanitizedValue.replace(this.symbols.decimal, ".");
    if (this.symbols.minusSign) fullySanitizedValue = fullySanitizedValue.replace(this.symbols.minusSign, "-");
    fullySanitizedValue = fullySanitizedValue.replace(this.symbols.numeral, this.symbols.index);
    if (this.options.style === "percent") {
      let isNegative = fullySanitizedValue.indexOf("-");
      fullySanitizedValue = fullySanitizedValue.replace("-", "");
      fullySanitizedValue = fullySanitizedValue.replace("+", "");
      let index = fullySanitizedValue.indexOf(".");
      if (index === -1) index = fullySanitizedValue.length;
      fullySanitizedValue = fullySanitizedValue.replace(".", "");
      if (index - 2 === 0) fullySanitizedValue = `0.${fullySanitizedValue}`;
      else if (index - 2 === -1) fullySanitizedValue = `0.0${fullySanitizedValue}`;
      else if (index - 2 === -2) fullySanitizedValue = "0.00";
      else fullySanitizedValue = `${fullySanitizedValue.slice(0, index - 2)}.${fullySanitizedValue.slice(index - 2)}`;
      if (isNegative > -1) fullySanitizedValue = `-${fullySanitizedValue}`;
    }
    let newValue = fullySanitizedValue ? +fullySanitizedValue : NaN;
    if (isNaN(newValue)) return NaN;
    if (this.options.style === "percent") {
      var _this_options_minimumFractionDigits, _this_options_maximumFractionDigits;
      let options = {
        ...this.options,
        style: "decimal",
        minimumFractionDigits: Math.min(((_this_options_minimumFractionDigits = this.options.minimumFractionDigits) !== null && _this_options_minimumFractionDigits !== void 0 ? _this_options_minimumFractionDigits : 0) + 2, 20),
        maximumFractionDigits: Math.min(((_this_options_maximumFractionDigits = this.options.maximumFractionDigits) !== null && _this_options_maximumFractionDigits !== void 0 ? _this_options_maximumFractionDigits : 0) + 2, 20)
      };
      return new $6c7bd7858deea686$export$cd11ab140839f11d(this.locale, options).parse(new (0, $488c6ddbf4ef74c2$export$cc77c4ff7e8673c5)(this.locale, options).format(newValue));
    }
    if (this.options.currencySign === "accounting" && $6c7bd7858deea686$var$CURRENCY_SIGN_REGEX.test(value)) newValue = -1 * newValue;
    return newValue;
  }
  sanitize(value) {
    value = value.replace(this.symbols.literals, "");
    if (this.symbols.minusSign) value = value.replace("-", this.symbols.minusSign);
    if (this.options.numberingSystem === "arab") {
      if (this.symbols.decimal) {
        value = value.replace(",", this.symbols.decimal);
        value = value.replace(String.fromCharCode(1548), this.symbols.decimal);
      }
      if (this.symbols.group) value = $6c7bd7858deea686$var$replaceAll(value, ".", this.symbols.group);
    }
    if (this.options.locale === "fr-FR" && this.symbols.group) {
      value = $6c7bd7858deea686$var$replaceAll(value, " ", this.symbols.group);
      value = $6c7bd7858deea686$var$replaceAll(value, /\u00A0/g, this.symbols.group);
    }
    return value;
  }
  isValidPartialNumber(value, minValue = -Infinity, maxValue = Infinity) {
    value = this.sanitize(value);
    if (this.symbols.minusSign && value.startsWith(this.symbols.minusSign) && minValue < 0) value = value.slice(this.symbols.minusSign.length);
    else if (this.symbols.plusSign && value.startsWith(this.symbols.plusSign) && maxValue > 0) value = value.slice(this.symbols.plusSign.length);
    if (this.symbols.group && value.startsWith(this.symbols.group)) return false;
    if (this.symbols.decimal && value.indexOf(this.symbols.decimal) > -1 && this.options.maximumFractionDigits === 0) return false;
    if (this.symbols.group) value = $6c7bd7858deea686$var$replaceAll(value, this.symbols.group, "");
    value = value.replace(this.symbols.numeral, "");
    if (this.symbols.decimal) value = value.replace(this.symbols.decimal, "");
    return value.length === 0;
  }
  constructor(locale, options = {}) {
    this.locale = locale;
    if (options.roundingIncrement !== 1 && options.roundingIncrement != null) {
      if (options.maximumFractionDigits == null && options.minimumFractionDigits == null) {
        options.maximumFractionDigits = 0;
        options.minimumFractionDigits = 0;
      } else if (options.maximumFractionDigits == null) options.maximumFractionDigits = options.minimumFractionDigits;
      else if (options.minimumFractionDigits == null) options.minimumFractionDigits = options.maximumFractionDigits;
    }
    this.formatter = new Intl.NumberFormat(locale, options);
    this.options = this.formatter.resolvedOptions();
    this.symbols = $6c7bd7858deea686$var$getSymbols(locale, this.formatter, this.options, options);
    var _this_options_minimumFractionDigits, _this_options_maximumFractionDigits;
    if (this.options.style === "percent" && (((_this_options_minimumFractionDigits = this.options.minimumFractionDigits) !== null && _this_options_minimumFractionDigits !== void 0 ? _this_options_minimumFractionDigits : 0) > 18 || ((_this_options_maximumFractionDigits = this.options.maximumFractionDigits) !== null && _this_options_maximumFractionDigits !== void 0 ? _this_options_maximumFractionDigits : 0) > 18)) console.warn("NumberParser cannot handle percentages with greater than 18 decimal places, please reduce the number in your options.");
  }
};
var $6c7bd7858deea686$var$nonLiteralParts = /* @__PURE__ */ new Set([
  "decimal",
  "fraction",
  "integer",
  "minusSign",
  "plusSign",
  "group"
]);
var $6c7bd7858deea686$var$pluralNumbers = [
  0,
  4,
  2,
  1,
  11,
  20,
  3,
  7,
  100,
  21,
  0.1,
  1.1
];
function $6c7bd7858deea686$var$getSymbols(locale, formatter, intlOptions, originalOptions) {
  var _allParts_find, _posAllParts_find, _decimalParts_find, _allParts_find1;
  let symbolFormatter = new Intl.NumberFormat(locale, {
    ...intlOptions,
    // Resets so we get the full range of symbols
    minimumSignificantDigits: 1,
    maximumSignificantDigits: 21,
    roundingIncrement: 1,
    roundingPriority: "auto",
    roundingMode: "halfExpand"
  });
  let allParts = symbolFormatter.formatToParts(-10000.111);
  let posAllParts = symbolFormatter.formatToParts(10000.111);
  let pluralParts = $6c7bd7858deea686$var$pluralNumbers.map((n) => symbolFormatter.formatToParts(n));
  var _allParts_find_value;
  let minusSign = (_allParts_find_value = (_allParts_find = allParts.find((p) => p.type === "minusSign")) === null || _allParts_find === void 0 ? void 0 : _allParts_find.value) !== null && _allParts_find_value !== void 0 ? _allParts_find_value : "-";
  let plusSign = (_posAllParts_find = posAllParts.find((p) => p.type === "plusSign")) === null || _posAllParts_find === void 0 ? void 0 : _posAllParts_find.value;
  if (!plusSign && ((originalOptions === null || originalOptions === void 0 ? void 0 : originalOptions.signDisplay) === "exceptZero" || (originalOptions === null || originalOptions === void 0 ? void 0 : originalOptions.signDisplay) === "always")) plusSign = "+";
  let decimalParts = new Intl.NumberFormat(locale, {
    ...intlOptions,
    minimumFractionDigits: 2,
    maximumFractionDigits: 2
  }).formatToParts(1e-3);
  let decimal = (_decimalParts_find = decimalParts.find((p) => p.type === "decimal")) === null || _decimalParts_find === void 0 ? void 0 : _decimalParts_find.value;
  let group = (_allParts_find1 = allParts.find((p) => p.type === "group")) === null || _allParts_find1 === void 0 ? void 0 : _allParts_find1.value;
  let allPartsLiterals = allParts.filter((p) => !$6c7bd7858deea686$var$nonLiteralParts.has(p.type)).map((p) => $6c7bd7858deea686$var$escapeRegex(p.value));
  let pluralPartsLiterals = pluralParts.flatMap((p) => p.filter((p2) => !$6c7bd7858deea686$var$nonLiteralParts.has(p2.type)).map((p2) => $6c7bd7858deea686$var$escapeRegex(p2.value)));
  let sortedLiterals = [
    .../* @__PURE__ */ new Set([
      ...allPartsLiterals,
      ...pluralPartsLiterals
    ])
  ].sort((a, b) => b.length - a.length);
  let literals = sortedLiterals.length === 0 ? new RegExp("[\\p{White_Space}]", "gu") : new RegExp(`${sortedLiterals.join("|")}|[\\p{White_Space}]`, "gu");
  let numerals = [
    ...new Intl.NumberFormat(intlOptions.locale, {
      useGrouping: false
    }).format(9876543210)
  ].reverse();
  let indexes = new Map(numerals.map((d, i) => [
    d,
    i
  ]));
  let numeral = new RegExp(`[${numerals.join("")}]`, "g");
  let index = (d) => String(indexes.get(d));
  return {
    minusSign,
    plusSign,
    decimal,
    group,
    literals,
    numeral,
    index
  };
}
function $6c7bd7858deea686$var$replaceAll(str, find, replace) {
  if (str.replaceAll) return str.replaceAll(find, replace);
  return str.split(find).join(replace);
}
function $6c7bd7858deea686$var$escapeRegex(string) {
  return string.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
}

// node_modules/@react-aria/i18n/dist/useNumberFormatter.mjs
var import_react48 = __toESM(require_react(), 1);
function $a916eb452884faea$export$b7a616150fdb9f44(options = {}) {
  let { locale } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  return (0, import_react48.useMemo)(() => new (0, $488c6ddbf4ef74c2$export$cc77c4ff7e8673c5)(locale, options), [
    locale,
    options
  ]);
}

// node_modules/@react-aria/i18n/dist/useCollator.mjs
var $325a3faab7a68acd$var$cache = /* @__PURE__ */ new Map();
function $325a3faab7a68acd$export$a16aca283550c30d(options) {
  let { locale } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let cacheKey = locale + (options ? Object.entries(options).sort((a, b) => a[0] < b[0] ? -1 : 1).join() : "");
  if ($325a3faab7a68acd$var$cache.has(cacheKey)) return $325a3faab7a68acd$var$cache.get(cacheKey);
  let formatter = new Intl.Collator(locale, options);
  $325a3faab7a68acd$var$cache.set(cacheKey, formatter);
  return formatter;
}

// node_modules/@react-aria/i18n/dist/useFilter.mjs
var import_react49 = __toESM(require_react(), 1);
function $bb77f239b46e8c72$export$3274cf84b703fff(options) {
  let collator = (0, $325a3faab7a68acd$export$a16aca283550c30d)({
    usage: "search",
    ...options
  });
  let startsWith4 = (0, import_react49.useCallback)((string, substring) => {
    if (substring.length === 0) return true;
    string = string.normalize("NFC");
    substring = substring.normalize("NFC");
    return collator.compare(string.slice(0, substring.length), substring) === 0;
  }, [
    collator
  ]);
  let endsWith = (0, import_react49.useCallback)((string, substring) => {
    if (substring.length === 0) return true;
    string = string.normalize("NFC");
    substring = substring.normalize("NFC");
    return collator.compare(string.slice(-substring.length), substring) === 0;
  }, [
    collator
  ]);
  let contains = (0, import_react49.useCallback)((string, substring) => {
    if (substring.length === 0) return true;
    string = string.normalize("NFC");
    substring = substring.normalize("NFC");
    let scan = 0;
    let sliceLen = substring.length;
    for (; scan + sliceLen <= string.length; scan++) {
      let slice = string.slice(scan, scan + sliceLen);
      if (collator.compare(substring, slice) === 0) return true;
    }
    return false;
  }, [
    collator
  ]);
  return (0, import_react49.useMemo)(() => ({
    startsWith: startsWith4,
    endsWith,
    contains
  }), [
    startsWith4,
    endsWith,
    contains
  ]);
}

// node_modules/@react-aria/breadcrumbs/dist/useBreadcrumbs.mjs
function $parcel$interopDefault(a) {
  return a && a.__esModule ? a.default : a;
}
function $848231d7a2b3998e$export$8cefe241bd876ca0(props) {
  let { "aria-label": ariaLabel, ...otherProps } = props;
  let strings = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault($8229b34715874f89$exports)), "@react-aria/breadcrumbs");
  return {
    navProps: {
      ...(0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(otherProps, {
        labelable: true
      }),
      "aria-label": ariaLabel || strings.format("breadcrumbs")
    }
  };
}

// node_modules/@react-aria/button/dist/useButton.mjs
function $701a24aa0da5b062$export$ea18c227d4417cc3(props, ref) {
  let { elementType = "button", isDisabled, onPress, onPressStart, onPressEnd, onPressUp, onPressChange, preventFocusOnPress, allowFocusWhenDisabled, onClick, href, target, rel, type = "button" } = props;
  let additionalProps;
  if (elementType === "button") additionalProps = {
    type,
    disabled: isDisabled
  };
  else additionalProps = {
    role: "button",
    href: elementType === "a" && !isDisabled ? href : void 0,
    target: elementType === "a" ? target : void 0,
    type: elementType === "input" ? type : void 0,
    disabled: elementType === "input" ? isDisabled : void 0,
    "aria-disabled": !isDisabled || elementType === "input" ? void 0 : isDisabled,
    rel: elementType === "a" ? rel : void 0
  };
  let { pressProps, isPressed } = (0, $f6c31cce2adf654f$export$45712eceda6fad21)({
    onPressStart,
    onPressEnd,
    onPressChange,
    onPress,
    onPressUp,
    onClick,
    isDisabled,
    preventFocusOnPress,
    ref
  });
  let { focusableProps } = (0, $f645667febf57a63$export$4c014de7c8940b4c)(props, ref);
  if (allowFocusWhenDisabled) focusableProps.tabIndex = isDisabled ? -1 : focusableProps.tabIndex;
  let buttonProps = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(focusableProps, pressProps, (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props, {
    labelable: true
  }));
  return {
    isPressed,
    buttonProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(additionalProps, buttonProps, {
      "aria-haspopup": props["aria-haspopup"],
      "aria-expanded": props["aria-expanded"],
      "aria-controls": props["aria-controls"],
      "aria-pressed": props["aria-pressed"],
      "aria-current": props["aria-current"]
    })
  };
}

// node_modules/@react-aria/button/dist/useToggleButton.mjs
function $55f54f7887471b58$export$51e84d46ca0bc451(props, state, ref) {
  const { isSelected } = state;
  const { isPressed, buttonProps } = (0, $701a24aa0da5b062$export$ea18c227d4417cc3)({
    ...props,
    onPress: (0, $ff5963eb1fccf552$export$e08e3b67e392101e)(state.toggle, props.onPress)
  }, ref);
  return {
    isPressed,
    isSelected,
    isDisabled: props.isDisabled || false,
    buttonProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(buttonProps, {
      "aria-pressed": isSelected
    })
  };
}

// node_modules/@react-aria/focus/dist/isElementVisible.mjs
function $645f2e67b85a24c9$var$isStyleVisible(element) {
  const windowObject = (0, $431fbd86ca7dc216$export$f21a1ffae260145a)(element);
  if (!(element instanceof windowObject.HTMLElement) && !(element instanceof windowObject.SVGElement)) return false;
  let { display, visibility } = element.style;
  let isVisible = display !== "none" && visibility !== "hidden" && visibility !== "collapse";
  if (isVisible) {
    const { getComputedStyle: getComputedStyle2 } = element.ownerDocument.defaultView;
    let { display: computedDisplay, visibility: computedVisibility } = getComputedStyle2(element);
    isVisible = computedDisplay !== "none" && computedVisibility !== "hidden" && computedVisibility !== "collapse";
  }
  return isVisible;
}
function $645f2e67b85a24c9$var$isAttributeVisible(element, childElement) {
  return !element.hasAttribute("hidden") && // Ignore HiddenSelect when tree walking.
  !element.hasAttribute("data-react-aria-prevent-focus") && (element.nodeName === "DETAILS" && childElement && childElement.nodeName !== "SUMMARY" ? element.hasAttribute("open") : true);
}
function $645f2e67b85a24c9$export$e989c0fffaa6b27a(element, childElement) {
  return element.nodeName !== "#comment" && $645f2e67b85a24c9$var$isStyleVisible(element) && $645f2e67b85a24c9$var$isAttributeVisible(element, childElement) && (!element.parentElement || $645f2e67b85a24c9$export$e989c0fffaa6b27a(element.parentElement, element));
}

// node_modules/@react-aria/focus/dist/FocusScope.mjs
var import_react50 = __toESM(require_react(), 1);
var $9bf71ea28793e738$var$FocusContext = (0, import_react50.default).createContext(null);
var $9bf71ea28793e738$var$RESTORE_FOCUS_EVENT = "react-aria-focus-scope-restore";
var $9bf71ea28793e738$var$activeScope = null;
function $9bf71ea28793e738$export$20e40289641fbbb6(props) {
  let { children, contain, restoreFocus, autoFocus } = props;
  let startRef = (0, import_react50.useRef)(null);
  let endRef = (0, import_react50.useRef)(null);
  let scopeRef = (0, import_react50.useRef)([]);
  let { parentNode } = (0, import_react50.useContext)($9bf71ea28793e738$var$FocusContext) || {};
  let node = (0, import_react50.useMemo)(() => new $9bf71ea28793e738$var$TreeNode({
    scopeRef
  }), [
    scopeRef
  ]);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    let parent = parentNode || $9bf71ea28793e738$export$d06fae2ee68b101e.root;
    if ($9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(parent.scopeRef) && $9bf71ea28793e738$var$activeScope && !$9bf71ea28793e738$var$isAncestorScope($9bf71ea28793e738$var$activeScope, parent.scopeRef)) {
      let activeNode = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode($9bf71ea28793e738$var$activeScope);
      if (activeNode) parent = activeNode;
    }
    parent.addChild(node);
    $9bf71ea28793e738$export$d06fae2ee68b101e.addNode(node);
  }, [
    node,
    parentNode
  ]);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    let node2 = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scopeRef);
    if (node2) node2.contain = !!contain;
  }, [
    contain
  ]);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    var _startRef_current;
    let node2 = (_startRef_current = startRef.current) === null || _startRef_current === void 0 ? void 0 : _startRef_current.nextSibling;
    let nodes = [];
    let stopPropagation = (e) => e.stopPropagation();
    while (node2 && node2 !== endRef.current) {
      nodes.push(node2);
      node2.addEventListener($9bf71ea28793e738$var$RESTORE_FOCUS_EVENT, stopPropagation);
      node2 = node2.nextSibling;
    }
    scopeRef.current = nodes;
    return () => {
      for (let node3 of nodes) node3.removeEventListener($9bf71ea28793e738$var$RESTORE_FOCUS_EVENT, stopPropagation);
    };
  }, [
    children
  ]);
  $9bf71ea28793e738$var$useActiveScopeTracker(scopeRef, restoreFocus, contain);
  $9bf71ea28793e738$var$useFocusContainment(scopeRef, contain);
  $9bf71ea28793e738$var$useRestoreFocus(scopeRef, restoreFocus, contain);
  $9bf71ea28793e738$var$useAutoFocus(scopeRef, autoFocus);
  (0, import_react50.useEffect)(() => {
    const activeElement = (0, $d4ee10de306f2510$export$cd4e5573fbe2b576)((0, $431fbd86ca7dc216$export$b204af158042fbac)(scopeRef.current ? scopeRef.current[0] : void 0));
    let scope = null;
    if ($9bf71ea28793e738$var$isElementInScope(activeElement, scopeRef.current)) {
      for (let node2 of $9bf71ea28793e738$export$d06fae2ee68b101e.traverse()) if (node2.scopeRef && $9bf71ea28793e738$var$isElementInScope(activeElement, node2.scopeRef.current)) scope = node2;
      if (scope === $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scopeRef)) $9bf71ea28793e738$var$activeScope = scope.scopeRef;
    }
  }, [
    scopeRef
  ]);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    return () => {
      var _focusScopeTree_getTreeNode_parent, _focusScopeTree_getTreeNode;
      var _focusScopeTree_getTreeNode_parent_scopeRef;
      let parentScope = (_focusScopeTree_getTreeNode_parent_scopeRef = (_focusScopeTree_getTreeNode = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scopeRef)) === null || _focusScopeTree_getTreeNode === void 0 ? void 0 : (_focusScopeTree_getTreeNode_parent = _focusScopeTree_getTreeNode.parent) === null || _focusScopeTree_getTreeNode_parent === void 0 ? void 0 : _focusScopeTree_getTreeNode_parent.scopeRef) !== null && _focusScopeTree_getTreeNode_parent_scopeRef !== void 0 ? _focusScopeTree_getTreeNode_parent_scopeRef : null;
      if ((scopeRef === $9bf71ea28793e738$var$activeScope || $9bf71ea28793e738$var$isAncestorScope(scopeRef, $9bf71ea28793e738$var$activeScope)) && (!parentScope || $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(parentScope))) $9bf71ea28793e738$var$activeScope = parentScope;
      $9bf71ea28793e738$export$d06fae2ee68b101e.removeTreeNode(scopeRef);
    };
  }, [
    scopeRef
  ]);
  let focusManager = (0, import_react50.useMemo)(() => $9bf71ea28793e738$var$createFocusManagerForScope(scopeRef), []);
  let value = (0, import_react50.useMemo)(() => ({
    focusManager,
    parentNode: node
  }), [
    node,
    focusManager
  ]);
  return (0, import_react50.default).createElement($9bf71ea28793e738$var$FocusContext.Provider, {
    value
  }, (0, import_react50.default).createElement("span", {
    "data-focus-scope-start": true,
    hidden: true,
    ref: startRef
  }), children, (0, import_react50.default).createElement("span", {
    "data-focus-scope-end": true,
    hidden: true,
    ref: endRef
  }));
}
function $9bf71ea28793e738$var$createFocusManagerForScope(scopeRef) {
  return {
    focusNext(opts = {}) {
      let scope = scopeRef.current;
      let { from, tabbable, wrap, accept } = opts;
      var _scope_;
      let node = from || (0, $d4ee10de306f2510$export$cd4e5573fbe2b576)((0, $431fbd86ca7dc216$export$b204af158042fbac)((_scope_ = scope[0]) !== null && _scope_ !== void 0 ? _scope_ : void 0));
      let sentinel = scope[0].previousElementSibling;
      let scopeRoot = $9bf71ea28793e738$var$getScopeRoot(scope);
      let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(scopeRoot, {
        tabbable,
        accept
      }, scope);
      walker.currentNode = $9bf71ea28793e738$var$isElementInScope(node, scope) ? node : sentinel;
      let nextNode = walker.nextNode();
      if (!nextNode && wrap) {
        walker.currentNode = sentinel;
        nextNode = walker.nextNode();
      }
      if (nextNode) $9bf71ea28793e738$var$focusElement(nextNode, true);
      return nextNode;
    },
    focusPrevious(opts = {}) {
      let scope = scopeRef.current;
      let { from, tabbable, wrap, accept } = opts;
      var _scope_;
      let node = from || (0, $d4ee10de306f2510$export$cd4e5573fbe2b576)((0, $431fbd86ca7dc216$export$b204af158042fbac)((_scope_ = scope[0]) !== null && _scope_ !== void 0 ? _scope_ : void 0));
      let sentinel = scope[scope.length - 1].nextElementSibling;
      let scopeRoot = $9bf71ea28793e738$var$getScopeRoot(scope);
      let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(scopeRoot, {
        tabbable,
        accept
      }, scope);
      walker.currentNode = $9bf71ea28793e738$var$isElementInScope(node, scope) ? node : sentinel;
      let previousNode = walker.previousNode();
      if (!previousNode && wrap) {
        walker.currentNode = sentinel;
        previousNode = walker.previousNode();
      }
      if (previousNode) $9bf71ea28793e738$var$focusElement(previousNode, true);
      return previousNode;
    },
    focusFirst(opts = {}) {
      let scope = scopeRef.current;
      let { tabbable, accept } = opts;
      let scopeRoot = $9bf71ea28793e738$var$getScopeRoot(scope);
      let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(scopeRoot, {
        tabbable,
        accept
      }, scope);
      walker.currentNode = scope[0].previousElementSibling;
      let nextNode = walker.nextNode();
      if (nextNode) $9bf71ea28793e738$var$focusElement(nextNode, true);
      return nextNode;
    },
    focusLast(opts = {}) {
      let scope = scopeRef.current;
      let { tabbable, accept } = opts;
      let scopeRoot = $9bf71ea28793e738$var$getScopeRoot(scope);
      let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(scopeRoot, {
        tabbable,
        accept
      }, scope);
      walker.currentNode = scope[scope.length - 1].nextElementSibling;
      let previousNode = walker.previousNode();
      if (previousNode) $9bf71ea28793e738$var$focusElement(previousNode, true);
      return previousNode;
    }
  };
}
function $9bf71ea28793e738$var$getScopeRoot(scope) {
  return scope[0].parentElement;
}
function $9bf71ea28793e738$var$shouldContainFocus(scopeRef) {
  let scope = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode($9bf71ea28793e738$var$activeScope);
  while (scope && scope.scopeRef !== scopeRef) {
    if (scope.contain) return false;
    scope = scope.parent;
  }
  return true;
}
function $9bf71ea28793e738$var$useFocusContainment(scopeRef, contain) {
  let focusedNode = (0, import_react50.useRef)(void 0);
  let raf = (0, import_react50.useRef)(void 0);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    let scope = scopeRef.current;
    if (!contain) {
      if (raf.current) {
        cancelAnimationFrame(raf.current);
        raf.current = void 0;
      }
      return;
    }
    const ownerDocument = (0, $431fbd86ca7dc216$export$b204af158042fbac)(scope ? scope[0] : void 0);
    let onKeyDown = (e) => {
      if (e.key !== "Tab" || e.altKey || e.ctrlKey || e.metaKey || !$9bf71ea28793e738$var$shouldContainFocus(scopeRef) || e.isComposing) return;
      let focusedElement = (0, $d4ee10de306f2510$export$cd4e5573fbe2b576)(ownerDocument);
      let scope2 = scopeRef.current;
      if (!scope2 || !$9bf71ea28793e738$var$isElementInScope(focusedElement, scope2)) return;
      let scopeRoot = $9bf71ea28793e738$var$getScopeRoot(scope2);
      let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(scopeRoot, {
        tabbable: true
      }, scope2);
      if (!focusedElement) return;
      walker.currentNode = focusedElement;
      let nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode();
      if (!nextElement) {
        walker.currentNode = e.shiftKey ? scope2[scope2.length - 1].nextElementSibling : scope2[0].previousElementSibling;
        nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode();
      }
      e.preventDefault();
      if (nextElement) $9bf71ea28793e738$var$focusElement(nextElement, true);
    };
    let onFocus = (e) => {
      if ((!$9bf71ea28793e738$var$activeScope || $9bf71ea28793e738$var$isAncestorScope($9bf71ea28793e738$var$activeScope, scopeRef)) && $9bf71ea28793e738$var$isElementInScope((0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e), scopeRef.current)) {
        $9bf71ea28793e738$var$activeScope = scopeRef;
        focusedNode.current = (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e);
      } else if ($9bf71ea28793e738$var$shouldContainFocus(scopeRef) && !$9bf71ea28793e738$var$isElementInChildScope((0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e), scopeRef)) {
        if (focusedNode.current) focusedNode.current.focus();
        else if ($9bf71ea28793e738$var$activeScope && $9bf71ea28793e738$var$activeScope.current) $9bf71ea28793e738$var$focusFirstInScope($9bf71ea28793e738$var$activeScope.current);
      } else if ($9bf71ea28793e738$var$shouldContainFocus(scopeRef)) focusedNode.current = (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e);
    };
    let onBlur = (e) => {
      if (raf.current) cancelAnimationFrame(raf.current);
      raf.current = requestAnimationFrame(() => {
        let modality = (0, $507fabe10e71c6fb$export$630ff653c5ada6a9)();
        let shouldSkipFocusRestore = (modality === "virtual" || modality === null) && (0, $c87311424ea30a05$export$a11b0059900ceec8)() && (0, $c87311424ea30a05$export$6446a186d09e379e)();
        let activeElement = (0, $d4ee10de306f2510$export$cd4e5573fbe2b576)(ownerDocument);
        if (!shouldSkipFocusRestore && activeElement && $9bf71ea28793e738$var$shouldContainFocus(scopeRef) && !$9bf71ea28793e738$var$isElementInChildScope(activeElement, scopeRef)) {
          $9bf71ea28793e738$var$activeScope = scopeRef;
          let target = (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e);
          if (target && target.isConnected) {
            var _focusedNode_current;
            focusedNode.current = target;
            (_focusedNode_current = focusedNode.current) === null || _focusedNode_current === void 0 ? void 0 : _focusedNode_current.focus();
          } else if ($9bf71ea28793e738$var$activeScope.current) $9bf71ea28793e738$var$focusFirstInScope($9bf71ea28793e738$var$activeScope.current);
        }
      });
    };
    ownerDocument.addEventListener("keydown", onKeyDown, false);
    ownerDocument.addEventListener("focusin", onFocus, false);
    scope === null || scope === void 0 ? void 0 : scope.forEach((element) => element.addEventListener("focusin", onFocus, false));
    scope === null || scope === void 0 ? void 0 : scope.forEach((element) => element.addEventListener("focusout", onBlur, false));
    return () => {
      ownerDocument.removeEventListener("keydown", onKeyDown, false);
      ownerDocument.removeEventListener("focusin", onFocus, false);
      scope === null || scope === void 0 ? void 0 : scope.forEach((element) => element.removeEventListener("focusin", onFocus, false));
      scope === null || scope === void 0 ? void 0 : scope.forEach((element) => element.removeEventListener("focusout", onBlur, false));
    };
  }, [
    scopeRef,
    contain
  ]);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    return () => {
      if (raf.current) cancelAnimationFrame(raf.current);
    };
  }, [
    raf
  ]);
}
function $9bf71ea28793e738$var$isElementInAnyScope(element) {
  return $9bf71ea28793e738$var$isElementInChildScope(element);
}
function $9bf71ea28793e738$var$isElementInScope(element, scope) {
  if (!element) return false;
  if (!scope) return false;
  return scope.some((node) => node.contains(element));
}
function $9bf71ea28793e738$var$isElementInChildScope(element, scope = null) {
  if (element instanceof Element && element.closest("[data-react-aria-top-layer]")) return true;
  for (let { scopeRef: s } of $9bf71ea28793e738$export$d06fae2ee68b101e.traverse($9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scope))) {
    if (s && $9bf71ea28793e738$var$isElementInScope(element, s.current)) return true;
  }
  return false;
}
function $9bf71ea28793e738$export$1258395f99bf9cbf(element) {
  return $9bf71ea28793e738$var$isElementInChildScope(element, $9bf71ea28793e738$var$activeScope);
}
function $9bf71ea28793e738$var$isAncestorScope(ancestor, scope) {
  var _focusScopeTree_getTreeNode;
  let parent = (_focusScopeTree_getTreeNode = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scope)) === null || _focusScopeTree_getTreeNode === void 0 ? void 0 : _focusScopeTree_getTreeNode.parent;
  while (parent) {
    if (parent.scopeRef === ancestor) return true;
    parent = parent.parent;
  }
  return false;
}
function $9bf71ea28793e738$var$focusElement(element, scroll = false) {
  if (element != null && !scroll) try {
    (0, $3ad3f6e1647bc98d$export$80f3e147d781571c)(element);
  } catch {
  }
  else if (element != null) try {
    element.focus();
  } catch {
  }
}
function $9bf71ea28793e738$var$getFirstInScope(scope, tabbable = true) {
  let sentinel = scope[0].previousElementSibling;
  let scopeRoot = $9bf71ea28793e738$var$getScopeRoot(scope);
  let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(scopeRoot, {
    tabbable
  }, scope);
  walker.currentNode = sentinel;
  let nextNode = walker.nextNode();
  if (tabbable && !nextNode) {
    scopeRoot = $9bf71ea28793e738$var$getScopeRoot(scope);
    walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(scopeRoot, {
      tabbable: false
    }, scope);
    walker.currentNode = sentinel;
    nextNode = walker.nextNode();
  }
  return nextNode;
}
function $9bf71ea28793e738$var$focusFirstInScope(scope, tabbable = true) {
  $9bf71ea28793e738$var$focusElement($9bf71ea28793e738$var$getFirstInScope(scope, tabbable));
}
function $9bf71ea28793e738$var$useAutoFocus(scopeRef, autoFocus) {
  const autoFocusRef = (0, import_react50.default).useRef(autoFocus);
  (0, import_react50.useEffect)(() => {
    if (autoFocusRef.current) {
      $9bf71ea28793e738$var$activeScope = scopeRef;
      const ownerDocument = (0, $431fbd86ca7dc216$export$b204af158042fbac)(scopeRef.current ? scopeRef.current[0] : void 0);
      if (!$9bf71ea28793e738$var$isElementInScope((0, $d4ee10de306f2510$export$cd4e5573fbe2b576)(ownerDocument), $9bf71ea28793e738$var$activeScope.current) && scopeRef.current) $9bf71ea28793e738$var$focusFirstInScope(scopeRef.current);
    }
    autoFocusRef.current = false;
  }, [
    scopeRef
  ]);
}
function $9bf71ea28793e738$var$useActiveScopeTracker(scopeRef, restore, contain) {
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    if (restore || contain) return;
    let scope = scopeRef.current;
    const ownerDocument = (0, $431fbd86ca7dc216$export$b204af158042fbac)(scope ? scope[0] : void 0);
    let onFocus = (e) => {
      let target = (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e);
      if ($9bf71ea28793e738$var$isElementInScope(target, scopeRef.current)) $9bf71ea28793e738$var$activeScope = scopeRef;
      else if (!$9bf71ea28793e738$var$isElementInAnyScope(target)) $9bf71ea28793e738$var$activeScope = null;
    };
    ownerDocument.addEventListener("focusin", onFocus, false);
    scope === null || scope === void 0 ? void 0 : scope.forEach((element) => element.addEventListener("focusin", onFocus, false));
    return () => {
      ownerDocument.removeEventListener("focusin", onFocus, false);
      scope === null || scope === void 0 ? void 0 : scope.forEach((element) => element.removeEventListener("focusin", onFocus, false));
    };
  }, [
    scopeRef,
    restore,
    contain
  ]);
}
function $9bf71ea28793e738$var$shouldRestoreFocus(scopeRef) {
  let scope = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode($9bf71ea28793e738$var$activeScope);
  while (scope && scope.scopeRef !== scopeRef) {
    if (scope.nodeToRestore) return false;
    scope = scope.parent;
  }
  return (scope === null || scope === void 0 ? void 0 : scope.scopeRef) === scopeRef;
}
function $9bf71ea28793e738$var$useRestoreFocus(scopeRef, restoreFocus, contain) {
  const nodeToRestoreRef = (0, import_react50.useRef)(typeof document !== "undefined" ? (0, $d4ee10de306f2510$export$cd4e5573fbe2b576)((0, $431fbd86ca7dc216$export$b204af158042fbac)(scopeRef.current ? scopeRef.current[0] : void 0)) : null);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    let scope = scopeRef.current;
    const ownerDocument = (0, $431fbd86ca7dc216$export$b204af158042fbac)(scope ? scope[0] : void 0);
    if (!restoreFocus || contain) return;
    let onFocus = () => {
      if ((!$9bf71ea28793e738$var$activeScope || $9bf71ea28793e738$var$isAncestorScope($9bf71ea28793e738$var$activeScope, scopeRef)) && $9bf71ea28793e738$var$isElementInScope((0, $d4ee10de306f2510$export$cd4e5573fbe2b576)(ownerDocument), scopeRef.current)) $9bf71ea28793e738$var$activeScope = scopeRef;
    };
    ownerDocument.addEventListener("focusin", onFocus, false);
    scope === null || scope === void 0 ? void 0 : scope.forEach((element) => element.addEventListener("focusin", onFocus, false));
    return () => {
      ownerDocument.removeEventListener("focusin", onFocus, false);
      scope === null || scope === void 0 ? void 0 : scope.forEach((element) => element.removeEventListener("focusin", onFocus, false));
    };
  }, [
    scopeRef,
    contain
  ]);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    const ownerDocument = (0, $431fbd86ca7dc216$export$b204af158042fbac)(scopeRef.current ? scopeRef.current[0] : void 0);
    if (!restoreFocus) return;
    let onKeyDown = (e) => {
      if (e.key !== "Tab" || e.altKey || e.ctrlKey || e.metaKey || !$9bf71ea28793e738$var$shouldContainFocus(scopeRef) || e.isComposing) return;
      let focusedElement = ownerDocument.activeElement;
      if (!$9bf71ea28793e738$var$isElementInChildScope(focusedElement, scopeRef) || !$9bf71ea28793e738$var$shouldRestoreFocus(scopeRef)) return;
      let treeNode = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scopeRef);
      if (!treeNode) return;
      let nodeToRestore = treeNode.nodeToRestore;
      let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(ownerDocument.body, {
        tabbable: true
      });
      walker.currentNode = focusedElement;
      let nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode();
      if (!nodeToRestore || !nodeToRestore.isConnected || nodeToRestore === ownerDocument.body) {
        nodeToRestore = void 0;
        treeNode.nodeToRestore = void 0;
      }
      if ((!nextElement || !$9bf71ea28793e738$var$isElementInChildScope(nextElement, scopeRef)) && nodeToRestore) {
        walker.currentNode = nodeToRestore;
        do
          nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode();
        while ($9bf71ea28793e738$var$isElementInChildScope(nextElement, scopeRef));
        e.preventDefault();
        e.stopPropagation();
        if (nextElement) $9bf71ea28793e738$var$focusElement(nextElement, true);
        else if (!$9bf71ea28793e738$var$isElementInAnyScope(nodeToRestore)) focusedElement.blur();
        else $9bf71ea28793e738$var$focusElement(nodeToRestore, true);
      }
    };
    if (!contain) ownerDocument.addEventListener("keydown", onKeyDown, true);
    return () => {
      if (!contain) ownerDocument.removeEventListener("keydown", onKeyDown, true);
    };
  }, [
    scopeRef,
    restoreFocus,
    contain
  ]);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    const ownerDocument = (0, $431fbd86ca7dc216$export$b204af158042fbac)(scopeRef.current ? scopeRef.current[0] : void 0);
    if (!restoreFocus) return;
    let treeNode = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scopeRef);
    if (!treeNode) return;
    var _nodeToRestoreRef_current;
    treeNode.nodeToRestore = (_nodeToRestoreRef_current = nodeToRestoreRef.current) !== null && _nodeToRestoreRef_current !== void 0 ? _nodeToRestoreRef_current : void 0;
    return () => {
      let treeNode2 = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scopeRef);
      if (!treeNode2) return;
      let nodeToRestore = treeNode2.nodeToRestore;
      let activeElement = (0, $d4ee10de306f2510$export$cd4e5573fbe2b576)(ownerDocument);
      if (restoreFocus && nodeToRestore && (activeElement && $9bf71ea28793e738$var$isElementInChildScope(activeElement, scopeRef) || activeElement === ownerDocument.body && $9bf71ea28793e738$var$shouldRestoreFocus(scopeRef))) {
        let clonedTree = $9bf71ea28793e738$export$d06fae2ee68b101e.clone();
        requestAnimationFrame(() => {
          if (ownerDocument.activeElement === ownerDocument.body) {
            let treeNode3 = clonedTree.getTreeNode(scopeRef);
            while (treeNode3) {
              if (treeNode3.nodeToRestore && treeNode3.nodeToRestore.isConnected) {
                $9bf71ea28793e738$var$restoreFocusToElement(treeNode3.nodeToRestore);
                return;
              }
              treeNode3 = treeNode3.parent;
            }
            treeNode3 = clonedTree.getTreeNode(scopeRef);
            while (treeNode3) {
              if (treeNode3.scopeRef && treeNode3.scopeRef.current && $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(treeNode3.scopeRef)) {
                let node = $9bf71ea28793e738$var$getFirstInScope(treeNode3.scopeRef.current, true);
                $9bf71ea28793e738$var$restoreFocusToElement(node);
                return;
              }
              treeNode3 = treeNode3.parent;
            }
          }
        });
      }
    };
  }, [
    scopeRef,
    restoreFocus
  ]);
}
function $9bf71ea28793e738$var$restoreFocusToElement(node) {
  if (node.dispatchEvent(new CustomEvent($9bf71ea28793e738$var$RESTORE_FOCUS_EVENT, {
    bubbles: true,
    cancelable: true
  }))) $9bf71ea28793e738$var$focusElement(node);
}
function $9bf71ea28793e738$export$2d6ec8fc375ceafa(root, opts, scope) {
  let filter = (opts === null || opts === void 0 ? void 0 : opts.tabbable) ? (0, $b4b717babfbb907b$export$bebd5a1431fec25d) : (0, $b4b717babfbb907b$export$4c063cf1350e6fed);
  let rootElement = (root === null || root === void 0 ? void 0 : root.nodeType) === Node.ELEMENT_NODE ? root : null;
  let doc = (0, $431fbd86ca7dc216$export$b204af158042fbac)(rootElement);
  let walker = (0, $dfc540311bf7f109$export$4d0f8be8b12a7ef6)(doc, root || doc, NodeFilter.SHOW_ELEMENT, {
    acceptNode(node) {
      var _opts_from;
      if (opts === null || opts === void 0 ? void 0 : (_opts_from = opts.from) === null || _opts_from === void 0 ? void 0 : _opts_from.contains(node)) return NodeFilter.FILTER_REJECT;
      if (filter(node) && (0, $645f2e67b85a24c9$export$e989c0fffaa6b27a)(node) && (!scope || $9bf71ea28793e738$var$isElementInScope(node, scope)) && (!(opts === null || opts === void 0 ? void 0 : opts.accept) || opts.accept(node))) return NodeFilter.FILTER_ACCEPT;
      return NodeFilter.FILTER_SKIP;
    }
  });
  if (opts === null || opts === void 0 ? void 0 : opts.from) walker.currentNode = opts.from;
  return walker;
}
function $9bf71ea28793e738$export$c5251b9e124bf29(ref, defaultOptions = {}) {
  return {
    focusNext(opts = {}) {
      let root = ref.current;
      if (!root) return null;
      let { from, tabbable = defaultOptions.tabbable, wrap = defaultOptions.wrap, accept = defaultOptions.accept } = opts;
      let node = from || (0, $d4ee10de306f2510$export$cd4e5573fbe2b576)((0, $431fbd86ca7dc216$export$b204af158042fbac)(root));
      let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(root, {
        tabbable,
        accept
      });
      if (root.contains(node)) walker.currentNode = node;
      let nextNode = walker.nextNode();
      if (!nextNode && wrap) {
        walker.currentNode = root;
        nextNode = walker.nextNode();
      }
      if (nextNode) $9bf71ea28793e738$var$focusElement(nextNode, true);
      return nextNode;
    },
    focusPrevious(opts = defaultOptions) {
      let root = ref.current;
      if (!root) return null;
      let { from, tabbable = defaultOptions.tabbable, wrap = defaultOptions.wrap, accept = defaultOptions.accept } = opts;
      let node = from || (0, $d4ee10de306f2510$export$cd4e5573fbe2b576)((0, $431fbd86ca7dc216$export$b204af158042fbac)(root));
      let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(root, {
        tabbable,
        accept
      });
      if (root.contains(node)) walker.currentNode = node;
      else {
        let next = $9bf71ea28793e738$var$last(walker);
        if (next) $9bf71ea28793e738$var$focusElement(next, true);
        return next !== null && next !== void 0 ? next : null;
      }
      let previousNode = walker.previousNode();
      if (!previousNode && wrap) {
        walker.currentNode = root;
        let lastNode = $9bf71ea28793e738$var$last(walker);
        if (!lastNode)
          return null;
        previousNode = lastNode;
      }
      if (previousNode) $9bf71ea28793e738$var$focusElement(previousNode, true);
      return previousNode !== null && previousNode !== void 0 ? previousNode : null;
    },
    focusFirst(opts = defaultOptions) {
      let root = ref.current;
      if (!root) return null;
      let { tabbable = defaultOptions.tabbable, accept = defaultOptions.accept } = opts;
      let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(root, {
        tabbable,
        accept
      });
      let nextNode = walker.nextNode();
      if (nextNode) $9bf71ea28793e738$var$focusElement(nextNode, true);
      return nextNode;
    },
    focusLast(opts = defaultOptions) {
      let root = ref.current;
      if (!root) return null;
      let { tabbable = defaultOptions.tabbable, accept = defaultOptions.accept } = opts;
      let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(root, {
        tabbable,
        accept
      });
      let next = $9bf71ea28793e738$var$last(walker);
      if (next) $9bf71ea28793e738$var$focusElement(next, true);
      return next !== null && next !== void 0 ? next : null;
    }
  };
}
function $9bf71ea28793e738$var$last(walker) {
  let next = void 0;
  let last;
  do {
    last = walker.lastChild();
    if (last) next = last;
  } while (last);
  return next;
}
var $9bf71ea28793e738$var$Tree = class _$9bf71ea28793e738$var$Tree {
  get size() {
    return this.fastMap.size;
  }
  getTreeNode(data) {
    return this.fastMap.get(data);
  }
  addTreeNode(scopeRef, parent, nodeToRestore) {
    let parentNode = this.fastMap.get(parent !== null && parent !== void 0 ? parent : null);
    if (!parentNode) return;
    let node = new $9bf71ea28793e738$var$TreeNode({
      scopeRef
    });
    parentNode.addChild(node);
    node.parent = parentNode;
    this.fastMap.set(scopeRef, node);
    if (nodeToRestore) node.nodeToRestore = nodeToRestore;
  }
  addNode(node) {
    this.fastMap.set(node.scopeRef, node);
  }
  removeTreeNode(scopeRef) {
    if (scopeRef === null) return;
    let node = this.fastMap.get(scopeRef);
    if (!node) return;
    let parentNode = node.parent;
    for (let current of this.traverse()) if (current !== node && node.nodeToRestore && current.nodeToRestore && node.scopeRef && node.scopeRef.current && $9bf71ea28793e738$var$isElementInScope(current.nodeToRestore, node.scopeRef.current)) current.nodeToRestore = node.nodeToRestore;
    let children = node.children;
    if (parentNode) {
      parentNode.removeChild(node);
      if (children.size > 0) children.forEach((child) => parentNode && parentNode.addChild(child));
    }
    this.fastMap.delete(node.scopeRef);
  }
  // Pre Order Depth First
  *traverse(node = this.root) {
    if (node.scopeRef != null) yield node;
    if (node.children.size > 0) for (let child of node.children) yield* this.traverse(child);
  }
  clone() {
    var _node_parent;
    let newTree = new _$9bf71ea28793e738$var$Tree();
    var _node_parent_scopeRef;
    for (let node of this.traverse()) newTree.addTreeNode(node.scopeRef, (_node_parent_scopeRef = (_node_parent = node.parent) === null || _node_parent === void 0 ? void 0 : _node_parent.scopeRef) !== null && _node_parent_scopeRef !== void 0 ? _node_parent_scopeRef : null, node.nodeToRestore);
    return newTree;
  }
  constructor() {
    this.fastMap = /* @__PURE__ */ new Map();
    this.root = new $9bf71ea28793e738$var$TreeNode({
      scopeRef: null
    });
    this.fastMap.set(null, this.root);
  }
};
var $9bf71ea28793e738$var$TreeNode = class {
  addChild(node) {
    this.children.add(node);
    node.parent = this;
  }
  removeChild(node) {
    this.children.delete(node);
    node.parent = void 0;
  }
  constructor(props) {
    this.children = /* @__PURE__ */ new Set();
    this.contain = false;
    this.scopeRef = props.scopeRef;
  }
};
var $9bf71ea28793e738$export$d06fae2ee68b101e = new $9bf71ea28793e738$var$Tree();

// node_modules/@react-aria/focus/dist/useFocusRing.mjs
var import_react51 = __toESM(require_react(), 1);
function $f7dceffc5ad7768b$export$4e328f61c538687f(props = {}) {
  let { autoFocus = false, isTextInput, within } = props;
  let state = (0, import_react51.useRef)({
    isFocused: false,
    isFocusVisible: autoFocus || (0, $507fabe10e71c6fb$export$b9b3dfddab17db27)()
  });
  let [isFocused, setFocused] = (0, import_react51.useState)(false);
  let [isFocusVisibleState, setFocusVisible] = (0, import_react51.useState)(() => state.current.isFocused && state.current.isFocusVisible);
  let updateState = (0, import_react51.useCallback)(() => setFocusVisible(state.current.isFocused && state.current.isFocusVisible), []);
  let onFocusChange = (0, import_react51.useCallback)((isFocused2) => {
    state.current.isFocused = isFocused2;
    setFocused(isFocused2);
    updateState();
  }, [
    updateState
  ]);
  (0, $507fabe10e71c6fb$export$ec71b4b83ac08ec3)((isFocusVisible) => {
    state.current.isFocusVisible = isFocusVisible;
    updateState();
  }, [], {
    isTextInput
  });
  let { focusProps } = (0, $a1ea59d68270f0dd$export$f8168d8dd8fd66e6)({
    isDisabled: within,
    onFocusChange
  });
  let { focusWithinProps } = (0, $9ab94262bd0047c7$export$420e68273165f4ec)({
    isDisabled: !within,
    onFocusWithinChange: onFocusChange
  });
  return {
    isFocused,
    isFocusVisible: isFocusVisibleState,
    focusProps: within ? focusWithinProps : focusProps
  };
}

// node_modules/@react-aria/focus/dist/FocusRing.mjs
var import_react52 = __toESM(require_react(), 1);

// node_modules/@react-aria/focus/dist/useHasTabbableChild.mjs
var import_react53 = __toESM(require_react(), 1);
function $83013635b024ae3d$export$eac1895992b9f3d6(ref, options) {
  let isDisabled = options === null || options === void 0 ? void 0 : options.isDisabled;
  let [hasTabbableChild, setHasTabbableChild] = (0, import_react53.useState)(false);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    if ((ref === null || ref === void 0 ? void 0 : ref.current) && !isDisabled) {
      let update = () => {
        if (ref.current) {
          let walker = (0, $9bf71ea28793e738$export$2d6ec8fc375ceafa)(ref.current, {
            tabbable: true
          });
          setHasTabbableChild(!!walker.nextNode());
        }
      };
      update();
      let observer = new MutationObserver(update);
      observer.observe(ref.current, {
        subtree: true,
        childList: true,
        attributes: true,
        attributeFilter: [
          "tabIndex",
          "disabled"
        ]
      });
      return () => {
        observer.disconnect();
      };
    }
  });
  return isDisabled ? false : hasTabbableChild;
}

// node_modules/@react-aria/focus/dist/virtualFocus.mjs
function $55f9b1ae81f22853$export$76e4e37e5339496d(to) {
  let from = $55f9b1ae81f22853$export$759df0d867455a91((0, $431fbd86ca7dc216$export$b204af158042fbac)(to));
  if (from !== to) {
    if (from) $55f9b1ae81f22853$export$6c5dc7e81d2cc29a(from, to);
    if (to) $55f9b1ae81f22853$export$2b35b76d2e30e129(to, from);
  }
}
function $55f9b1ae81f22853$export$6c5dc7e81d2cc29a(from, to) {
  from.dispatchEvent(new FocusEvent("blur", {
    relatedTarget: to
  }));
  from.dispatchEvent(new FocusEvent("focusout", {
    bubbles: true,
    relatedTarget: to
  }));
}
function $55f9b1ae81f22853$export$2b35b76d2e30e129(to, from) {
  to.dispatchEvent(new FocusEvent("focus", {
    relatedTarget: from
  }));
  to.dispatchEvent(new FocusEvent("focusin", {
    bubbles: true,
    relatedTarget: from
  }));
}
function $55f9b1ae81f22853$export$759df0d867455a91(document2) {
  let activeElement = (0, $d4ee10de306f2510$export$cd4e5573fbe2b576)(document2);
  let activeDescendant = activeElement === null || activeElement === void 0 ? void 0 : activeElement.getAttribute("aria-activedescendant");
  if (activeDescendant) return document2.getElementById(activeDescendant) || activeElement;
  return activeElement;
}

// node_modules/@react-aria/toolbar/dist/useToolbar.mjs
var import_react54 = __toESM(require_react(), 1);
function $2680b1829e803644$export$fa142eb1681c520(props, ref) {
  const { "aria-label": ariaLabel, "aria-labelledby": ariaLabelledBy, orientation = "horizontal" } = props;
  let [isInToolbar, setInToolbar] = (0, import_react54.useState)(false);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    var _ref_current_parentElement;
    setInToolbar(!!(ref.current && ((_ref_current_parentElement = ref.current.parentElement) === null || _ref_current_parentElement === void 0 ? void 0 : _ref_current_parentElement.closest('[role="toolbar"]'))));
  });
  const { direction } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  const shouldReverse = direction === "rtl" && orientation === "horizontal";
  let focusManager = (0, $9bf71ea28793e738$export$c5251b9e124bf29)(ref);
  const onKeyDown = (e) => {
    if (!e.currentTarget.contains(e.target)) return;
    if (orientation === "horizontal" && e.key === "ArrowRight" || orientation === "vertical" && e.key === "ArrowDown") {
      if (shouldReverse) focusManager.focusPrevious();
      else focusManager.focusNext();
    } else if (orientation === "horizontal" && e.key === "ArrowLeft" || orientation === "vertical" && e.key === "ArrowUp") {
      if (shouldReverse) focusManager.focusNext();
      else focusManager.focusPrevious();
    } else if (e.key === "Tab") {
      e.stopPropagation();
      lastFocused.current = document.activeElement;
      if (e.shiftKey) focusManager.focusFirst();
      else focusManager.focusLast();
      return;
    } else
      return;
    e.stopPropagation();
    e.preventDefault();
  };
  const lastFocused = (0, import_react54.useRef)(null);
  const onBlur = (e) => {
    if (!e.currentTarget.contains(e.relatedTarget) && !lastFocused.current) lastFocused.current = e.target;
  };
  const onFocus = (e) => {
    var _ref_current;
    if (lastFocused.current && !e.currentTarget.contains(e.relatedTarget) && ((_ref_current = ref.current) === null || _ref_current === void 0 ? void 0 : _ref_current.contains(e.target))) {
      var _lastFocused_current;
      (_lastFocused_current = lastFocused.current) === null || _lastFocused_current === void 0 ? void 0 : _lastFocused_current.focus();
      lastFocused.current = null;
    }
  };
  return {
    toolbarProps: {
      ...(0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props, {
        labelable: true
      }),
      role: !isInToolbar ? "toolbar" : "group",
      "aria-orientation": orientation,
      "aria-label": ariaLabel,
      "aria-labelledby": ariaLabel == null ? ariaLabelledBy : void 0,
      onKeyDownCapture: !isInToolbar ? onKeyDown : void 0,
      onFocusCapture: !isInToolbar ? onFocus : void 0,
      onBlurCapture: !isInToolbar ? onBlur : void 0
    }
  };
}

// node_modules/@react-aria/button/dist/useToggleButtonGroup.mjs
function $4547d1bf40011fdf$export$dd5580ae642f110f(props, state, ref) {
  let { isDisabled } = props;
  let { toolbarProps } = (0, $2680b1829e803644$export$fa142eb1681c520)(props, ref);
  return {
    groupProps: {
      ...toolbarProps,
      role: state.selectionMode === "single" ? "radiogroup" : toolbarProps.role,
      "aria-disabled": isDisabled
    }
  };
}
function $4547d1bf40011fdf$export$bc53712daae3d6e6(props, state, ref) {
  let toggleState = {
    isSelected: state.selectedKeys.has(props.id),
    setSelected(isSelected2) {
      state.setSelected(props.id, isSelected2);
    },
    toggle() {
      state.toggleKey(props.id);
    }
  };
  let { isPressed, isSelected, isDisabled, buttonProps } = (0, $55f54f7887471b58$export$51e84d46ca0bc451)({
    ...props,
    id: void 0,
    isDisabled: props.isDisabled || state.isDisabled
  }, toggleState, ref);
  if (state.selectionMode === "single") {
    buttonProps.role = "radio";
    buttonProps["aria-checked"] = toggleState.isSelected;
    delete buttonProps["aria-pressed"];
  }
  return {
    isPressed,
    isSelected,
    isDisabled,
    buttonProps
  };
}

// node_modules/@react-aria/calendar/dist/ar-AE.mjs
var $39324ace0d945f59$exports = {};
$39324ace0d945f59$exports = {
  "dateRange": (args) => `${args.startDate} إلى ${args.endDate}`,
  "dateSelected": (args) => `${args.date} المحدد`,
  "finishRangeSelectionPrompt": `انقر لإنهاء عملية تحديد نطاق التاريخ`,
  "maximumDate": `آخر تاريخ متاح`,
  "minimumDate": `أول تاريخ متاح`,
  "next": `التالي`,
  "previous": `السابق`,
  "selectedDateDescription": (args) => `تاريخ محدد: ${args.date}`,
  "selectedRangeDescription": (args) => `المدى الزمني المحدد: ${args.dateRange}`,
  "startRangeSelectionPrompt": `انقر لبدء عملية تحديد نطاق التاريخ`,
  "todayDate": (args) => `اليوم، ${args.date}`,
  "todayDateSelected": (args) => `اليوم، ${args.date} محدد`
};

// node_modules/@react-aria/calendar/dist/bg-BG.mjs
var $1830a539e98c7baf$exports = {};
$1830a539e98c7baf$exports = {
  "dateRange": (args) => `${args.startDate} до ${args.endDate}`,
  "dateSelected": (args) => `Избрано е ${args.date}`,
  "finishRangeSelectionPrompt": `Натиснете, за да довършите избора на времеви интервал`,
  "maximumDate": `Последна налична дата`,
  "minimumDate": `Първа налична дата`,
  "next": `Напред`,
  "previous": `Назад`,
  "selectedDateDescription": (args) => `Избрана дата: ${args.date}`,
  "selectedRangeDescription": (args) => `Избран диапазон: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Натиснете, за да пристъпите към избора на времеви интервал`,
  "todayDate": (args) => `Днес, ${args.date}`,
  "todayDateSelected": (args) => `Днес, ${args.date} са избрани`
};

// node_modules/@react-aria/calendar/dist/cs-CZ.mjs
var $f4b92528965aab97$exports = {};
$f4b92528965aab97$exports = {
  "dateRange": (args) => `${args.startDate} až ${args.endDate}`,
  "dateSelected": (args) => `Vybráno ${args.date}`,
  "finishRangeSelectionPrompt": `Kliknutím dokončíte výběr rozsahu dat`,
  "maximumDate": `Poslední dostupné datum`,
  "minimumDate": `První dostupné datum`,
  "next": `Další`,
  "previous": `Předchozí`,
  "selectedDateDescription": (args) => `Vybrané datum: ${args.date}`,
  "selectedRangeDescription": (args) => `Vybrané období: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Kliknutím zahájíte výběr rozsahu dat`,
  "todayDate": (args) => `Dnes, ${args.date}`,
  "todayDateSelected": (args) => `Dnes, vybráno ${args.date}`
};

// node_modules/@react-aria/calendar/dist/da-DK.mjs
var $1cd578ef0547c8f1$exports = {};
$1cd578ef0547c8f1$exports = {
  "dateRange": (args) => `${args.startDate} til ${args.endDate}`,
  "dateSelected": (args) => `${args.date} valgt`,
  "finishRangeSelectionPrompt": `Klik for at fuldføre valg af datoområde`,
  "maximumDate": `Sidste ledige dato`,
  "minimumDate": `Første ledige dato`,
  "next": `Næste`,
  "previous": `Forrige`,
  "selectedDateDescription": (args) => `Valgt dato: ${args.date}`,
  "selectedRangeDescription": (args) => `Valgt interval: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Klik for at starte valg af datoområde`,
  "todayDate": (args) => `I dag, ${args.date}`,
  "todayDateSelected": (args) => `I dag, ${args.date} valgt`
};

// node_modules/@react-aria/calendar/dist/de-DE.mjs
var $db55a8973925d619$exports = {};
$db55a8973925d619$exports = {
  "dateRange": (args) => `${args.startDate} bis ${args.endDate}`,
  "dateSelected": (args) => `${args.date} ausgewählt`,
  "finishRangeSelectionPrompt": `Klicken, um die Auswahl des Datumsbereichs zu beenden`,
  "maximumDate": `Letztes verfügbares Datum`,
  "minimumDate": `Erstes verfügbares Datum`,
  "next": `Weiter`,
  "previous": `Zurück`,
  "selectedDateDescription": (args) => `Ausgewähltes Datum: ${args.date}`,
  "selectedRangeDescription": (args) => `Ausgewählter Bereich: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Klicken, um die Auswahl des Datumsbereichs zu beginnen`,
  "todayDate": (args) => `Heute, ${args.date}`,
  "todayDateSelected": (args) => `Heute, ${args.date} ausgewählt`
};

// node_modules/@react-aria/calendar/dist/el-GR.mjs
var $ec6937d58566d443$exports = {};
$ec6937d58566d443$exports = {
  "dateRange": (args) => `${args.startDate} έως ${args.endDate}`,
  "dateSelected": (args) => `Επιλέχθηκε ${args.date}`,
  "finishRangeSelectionPrompt": `Κάντε κλικ για να ολοκληρώσετε την επιλογή εύρους ημερομηνιών`,
  "maximumDate": `Τελευταία διαθέσιμη ημερομηνία`,
  "minimumDate": `Πρώτη διαθέσιμη ημερομηνία`,
  "next": `Επόμενο`,
  "previous": `Προηγούμενο`,
  "selectedDateDescription": (args) => `Επιλεγμένη ημερομηνία: ${args.date}`,
  "selectedRangeDescription": (args) => `Επιλεγμένο εύρος: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Κάντε κλικ για να ξεκινήσετε την επιλογή εύρους ημερομηνιών`,
  "todayDate": (args) => `Σήμερα, ${args.date}`,
  "todayDateSelected": (args) => `Σήμερα, επιλέχτηκε ${args.date}`
};

// node_modules/@react-aria/calendar/dist/en-US.mjs
var $1f5cea0742dc284a$exports = {};
$1f5cea0742dc284a$exports = {
  "previous": `Previous`,
  "next": `Next`,
  "selectedDateDescription": (args) => `Selected Date: ${args.date}`,
  "selectedRangeDescription": (args) => `Selected Range: ${args.dateRange}`,
  "todayDate": (args) => `Today, ${args.date}`,
  "todayDateSelected": (args) => `Today, ${args.date} selected`,
  "dateSelected": (args) => `${args.date} selected`,
  "startRangeSelectionPrompt": `Click to start selecting date range`,
  "finishRangeSelectionPrompt": `Click to finish selecting date range`,
  "minimumDate": `First available date`,
  "maximumDate": `Last available date`,
  "dateRange": (args) => `${args.startDate} to ${args.endDate}`
};

// node_modules/@react-aria/calendar/dist/es-ES.mjs
var $2ca7ea366384817b$exports = {};
$2ca7ea366384817b$exports = {
  "dateRange": (args) => `${args.startDate} a ${args.endDate}`,
  "dateSelected": (args) => `${args.date} seleccionado`,
  "finishRangeSelectionPrompt": `Haga clic para terminar de seleccionar rango de fechas`,
  "maximumDate": `Última fecha disponible`,
  "minimumDate": `Primera fecha disponible`,
  "next": `Siguiente`,
  "previous": `Anterior`,
  "selectedDateDescription": (args) => `Fecha seleccionada: ${args.date}`,
  "selectedRangeDescription": (args) => `Intervalo seleccionado: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Haga clic para comenzar a seleccionar un rango de fechas`,
  "todayDate": (args) => `Hoy, ${args.date}`,
  "todayDateSelected": (args) => `Hoy, ${args.date} seleccionado`
};

// node_modules/@react-aria/calendar/dist/et-EE.mjs
var $97874a7fe9cd091f$exports = {};
$97874a7fe9cd091f$exports = {
  "dateRange": (args) => `${args.startDate} kuni ${args.endDate}`,
  "dateSelected": (args) => `${args.date} valitud`,
  "finishRangeSelectionPrompt": `Klõpsake kuupäevavahemiku valimise lõpetamiseks`,
  "maximumDate": `Viimane saadaolev kuupäev`,
  "minimumDate": `Esimene saadaolev kuupäev`,
  "next": `Järgmine`,
  "previous": `Eelmine`,
  "selectedDateDescription": (args) => `Valitud kuupäev: ${args.date}`,
  "selectedRangeDescription": (args) => `Valitud vahemik: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Klõpsake kuupäevavahemiku valimiseks`,
  "todayDate": (args) => `Täna, ${args.date}`,
  "todayDateSelected": (args) => `Täna, ${args.date} valitud`
};

// node_modules/@react-aria/calendar/dist/fi-FI.mjs
var $5d376b7fce1a45b2$exports = {};
$5d376b7fce1a45b2$exports = {
  "dateRange": (args) => `${args.startDate} – ${args.endDate}`,
  "dateSelected": (args) => `${args.date} valittu`,
  "finishRangeSelectionPrompt": `Lopeta päivämääräalueen valinta napsauttamalla tätä.`,
  "maximumDate": `Viimeinen varattavissa oleva päivämäärä`,
  "minimumDate": `Ensimmäinen varattavissa oleva päivämäärä`,
  "next": `Seuraava`,
  "previous": `Edellinen`,
  "selectedDateDescription": (args) => `Valittu päivämäärä: ${args.date}`,
  "selectedRangeDescription": (args) => `Valittu aikaväli: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Aloita päivämääräalueen valinta napsauttamalla tätä.`,
  "todayDate": (args) => `Tänään, ${args.date}`,
  "todayDateSelected": (args) => `Tänään, ${args.date} valittu`
};

// node_modules/@react-aria/calendar/dist/fr-FR.mjs
var $3bf722b362aaf54d$exports = {};
$3bf722b362aaf54d$exports = {
  "dateRange": (args) => `${args.startDate} à ${args.endDate}`,
  "dateSelected": (args) => `${args.date} sélectionné`,
  "finishRangeSelectionPrompt": `Cliquer pour finir de sélectionner la plage de dates`,
  "maximumDate": `Dernière date disponible`,
  "minimumDate": `Première date disponible`,
  "next": `Suivant`,
  "previous": `Précédent`,
  "selectedDateDescription": (args) => `Date sélectionnée : ${args.date}`,
  "selectedRangeDescription": (args) => `Plage sélectionnée : ${args.dateRange}`,
  "startRangeSelectionPrompt": `Cliquer pour commencer à sélectionner la plage de dates`,
  "todayDate": (args) => `Aujourd'hui, ${args.date}`,
  "todayDateSelected": (args) => `Aujourd’hui, ${args.date} sélectionné`
};

// node_modules/@react-aria/calendar/dist/he-IL.mjs
var $38c43f8322316031$exports = {};
$38c43f8322316031$exports = {
  "dateRange": (args) => `${args.startDate} עד ${args.endDate}`,
  "dateSelected": (args) => `${args.date} נבחר`,
  "finishRangeSelectionPrompt": `חץ כדי לסיים את בחירת טווח התאריכים`,
  "maximumDate": `תאריך פנוי אחרון`,
  "minimumDate": `תאריך פנוי ראשון`,
  "next": `הבא`,
  "previous": `הקודם`,
  "selectedDateDescription": (args) => `תאריך נבחר: ${args.date}`,
  "selectedRangeDescription": (args) => `טווח נבחר: ${args.dateRange}`,
  "startRangeSelectionPrompt": `לחץ כדי להתחיל בבחירת טווח התאריכים`,
  "todayDate": (args) => `היום, ${args.date}`,
  "todayDateSelected": (args) => `היום, ${args.date} נבחר`
};

// node_modules/@react-aria/calendar/dist/hr-HR.mjs
var $c90e0f32b44630bf$exports = {};
$c90e0f32b44630bf$exports = {
  "dateRange": (args) => `${args.startDate} do ${args.endDate}`,
  "dateSelected": (args) => `${args.date} odabran`,
  "finishRangeSelectionPrompt": `Kliknite da dovršite raspon odabranih datuma`,
  "maximumDate": `Posljednji raspoloživi datum`,
  "minimumDate": `Prvi raspoloživi datum`,
  "next": `Sljedeći`,
  "previous": `Prethodni`,
  "selectedDateDescription": (args) => `Odabrani datum: ${args.date}`,
  "selectedRangeDescription": (args) => `Odabrani raspon: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Kliknite da započnete raspon odabranih datuma`,
  "todayDate": (args) => `Danas, ${args.date}`,
  "todayDateSelected": (args) => `Danas, odabran ${args.date}`
};

// node_modules/@react-aria/calendar/dist/hu-HU.mjs
var $715875e6e7a338f4$exports = {};
$715875e6e7a338f4$exports = {
  "dateRange": (args) => `${args.startDate}–${args.endDate}`,
  "dateSelected": (args) => `${args.date} kiválasztva`,
  "finishRangeSelectionPrompt": `Kattintson a dátumtartomány kijelölésének befejezéséhez`,
  "maximumDate": `Utolsó elérhető dátum`,
  "minimumDate": `Az első elérhető dátum`,
  "next": `Következő`,
  "previous": `Előző`,
  "selectedDateDescription": (args) => `Kijelölt dátum: ${args.date}`,
  "selectedRangeDescription": (args) => `Kijelölt tartomány: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Kattintson a dátumtartomány kijelölésének indításához`,
  "todayDate": (args) => `Ma, ${args.date}`,
  "todayDateSelected": (args) => `Ma, ${args.date} kijelölve`
};

// node_modules/@react-aria/calendar/dist/it-IT.mjs
var $37d77c66e34daccf$exports = {};
$37d77c66e34daccf$exports = {
  "dateRange": (args) => `Da ${args.startDate} a ${args.endDate}`,
  "dateSelected": (args) => `${args.date} selezionata`,
  "finishRangeSelectionPrompt": `Fai clic per completare la selezione dell’intervallo di date`,
  "maximumDate": `Ultima data disponibile`,
  "minimumDate": `Prima data disponibile`,
  "next": `Successivo`,
  "previous": `Precedente`,
  "selectedDateDescription": (args) => `Data selezionata: ${args.date}`,
  "selectedRangeDescription": (args) => `Intervallo selezionato: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Fai clic per selezionare l’intervallo di date`,
  "todayDate": (args) => `Oggi, ${args.date}`,
  "todayDateSelected": (args) => `Oggi, ${args.date} selezionata`
};

// node_modules/@react-aria/calendar/dist/ja-JP.mjs
var $542f39aee29303c3$exports = {};
$542f39aee29303c3$exports = {
  "dateRange": (args) => `${args.startDate} から ${args.endDate}`,
  "dateSelected": (args) => `${args.date} を選択`,
  "finishRangeSelectionPrompt": `クリックして日付範囲の選択を終了`,
  "maximumDate": `最終利用可能日`,
  "minimumDate": `最初の利用可能日`,
  "next": `次へ`,
  "previous": `前へ`,
  "selectedDateDescription": (args) => `選択した日付 : ${args.date}`,
  "selectedRangeDescription": (args) => `選択範囲 : ${args.dateRange}`,
  "startRangeSelectionPrompt": `クリックして日付範囲の選択を開始`,
  "todayDate": (args) => `本日、${args.date}`,
  "todayDateSelected": (args) => `本日、${args.date} を選択`
};

// node_modules/@react-aria/calendar/dist/ko-KR.mjs
var $22a5f0623ea73e4f$exports = {};
$22a5f0623ea73e4f$exports = {
  "dateRange": (args) => `${args.startDate} ~ ${args.endDate}`,
  "dateSelected": (args) => `${args.date} 선택됨`,
  "finishRangeSelectionPrompt": `날짜 범위 선택을 완료하려면 클릭하십시오.`,
  "maximumDate": `마지막으로 사용 가능한 일자`,
  "minimumDate": `처음으로 사용 가능한 일자`,
  "next": `다음`,
  "previous": `이전`,
  "selectedDateDescription": (args) => `선택 일자: ${args.date}`,
  "selectedRangeDescription": (args) => `선택 범위: ${args.dateRange}`,
  "startRangeSelectionPrompt": `날짜 범위 선택을 시작하려면 클릭하십시오.`,
  "todayDate": (args) => `오늘, ${args.date}`,
  "todayDateSelected": (args) => `오늘, ${args.date} 선택됨`
};

// node_modules/@react-aria/calendar/dist/lt-LT.mjs
var $522380d13d62cba0$exports = {};
$522380d13d62cba0$exports = {
  "dateRange": (args) => `Nuo ${args.startDate} iki ${args.endDate}`,
  "dateSelected": (args) => `Pasirinkta ${args.date}`,
  "finishRangeSelectionPrompt": `Spustelėkite, kad baigtumėte pasirinkti datų intervalą`,
  "maximumDate": `Paskutinė galima data`,
  "minimumDate": `Pirmoji galima data`,
  "next": `Paskesnis`,
  "previous": `Ankstesnis`,
  "selectedDateDescription": (args) => `Pasirinkta data: ${args.date}`,
  "selectedRangeDescription": (args) => `Pasirinktas intervalas: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Spustelėkite, kad pradėtumėte pasirinkti datų intervalą`,
  "todayDate": (args) => `Šiandien, ${args.date}`,
  "todayDateSelected": (args) => `Šiandien, pasirinkta ${args.date}`
};

// node_modules/@react-aria/calendar/dist/lv-LV.mjs
var $8a7bc830b2fe6485$exports = {};
$8a7bc830b2fe6485$exports = {
  "dateRange": (args) => `No ${args.startDate} līdz ${args.endDate}`,
  "dateSelected": (args) => `Atlasīts: ${args.date}`,
  "finishRangeSelectionPrompt": `Noklikšķiniet, lai pabeigtu datumu diapazona atlasi`,
  "maximumDate": `Pēdējais pieejamais datums`,
  "minimumDate": `Pirmais pieejamais datums`,
  "next": `Tālāk`,
  "previous": `Atpakaļ`,
  "selectedDateDescription": (args) => `Atlasītais datums: ${args.date}`,
  "selectedRangeDescription": (args) => `Atlasītais diapazons: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Noklikšķiniet, lai sāktu datumu diapazona atlasi`,
  "todayDate": (args) => `Šodien, ${args.date}`,
  "todayDateSelected": (args) => `Atlasīta šodiena, ${args.date}`
};

// node_modules/@react-aria/calendar/dist/nb-NO.mjs
var $9fac9c044470683b$exports = {};
$9fac9c044470683b$exports = {
  "dateRange": (args) => `${args.startDate} til ${args.endDate}`,
  "dateSelected": (args) => `${args.date} valgt`,
  "finishRangeSelectionPrompt": `Klikk for å fullføre valg av datoområde`,
  "maximumDate": `Siste tilgjengelige dato`,
  "minimumDate": `Første tilgjengelige dato`,
  "next": `Neste`,
  "previous": `Forrige`,
  "selectedDateDescription": (args) => `Valgt dato: ${args.date}`,
  "selectedRangeDescription": (args) => `Valgt område: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Klikk for å starte valg av datoområde`,
  "todayDate": (args) => `I dag, ${args.date}`,
  "todayDateSelected": (args) => `I dag, ${args.date} valgt`
};

// node_modules/@react-aria/calendar/dist/nl-NL.mjs
var $b127d3569efb1449$exports = {};
$b127d3569efb1449$exports = {
  "dateRange": (args) => `${args.startDate} tot ${args.endDate}`,
  "dateSelected": (args) => `${args.date} geselecteerd`,
  "finishRangeSelectionPrompt": `Klik om de selectie van het datumbereik te voltooien`,
  "maximumDate": `Laatste beschikbare datum`,
  "minimumDate": `Eerste beschikbare datum`,
  "next": `Volgende`,
  "previous": `Vorige`,
  "selectedDateDescription": (args) => `Geselecteerde datum: ${args.date}`,
  "selectedRangeDescription": (args) => `Geselecteerd bereik: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Klik om het datumbereik te selecteren`,
  "todayDate": (args) => `Vandaag, ${args.date}`,
  "todayDateSelected": (args) => `Vandaag, ${args.date} geselecteerd`
};

// node_modules/@react-aria/calendar/dist/pl-PL.mjs
var $51404a4090633490$exports = {};
$51404a4090633490$exports = {
  "dateRange": (args) => `${args.startDate} do ${args.endDate}`,
  "dateSelected": (args) => `Wybrano ${args.date}`,
  "finishRangeSelectionPrompt": `Kliknij, aby zakończyć wybór zakresu dat`,
  "maximumDate": `Ostatnia dostępna data`,
  "minimumDate": `Pierwsza dostępna data`,
  "next": `Dalej`,
  "previous": `Wstecz`,
  "selectedDateDescription": (args) => `Wybrana data: ${args.date}`,
  "selectedRangeDescription": (args) => `Wybrany zakres: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Kliknij, aby rozpocząć wybór zakresu dat`,
  "todayDate": (args) => `Dzisiaj, ${args.date}`,
  "todayDateSelected": (args) => `Dzisiaj wybrano ${args.date}`
};

// node_modules/@react-aria/calendar/dist/pt-BR.mjs
var $e5e6a3fe3b4527df$exports = {};
$e5e6a3fe3b4527df$exports = {
  "dateRange": (args) => `${args.startDate} a ${args.endDate}`,
  "dateSelected": (args) => `${args.date} selecionado`,
  "finishRangeSelectionPrompt": `Clique para concluir a seleção do intervalo de datas`,
  "maximumDate": `Última data disponível`,
  "minimumDate": `Primeira data disponível`,
  "next": `Próximo`,
  "previous": `Anterior`,
  "selectedDateDescription": (args) => `Data selecionada: ${args.date}`,
  "selectedRangeDescription": (args) => `Intervalo selecionado: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Clique para iniciar a seleção do intervalo de datas`,
  "todayDate": (args) => `Hoje, ${args.date}`,
  "todayDateSelected": (args) => `Hoje, ${args.date} selecionado`
};

// node_modules/@react-aria/calendar/dist/pt-PT.mjs
var $c519dcadcbb1ee47$exports = {};
$c519dcadcbb1ee47$exports = {
  "dateRange": (args) => `${args.startDate} a ${args.endDate}`,
  "dateSelected": (args) => `${args.date} selecionado`,
  "finishRangeSelectionPrompt": `Clique para terminar de selecionar o intervalo de datas`,
  "maximumDate": `Última data disponível`,
  "minimumDate": `Primeira data disponível`,
  "next": `Próximo`,
  "previous": `Anterior`,
  "selectedDateDescription": (args) => `Data selecionada: ${args.date}`,
  "selectedRangeDescription": (args) => `Intervalo selecionado: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Clique para começar a selecionar o intervalo de datas`,
  "todayDate": (args) => `Hoje, ${args.date}`,
  "todayDateSelected": (args) => `Hoje, ${args.date} selecionado`
};

// node_modules/@react-aria/calendar/dist/ro-RO.mjs
var $e5aa0186ca7889c6$exports = {};
$e5aa0186ca7889c6$exports = {
  "dateRange": (args) => `De la ${args.startDate} până la ${args.endDate}`,
  "dateSelected": (args) => `${args.date} selectată`,
  "finishRangeSelectionPrompt": `Apăsaţi pentru a finaliza selecţia razei pentru dată`,
  "maximumDate": `Ultima dată disponibilă`,
  "minimumDate": `Prima dată disponibilă`,
  "next": `Următorul`,
  "previous": `Înainte`,
  "selectedDateDescription": (args) => `Dată selectată: ${args.date}`,
  "selectedRangeDescription": (args) => `Interval selectat: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Apăsaţi pentru a începe selecţia razei pentru dată`,
  "todayDate": (args) => `Astăzi, ${args.date}`,
  "todayDateSelected": (args) => `Azi, ${args.date} selectată`
};

// node_modules/@react-aria/calendar/dist/ru-RU.mjs
var $5b907f5fa3eee652$exports = {};
$5b907f5fa3eee652$exports = {
  "dateRange": (args) => `С ${args.startDate} по ${args.endDate}`,
  "dateSelected": (args) => `Выбрано ${args.date}`,
  "finishRangeSelectionPrompt": `Щелкните, чтобы завершить выбор диапазона дат`,
  "maximumDate": `Последняя доступная дата`,
  "minimumDate": `Первая доступная дата`,
  "next": `Далее`,
  "previous": `Назад`,
  "selectedDateDescription": (args) => `Выбранная дата: ${args.date}`,
  "selectedRangeDescription": (args) => `Выбранный диапазон: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Щелкните, чтобы начать выбор диапазона дат`,
  "todayDate": (args) => `Сегодня, ${args.date}`,
  "todayDateSelected": (args) => `Сегодня, выбрано ${args.date}`
};

// node_modules/@react-aria/calendar/dist/sk-SK.mjs
var $1b4c51359c99cf79$exports = {};
$1b4c51359c99cf79$exports = {
  "dateRange": (args) => `Od ${args.startDate} do ${args.endDate}`,
  "dateSelected": (args) => `Vybratý dátum ${args.date}`,
  "finishRangeSelectionPrompt": `Kliknutím dokončíte výber rozsahu dátumov`,
  "maximumDate": `Posledný dostupný dátum`,
  "minimumDate": `Prvý dostupný dátum`,
  "next": `Nasledujúce`,
  "previous": `Predchádzajúce`,
  "selectedDateDescription": (args) => `Vybratý dátum: ${args.date}`,
  "selectedRangeDescription": (args) => `Vybratý rozsah: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Kliknutím spustíte výber rozsahu dátumov`,
  "todayDate": (args) => `Dnes ${args.date}`,
  "todayDateSelected": (args) => `Vybratý dnešný dátum ${args.date}`
};

// node_modules/@react-aria/calendar/dist/sl-SI.mjs
var $02e4e6a4608cc6f3$exports = {};
$02e4e6a4608cc6f3$exports = {
  "dateRange": (args) => `${args.startDate} do ${args.endDate}`,
  "dateSelected": (args) => `${args.date} izbrano`,
  "finishRangeSelectionPrompt": `Kliknite za dokončanje izbire datumskega obsega`,
  "maximumDate": `Zadnji razpoložljivi datum`,
  "minimumDate": `Prvi razpoložljivi datum`,
  "next": `Naprej`,
  "previous": `Nazaj`,
  "selectedDateDescription": (args) => `Izbrani datum: ${args.date}`,
  "selectedRangeDescription": (args) => `Izbrano območje: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Kliknite za začetek izbire datumskega obsega`,
  "todayDate": (args) => `Danes, ${args.date}`,
  "todayDateSelected": (args) => `Danes, ${args.date} izbrano`
};

// node_modules/@react-aria/calendar/dist/sr-SP.mjs
var $6dd2fbaad93b6878$exports = {};
$6dd2fbaad93b6878$exports = {
  "dateRange": (args) => `${args.startDate} do ${args.endDate}`,
  "dateSelected": (args) => `${args.date} izabran`,
  "finishRangeSelectionPrompt": `Kliknite da dovršite opseg izabranih datuma`,
  "maximumDate": `Zadnji raspoloživi datum`,
  "minimumDate": `Prvi raspoloživi datum`,
  "next": `Sledeći`,
  "previous": `Prethodni`,
  "selectedDateDescription": (args) => `Izabrani datum: ${args.date}`,
  "selectedRangeDescription": (args) => `Izabrani period: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Kliknite da započnete opseg izabranih datuma`,
  "todayDate": (args) => `Danas, ${args.date}`,
  "todayDateSelected": (args) => `Danas, izabran ${args.date}`
};

// node_modules/@react-aria/calendar/dist/sv-SE.mjs
var $33ea59bfe6e804e0$exports = {};
$33ea59bfe6e804e0$exports = {
  "dateRange": (args) => `${args.startDate} till ${args.endDate}`,
  "dateSelected": (args) => `${args.date} har valts`,
  "finishRangeSelectionPrompt": `Klicka för att avsluta val av datumintervall`,
  "maximumDate": `Sista tillgängliga datum`,
  "minimumDate": `Första tillgängliga datum`,
  "next": `Nästa`,
  "previous": `Föregående`,
  "selectedDateDescription": (args) => `Valt datum: ${args.date}`,
  "selectedRangeDescription": (args) => `Valt intervall: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Klicka för att välja datumintervall`,
  "todayDate": (args) => `Idag, ${args.date}`,
  "todayDateSelected": (args) => `Idag, ${args.date} har valts`
};

// node_modules/@react-aria/calendar/dist/tr-TR.mjs
var $4603b0d0246969b2$exports = {};
$4603b0d0246969b2$exports = {
  "dateRange": (args) => `${args.startDate} - ${args.endDate}`,
  "dateSelected": (args) => `${args.date} seçildi`,
  "finishRangeSelectionPrompt": `Tarih aralığı seçimini tamamlamak için tıklayın`,
  "maximumDate": `Son müsait tarih`,
  "minimumDate": `İlk müsait tarih`,
  "next": `Sonraki`,
  "previous": `Önceki`,
  "selectedDateDescription": (args) => `Seçilen Tarih: ${args.date}`,
  "selectedRangeDescription": (args) => `Seçilen Aralık: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Tarih aralığı seçimini başlatmak için tıklayın`,
  "todayDate": (args) => `Bugün, ${args.date}`,
  "todayDateSelected": (args) => `Bugün, ${args.date} seçildi`
};

// node_modules/@react-aria/calendar/dist/uk-UA.mjs
var $82649816f530bb1b$exports = {};
$82649816f530bb1b$exports = {
  "dateRange": (args) => `${args.startDate} — ${args.endDate}`,
  "dateSelected": (args) => `Вибрано ${args.date}`,
  "finishRangeSelectionPrompt": `Натисніть, щоб завершити вибір діапазону дат`,
  "maximumDate": `Остання доступна дата`,
  "minimumDate": `Перша доступна дата`,
  "next": `Наступний`,
  "previous": `Попередній`,
  "selectedDateDescription": (args) => `Вибрана дата: ${args.date}`,
  "selectedRangeDescription": (args) => `Вибраний діапазон: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Натисніть, щоб почати вибір діапазону дат`,
  "todayDate": (args) => `Сьогодні, ${args.date}`,
  "todayDateSelected": (args) => `Сьогодні, вибрано ${args.date}`
};

// node_modules/@react-aria/calendar/dist/zh-CN.mjs
var $628e140a43dfb330$exports = {};
$628e140a43dfb330$exports = {
  "dateRange": (args) => `${args.startDate} 至 ${args.endDate}`,
  "dateSelected": (args) => `已选择 ${args.date}`,
  "finishRangeSelectionPrompt": `单击以完成选择日期范围`,
  "maximumDate": `最后一个可用日期`,
  "minimumDate": `第一个可用日期`,
  "next": `下一页`,
  "previous": `上一页`,
  "selectedDateDescription": (args) => `选定的日期：${args.date}`,
  "selectedRangeDescription": (args) => `选定的范围：${args.dateRange}`,
  "startRangeSelectionPrompt": `单击以开始选择日期范围`,
  "todayDate": (args) => `今天，即 ${args.date}`,
  "todayDateSelected": (args) => `已选择今天，即 ${args.date}`
};

// node_modules/@react-aria/calendar/dist/zh-TW.mjs
var $745937250cd4679c$exports = {};
$745937250cd4679c$exports = {
  "dateRange": (args) => `${args.startDate} 至 ${args.endDate}`,
  "dateSelected": (args) => `已選取 ${args.date}`,
  "finishRangeSelectionPrompt": `按一下以完成選取日期範圍`,
  "maximumDate": `最後一個可用日期`,
  "minimumDate": `第一個可用日期`,
  "next": `下一頁`,
  "previous": `上一頁`,
  "selectedDateDescription": (args) => `選定的日期：${args.date}`,
  "selectedRangeDescription": (args) => `選定的範圍：${args.dateRange}`,
  "startRangeSelectionPrompt": `按一下以開始選取日期範圍`,
  "todayDate": (args) => `今天，${args.date}`,
  "todayDateSelected": (args) => `已選取今天，${args.date}`
};

// node_modules/@react-aria/calendar/dist/intlStrings.mjs
var $3904726b442bd9b2$exports = {};
$3904726b442bd9b2$exports = {
  "ar-AE": $39324ace0d945f59$exports,
  "bg-BG": $1830a539e98c7baf$exports,
  "cs-CZ": $f4b92528965aab97$exports,
  "da-DK": $1cd578ef0547c8f1$exports,
  "de-DE": $db55a8973925d619$exports,
  "el-GR": $ec6937d58566d443$exports,
  "en-US": $1f5cea0742dc284a$exports,
  "es-ES": $2ca7ea366384817b$exports,
  "et-EE": $97874a7fe9cd091f$exports,
  "fi-FI": $5d376b7fce1a45b2$exports,
  "fr-FR": $3bf722b362aaf54d$exports,
  "he-IL": $38c43f8322316031$exports,
  "hr-HR": $c90e0f32b44630bf$exports,
  "hu-HU": $715875e6e7a338f4$exports,
  "it-IT": $37d77c66e34daccf$exports,
  "ja-JP": $542f39aee29303c3$exports,
  "ko-KR": $22a5f0623ea73e4f$exports,
  "lt-LT": $522380d13d62cba0$exports,
  "lv-LV": $8a7bc830b2fe6485$exports,
  "nb-NO": $9fac9c044470683b$exports,
  "nl-NL": $b127d3569efb1449$exports,
  "pl-PL": $51404a4090633490$exports,
  "pt-BR": $e5e6a3fe3b4527df$exports,
  "pt-PT": $c519dcadcbb1ee47$exports,
  "ro-RO": $e5aa0186ca7889c6$exports,
  "ru-RU": $5b907f5fa3eee652$exports,
  "sk-SK": $1b4c51359c99cf79$exports,
  "sl-SI": $02e4e6a4608cc6f3$exports,
  "sr-SP": $6dd2fbaad93b6878$exports,
  "sv-SE": $33ea59bfe6e804e0$exports,
  "tr-TR": $4603b0d0246969b2$exports,
  "uk-UA": $82649816f530bb1b$exports,
  "zh-CN": $628e140a43dfb330$exports,
  "zh-TW": $745937250cd4679c$exports
};

// node_modules/@react-aria/calendar/dist/utils.mjs
var import_react55 = __toESM(require_react(), 1);
function $parcel$interopDefault2(a) {
  return a && a.__esModule ? a.default : a;
}
var $a074e1e2d0f0a665$export$653eddfc964b0f8a = /* @__PURE__ */ new WeakMap();
function $a074e1e2d0f0a665$export$134cbb7fb09a9522(date) {
  return (date === null || date === void 0 ? void 0 : date.calendar.identifier) === "gregory" && date.era === "BC" ? "short" : void 0;
}
function $a074e1e2d0f0a665$export$b6df97c887c38e1a(state) {
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault2($3904726b442bd9b2$exports)), "@react-aria/calendar");
  let start, end;
  var _state_value;
  if ("highlightedRange" in state) ({ start, end } = state.highlightedRange || {});
  else start = end = (_state_value = state.value) !== null && _state_value !== void 0 ? _state_value : void 0;
  let dateFormatter = (0, $896ba0a80a8f4d36$export$85fd5fdf27bacc79)({
    weekday: "long",
    month: "long",
    year: "numeric",
    day: "numeric",
    era: $a074e1e2d0f0a665$export$134cbb7fb09a9522(start) || $a074e1e2d0f0a665$export$134cbb7fb09a9522(end),
    timeZone: state.timeZone
  });
  let anchorDate = "anchorDate" in state ? state.anchorDate : null;
  return (0, import_react55.useMemo)(() => {
    if (!anchorDate && start && end) {
      if ((0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(start, end)) {
        let date = dateFormatter.format(start.toDate(state.timeZone));
        return stringFormatter.format("selectedDateDescription", {
          date
        });
      } else {
        let dateRange = $a074e1e2d0f0a665$var$formatRange(dateFormatter, stringFormatter, start, end, state.timeZone);
        return stringFormatter.format("selectedRangeDescription", {
          dateRange
        });
      }
    }
    return "";
  }, [
    start,
    end,
    anchorDate,
    state.timeZone,
    stringFormatter,
    dateFormatter
  ]);
}
function $a074e1e2d0f0a665$export$31afe65d91ef6e8(startDate, endDate, timeZone, isAria) {
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault2($3904726b442bd9b2$exports)), "@react-aria/calendar");
  let era = $a074e1e2d0f0a665$export$134cbb7fb09a9522(startDate) || $a074e1e2d0f0a665$export$134cbb7fb09a9522(endDate);
  let monthFormatter = (0, $896ba0a80a8f4d36$export$85fd5fdf27bacc79)({
    month: "long",
    year: "numeric",
    era,
    calendar: startDate.calendar.identifier,
    timeZone
  });
  let dateFormatter = (0, $896ba0a80a8f4d36$export$85fd5fdf27bacc79)({
    month: "long",
    year: "numeric",
    day: "numeric",
    era,
    calendar: startDate.calendar.identifier,
    timeZone
  });
  return (0, import_react55.useMemo)(() => {
    if ((0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(startDate, (0, $14e0f24ef4ac5c92$export$a5a3b454ada2268e)(startDate))) {
      let startMonth = startDate;
      let endMonth = endDate;
      if (startDate.calendar.getFormattableMonth) startMonth = startDate.calendar.getFormattableMonth(startDate);
      if (endDate.calendar.getFormattableMonth) endMonth = endDate.calendar.getFormattableMonth(endDate);
      if ((0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(endDate, (0, $14e0f24ef4ac5c92$export$a2258d9c4118825c)(startDate))) return monthFormatter.format(startMonth.toDate(timeZone));
      else if ((0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(endDate, (0, $14e0f24ef4ac5c92$export$a2258d9c4118825c)(endDate))) return isAria ? $a074e1e2d0f0a665$var$formatRange(monthFormatter, stringFormatter, startMonth, endMonth, timeZone) : monthFormatter.formatRange(startMonth.toDate(timeZone), endMonth.toDate(timeZone));
    }
    return isAria ? $a074e1e2d0f0a665$var$formatRange(dateFormatter, stringFormatter, startDate, endDate, timeZone) : dateFormatter.formatRange(startDate.toDate(timeZone), endDate.toDate(timeZone));
  }, [
    startDate,
    endDate,
    monthFormatter,
    dateFormatter,
    stringFormatter,
    timeZone,
    isAria
  ]);
}
function $a074e1e2d0f0a665$var$formatRange(dateFormatter, stringFormatter, start, end, timeZone) {
  let parts = dateFormatter.formatRangeToParts(start.toDate(timeZone), end.toDate(timeZone));
  let separatorIndex = -1;
  for (let i = 0; i < parts.length; i++) {
    let part = parts[i];
    if (part.source === "shared" && part.type === "literal") separatorIndex = i;
    else if (part.source === "endRange") break;
  }
  let startValue = "";
  let endValue = "";
  for (let i = 0; i < parts.length; i++) {
    if (i < separatorIndex) startValue += parts[i].value;
    else if (i > separatorIndex) endValue += parts[i].value;
  }
  return stringFormatter.format("dateRange", {
    startDate: startValue,
    endDate: endValue
  });
}

// node_modules/@react-aria/live-announcer/dist/LiveAnnouncer.mjs
var $319e236875307eab$var$LIVEREGION_TIMEOUT_DELAY = 7e3;
var $319e236875307eab$var$liveAnnouncer = null;
function $319e236875307eab$export$a9b970dcc4ae71a9(message, assertiveness = "assertive", timeout = $319e236875307eab$var$LIVEREGION_TIMEOUT_DELAY) {
  if (!$319e236875307eab$var$liveAnnouncer) {
    $319e236875307eab$var$liveAnnouncer = new $319e236875307eab$var$LiveAnnouncer();
    if (!(typeof IS_REACT_ACT_ENVIRONMENT === "boolean" ? IS_REACT_ACT_ENVIRONMENT : typeof jest !== "undefined")) setTimeout(() => {
      if ($319e236875307eab$var$liveAnnouncer === null || $319e236875307eab$var$liveAnnouncer === void 0 ? void 0 : $319e236875307eab$var$liveAnnouncer.isAttached()) $319e236875307eab$var$liveAnnouncer === null || $319e236875307eab$var$liveAnnouncer === void 0 ? void 0 : $319e236875307eab$var$liveAnnouncer.announce(message, assertiveness, timeout);
    }, 100);
    else $319e236875307eab$var$liveAnnouncer.announce(message, assertiveness, timeout);
  } else $319e236875307eab$var$liveAnnouncer.announce(message, assertiveness, timeout);
}
function $319e236875307eab$export$d10ae4f68404609a(assertiveness) {
  if ($319e236875307eab$var$liveAnnouncer) $319e236875307eab$var$liveAnnouncer.clear(assertiveness);
}
var $319e236875307eab$var$LiveAnnouncer = class {
  isAttached() {
    var _this_node;
    return (_this_node = this.node) === null || _this_node === void 0 ? void 0 : _this_node.isConnected;
  }
  createLog(ariaLive) {
    let node = document.createElement("div");
    node.setAttribute("role", "log");
    node.setAttribute("aria-live", ariaLive);
    node.setAttribute("aria-relevant", "additions");
    return node;
  }
  destroy() {
    if (!this.node) return;
    document.body.removeChild(this.node);
    this.node = null;
  }
  announce(message, assertiveness = "assertive", timeout = $319e236875307eab$var$LIVEREGION_TIMEOUT_DELAY) {
    var _this_assertiveLog, _this_politeLog;
    if (!this.node) return;
    let node = document.createElement("div");
    if (typeof message === "object") {
      node.setAttribute("role", "img");
      node.setAttribute("aria-labelledby", message["aria-labelledby"]);
    } else node.textContent = message;
    if (assertiveness === "assertive") (_this_assertiveLog = this.assertiveLog) === null || _this_assertiveLog === void 0 ? void 0 : _this_assertiveLog.appendChild(node);
    else (_this_politeLog = this.politeLog) === null || _this_politeLog === void 0 ? void 0 : _this_politeLog.appendChild(node);
    if (message !== "") setTimeout(() => {
      node.remove();
    }, timeout);
  }
  clear(assertiveness) {
    if (!this.node) return;
    if ((!assertiveness || assertiveness === "assertive") && this.assertiveLog) this.assertiveLog.innerHTML = "";
    if ((!assertiveness || assertiveness === "polite") && this.politeLog) this.politeLog.innerHTML = "";
  }
  constructor() {
    this.node = null;
    this.assertiveLog = null;
    this.politeLog = null;
    if (typeof document !== "undefined") {
      this.node = document.createElement("div");
      this.node.dataset.liveAnnouncer = "true";
      Object.assign(this.node.style, {
        border: 0,
        clip: "rect(0 0 0 0)",
        clipPath: "inset(50%)",
        height: "1px",
        margin: "-1px",
        overflow: "hidden",
        padding: 0,
        position: "absolute",
        width: "1px",
        whiteSpace: "nowrap"
      });
      this.assertiveLog = this.createLog("assertive");
      this.node.appendChild(this.assertiveLog);
      this.politeLog = this.createLog("polite");
      this.node.appendChild(this.politeLog);
      document.body.prepend(this.node);
    }
  }
};

// node_modules/@react-aria/calendar/dist/useCalendarBase.mjs
var import_react56 = __toESM(require_react(), 1);
function $parcel$interopDefault3(a) {
  return a && a.__esModule ? a.default : a;
}
function $c4acc1de3ab169cf$export$d652b3ea2d672d5b(props, state) {
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault3($3904726b442bd9b2$exports)), "@react-aria/calendar");
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  let title = (0, $a074e1e2d0f0a665$export$31afe65d91ef6e8)(state.visibleRange.start, state.visibleRange.end, state.timeZone, false);
  let visibleRangeDescription = (0, $a074e1e2d0f0a665$export$31afe65d91ef6e8)(state.visibleRange.start, state.visibleRange.end, state.timeZone, true);
  (0, $4f58c5f72bcf79f7$export$496315a1608d9602)(() => {
    if (!state.isFocused) (0, $319e236875307eab$export$a9b970dcc4ae71a9)(visibleRangeDescription);
  }, [
    visibleRangeDescription
  ]);
  let selectedDateDescription = (0, $a074e1e2d0f0a665$export$b6df97c887c38e1a)(state);
  (0, $4f58c5f72bcf79f7$export$496315a1608d9602)(() => {
    if (selectedDateDescription) (0, $319e236875307eab$export$a9b970dcc4ae71a9)(selectedDateDescription, "polite", 4e3);
  }, [
    selectedDateDescription
  ]);
  let errorMessageId = (0, $bdb11010cef70236$export$b4cc09c592e8fdb8)([
    Boolean(props.errorMessage),
    props.isInvalid,
    props.validationState
  ]);
  (0, $a074e1e2d0f0a665$export$653eddfc964b0f8a).set(state, {
    ariaLabel: props["aria-label"],
    ariaLabelledBy: props["aria-labelledby"],
    errorMessageId,
    selectedDateDescription
  });
  let [nextFocused, setNextFocused] = (0, import_react56.useState)(false);
  let nextDisabled = props.isDisabled || state.isNextVisibleRangeInvalid();
  if (nextDisabled && nextFocused) {
    setNextFocused(false);
    state.setFocused(true);
  }
  let [previousFocused, setPreviousFocused] = (0, import_react56.useState)(false);
  let previousDisabled = props.isDisabled || state.isPreviousVisibleRangeInvalid();
  if (previousDisabled && previousFocused) {
    setPreviousFocused(false);
    state.setFocused(true);
  }
  let labelProps = (0, $313b98861ee5dd6c$export$d6875122194c7b44)({
    id: props["id"],
    "aria-label": [
      props["aria-label"],
      visibleRangeDescription
    ].filter(Boolean).join(", "),
    "aria-labelledby": props["aria-labelledby"]
  });
  return {
    calendarProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(domProps, labelProps, {
      role: "application",
      "aria-details": props["aria-details"] || void 0,
      "aria-describedby": props["aria-describedby"] || void 0
    }),
    nextButtonProps: {
      onPress: () => state.focusNextPage(),
      "aria-label": stringFormatter.format("next"),
      isDisabled: nextDisabled,
      onFocusChange: setNextFocused
    },
    prevButtonProps: {
      onPress: () => state.focusPreviousPage(),
      "aria-label": stringFormatter.format("previous"),
      isDisabled: previousDisabled,
      onFocusChange: setPreviousFocused
    },
    errorMessageProps: {
      id: errorMessageId
    },
    title
  };
}

// node_modules/@react-aria/calendar/dist/useCalendar.mjs
function $9942cad8a072a530$export$3ee915f8151bd4f1(props, state) {
  return (0, $c4acc1de3ab169cf$export$d652b3ea2d672d5b)(props, state);
}

// node_modules/@react-aria/calendar/dist/useRangeCalendar.mjs
var import_react57 = __toESM(require_react(), 1);
function $46a4342aab3d8076$export$87e0539f600c24e5(props, state, ref) {
  let res = (0, $c4acc1de3ab169cf$export$d652b3ea2d672d5b)(props, state);
  let isVirtualClick = (0, import_react57.useRef)(false);
  let windowRef = (0, import_react57.useRef)(typeof window !== "undefined" ? window : null);
  (0, $e9faafb641e167db$export$90fc3a17d93f704c)(windowRef, "pointerdown", (e) => {
    isVirtualClick.current = e.width === 0 && e.height === 0;
  });
  let endDragging = (e) => {
    if (isVirtualClick.current) {
      isVirtualClick.current = false;
      return;
    }
    state.setDragging(false);
    if (!state.anchorDate) return;
    let target = e.target;
    if (ref.current && ref.current.contains(document.activeElement) && (!ref.current.contains(target) || !target.closest('button, [role="button"]'))) state.selectFocusedDate();
  };
  (0, $e9faafb641e167db$export$90fc3a17d93f704c)(windowRef, "pointerup", endDragging);
  res.calendarProps.onBlur = (e) => {
    if (!ref.current) return;
    if ((!e.relatedTarget || !ref.current.contains(e.relatedTarget)) && state.anchorDate) state.selectFocusedDate();
  };
  (0, $e9faafb641e167db$export$90fc3a17d93f704c)(ref, "touchmove", (e) => {
    if (state.isDragging) e.preventDefault();
  }, {
    passive: false,
    capture: true
  });
  return res;
}

// node_modules/@react-aria/calendar/dist/useCalendarGrid.mjs
var import_react58 = __toESM(require_react(), 1);
function $e3031d1f8c9d64eb$export$cb95147730a423f5(props, state) {
  let { startDate = state.visibleRange.start, endDate = state.visibleRange.end, firstDayOfWeek } = props;
  let { direction } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let onKeyDown = (e) => {
    switch (e.key) {
      case "Enter":
      case " ":
        e.preventDefault();
        state.selectFocusedDate();
        break;
      case "PageUp":
        e.preventDefault();
        e.stopPropagation();
        state.focusPreviousSection(e.shiftKey);
        break;
      case "PageDown":
        e.preventDefault();
        e.stopPropagation();
        state.focusNextSection(e.shiftKey);
        break;
      case "End":
        e.preventDefault();
        e.stopPropagation();
        state.focusSectionEnd();
        break;
      case "Home":
        e.preventDefault();
        e.stopPropagation();
        state.focusSectionStart();
        break;
      case "ArrowLeft":
        e.preventDefault();
        e.stopPropagation();
        if (direction === "rtl") state.focusNextDay();
        else state.focusPreviousDay();
        break;
      case "ArrowUp":
        e.preventDefault();
        e.stopPropagation();
        state.focusPreviousRow();
        break;
      case "ArrowRight":
        e.preventDefault();
        e.stopPropagation();
        if (direction === "rtl") state.focusPreviousDay();
        else state.focusNextDay();
        break;
      case "ArrowDown":
        e.preventDefault();
        e.stopPropagation();
        state.focusNextRow();
        break;
      case "Escape":
        if ("setAnchorDate" in state) {
          e.preventDefault();
          state.setAnchorDate(null);
        }
        break;
    }
  };
  let visibleRangeDescription = (0, $a074e1e2d0f0a665$export$31afe65d91ef6e8)(startDate, endDate, state.timeZone, true);
  let { ariaLabel, ariaLabelledBy } = (0, $a074e1e2d0f0a665$export$653eddfc964b0f8a).get(state);
  let labelProps = (0, $313b98861ee5dd6c$export$d6875122194c7b44)({
    "aria-label": [
      ariaLabel,
      visibleRangeDescription
    ].filter(Boolean).join(", "),
    "aria-labelledby": ariaLabelledBy
  });
  let dayFormatter = (0, $896ba0a80a8f4d36$export$85fd5fdf27bacc79)({
    weekday: props.weekdayStyle || "narrow",
    timeZone: state.timeZone
  });
  let { locale } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let weekDays = (0, import_react58.useMemo)(() => {
    let weekStart = (0, $14e0f24ef4ac5c92$export$42c81a444fbfb5d4)((0, $14e0f24ef4ac5c92$export$d0bdf45af03a6ea3)(state.timeZone), locale, firstDayOfWeek);
    return [
      ...new Array(7).keys()
    ].map((index) => {
      let date = weekStart.add({
        days: index
      });
      let dateDay = date.toDate(state.timeZone);
      return dayFormatter.format(dateDay);
    });
  }, [
    locale,
    state.timeZone,
    dayFormatter,
    firstDayOfWeek
  ]);
  let weeksInMonth = (0, $14e0f24ef4ac5c92$export$ccc1b2479e7dd654)(startDate, locale, firstDayOfWeek);
  return {
    gridProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(labelProps, {
      role: "grid",
      "aria-readonly": state.isReadOnly || void 0,
      "aria-disabled": state.isDisabled || void 0,
      "aria-multiselectable": "highlightedRange" in state || void 0,
      onKeyDown,
      onFocus: () => state.setFocused(true),
      onBlur: () => state.setFocused(false)
    }),
    headerProps: {
      // Column headers are hidden to screen readers to make navigating with a touch screen reader easier.
      // The day names are already included in the label of each cell, so there's no need to announce them twice.
      "aria-hidden": true
    },
    weekDays,
    weeksInMonth
  };
}

// node_modules/@react-aria/calendar/dist/useCalendarCell.mjs
var import_react59 = __toESM(require_react(), 1);
function $parcel$interopDefault4(a) {
  return a && a.__esModule ? a.default : a;
}
function $36a0ac60f04457c5$export$136073280381448e(props, state, ref) {
  let { date, isDisabled } = props;
  let { errorMessageId, selectedDateDescription } = (0, $a074e1e2d0f0a665$export$653eddfc964b0f8a).get(state);
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault4($3904726b442bd9b2$exports)), "@react-aria/calendar");
  let dateFormatter = (0, $896ba0a80a8f4d36$export$85fd5fdf27bacc79)({
    weekday: "long",
    day: "numeric",
    month: "long",
    year: "numeric",
    era: (0, $a074e1e2d0f0a665$export$134cbb7fb09a9522)(date),
    timeZone: state.timeZone
  });
  let isSelected = state.isSelected(date);
  let isFocused = state.isCellFocused(date);
  isDisabled = isDisabled || state.isCellDisabled(date);
  let isUnavailable = state.isCellUnavailable(date);
  let isSelectable = !isDisabled && !isUnavailable;
  let isInvalid = state.isValueInvalid && Boolean("highlightedRange" in state ? !state.anchorDate && state.highlightedRange && date.compare(state.highlightedRange.start) >= 0 && date.compare(state.highlightedRange.end) <= 0 : state.value && (0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(state.value, date));
  if (isInvalid) isSelected = true;
  date = (0, $5a387cc49350e6db$export$722debc0e56fea39)(date, (0, $14e0f24ef4ac5c92$export$91b62ebf2ba703ee));
  let nativeDate = (0, import_react59.useMemo)(() => date.toDate(state.timeZone), [
    date,
    state.timeZone
  ]);
  let isDateToday = (0, $14e0f24ef4ac5c92$export$629b0a497aa65267)(date, state.timeZone);
  let label = (0, import_react59.useMemo)(() => {
    let label2 = "";
    if ("highlightedRange" in state && state.value && !state.anchorDate && ((0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(date, state.value.start) || (0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(date, state.value.end))) label2 = selectedDateDescription + ", ";
    label2 += dateFormatter.format(nativeDate);
    if (isDateToday)
      label2 = stringFormatter.format(isSelected ? "todayDateSelected" : "todayDate", {
        date: label2
      });
    else if (isSelected)
      label2 = stringFormatter.format("dateSelected", {
        date: label2
      });
    if (state.minValue && (0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(date, state.minValue)) label2 += ", " + stringFormatter.format("minimumDate");
    else if (state.maxValue && (0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(date, state.maxValue)) label2 += ", " + stringFormatter.format("maximumDate");
    return label2;
  }, [
    dateFormatter,
    nativeDate,
    stringFormatter,
    isSelected,
    isDateToday,
    date,
    state,
    selectedDateDescription
  ]);
  let rangeSelectionPrompt = "";
  if ("anchorDate" in state && isFocused && !state.isReadOnly && isSelectable) {
    if (state.anchorDate) rangeSelectionPrompt = stringFormatter.format("finishRangeSelectionPrompt");
    else rangeSelectionPrompt = stringFormatter.format("startRangeSelectionPrompt");
  }
  let descriptionProps = (0, $ef06256079686ba0$export$f8aeda7b10753fa1)(rangeSelectionPrompt);
  let isAnchorPressed = (0, import_react59.useRef)(false);
  let isRangeBoundaryPressed = (0, import_react59.useRef)(false);
  let touchDragTimerRef = (0, import_react59.useRef)(void 0);
  let { pressProps, isPressed } = (0, $f6c31cce2adf654f$export$45712eceda6fad21)({
    // When dragging to select a range, we don't want dragging over the original anchor
    // again to trigger onPressStart. Cancel presses immediately when the pointer exits.
    shouldCancelOnPointerExit: "anchorDate" in state && !!state.anchorDate,
    preventFocusOnPress: true,
    isDisabled: !isSelectable || state.isReadOnly,
    onPressStart(e) {
      if (state.isReadOnly) {
        state.setFocusedDate(date);
        return;
      }
      if ("highlightedRange" in state && !state.anchorDate && (e.pointerType === "mouse" || e.pointerType === "touch")) {
        if (state.highlightedRange && !isInvalid) {
          if ((0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(date, state.highlightedRange.start)) {
            state.setAnchorDate(state.highlightedRange.end);
            state.setFocusedDate(date);
            state.setDragging(true);
            isRangeBoundaryPressed.current = true;
            return;
          } else if ((0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(date, state.highlightedRange.end)) {
            state.setAnchorDate(state.highlightedRange.start);
            state.setFocusedDate(date);
            state.setDragging(true);
            isRangeBoundaryPressed.current = true;
            return;
          }
        }
        let startDragging = () => {
          state.setDragging(true);
          touchDragTimerRef.current = void 0;
          state.selectDate(date);
          state.setFocusedDate(date);
          isAnchorPressed.current = true;
        };
        if (e.pointerType === "touch") touchDragTimerRef.current = setTimeout(startDragging, 200);
        else startDragging();
      }
    },
    onPressEnd() {
      isRangeBoundaryPressed.current = false;
      isAnchorPressed.current = false;
      clearTimeout(touchDragTimerRef.current);
      touchDragTimerRef.current = void 0;
    },
    onPress() {
      if (!("anchorDate" in state) && !state.isReadOnly) {
        state.selectDate(date);
        state.setFocusedDate(date);
      }
    },
    onPressUp(e) {
      if (state.isReadOnly) return;
      if ("anchorDate" in state && touchDragTimerRef.current) {
        state.selectDate(date);
        state.setFocusedDate(date);
      }
      if ("anchorDate" in state) {
        if (isRangeBoundaryPressed.current)
          state.setAnchorDate(date);
        else if (state.anchorDate && !isAnchorPressed.current) {
          state.selectDate(date);
          state.setFocusedDate(date);
        } else if (e.pointerType === "keyboard" && !state.anchorDate) {
          state.selectDate(date);
          let nextDay = date.add({
            days: 1
          });
          if (state.isInvalid(nextDay)) nextDay = date.subtract({
            days: 1
          });
          if (!state.isInvalid(nextDay)) state.setFocusedDate(nextDay);
        } else if (e.pointerType === "virtual") {
          state.selectDate(date);
          state.setFocusedDate(date);
        }
      }
    }
  });
  let tabIndex = void 0;
  if (!isDisabled) tabIndex = (0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(date, state.focusedDate) ? 0 : -1;
  (0, import_react59.useEffect)(() => {
    if (isFocused && ref.current) {
      (0, $7215afc6de606d6b$export$de79e2c695e052f3)(ref.current);
      if ((0, $507fabe10e71c6fb$export$630ff653c5ada6a9)() !== "pointer" && document.activeElement === ref.current) (0, $2f04cbc44ee30ce0$export$c826860796309d1b)(ref.current, {
        containingElement: (0, $62d8ded9296f3872$export$cfa2225e87938781)(ref.current)
      });
    }
  }, [
    isFocused,
    ref
  ]);
  let cellDateFormatter = (0, $896ba0a80a8f4d36$export$85fd5fdf27bacc79)({
    day: "numeric",
    timeZone: state.timeZone,
    calendar: date.calendar.identifier
  });
  let formattedDate = (0, import_react59.useMemo)(() => cellDateFormatter.formatToParts(nativeDate).find((part) => part.type === "day").value, [
    cellDateFormatter,
    nativeDate
  ]);
  return {
    cellProps: {
      role: "gridcell",
      "aria-disabled": !isSelectable || void 0,
      "aria-selected": isSelected || void 0,
      "aria-invalid": isInvalid || void 0
    },
    buttonProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(pressProps, {
      onFocus() {
        if (!isDisabled) state.setFocusedDate(date);
      },
      tabIndex,
      role: "button",
      "aria-disabled": !isSelectable || void 0,
      "aria-label": label,
      "aria-invalid": isInvalid || void 0,
      "aria-describedby": [
        isInvalid ? errorMessageId : void 0,
        descriptionProps["aria-describedby"]
      ].filter(Boolean).join(" ") || void 0,
      onPointerEnter(e) {
        if ("highlightDate" in state && (e.pointerType !== "touch" || state.isDragging) && isSelectable) state.highlightDate(date);
      },
      onPointerDown(e) {
        if ("releasePointerCapture" in e.target) e.target.releasePointerCapture(e.pointerId);
      },
      onContextMenu(e) {
        e.preventDefault();
      }
    }),
    isPressed,
    isFocused,
    isSelected,
    isDisabled,
    isUnavailable,
    isOutsideVisibleRange: date.compare(state.visibleRange.start) < 0 || date.compare(state.visibleRange.end) > 0,
    isInvalid,
    formattedDate
  };
}

// node_modules/@react-aria/checkbox/dist/useCheckbox.mjs
var import_react62 = __toESM(require_react(), 1);

// node_modules/@react-stately/form/dist/useFormValidationState.mjs
var import_react60 = __toESM(require_react(), 1);
var $e5be200c675c3b3a$export$aca958c65c314e6c = {
  badInput: false,
  customError: false,
  patternMismatch: false,
  rangeOverflow: false,
  rangeUnderflow: false,
  stepMismatch: false,
  tooLong: false,
  tooShort: false,
  typeMismatch: false,
  valueMissing: false,
  valid: true
};
var $e5be200c675c3b3a$var$CUSTOM_VALIDITY_STATE = {
  ...$e5be200c675c3b3a$export$aca958c65c314e6c,
  customError: true,
  valid: false
};
var $e5be200c675c3b3a$export$dad6ae84456c676a = {
  isInvalid: false,
  validationDetails: $e5be200c675c3b3a$export$aca958c65c314e6c,
  validationErrors: []
};
var $e5be200c675c3b3a$export$571b5131b7e65c11 = (0, import_react60.createContext)({});
var $e5be200c675c3b3a$export$a763b9476acd3eb = "__formValidationState" + Date.now();
function $e5be200c675c3b3a$export$fc1a364ae1f3ff10(props) {
  if (props[$e5be200c675c3b3a$export$a763b9476acd3eb]) {
    let { realtimeValidation, displayValidation, updateValidation, resetValidation, commitValidation } = props[$e5be200c675c3b3a$export$a763b9476acd3eb];
    return {
      realtimeValidation,
      displayValidation,
      updateValidation,
      resetValidation,
      commitValidation
    };
  }
  return $e5be200c675c3b3a$var$useFormValidationStateImpl(props);
}
function $e5be200c675c3b3a$var$useFormValidationStateImpl(props) {
  let { isInvalid, validationState, name, value, builtinValidation, validate, validationBehavior = "aria" } = props;
  if (validationState) isInvalid || (isInvalid = validationState === "invalid");
  let controlledError = isInvalid !== void 0 ? {
    isInvalid,
    validationErrors: [],
    validationDetails: $e5be200c675c3b3a$var$CUSTOM_VALIDITY_STATE
  } : null;
  let clientError = (0, import_react60.useMemo)(() => {
    if (!validate || value == null) return null;
    let validateErrors = $e5be200c675c3b3a$var$runValidate(validate, value);
    return $e5be200c675c3b3a$var$getValidationResult(validateErrors);
  }, [
    validate,
    value
  ]);
  if (builtinValidation === null || builtinValidation === void 0 ? void 0 : builtinValidation.validationDetails.valid) builtinValidation = void 0;
  let serverErrors = (0, import_react60.useContext)($e5be200c675c3b3a$export$571b5131b7e65c11);
  let serverErrorMessages = (0, import_react60.useMemo)(() => {
    if (name) return Array.isArray(name) ? name.flatMap((name2) => $e5be200c675c3b3a$var$asArray(serverErrors[name2])) : $e5be200c675c3b3a$var$asArray(serverErrors[name]);
    return [];
  }, [
    serverErrors,
    name
  ]);
  let [lastServerErrors, setLastServerErrors] = (0, import_react60.useState)(serverErrors);
  let [isServerErrorCleared, setServerErrorCleared] = (0, import_react60.useState)(false);
  if (serverErrors !== lastServerErrors) {
    setLastServerErrors(serverErrors);
    setServerErrorCleared(false);
  }
  let serverError = (0, import_react60.useMemo)(() => $e5be200c675c3b3a$var$getValidationResult(isServerErrorCleared ? [] : serverErrorMessages), [
    isServerErrorCleared,
    serverErrorMessages
  ]);
  let nextValidation = (0, import_react60.useRef)($e5be200c675c3b3a$export$dad6ae84456c676a);
  let [currentValidity, setCurrentValidity] = (0, import_react60.useState)($e5be200c675c3b3a$export$dad6ae84456c676a);
  let lastError = (0, import_react60.useRef)($e5be200c675c3b3a$export$dad6ae84456c676a);
  let commitValidation = () => {
    if (!commitQueued) return;
    setCommitQueued(false);
    let error = clientError || builtinValidation || nextValidation.current;
    if (!$e5be200c675c3b3a$var$isEqualValidation(error, lastError.current)) {
      lastError.current = error;
      setCurrentValidity(error);
    }
  };
  let [commitQueued, setCommitQueued] = (0, import_react60.useState)(false);
  (0, import_react60.useEffect)(commitValidation);
  let realtimeValidation = controlledError || serverError || clientError || builtinValidation || $e5be200c675c3b3a$export$dad6ae84456c676a;
  let displayValidation = validationBehavior === "native" ? controlledError || serverError || currentValidity : controlledError || serverError || clientError || builtinValidation || currentValidity;
  return {
    realtimeValidation,
    displayValidation,
    updateValidation(value2) {
      if (validationBehavior === "aria" && !$e5be200c675c3b3a$var$isEqualValidation(currentValidity, value2)) setCurrentValidity(value2);
      else nextValidation.current = value2;
    },
    resetValidation() {
      let error = $e5be200c675c3b3a$export$dad6ae84456c676a;
      if (!$e5be200c675c3b3a$var$isEqualValidation(error, lastError.current)) {
        lastError.current = error;
        setCurrentValidity(error);
      }
      if (validationBehavior === "native") setCommitQueued(false);
      setServerErrorCleared(true);
    },
    commitValidation() {
      if (validationBehavior === "native") setCommitQueued(true);
      setServerErrorCleared(true);
    }
  };
}
function $e5be200c675c3b3a$var$asArray(v) {
  if (!v) return [];
  return Array.isArray(v) ? v : [
    v
  ];
}
function $e5be200c675c3b3a$var$runValidate(validate, value) {
  if (typeof validate === "function") {
    let e = validate(value);
    if (e && typeof e !== "boolean") return $e5be200c675c3b3a$var$asArray(e);
  }
  return [];
}
function $e5be200c675c3b3a$var$getValidationResult(errors) {
  return errors.length ? {
    isInvalid: true,
    validationErrors: errors,
    validationDetails: $e5be200c675c3b3a$var$CUSTOM_VALIDITY_STATE
  } : null;
}
function $e5be200c675c3b3a$var$isEqualValidation(a, b) {
  if (a === b) return true;
  return !!a && !!b && a.isInvalid === b.isInvalid && a.validationErrors.length === b.validationErrors.length && a.validationErrors.every((a2, i) => a2 === b.validationErrors[i]) && Object.entries(a.validationDetails).every(([k, v]) => b.validationDetails[k] === v);
}
function $e5be200c675c3b3a$export$75ee7c75d68f5b0e(...results) {
  let errors = /* @__PURE__ */ new Set();
  let isInvalid = false;
  let validationDetails = {
    ...$e5be200c675c3b3a$export$aca958c65c314e6c
  };
  for (let v of results) {
    var _validationDetails, _key;
    for (let e of v.validationErrors) errors.add(e);
    isInvalid || (isInvalid = v.isInvalid);
    for (let key in validationDetails) (_validationDetails = validationDetails)[_key = key] || (_validationDetails[_key] = v.validationDetails[key]);
  }
  validationDetails.valid = !isInvalid;
  return {
    isInvalid,
    validationErrors: [
      ...errors
    ],
    validationDetails
  };
}

// node_modules/@react-aria/form/dist/useFormValidation.mjs
var import_react61 = __toESM(require_react(), 1);
function $e93e671b31057976$export$b8473d3665f3a75a(props, state, ref) {
  let { validationBehavior, focus } = props;
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    if (validationBehavior === "native" && (ref === null || ref === void 0 ? void 0 : ref.current) && !ref.current.disabled) {
      let errorMessage = state.realtimeValidation.isInvalid ? state.realtimeValidation.validationErrors.join(" ") || "Invalid value." : "";
      ref.current.setCustomValidity(errorMessage);
      if (!ref.current.hasAttribute("title")) ref.current.title = "";
      if (!state.realtimeValidation.isInvalid) state.updateValidation($e93e671b31057976$var$getNativeValidity(ref.current));
    }
  });
  let onReset = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)(() => {
    state.resetValidation();
  });
  let onInvalid = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e) => {
    var _ref_current;
    if (!state.displayValidation.isInvalid) state.commitValidation();
    let form = ref === null || ref === void 0 ? void 0 : (_ref_current = ref.current) === null || _ref_current === void 0 ? void 0 : _ref_current.form;
    if (!e.defaultPrevented && ref && form && $e93e671b31057976$var$getFirstInvalidInput(form) === ref.current) {
      var _ref_current1;
      if (focus) focus();
      else (_ref_current1 = ref.current) === null || _ref_current1 === void 0 ? void 0 : _ref_current1.focus();
      (0, $507fabe10e71c6fb$export$8397ddfc504fdb9a)("keyboard");
    }
    e.preventDefault();
  });
  let onChange = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)(() => {
    state.commitValidation();
  });
  (0, import_react61.useEffect)(() => {
    let input = ref === null || ref === void 0 ? void 0 : ref.current;
    if (!input) return;
    let form = input.form;
    input.addEventListener("invalid", onInvalid);
    input.addEventListener("change", onChange);
    form === null || form === void 0 ? void 0 : form.addEventListener("reset", onReset);
    return () => {
      input.removeEventListener("invalid", onInvalid);
      input.removeEventListener("change", onChange);
      form === null || form === void 0 ? void 0 : form.removeEventListener("reset", onReset);
    };
  }, [
    ref,
    onInvalid,
    onChange,
    onReset,
    validationBehavior
  ]);
}
function $e93e671b31057976$var$getValidity(input) {
  let validity = input.validity;
  return {
    badInput: validity.badInput,
    customError: validity.customError,
    patternMismatch: validity.patternMismatch,
    rangeOverflow: validity.rangeOverflow,
    rangeUnderflow: validity.rangeUnderflow,
    stepMismatch: validity.stepMismatch,
    tooLong: validity.tooLong,
    tooShort: validity.tooShort,
    typeMismatch: validity.typeMismatch,
    valueMissing: validity.valueMissing,
    valid: validity.valid
  };
}
function $e93e671b31057976$var$getNativeValidity(input) {
  return {
    isInvalid: !input.validity.valid,
    validationDetails: $e93e671b31057976$var$getValidity(input),
    validationErrors: input.validationMessage ? [
      input.validationMessage
    ] : []
  };
}
function $e93e671b31057976$var$getFirstInvalidInput(form) {
  for (let i = 0; i < form.elements.length; i++) {
    let element = form.elements[i];
    if (!element.validity.valid) return element;
  }
  return null;
}

// node_modules/@react-aria/toggle/dist/useToggle.mjs
function $d2c8e2b0480f3f34$export$cbe85ee05b554577(props, state, ref) {
  let { isDisabled = false, isReadOnly = false, value, name, children, "aria-label": ariaLabel, "aria-labelledby": ariaLabelledby, validationState = "valid", isInvalid } = props;
  let onChange = (e) => {
    e.stopPropagation();
    state.setSelected(e.target.checked);
  };
  let hasChildren = children != null;
  let hasAriaLabel = ariaLabel != null || ariaLabelledby != null;
  if (!hasChildren && !hasAriaLabel && true) console.warn("If you do not provide children, you must specify an aria-label for accessibility");
  let { pressProps, isPressed } = (0, $f6c31cce2adf654f$export$45712eceda6fad21)({
    isDisabled
  });
  let { pressProps: labelProps, isPressed: isLabelPressed } = (0, $f6c31cce2adf654f$export$45712eceda6fad21)({
    onPress() {
      var _ref_current;
      state.toggle();
      (_ref_current = ref.current) === null || _ref_current === void 0 ? void 0 : _ref_current.focus();
    },
    isDisabled: isDisabled || isReadOnly
  });
  let { focusableProps } = (0, $f645667febf57a63$export$4c014de7c8940b4c)(props, ref);
  let interactions = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(pressProps, focusableProps);
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props, {
    labelable: true
  });
  (0, $99facab73266f662$export$5add1d006293d136)(ref, state.isSelected, state.setSelected);
  return {
    labelProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(labelProps, {
      onClick: (e) => e.preventDefault()
    }),
    inputProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(domProps, {
      "aria-invalid": isInvalid || validationState === "invalid" || void 0,
      "aria-errormessage": props["aria-errormessage"],
      "aria-controls": props["aria-controls"],
      "aria-readonly": isReadOnly || void 0,
      onChange,
      disabled: isDisabled,
      ...value == null ? {} : {
        value
      },
      name,
      type: "checkbox",
      ...interactions
    }),
    isSelected: state.isSelected,
    isPressed: isPressed || isLabelPressed,
    isDisabled,
    isReadOnly,
    isInvalid: isInvalid || validationState === "invalid"
  };
}

// node_modules/@react-aria/checkbox/dist/useCheckbox.mjs
function $406796ff087fe49b$export$e375f10ce42261c5(props, state, inputRef) {
  let validationState = (0, $e5be200c675c3b3a$export$fc1a364ae1f3ff10)({
    ...props,
    value: state.isSelected
  });
  let { isInvalid, validationErrors, validationDetails } = validationState.displayValidation;
  let { labelProps, inputProps, isSelected, isPressed, isDisabled, isReadOnly } = (0, $d2c8e2b0480f3f34$export$cbe85ee05b554577)({
    ...props,
    isInvalid
  }, state, inputRef);
  (0, $e93e671b31057976$export$b8473d3665f3a75a)(props, validationState, inputRef);
  let { isIndeterminate, isRequired, validationBehavior = "aria" } = props;
  (0, import_react62.useEffect)(() => {
    if (inputRef.current) inputRef.current.indeterminate = !!isIndeterminate;
  });
  let { pressProps } = (0, $f6c31cce2adf654f$export$45712eceda6fad21)({
    isDisabled: isDisabled || isReadOnly,
    onPress() {
      let { [(0, $e5be200c675c3b3a$export$a763b9476acd3eb)]: groupValidationState } = props;
      let { commitValidation } = groupValidationState ? groupValidationState : validationState;
      commitValidation();
    }
  });
  return {
    labelProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(labelProps, pressProps),
    inputProps: {
      ...inputProps,
      checked: isSelected,
      "aria-required": isRequired && validationBehavior === "aria" || void 0,
      required: isRequired && validationBehavior === "native"
    },
    isSelected,
    isPressed,
    isDisabled,
    isReadOnly,
    isInvalid,
    validationErrors,
    validationDetails
  };
}

// node_modules/@react-aria/checkbox/dist/utils.mjs
var $1ae600c947479353$export$ec98120685d4f57d = /* @__PURE__ */ new WeakMap();

// node_modules/@react-aria/label/dist/useLabel.mjs
function $d191a55c9702f145$export$8467354a121f1b9f(props) {
  let { id, label, "aria-labelledby": ariaLabelledby, "aria-label": ariaLabel, labelElementType = "label" } = props;
  id = (0, $bdb11010cef70236$export$f680877a34711e37)(id);
  let labelId = (0, $bdb11010cef70236$export$f680877a34711e37)();
  let labelProps = {};
  if (label) {
    ariaLabelledby = ariaLabelledby ? `${labelId} ${ariaLabelledby}` : labelId;
    labelProps = {
      id: labelId,
      htmlFor: labelElementType === "label" ? id : void 0
    };
  } else if (!ariaLabelledby && !ariaLabel && true) console.warn("If you do not provide a visible label, you must specify an aria-label or aria-labelledby attribute for accessibility");
  let fieldProps = (0, $313b98861ee5dd6c$export$d6875122194c7b44)({
    id,
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledby
  });
  return {
    labelProps,
    fieldProps
  };
}

// node_modules/@react-aria/label/dist/useField.mjs
function $2baaea4c71418dea$export$294aa081a6c6f55d(props) {
  let { description, errorMessage, isInvalid, validationState } = props;
  let { labelProps, fieldProps } = (0, $d191a55c9702f145$export$8467354a121f1b9f)(props);
  let descriptionId = (0, $bdb11010cef70236$export$b4cc09c592e8fdb8)([
    Boolean(description),
    Boolean(errorMessage),
    isInvalid,
    validationState
  ]);
  let errorMessageId = (0, $bdb11010cef70236$export$b4cc09c592e8fdb8)([
    Boolean(description),
    Boolean(errorMessage),
    isInvalid,
    validationState
  ]);
  fieldProps = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(fieldProps, {
    "aria-describedby": [
      descriptionId,
      // Use aria-describedby for error message because aria-errormessage is unsupported using VoiceOver or NVDA. See https://github.com/adobe/react-spectrum/issues/1346#issuecomment-740136268
      errorMessageId,
      props["aria-describedby"]
    ].filter(Boolean).join(" ") || void 0
  });
  return {
    labelProps,
    fieldProps,
    descriptionProps: {
      id: descriptionId
    },
    errorMessageProps: {
      id: errorMessageId
    }
  };
}

// node_modules/@react-aria/checkbox/dist/useCheckboxGroup.mjs
function $1e9fce0cfacc738b$export$49ff6f28c54f1cbe(props, state) {
  let { isDisabled, name, validationBehavior = "aria" } = props;
  let { isInvalid, validationErrors, validationDetails } = state.displayValidation;
  let { labelProps, fieldProps, descriptionProps, errorMessageProps } = (0, $2baaea4c71418dea$export$294aa081a6c6f55d)({
    ...props,
    // Checkbox group is not an HTML input element so it
    // shouldn't be labeled by a <label> element.
    labelElementType: "span",
    isInvalid,
    errorMessage: props.errorMessage || validationErrors
  });
  (0, $1ae600c947479353$export$ec98120685d4f57d).set(state, {
    name,
    descriptionId: descriptionProps.id,
    errorMessageId: errorMessageProps.id,
    validationBehavior
  });
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props, {
    labelable: true
  });
  let { focusWithinProps } = (0, $9ab94262bd0047c7$export$420e68273165f4ec)({
    onBlurWithin: props.onBlur,
    onFocusWithin: props.onFocus,
    onFocusWithinChange: props.onFocusChange
  });
  return {
    groupProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(domProps, {
      role: "group",
      "aria-disabled": isDisabled || void 0,
      ...fieldProps,
      ...focusWithinProps
    }),
    labelProps,
    descriptionProps,
    errorMessageProps,
    isInvalid,
    validationErrors,
    validationDetails
  };
}

// node_modules/@react-aria/checkbox/dist/useCheckboxGroupItem.mjs
var import_react64 = __toESM(require_react(), 1);

// node_modules/@react-stately/toggle/dist/useToggleState.mjs
function $3017fa7ffdddec74$export$8042c6c013fd5226(props = {}) {
  let { isReadOnly } = props;
  let [isSelected, setSelected] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(props.isSelected, props.defaultSelected || false, props.onChange);
  function updateSelected(value) {
    if (!isReadOnly) setSelected(value);
  }
  function toggleState() {
    if (!isReadOnly) setSelected(!isSelected);
  }
  return {
    isSelected,
    setSelected: updateSelected,
    toggle: toggleState
  };
}

// node_modules/@react-stately/toggle/dist/useToggleGroupState.mjs
var import_react63 = __toESM(require_react(), 1);
function $ad999b7f496648d1$export$8deac67f4addf270(props) {
  let { selectionMode = "single", disallowEmptySelection, isDisabled = false } = props;
  let [selectedKeys, setSelectedKeys] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)((0, import_react63.useMemo)(() => props.selectedKeys ? new Set(props.selectedKeys) : void 0, [
    props.selectedKeys
  ]), (0, import_react63.useMemo)(() => props.defaultSelectedKeys ? new Set(props.defaultSelectedKeys) : /* @__PURE__ */ new Set(), [
    props.defaultSelectedKeys
  ]), props.onSelectionChange);
  return {
    selectionMode,
    isDisabled,
    selectedKeys,
    setSelectedKeys,
    toggleKey(key) {
      let keys;
      if (selectionMode === "multiple") {
        keys = new Set(selectedKeys);
        if (keys.has(key) && (!disallowEmptySelection || keys.size > 1)) keys.delete(key);
        else keys.add(key);
      } else keys = new Set(selectedKeys.has(key) && !disallowEmptySelection ? [] : [
        key
      ]);
      setSelectedKeys(keys);
    },
    setSelected(key, isSelected) {
      if (isSelected !== selectedKeys.has(key)) this.toggleKey(key);
    }
  };
}

// node_modules/@react-aria/checkbox/dist/useCheckboxGroupItem.mjs
function $fba3e38d5ca8983f$export$353b32fc6898d37d(props, state, inputRef) {
  const toggleState = (0, $3017fa7ffdddec74$export$8042c6c013fd5226)({
    isReadOnly: props.isReadOnly || state.isReadOnly,
    isSelected: state.isSelected(props.value),
    onChange(isSelected) {
      if (isSelected) state.addValue(props.value);
      else state.removeValue(props.value);
      if (props.onChange) props.onChange(isSelected);
    }
  });
  let { name, descriptionId, errorMessageId, validationBehavior } = (0, $1ae600c947479353$export$ec98120685d4f57d).get(state);
  var _props_validationBehavior;
  validationBehavior = (_props_validationBehavior = props.validationBehavior) !== null && _props_validationBehavior !== void 0 ? _props_validationBehavior : validationBehavior;
  let { realtimeValidation } = (0, $e5be200c675c3b3a$export$fc1a364ae1f3ff10)({
    ...props,
    value: toggleState.isSelected,
    // Server validation is handled at the group level.
    name: void 0,
    validationBehavior: "aria"
  });
  let nativeValidation = (0, import_react64.useRef)((0, $e5be200c675c3b3a$export$dad6ae84456c676a));
  let updateValidation = () => {
    state.setInvalid(props.value, realtimeValidation.isInvalid ? realtimeValidation : nativeValidation.current);
  };
  (0, import_react64.useEffect)(updateValidation);
  let combinedRealtimeValidation = state.realtimeValidation.isInvalid ? state.realtimeValidation : realtimeValidation;
  let displayValidation = validationBehavior === "native" ? state.displayValidation : combinedRealtimeValidation;
  var _props_isRequired;
  let res = (0, $406796ff087fe49b$export$e375f10ce42261c5)({
    ...props,
    isReadOnly: props.isReadOnly || state.isReadOnly,
    isDisabled: props.isDisabled || state.isDisabled,
    name: props.name || name,
    isRequired: (_props_isRequired = props.isRequired) !== null && _props_isRequired !== void 0 ? _props_isRequired : state.isRequired,
    validationBehavior,
    [(0, $e5be200c675c3b3a$export$a763b9476acd3eb)]: {
      realtimeValidation: combinedRealtimeValidation,
      displayValidation,
      resetValidation: state.resetValidation,
      commitValidation: state.commitValidation,
      updateValidation(v) {
        nativeValidation.current = v;
        updateValidation();
      }
    }
  }, toggleState, inputRef);
  return {
    ...res,
    inputProps: {
      ...res.inputProps,
      "aria-describedby": [
        props["aria-describedby"],
        state.isInvalid ? errorMessageId : null,
        descriptionId
      ].filter(Boolean).join(" ") || void 0
    }
  };
}

// node_modules/@react-aria/color/dist/ar-AE.mjs
var $eccab2b0118aef08$exports = {};
$eccab2b0118aef08$exports = {
  "colorInputLabel": (args) => `${args.label}, ${args.channelLabel}`,
  "colorNameAndValue": (args) => `${args.name}: ${args.value}`,
  "colorPicker": `أداة انتقاء اللون`,
  "colorSwatch": `تغيير الألوان`,
  "transparent": `شفاف`,
  "twoDimensionalSlider": `مُنزلق 2D`
};

// node_modules/@react-aria/color/dist/bg-BG.mjs
var $bf2b4507594e3d45$exports = {};
$bf2b4507594e3d45$exports = {
  "colorInputLabel": (args) => `${args.label}, ${args.channelLabel}`,
  "colorNameAndValue": (args) => `${args.name}: ${args.value}`,
  "colorPicker": `Средство за избиране на цвят`,
  "colorSwatch": `цветна мостра`,
  "transparent": `прозрачен`,
  "twoDimensionalSlider": `2D плъзгач`
};

// node_modules/@react-aria/color/dist/cs-CZ.mjs
var $01c08487af7ecd14$exports = {};
$01c08487af7ecd14$exports = {
  "colorInputLabel": (args) => `${args.label}, ${args.channelLabel}`,
  "colorNameAndValue": (args) => `${args.name}: ${args.value}`,
  "colorPicker": `Výběr barvy`,
  "colorSwatch": `barevný vzorek`,
  "transparent": `průhledný`,
  "twoDimensionalSlider": `2D posuvník`
};

// node_modules/@react-aria/color/dist/da-DK.mjs
var $5e997db6ea0d10f6$exports = {};
$5e997db6ea0d10f6$exports = {
  "colorInputLabel": (args) => `${args.label}, ${args.channelLabel}`,
  "colorNameAndValue": (args) => `${args.name}: ${args.value}`,
  "colorPicker": `Farvevælger`,
  "colorSwatch": `farveprøve`,
  "transparent": `gennemsigtig`,
  "twoDimensionalSlider": `2D-skyder`
};

// node_modules/@react-aria/color/dist/de-DE.mjs
var $fe5998f640a79fd2$exports = {};
$fe5998f640a79fd2$exports = {
  "colorInputLabel": (args) => `${args.label}, ${args.channelLabel}`,
  "colorNameAndValue": (args) => `${args.name}: ${args.value}`,
  "colorPicker": `Farbwähler`,
  "colorSwatch": `Farbfeld`,
  "transparent": `transparent`,
  "twoDimensionalSlider": `2D-Schieberegler`
};

// node_modules/@react-aria/color/dist/el-GR.mjs
var $18e4d1d5b500a9ee$exports = {};
$18e4d1d5b500a9ee$exports = {
  "colorInputLabel": (args) => `${args.label}, ${args.channelLabel}`,
  "colorNameAndValue": (args) => `${args.name}: ${args.value}`,
  "colorPicker": `Επιλογέας χρωμάτων`,
  "colorSwatch": `χρωματικό δείγμα`,
  "transparent": `διαφανές`,
  "twoDimensionalSlider": `Ρυθμιστικό 2D`
};

// node_modules/@react-aria/color/dist/en-US.mjs
var $bf90a11a7a42a0f7$exports = {};
$bf90a11a7a42a0f7$exports = {
  "colorPicker": `Color picker`,
  "twoDimensionalSlider": `2D slider`,
  "colorNameAndValue": (args) => `${args.name}: ${args.value}`,
  "colorInputLabel": (args) => `${args.label}, ${args.channelLabel}`,
  "colorSwatch": `color swatch`,
  "transparent": `transparent`
};

// node_modules/@react-aria/color/dist/es-ES.mjs
var $dd0d25f885b5c5f3$exports = {};
$dd0d25f885b5c5f3$exports = {
  "colorInputLabel": (args) => `${args.label}, ${args.channelLabel}`,
  "colorNameAndValue": (args) => `${args.name}: ${args.value}`,
  "colorPicker": `Selector de color`,
  "colorSwatch": `muestra de color`,
  "transparent": `transparente`,
  "twoDimensionalSlider": `Regulador 2D`
};

// node_modules/@react-aria/color/dist/et-EE.mjs
var $d950967017e3485b$exports = {};
$d950967017e3485b$exports = {
  "colorInputLabel": (args) => `${args.label}, ${args.channelLabel}`,
  "colorNameAndValue": (args) => `${args.name}: ${args.value}`,
  "colorPicker": `Värvivalija`,
  "colorSwatch": `värvinäidis`,
  "transparent": `läbipaistev`,
  "twoDimensionalSlider": `2D-liugur`
};

// node_modules/@react-aria/color/dist/fi-FI.mjs
var $00a415a3f0ab315a$exports = {};
$00a415a3f0ab315a$exports = {
  "colorInputLabel": (args) => `${args.label}, ${args.channelLabel}`,
  "colorNameAndValue": (args) => `${args.name}: ${args.value}`,
  "colorPicker": `Värimuokkain`,
  "colorSwatch": `värimalli`,
  "transparent": `läpinäkyvä`,
  "twoDimensionalSlider": `2D-liukusäädin`
};

// node_modules/@react-aria/color/dist/fr-FR.mjs
var $d80f30fe86c95741$exports = {};
$d80f30fe86c95741$exports = {
  "colorInputLabel": (args) => `${args.label}, ${args.channelLabel}`,
  "colorNameAndValue": (args) => `${args.name} : ${args.value}`,
  "colorPicker": `Sélecteur de couleurs`,
  "colorSwatch": `Échantillon de couleurs`,
  "transparent": `Transparent`,
  "twoDimensionalSlider": `Curseur 2D`
};

// node_modules/@react-aria/color/dist/he-IL.mjs
var $6912afb584340a2e$exports = {};
$6912afb584340a2e$exports = {
  "colorInputLabel": (args) => `${args.label}, ${args.channelLabel}`,
  "colorNameAndValue": (args) => `${args.name}: ${args.value}`,
  "colorPicker": `בוחר הצבעים`,
  "colorSwatch": `דוגמית צבע`,
  "transparent": `שקוף`,
  "twoDimensionalSlider": `מחוון דו מימדי`
};

// node_modules/@react-aria/color/dist/hr-HR.mjs
var $7b97fcacd84ec90f$exports = {};
$7b97fcacd84ec90f$exports = {
  "colorInputLabel": (args) => `${args.label}, ${args.channelLabel}`,
  "colorNameAndValue": (args) => `${args.name}: ${args.value}`,
  "colorPicker": `Odabir boje`,
  "colorSwatch": `uzorak boje`,
  "transparent": `transparentno`,
  "twoDimensionalSlider": `2D klizač`
};

// node_modules/@react-aria/color/dist/hu-HU.mjs
var $da9b443e89eebc6b$exports = {};
$da9b443e89eebc6b$exports = {
  "colorInputLabel": (args) => `${args.label}, ${args.channelLabel}`,
  "colorNameAndValue": (args) => `${args.name}: ${args.value}`,
  "colorPicker": `Színválasztó`,
  "colorSwatch": `színtár`,
  "transparent": `átlátszó`,
  "twoDimensionalSlider": `2D-csúszka`
};

// node_modules/@react-aria/color/dist/it-IT.mjs
var $35f135b45eb4d95b$exports = {};
$35f135b45eb4d95b$exports = {
  "colorInputLabel": (args) => `${args.label}, ${args.channelLabel}`,
  "colorNameAndValue": (args) => `${args.name}: ${args.value}`,
  "colorPicker": `Selettore colore`,
  "colorSwatch": `campione di colore`,
  "transparent": `trasparente`,
  "twoDimensionalSlider": `Cursore 2D`
};

// node_modules/@react-aria/color/dist/ja-JP.mjs
var $760b09448e39c6cd$exports = {};
$760b09448e39c6cd$exports = {
  "colorInputLabel": (args) => `${args.label}、${args.channelLabel}`,
  "colorNameAndValue": (args) => `${args.name} : ${args.value}`,
  "colorPicker": `カラーピッカー`,
  "colorSwatch": `カラースウォッチ`,
  "transparent": `透明`,
  "twoDimensionalSlider": `2D スライダー`
};

// node_modules/@react-aria/color/dist/ko-KR.mjs
var $fc7b7d43be9703ec$exports = {};
$fc7b7d43be9703ec$exports = {
  "colorInputLabel": (args) => `${args.label}, ${args.channelLabel}`,
  "colorNameAndValue": (args) => `${args.name}: ${args.value}`,
  "colorPicker": `색상 피커`,
  "colorSwatch": `색상 견본`,
  "transparent": `투명도`,
  "twoDimensionalSlider": `2D 슬라이더`
};

// node_modules/@react-aria/color/dist/lt-LT.mjs
var $74918a1664156912$exports = {};
$74918a1664156912$exports = {
  "colorInputLabel": (args) => `${args.label}, ${args.channelLabel}`,
  "colorNameAndValue": (args) => `${args.name}: ${args.value}`,
  "colorPicker": `Spalvų parinkiklis`,
  "colorSwatch": `spalvų pavyzdys`,
  "transparent": `skaidrus`,
  "twoDimensionalSlider": `2D slankiklis`
};

// node_modules/@react-aria/color/dist/lv-LV.mjs
var $4e6cde11c2bc9840$exports = {};
$4e6cde11c2bc9840$exports = {
  "colorInputLabel": (args) => `${args.label}, ${args.channelLabel}`,
  "colorNameAndValue": (args) => `${args.name}: ${args.value}`,
  "colorPicker": `Krāsu atlasītājs`,
  "colorSwatch": `krāsu paraugs`,
  "transparent": `caurspīdīgs`,
  "twoDimensionalSlider": `2D slīdnis`
};

// node_modules/@react-aria/color/dist/nb-NO.mjs
var $6faa3defebc3eb72$exports = {};
$6faa3defebc3eb72$exports = {
  "colorInputLabel": (args) => `${args.label}, ${args.channelLabel}`,
  "colorNameAndValue": (args) => `${args.name}: ${args.value}`,
  "colorPicker": `Fargevelger`,
  "colorSwatch": `fargekart`,
  "transparent": `gjennomsiktig`,
  "twoDimensionalSlider": `2D-glidebryter`
};

// node_modules/@react-aria/color/dist/nl-NL.mjs
var $6ac9b6b1b7e3ca12$exports = {};
$6ac9b6b1b7e3ca12$exports = {
  "colorInputLabel": (args) => `${args.label}, ${args.channelLabel}`,
  "colorNameAndValue": (args) => `${args.name}: ${args.value}`,
  "colorPicker": `Kleurkiezer`,
  "colorSwatch": `kleurstaal`,
  "transparent": `transparant`,
  "twoDimensionalSlider": `2D-schuifregelaar`
};

// node_modules/@react-aria/color/dist/pl-PL.mjs
var $1be8b0ee8841f1e7$exports = {};
$1be8b0ee8841f1e7$exports = {
  "colorInputLabel": (args) => `${args.label}, ${args.channelLabel}`,
  "colorNameAndValue": (args) => `${args.name}: ${args.value}`,
  "colorPicker": `Próbnik kolorów`,
  "colorSwatch": `próbka koloru`,
  "transparent": `przezroczysty`,
  "twoDimensionalSlider": `Suwak 2D`
};

// node_modules/@react-aria/color/dist/pt-BR.mjs
var $f9507c2d404ed689$exports = {};
$f9507c2d404ed689$exports = {
  "colorInputLabel": (args) => `${args.label}, ${args.channelLabel}`,
  "colorNameAndValue": (args) => `${args.name}: ${args.value}`,
  "colorPicker": `Seletor de cores`,
  "colorSwatch": `amostra de cores`,
  "transparent": `transparente`,
  "twoDimensionalSlider": `Controle deslizante 2D`
};

// node_modules/@react-aria/color/dist/pt-PT.mjs
var $8f872ea59c02d67e$exports = {};
$8f872ea59c02d67e$exports = {
  "colorInputLabel": (args) => `${args.label}, ${args.channelLabel}`,
  "colorNameAndValue": (args) => `${args.name}: ${args.value}`,
  "colorPicker": `Seletor de cores`,
  "colorSwatch": `amostra de cor`,
  "transparent": `transparente`,
  "twoDimensionalSlider": `Controle deslizante 2D`
};

// node_modules/@react-aria/color/dist/ro-RO.mjs
var $b03b45b62a7ccae4$exports = {};
$b03b45b62a7ccae4$exports = {
  "colorInputLabel": (args) => `${args.label}, ${args.channelLabel}`,
  "colorNameAndValue": (args) => `${args.name}: ${args.value}`,
  "colorPicker": `Selector de culori`,
  "colorSwatch": `specimen de culoare`,
  "transparent": `transparent`,
  "twoDimensionalSlider": `Glisor 2D`
};

// node_modules/@react-aria/color/dist/ru-RU.mjs
var $f1107d94c09df9b8$exports = {};
$f1107d94c09df9b8$exports = {
  "colorInputLabel": (args) => `${args.label}, ${args.channelLabel}`,
  "colorNameAndValue": (args) => `${args.name}: ${args.value}`,
  "colorPicker": `Палитра цветов`,
  "colorSwatch": `цветовой образец`,
  "transparent": `прозрачный`,
  "twoDimensionalSlider": `Ползунок 2D`
};

// node_modules/@react-aria/color/dist/sk-SK.mjs
var $b61325f242fafc7c$exports = {};
$b61325f242fafc7c$exports = {
  "colorInputLabel": (args) => `${args.label}, ${args.channelLabel}`,
  "colorNameAndValue": (args) => `${args.name}: ${args.value}`,
  "colorPicker": `Výber farieb`,
  "colorSwatch": `vzorkovník farieb`,
  "transparent": `transparentný`,
  "twoDimensionalSlider": `2D jazdec`
};

// node_modules/@react-aria/color/dist/sl-SI.mjs
var $f44b7cf39ac8f315$exports = {};
$f44b7cf39ac8f315$exports = {
  "colorInputLabel": (args) => `${args.label}, ${args.channelLabel}`,
  "colorNameAndValue": (args) => `${args.name}: ${args.value}`,
  "colorPicker": `Izbirnik barv`,
  "colorSwatch": `barvna paleta`,
  "transparent": `prozorno`,
  "twoDimensionalSlider": `2D drsnik`
};

// node_modules/@react-aria/color/dist/sr-SP.mjs
var $aa8cd83fc8d4982b$exports = {};
$aa8cd83fc8d4982b$exports = {
  "colorInputLabel": (args) => `${args.label}, ${args.channelLabel}`,
  "colorNameAndValue": (args) => `${args.name}: ${args.value}`,
  "colorPicker": `Birač boja`,
  "colorSwatch": `Uzorak boje`,
  "transparent": `providno`,
  "twoDimensionalSlider": `2D klizač`
};

// node_modules/@react-aria/color/dist/sv-SE.mjs
var $7c4f4e5bb7c06f1e$exports = {};
$7c4f4e5bb7c06f1e$exports = {
  "colorInputLabel": (args) => `${args.label}, ${args.channelLabel}`,
  "colorNameAndValue": (args) => `${args.name}: ${args.value}`,
  "colorPicker": `Färgväljaren`,
  "colorSwatch": `färgruta`,
  "transparent": `genomskinlig`,
  "twoDimensionalSlider": `2D-reglage`
};

// node_modules/@react-aria/color/dist/tr-TR.mjs
var $8045cf930ef745aa$exports = {};
$8045cf930ef745aa$exports = {
  "colorInputLabel": (args) => `${args.label}, ${args.channelLabel}`,
  "colorNameAndValue": (args) => `${args.name}: ${args.value}`,
  "colorPicker": `Renk Seçici`,
  "colorSwatch": `renk örneği`,
  "transparent": `saydam`,
  "twoDimensionalSlider": `2D sürgü`
};

// node_modules/@react-aria/color/dist/uk-UA.mjs
var $ee2044a77f24b118$exports = {};
$ee2044a77f24b118$exports = {
  "colorInputLabel": (args) => `${args.label}, ${args.channelLabel}`,
  "colorNameAndValue": (args) => `${args.name}: ${args.value}`,
  "colorPicker": `Палітра кольорів`,
  "colorSwatch": `зразок кольору`,
  "transparent": `прозорий`,
  "twoDimensionalSlider": `Повзунок 2D`
};

// node_modules/@react-aria/color/dist/zh-CN.mjs
var $4e1dbc65a687dd93$exports = {};
$4e1dbc65a687dd93$exports = {
  "colorInputLabel": (args) => `${args.label}、${args.channelLabel}`,
  "colorNameAndValue": (args) => `${args.name}：${args.value}`,
  "colorPicker": `拾色器`,
  "colorSwatch": `颜色色板`,
  "transparent": `透明`,
  "twoDimensionalSlider": `2D 滑块`
};

// node_modules/@react-aria/color/dist/zh-TW.mjs
var $b0fef28529309aa6$exports = {};
$b0fef28529309aa6$exports = {
  "colorInputLabel": (args) => `${args.label}，${args.channelLabel}`,
  "colorNameAndValue": (args) => `${args.name}：${args.value}`,
  "colorPicker": `檢色器`,
  "colorSwatch": `色票`,
  "transparent": `透明`,
  "twoDimensionalSlider": `2D 滑桿`
};

// node_modules/@react-aria/color/dist/intlStrings.mjs
var $3493a52097159720$exports = {};
$3493a52097159720$exports = {
  "ar-AE": $eccab2b0118aef08$exports,
  "bg-BG": $bf2b4507594e3d45$exports,
  "cs-CZ": $01c08487af7ecd14$exports,
  "da-DK": $5e997db6ea0d10f6$exports,
  "de-DE": $fe5998f640a79fd2$exports,
  "el-GR": $18e4d1d5b500a9ee$exports,
  "en-US": $bf90a11a7a42a0f7$exports,
  "es-ES": $dd0d25f885b5c5f3$exports,
  "et-EE": $d950967017e3485b$exports,
  "fi-FI": $00a415a3f0ab315a$exports,
  "fr-FR": $d80f30fe86c95741$exports,
  "he-IL": $6912afb584340a2e$exports,
  "hr-HR": $7b97fcacd84ec90f$exports,
  "hu-HU": $da9b443e89eebc6b$exports,
  "it-IT": $35f135b45eb4d95b$exports,
  "ja-JP": $760b09448e39c6cd$exports,
  "ko-KR": $fc7b7d43be9703ec$exports,
  "lt-LT": $74918a1664156912$exports,
  "lv-LV": $4e6cde11c2bc9840$exports,
  "nb-NO": $6faa3defebc3eb72$exports,
  "nl-NL": $6ac9b6b1b7e3ca12$exports,
  "pl-PL": $1be8b0ee8841f1e7$exports,
  "pt-BR": $f9507c2d404ed689$exports,
  "pt-PT": $8f872ea59c02d67e$exports,
  "ro-RO": $b03b45b62a7ccae4$exports,
  "ru-RU": $f1107d94c09df9b8$exports,
  "sk-SK": $b61325f242fafc7c$exports,
  "sl-SI": $f44b7cf39ac8f315$exports,
  "sr-SP": $aa8cd83fc8d4982b$exports,
  "sv-SE": $7c4f4e5bb7c06f1e$exports,
  "tr-TR": $8045cf930ef745aa$exports,
  "uk-UA": $ee2044a77f24b118$exports,
  "zh-CN": $4e1dbc65a687dd93$exports,
  "zh-TW": $b0fef28529309aa6$exports
};

// node_modules/@react-stately/color/dist/ar-AE.mjs
var $2d805fd52bb48883$exports = {};
$2d805fd52bb48883$exports = {
  "alpha": `ألفا`,
  "black": `أسود`,
  "blue": `أزرق`,
  "blue purple": `أرجواني مزرق`,
  "brightness": `السطوع`,
  "brown": `بني`,
  "brown yellow": `أصفر بني`,
  "colorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}`,
  "cyan": `سماوي`,
  "cyan blue": `أزرق سماوي`,
  "dark": `داكن`,
  "gray": `رمادي`,
  "grayish": `مائل للرمادي`,
  "green": `أخضر`,
  "green cyan": `سماوي مخضر`,
  "hue": `درجة اللون`,
  "light": `فاتح`,
  "lightness": `الإضاءة`,
  "magenta": `أرجواني`,
  "magenta pink": `أرجواني وردي`,
  "orange": `برتقالي`,
  "orange yellow": `أصفر برتقالي`,
  "pale": `باهت`,
  "pink": `وردي`,
  "pink red": `أحمر وردي`,
  "purple": `أرجواني`,
  "purple magenta": `بنفسجي`,
  "red": `أحمر`,
  "red orange": `برتقالي محمر`,
  "saturation": `التشبع`,
  "transparentColorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}, ${args.percentTransparent} شفاف`,
  "very dark": `داكن جدًا`,
  "very light": `فاتح جدًا`,
  "vibrant": `ساطع`,
  "white": `أبيض`,
  "yellow": `أصفر`,
  "yellow green": `أخضر مصفر`
};

// node_modules/@react-stately/color/dist/bg-BG.mjs
var $6c28468dc1df643c$exports = {};
$6c28468dc1df643c$exports = {
  "alpha": `Алфа`,
  "black": `черно`,
  "blue": `Синьо`,
  "blue purple": `синьо лилаво`,
  "brightness": `Яркост`,
  "brown": `кафяво`,
  "brown yellow": `кафяво жълто`,
  "colorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}`,
  "cyan": `циан`,
  "cyan blue": `циан синьо`,
  "dark": `тъмно`,
  "gray": `сиво`,
  "grayish": `сивкав`,
  "green": `Зелено`,
  "green cyan": `зелен циан`,
  "hue": `Оттенък`,
  "light": `светло`,
  "lightness": `Лекота`,
  "magenta": `магента`,
  "magenta pink": `магента розово`,
  "orange": `оранжево`,
  "orange yellow": `оранжево жълто`,
  "pale": `бледо`,
  "pink": `розово`,
  "pink red": `розово червено`,
  "purple": `лилаво`,
  "purple magenta": `лилаво магента`,
  "red": `Червено`,
  "red orange": `червен портокал`,
  "saturation": `Наситеност`,
  "transparentColorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}, ${args.percentTransparent} прозрачен`,
  "very dark": `много тъмно`,
  "very light": `много светло`,
  "vibrant": ` ярко`,
  "white": `бяло`,
  "yellow": `жълто`,
  "yellow green": `жълто зелен`
};

// node_modules/@react-stately/color/dist/cs-CZ.mjs
var $807554f8230db0ed$exports = {};
$807554f8230db0ed$exports = {
  "alpha": `Alfa`,
  "black": `černá`,
  "blue": `Modrá`,
  "blue purple": `modrofialová`,
  "brightness": `Jas`,
  "brown": `hnědá`,
  "brown yellow": `hnědožlutá`,
  "colorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}`,
  "cyan": `tyrkysová`,
  "cyan blue": `tyrkysovomodrá`,
  "dark": `tmavá`,
  "gray": `šedá`,
  "grayish": `našedlá`,
  "green": `Zelená`,
  "green cyan": `zelenotyrkysová`,
  "hue": `Odstín`,
  "light": `světlá`,
  "lightness": `Světlost`,
  "magenta": `purpurová`,
  "magenta pink": `purpurově růžová`,
  "orange": `oranžová`,
  "orange yellow": `oranžovožlutá`,
  "pale": `bledá`,
  "pink": `růžová`,
  "pink red": `růžovočervená`,
  "purple": `fialová`,
  "purple magenta": `fialově purpurová`,
  "red": `Červená`,
  "red orange": `červenooranžová`,
  "saturation": `Sytost`,
  "transparentColorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}, ${args.percentTransparent} průhledné`,
  "very dark": `velmi tmavá`,
  "very light": `velmi světlá`,
  "vibrant": `zářivá`,
  "white": `bílá`,
  "yellow": `žlutá`,
  "yellow green": `žlutozelená`
};

// node_modules/@react-stately/color/dist/da-DK.mjs
var $7097f64386f1761c$exports = {};
$7097f64386f1761c$exports = {
  "alpha": `Alfa`,
  "black": `sort`,
  "blue": `Blå`,
  "blue purple": `blålilla`,
  "brightness": `Lysstyrke`,
  "brown": `brun`,
  "brown yellow": `brungul`,
  "colorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}`,
  "cyan": `cyan`,
  "cyan blue": `cyan blå`,
  "dark": `mørk`,
  "gray": `grå`,
  "grayish": `grålig`,
  "green": `Grøn`,
  "green cyan": `grøn cyan`,
  "hue": `Tone`,
  "light": `lys`,
  "lightness": `Lyshed`,
  "magenta": `magenta`,
  "magenta pink": `magenta pink`,
  "orange": `orange`,
  "orange yellow": `orangegul`,
  "pale": `bleg`,
  "pink": `lyserød`,
  "pink red": `lyserødlig rød`,
  "purple": `lilla`,
  "purple magenta": `lilla magenta`,
  "red": `Rød`,
  "red orange": `rødorange`,
  "saturation": `Farvemætning`,
  "transparentColorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}, ${args.percentTransparent} gennemsigtig`,
  "very dark": `meget mørk`,
  "very light": `meget lys`,
  "vibrant": `klar`,
  "white": `hvid`,
  "yellow": `gul`,
  "yellow green": `gulgrøn`
};

// node_modules/@react-stately/color/dist/de-DE.mjs
var $bdd847d8beb08799$exports = {};
$bdd847d8beb08799$exports = {
  "alpha": `Alpha`,
  "black": `Schwarz`,
  "blue": `Blau`,
  "blue purple": `Blaulila`,
  "brightness": `Helligkeit`,
  "brown": `Braun`,
  "brown yellow": `Braungelb`,
  "colorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}`,
  "cyan": `Cyan`,
  "cyan blue": `Cyanblau`,
  "dark": `dunkles`,
  "gray": `Grau`,
  "grayish": `gräuliches`,
  "green": `Grün`,
  "green cyan": `Grüncyan`,
  "hue": `Farbton`,
  "light": `helles`,
  "lightness": `Leuchtkraft`,
  "magenta": `Magenta`,
  "magenta pink": `Magentarosa`,
  "orange": `Orange`,
  "orange yellow": `Orangegelb`,
  "pale": `blasses`,
  "pink": `Rosa`,
  "pink red": `Rosarot`,
  "purple": `Lila`,
  "purple magenta": `Lilamagenta`,
  "red": `Rot`,
  "red orange": `Rotorange`,
  "saturation": `Sättigung`,
  "transparentColorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}, zu ${args.percentTransparent} transparent`,
  "very dark": `sehr dunkles`,
  "very light": `sehr helles`,
  "vibrant": `lebhaftes`,
  "white": `Weiß`,
  "yellow": `Gelb`,
  "yellow green": `Gelbgrün`
};

// node_modules/@react-stately/color/dist/el-GR.mjs
var $a53e00b683950971$exports = {};
$a53e00b683950971$exports = {
  "alpha": `Άλφα`,
  "black": `μαύρο`,
  "blue": `Μπλε`,
  "blue purple": `μπλε μωβ`,
  "brightness": `Φωτεινότητα`,
  "brown": `καφέ`,
  "brown yellow": `καφέ κίτρινο`,
  "colorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}`,
  "cyan": `κυανό`,
  "cyan blue": `κυανό μπλε`,
  "dark": `σκούρο`,
  "gray": `γκρι`,
  "grayish": `γκριζωπό`,
  "green": `Πράσινο`,
  "green cyan": `πράσινο κυανό`,
  "hue": `Τόνος`,
  "light": `ανοιχτό`,
  "lightness": `Φωτεινότητα`,
  "magenta": `ματζέντα`,
  "magenta pink": `ματζέντα ροζ`,
  "orange": `πορτοκαλί`,
  "orange yellow": `πορτοκαλί κίτρινο`,
  "pale": `ανοιχτό`,
  "pink": `ροζ`,
  "pink red": `ροζ κόκκινο`,
  "purple": `μωβ`,
  "purple magenta": `μωβ ματζέντα`,
  "red": `Κόκκινο`,
  "red orange": `κόκκινο πορτοκαλί`,
  "saturation": `Κορεσμός`,
  "transparentColorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}, ${args.percentTransparent} διαφανές`,
  "very dark": `πολύ σκούρο`,
  "very light": `πολύ ανοιχτό`,
  "vibrant": `έντονο`,
  "white": `λευκό`,
  "yellow": `κίτρινο`,
  "yellow green": `κίτρινο πράσινο`
};

// node_modules/@react-stately/color/dist/en-US.mjs
var $21cdd87e84f28d89$exports = {};
$21cdd87e84f28d89$exports = {
  "hue": `Hue`,
  "saturation": `Saturation`,
  "lightness": `Lightness`,
  "brightness": `Brightness`,
  "red": `Red`,
  "green": `Green`,
  "blue": `Blue`,
  "alpha": `Alpha`,
  "colorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}`,
  "transparentColorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}, ${args.percentTransparent} transparent`,
  "very dark": `very dark`,
  "dark": `dark`,
  "light": `light`,
  "very light": `very light`,
  "pale": `pale`,
  "grayish": `grayish`,
  "vibrant": `vibrant`,
  "black": `black`,
  "white": `white`,
  "gray": `gray`,
  "pink": `pink`,
  "pink red": `pink red`,
  "red orange": `red orange`,
  "brown": `brown`,
  "orange": `orange`,
  "orange yellow": `orange yellow`,
  "brown yellow": `brown yellow`,
  "yellow": `yellow`,
  "yellow green": `yellow green`,
  "green cyan": `green cyan`,
  "cyan": `cyan`,
  "cyan blue": `cyan blue`,
  "blue purple": `blue purple`,
  "purple": `purple`,
  "purple magenta": `purple magenta`,
  "magenta": `magenta`,
  "magenta pink": `magenta pink`
};

// node_modules/@react-stately/color/dist/es-ES.mjs
var $92fee9698e4d675a$exports = {};
$92fee9698e4d675a$exports = {
  "alpha": `Alpha`,
  "black": `negro`,
  "blue": `Azul`,
  "blue purple": `púrpura azulado`,
  "brightness": `Brillo`,
  "brown": `marrón`,
  "brown yellow": `amarillo amarronado`,
  "colorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}`,
  "cyan": `cian`,
  "cyan blue": `azul cian`,
  "dark": `oscuro`,
  "gray": `gris`,
  "grayish": `grisáceo`,
  "green": `Verde`,
  "green cyan": `cian verdoso`,
  "hue": `Tono`,
  "light": `claro`,
  "lightness": `Luminosidad`,
  "magenta": `magenta`,
  "magenta pink": `rosa magenta`,
  "orange": `naranja`,
  "orange yellow": `amarillo anaranjado`,
  "pale": `pálido`,
  "pink": `rosa`,
  "pink red": `rojo rosado`,
  "purple": `morado`,
  "purple magenta": `magenta violáceo`,
  "red": `Rojo`,
  "red orange": `naranja rojizo`,
  "saturation": `Saturación`,
  "transparentColorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}, ${args.percentTransparent} transparente`,
  "very dark": `muy oscuro`,
  "very light": `muy claro`,
  "vibrant": `intenso`,
  "white": `blanco`,
  "yellow": `amarillo`,
  "yellow green": `verde amarillento`
};

// node_modules/@react-stately/color/dist/et-EE.mjs
var $7ea012e91a5ad3ee$exports = {};
$7ea012e91a5ad3ee$exports = {
  "alpha": `Alfa`,
  "black": `must`,
  "blue": `Sinine`,
  "blue purple": `sinakaslilla`,
  "brightness": `Heledus`,
  "brown": `pruun`,
  "brown yellow": `pruunikaskollane`,
  "colorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}`,
  "cyan": `tsüaan`,
  "cyan blue": `tsüaansinine`,
  "dark": `tume`,
  "gray": `hall`,
  "grayish": `hallikas`,
  "green": `Roheline`,
  "green cyan": `tsüaanroheline`,
  "hue": `Värv`,
  "light": `valgus`,
  "lightness": `Valgus`,
  "magenta": `magentapunane`,
  "magenta pink": `magentaroosa`,
  "orange": `oranž`,
  "orange yellow": `oranžikaskollane`,
  "pale": `kahvatu`,
  "pink": `roosa`,
  "pink red": `vaarikapunane`,
  "purple": `lilla`,
  "purple magenta": `purpurne magenta`,
  "red": `Punane`,
  "red orange": `punakasoranž`,
  "saturation": `Küllastus`,
  "transparentColorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}, ${args.percentTransparent} läbipaistev`,
  "very dark": `väga tume`,
  "very light": `väga hele`,
  "vibrant": `ere`,
  "white": `valge`,
  "yellow": `kollane`,
  "yellow green": `kollakasroheline`
};

// node_modules/@react-stately/color/dist/fi-FI.mjs
var $8460c13bb2d75345$exports = {};
$8460c13bb2d75345$exports = {
  "alpha": `Alpha`,
  "black": `musta`,
  "blue": `Sininen`,
  "blue purple": `sinivioletti`,
  "brightness": `Kirkkaus`,
  "brown": `ruskea`,
  "brown yellow": `ruskeankeltainen`,
  "colorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}`,
  "cyan": `syaani`,
  "cyan blue": `syaaninsininen`,
  "dark": `tumma`,
  "gray": `harmaa`,
  "grayish": `harmahtava`,
  "green": `Vihreä`,
  "green cyan": `vihreänsyaani`,
  "hue": `Sävy`,
  "light": `vaalea`,
  "lightness": `Valomäärä`,
  "magenta": `magenta`,
  "magenta pink": `magentapinkki`,
  "orange": `oranssi`,
  "orange yellow": `oranssinkeltainen`,
  "pale": `vaalea`,
  "pink": `pinkki`,
  "pink red": `vaaleanpunainen`,
  "purple": `violetti`,
  "purple magenta": `violettimagenta`,
  "red": `Punainen`,
  "red orange": `punaoranssi`,
  "saturation": `Värikylläisyys`,
  "transparentColorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}, ${args.percentTransparent} läpinäkyvä`,
  "very dark": `hyvin tumma`,
  "very light": `erittäin vaalea`,
  "vibrant": `eloisa`,
  "white": `valkea`,
  "yellow": `keltainen`,
  "yellow green": `keltavihreä`
};

// node_modules/@react-stately/color/dist/fr-FR.mjs
var $2a2d5dc14e680587$exports = {};
$2a2d5dc14e680587$exports = {
  "alpha": `Alpha`,
  "black": `Noir`,
  "blue": `Bleu`,
  "blue purple": `Violet bleu`,
  "brightness": `Luminosité`,
  "brown": `Brun`,
  "brown yellow": `Jaune brun`,
  "colorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}`,
  "cyan": `Cyan`,
  "cyan blue": `Bleu cyan`,
  "dark": `Sombre`,
  "gray": `Gris`,
  "grayish": `Grisâtre`,
  "green": `Vert`,
  "green cyan": `Cyan vert`,
  "hue": `Teinte`,
  "light": `Clair`,
  "lightness": `Luminosité`,
  "magenta": `Magenta`,
  "magenta pink": `Rose magenta`,
  "orange": `Orange`,
  "orange yellow": `Jaune orangé`,
  "pale": `Pâle`,
  "pink": `Rose`,
  "pink red": `Rouge rosé`,
  "purple": `Violet`,
  "purple magenta": `Magenta violet`,
  "red": `Rouge`,
  "red orange": `Orange rouge`,
  "saturation": `Saturation`,
  "transparentColorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}, ${args.percentTransparent} transparent`,
  "very dark": `Très sombre`,
  "very light": `Très clair`,
  "vibrant": `Vif`,
  "white": `Blanc`,
  "yellow": `Jaune`,
  "yellow green": `Vert jaune`
};

// node_modules/@react-stately/color/dist/he-IL.mjs
var $9a3f292371bb0589$exports = {};
$9a3f292371bb0589$exports = {
  "alpha": `אלפא`,
  "black": `שחור`,
  "blue": `כחול`,
  "blue purple": `כחול סגול`,
  "brightness": `בהירות`,
  "brown": `חום`,
  "brown yellow": `חום צהוב`,
  "colorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}`,
  "cyan": `טורקיז`,
  "cyan blue": `כחול ציאן`,
  "dark": `כהה`,
  "gray": `אפור`,
  "grayish": `אפרפר`,
  "green": `ירוק`,
  "green cyan": `ציאן ירוק`,
  "hue": `גוון`,
  "light": `אור`,
  "lightness": `כמות אור`,
  "magenta": `מג'נטה`,
  "magenta pink": `ורוד מג'נטה`,
  "orange": `כתום`,
  "orange yellow": `כתום צהוב`,
  "pale": `חיוור`,
  "pink": `ורוד`,
  "pink red": `ורוד אדום`,
  "purple": `סגול`,
  "purple magenta": `מג'נטה סגול`,
  "red": `אדום`,
  "red orange": `כתום אדום`,
  "saturation": `רוויה`,
  "transparentColorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}, ${args.percentTransparent} שקוף`,
  "very dark": `כהה מאוד`,
  "very light": `בהיר מאוד`,
  "vibrant": `תוסס`,
  "white": `לבן`,
  "yellow": `צהוב`,
  "yellow green": `צהוב ירוק`
};

// node_modules/@react-stately/color/dist/hr-HR.mjs
var $4742231a685fa068$exports = {};
$4742231a685fa068$exports = {
  "alpha": `Alfa`,
  "black": `crno`,
  "blue": `Plava`,
  "blue purple": `plavo ljubičasta`,
  "brightness": `Svjetlina`,
  "brown": `smeđa`,
  "brown yellow": `smeđe žuta`,
  "colorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}`,
  "cyan": `cijan`,
  "cyan blue": `cijan plava`,
  "dark": `tamno`,
  "gray": `siva`,
  "grayish": `sivkasto`,
  "green": `Zelena`,
  "green cyan": `zelena cijan`,
  "hue": `Nijansa`,
  "light": `svjetlo`,
  "lightness": `Osvijetljenost`,
  "magenta": `magenta`,
  "magenta pink": `magentno ružičasta`,
  "orange": `narančasta`,
  "orange yellow": `narančasto žuta`,
  "pale": `blijeda`,
  "pink": `ružičasta`,
  "pink red": `ružičasto crvena`,
  "purple": `ljubičasta`,
  "purple magenta": `ljubičasta magenta`,
  "red": `Crvena`,
  "red orange": `crveno narančasta`,
  "saturation": `Zasićenost`,
  "transparentColorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}, ${args.percentTransparent} prozirnosti`,
  "very dark": `jako tamna`,
  "very light": `vrlo svijetlo`,
  "vibrant": `vibrantna`,
  "white": `bijela`,
  "yellow": `žuto`,
  "yellow green": `žuto zelena`
};

// node_modules/@react-stately/color/dist/hu-HU.mjs
var $05e247fd2960981e$exports = {};
$05e247fd2960981e$exports = {
  "alpha": `Alfa`,
  "black": `fekete`,
  "blue": `Kék`,
  "blue purple": `kék lila`,
  "brightness": `Fényesség`,
  "brown": `barna`,
  "brown yellow": `barna sárga`,
  "colorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}`,
  "cyan": `ciánkék`,
  "cyan blue": `ciánkék`,
  "dark": `sötét`,
  "gray": `szürke`,
  "grayish": `szürkés`,
  "green": `Zöld`,
  "green cyan": `zöld ciánkék`,
  "hue": `Színárnyalat`,
  "light": `világos`,
  "lightness": `Világosság`,
  "magenta": `bíbor`,
  "magenta pink": `bíbor rózsaszín`,
  "orange": `narancs`,
  "orange yellow": `narancssárga`,
  "pale": `halvány`,
  "pink": `rózsaszín`,
  "pink red": `rózsaszín piros`,
  "purple": `lila`,
  "purple magenta": `lila bíbor`,
  "red": `Piros`,
  "red orange": `piros narancs`,
  "saturation": `Telítettség`,
  "transparentColorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}, ${args.percentTransparent} átlátszó`,
  "very dark": `nagyon sötét`,
  "very light": `nagyon világos`,
  "vibrant": `élénk`,
  "white": `fehér`,
  "yellow": `sárga`,
  "yellow green": `sárga zöld`
};

// node_modules/@react-stately/color/dist/it-IT.mjs
var $a67524a79ccbe190$exports = {};
$a67524a79ccbe190$exports = {
  "alpha": `Alfa`,
  "black": `nero`,
  "blue": `Blu`,
  "blue purple": `blu viola`,
  "brightness": `Luminosità`,
  "brown": `marrone`,
  "brown yellow": `giallo bruno`,
  "colorName": (args) => `${args.hue} ${args.chroma} ${args.lightness}`,
  "cyan": `ciano`,
  "cyan blue": `blu ciano`,
  "dark": `scuro`,
  "gray": `grigio`,
  "grayish": `grigiastro`,
  "green": `Verde`,
  "green cyan": `verde ciano`,
  "hue": `Tonalità`,
  "light": `chiaro`,
  "lightness": `Luminosità`,
  "magenta": `magenta`,
  "magenta pink": `rosa magenta`,
  "orange": `arancio`,
  "orange yellow": `giallo arancio`,
  "pale": `tenue`,
  "pink": `rosa`,
  "pink red": `rosa rosso`,
  "purple": `viola`,
  "purple magenta": `viola magenta`,
  "red": `Rosso`,
  "red orange": `rosso arancio`,
  "saturation": `Saturazione`,
  "transparentColorName": (args) => `${args.hue} ${args.chroma} ${args.lightness}, trasparenza ${args.percentTransparent}`,
  "very dark": `molto scuro`,
  "very light": `molto chiaro`,
  "vibrant": `vivace`,
  "white": `bianco`,
  "yellow": `giallo`,
  "yellow green": `giallo verde`
};

// node_modules/@react-stately/color/dist/ja-JP.mjs
var $a9eefe9d6c8cb7d5$exports = {};
$a9eefe9d6c8cb7d5$exports = {
  "alpha": `アルファ`,
  "black": `ブラック`,
  "blue": `青`,
  "blue purple": `ブルーパープル`,
  "brightness": `明るさ`,
  "brown": `ブラウン`,
  "brown yellow": `ブラウンイエロー`,
  "colorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}`,
  "cyan": `シアン`,
  "cyan blue": `シアンブルー`,
  "dark": `ダーク`,
  "gray": `グレー`,
  "grayish": `グレイッシュ`,
  "green": `緑`,
  "green cyan": `グリーンシアン`,
  "hue": `色相`,
  "light": `ライト`,
  "lightness": `明度`,
  "magenta": `マゼンタ`,
  "magenta pink": `マゼンタピンク`,
  "orange": `オレンジ`,
  "orange yellow": `オレンジイエロー`,
  "pale": `ペール`,
  "pink": `ピンク`,
  "pink red": `ピンクレッド`,
  "purple": `パープル`,
  "purple magenta": `パープルマゼンタ`,
  "red": `赤`,
  "red orange": `レッドオレンジ`,
  "saturation": `彩度`,
  "transparentColorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}, ${args.percentTransparent} 透明`,
  "very dark": `最も暗い`,
  "very light": `ベリーライト`,
  "vibrant": `鮮やか`,
  "white": `ホワイト`,
  "yellow": `イエロー`,
  "yellow green": `イエローグリーン`
};

// node_modules/@react-stately/color/dist/ko-KR.mjs
var $4a6b836d4f1bfaba$exports = {};
$4a6b836d4f1bfaba$exports = {
  "alpha": `알파`,
  "black": `검은색`,
  "blue": `파랑`,
  "blue purple": `청자색`,
  "brightness": `명도`,
  "brown": `갈색`,
  "brown yellow": `황갈색`,
  "colorName": (args) => `${args.lightness}, ${args.chroma}, ${args.hue}`,
  "cyan": `청록색`,
  "cyan blue": `청록색`,
  "dark": `다크`,
  "gray": `회색`,
  "grayish": `회갈색`,
  "green": `초록`,
  "green cyan": `청록색`,
  "hue": `색조`,
  "light": `라이트`,
  "lightness": `밝기`,
  "magenta": `자홍색`,
  "magenta pink": `마젠타 핑크`,
  "orange": `주황색`,
  "orange yellow": `불그스름한 노랑`,
  "pale": `흙색`,
  "pink": `분홍색`,
  "pink red": `핑크 레드`,
  "purple": `자주색`,
  "purple magenta": `보라빛 자홍색`,
  "red": `빨강`,
  "red orange": `붉은 주황색`,
  "saturation": `채도`,
  "transparentColorName": (args) => `${args.lightness}, ${args.chroma}, ${args.hue}, ${args.percentTransparent} 투명도`,
  "very dark": `매우 어두운`,
  "very light": `매우 연함`,
  "vibrant": `강렬한`,
  "white": `흰색`,
  "yellow": `노란색`,
  "yellow green": `연두색`
};

// node_modules/@react-stately/color/dist/lt-LT.mjs
var $c950e4b1c482abde$exports = {};
$c950e4b1c482abde$exports = {
  "alpha": `Alfa`,
  "black": `juoda`,
  "blue": `Mėlyna`,
  "blue purple": `melsvai violetinė`,
  "brightness": `Ryškumas`,
  "brown": `ruda`,
  "brown yellow": `rusvai geltona`,
  "colorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}`,
  "cyan": `žalsvai mėlyna`,
  "cyan blue": `žalsvai mėlyna`,
  "dark": `tamsi`,
  "gray": `pilka`,
  "grayish": `pilkšva`,
  "green": `Žalia`,
  "green cyan": `žalsvai mėlyna`,
  "hue": `Atspalvis`,
  "light": `šviesi`,
  "lightness": `Šviesumas`,
  "magenta": `rausvai raudona`,
  "magenta pink": `purpurinė`,
  "orange": `oranžinė`,
  "orange yellow": `oranžinio atspalvio geltona`,
  "pale": `blyški`,
  "pink": `rožinė`,
  "pink red": `rožinė raudona`,
  "purple": `violetinė`,
  "purple magenta": `purpurinė rausvai raudona`,
  "red": `Raudona`,
  "red orange": `rausvai oranžinė`,
  "saturation": `Įsotinimas`,
  "transparentColorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}, ${args.percentTransparent} skaidri`,
  "very dark": `labai tamsi`,
  "very light": `labai šviesi`,
  "vibrant": `ryški`,
  "white": `balta`,
  "yellow": `geltona`,
  "yellow green": `gelsvai žalia`
};

// node_modules/@react-stately/color/dist/lv-LV.mjs
var $d10d6b60dc50b438$exports = {};
$d10d6b60dc50b438$exports = {
  "alpha": `Alfa`,
  "black": `melns`,
  "blue": `Zila`,
  "blue purple": `zili violets`,
  "brightness": `Spilgtums`,
  "brown": `brūns`,
  "brown yellow": `brūni dzeltens`,
  "colorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}`,
  "cyan": `ciāns`,
  "cyan blue": `ciāna zils`,
  "dark": `tumšs`,
  "gray": `pelēks`,
  "grayish": `pelēcīgs`,
  "green": `Zaļa`,
  "green cyan": `zaļš ciāns`,
  "hue": `Nokrāsa`,
  "light": `gaišs`,
  "lightness": `Gaišums`,
  "magenta": `fuksiju`,
  "magenta pink": `fuksiju rozā`,
  "orange": `oranžs`,
  "orange yellow": `oranži dzeltens`,
  "pale": `bāls`,
  "pink": `rozā`,
  "pink red": `rozīgi sarkans`,
  "purple": `violets`,
  "purple magenta": `violets fuksiju`,
  "red": `Sarkana`,
  "red orange": `sarkanīgi oranžs`,
  "saturation": `Piesātinājums`,
  "transparentColorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}, ${args.percentTransparent} caurspīdīgs`,
  "very dark": `ļoti tumšs`,
  "very light": `ļoti gaišs`,
  "vibrant": `košs`,
  "white": `balts`,
  "yellow": `dzeltens`,
  "yellow green": `dzelteni zaļš`
};

// node_modules/@react-stately/color/dist/nb-NO.mjs
var $371a732b2494f452$exports = {};
$371a732b2494f452$exports = {
  "alpha": `Alfa`,
  "black": `svart`,
  "blue": `Blå`,
  "blue purple": `blålilla`,
  "brightness": `Lysstyrke`,
  "brown": `brun`,
  "brown yellow": `brungul`,
  "colorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}`,
  "cyan": `cyan`,
  "cyan blue": `cyanblå`,
  "dark": `mørk`,
  "gray": `grå`,
  "grayish": `gråaktig`,
  "green": `Grønn`,
  "green cyan": `grønncyan`,
  "hue": `Fargetone`,
  "light": `lys`,
  "lightness": `Lyshet`,
  "magenta": `magenta`,
  "magenta pink": `magentarosa`,
  "orange": `oransje`,
  "orange yellow": `oransjegul`,
  "pale": `blek`,
  "pink": `rosa`,
  "pink red": `rosarød`,
  "purple": `lilla`,
  "purple magenta": `lillamagenta`,
  "red": `Rød`,
  "red orange": `rødoransje`,
  "saturation": `Metning`,
  "transparentColorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}, ${args.percentTransparent} gjennomsiktig`,
  "very dark": `svært mørk`,
  "very light": `svært lys`,
  "vibrant": `levende`,
  "white": `hvit`,
  "yellow": `gul`,
  "yellow green": `gulgrønn`
};

// node_modules/@react-stately/color/dist/nl-NL.mjs
var $6d042cae6243464b$exports = {};
$6d042cae6243464b$exports = {
  "alpha": `Alfa`,
  "black": `zwart`,
  "blue": `Blauw`,
  "blue purple": `paarsblauw`,
  "brightness": `Helderheid`,
  "brown": `bruin`,
  "brown yellow": `bruingeel`,
  "colorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}`,
  "cyan": `cyaan`,
  "cyan blue": `cyaanblauw`,
  "dark": `donker`,
  "gray": `grijs`,
  "grayish": `grijsachtig`,
  "green": `Groen`,
  "green cyan": `cyaangroen`,
  "hue": `Kleurtoon`,
  "light": `licht`,
  "lightness": `Lichtsterkte`,
  "magenta": `magenta`,
  "magenta pink": `magentaroze`,
  "orange": `oranje`,
  "orange yellow": `oranjegeel`,
  "pale": `bleek`,
  "pink": `roze`,
  "pink red": `rozerood`,
  "purple": `paars`,
  "purple magenta": `magentapaars`,
  "red": `Rood`,
  "red orange": `roodoranje`,
  "saturation": `Verzadiging`,
  "transparentColorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}, ${args.percentTransparent} transparant`,
  "very dark": `heel donker`,
  "very light": `heel licht`,
  "vibrant": `levendig`,
  "white": `wit`,
  "yellow": `geel`,
  "yellow green": `geelgroen`
};

// node_modules/@react-stately/color/dist/pl-PL.mjs
var $d9ab5c2611e0bcd3$exports = {};
$d9ab5c2611e0bcd3$exports = {
  "alpha": `Alfa`,
  "black": `czarny`,
  "blue": `Niebieski`,
  "blue purple": `niebiesko-fioletowy`,
  "brightness": `Jasność`,
  "brown": `brązowy`,
  "brown yellow": `brązowo-żółty`,
  "colorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}`,
  "cyan": `cyjanowy`,
  "cyan blue": `cyjanowo-niebieski`,
  "dark": `ciemny`,
  "gray": `szary`,
  "grayish": `szarawy`,
  "green": `Zielony`,
  "green cyan": `zielono-cyjanowy`,
  "hue": `Odcień`,
  "light": `jasny`,
  "lightness": `Jaskrawość`,
  "magenta": `purpurowy`,
  "magenta pink": `purpurowo-różowy`,
  "orange": `pomarańczowy`,
  "orange yellow": `pomarańczowo-żółty`,
  "pale": `blady`,
  "pink": `różowy`,
  "pink red": `różowo-czerwony`,
  "purple": `fioletowy`,
  "purple magenta": `fioletowo-purpurowy`,
  "red": `Czerwony`,
  "red orange": `czerwono-pomarańczowy`,
  "saturation": `Nasycenie`,
  "transparentColorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}, ${args.percentTransparent} przezroczystości`,
  "very dark": `bardzo ciemny`,
  "very light": `bardzo jasny`,
  "vibrant": `intensywny`,
  "white": `biały`,
  "yellow": `żółty`,
  "yellow green": `żółto-zielony`
};

// node_modules/@react-stately/color/dist/pt-BR.mjs
var $73f77c9902e29ca6$exports = {};
$73f77c9902e29ca6$exports = {
  "alpha": `Alfa`,
  "black": `preto`,
  "blue": `Azul`,
  "blue purple": `roxo azulado`,
  "brightness": `Brilho`,
  "brown": `marrom`,
  "brown yellow": `marrom amarelado`,
  "colorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}`,
  "cyan": `ciano`,
  "cyan blue": `azul-ciano`,
  "dark": `escuro`,
  "gray": `cinza`,
  "grayish": `acinzentado`,
  "green": `Verde`,
  "green cyan": `verde-ciano`,
  "hue": `Matiz`,
  "light": `claro`,
  "lightness": `Luminosidade`,
  "magenta": `magenta`,
  "magenta pink": `rosa-magenta`,
  "orange": `laranja`,
  "orange yellow": `amarelo alaranjado`,
  "pale": `pálido`,
  "pink": `rosa`,
  "pink red": `rosa avermelhado`,
  "purple": `roxo`,
  "purple magenta": `roxo-magenta`,
  "red": `Vermelho`,
  "red orange": `laranja avermelhado`,
  "saturation": `Saturação`,
  "transparentColorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}, ${args.percentTransparent} transparente`,
  "very dark": `muito escuro`,
  "very light": `muito claro`,
  "vibrant": `vibrante`,
  "white": `branco`,
  "yellow": `amarelo`,
  "yellow green": `verde amarelado`
};

// node_modules/@react-stately/color/dist/pt-PT.mjs
var $4f461eb266a95c10$exports = {};
$4f461eb266a95c10$exports = {
  "alpha": `Alfa`,
  "black": `preto`,
  "blue": `Azul`,
  "blue purple": `azul-púrpura`,
  "brightness": `Luminosidade`,
  "brown": `castanho`,
  "brown yellow": `amarelo-castanho`,
  "colorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}`,
  "cyan": `ciano`,
  "cyan blue": `azul-ciano`,
  "dark": `escuro`,
  "gray": `cinzento`,
  "grayish": `acinzentado`,
  "green": `Verde`,
  "green cyan": `verde-ciano`,
  "hue": `Tonalidade`,
  "light": `claro`,
  "lightness": `Claridade`,
  "magenta": `magenta`,
  "magenta pink": `rosa-magenta`,
  "orange": `laranja`,
  "orange yellow": `amarelo-laranja`,
  "pale": `pálido`,
  "pink": `cor-de-rosa`,
  "pink red": `vermelho-rosa`,
  "purple": `púrpura`,
  "purple magenta": `púrpura-magenta`,
  "red": `Vermelho`,
  "red orange": `laranja-vermelho`,
  "saturation": `Saturação`,
  "transparentColorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}, ${args.percentTransparent} transparente`,
  "very dark": `muito escuro`,
  "very light": `muito claro`,
  "vibrant": `vibrante`,
  "white": `branco`,
  "yellow": `amarelo`,
  "yellow green": `verde-amarelo`
};

// node_modules/@react-stately/color/dist/ro-RO.mjs
var $dc46bea2f2597899$exports = {};
$dc46bea2f2597899$exports = {
  "alpha": `Alfa`,
  "black": `negru`,
  "blue": `Albastru`,
  "blue purple": `albastru-violet`,
  "brightness": `Luminozitate`,
  "brown": `maro`,
  "brown yellow": `galben maro`,
  "colorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}`,
  "cyan": `bleu`,
  "cyan blue": `albastru-bleu`,
  "dark": `închis`,
  "gray": `gri`,
  "grayish": `cenușiu`,
  "green": `Verde`,
  "green cyan": `verde bleu`,
  "hue": `Nuanță`,
  "light": `deschis`,
  "lightness": `Luminozitate`,
  "magenta": `fucsia`,
  "magenta pink": `roz-fucsia`,
  "orange": `portocaliu`,
  "orange yellow": `galben-portocaliu`,
  "pale": `pal`,
  "pink": `roz`,
  "pink red": `roz-roșu`,
  "purple": `violet`,
  "purple magenta": `violet-fucsia`,
  "red": `Roșu`,
  "red orange": `portocaliu-roșu`,
  "saturation": `Saturație`,
  "transparentColorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}, ${args.percentTransparent} transparent`,
  "very dark": `foarte închis`,
  "very light": `foarte deschis`,
  "vibrant": `plin de viață`,
  "white": `alb`,
  "yellow": `galben`,
  "yellow green": `galben-verde`
};

// node_modules/@react-stately/color/dist/ru-RU.mjs
var $622bbd6719cc95af$exports = {};
$622bbd6719cc95af$exports = {
  "alpha": `Альфа`,
  "black": `черный`,
  "blue": `Синий`,
  "blue purple": `сине-фиолетовый`,
  "brightness": `Яркость`,
  "brown": `коричневый`,
  "brown yellow": `коричнево-желтый`,
  "colorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}`,
  "cyan": `голубой`,
  "cyan blue": `цвет морской волны`,
  "dark": `темный`,
  "gray": `серый`,
  "grayish": `сероватый`,
  "green": `Зеленый`,
  "green cyan": `сине-зеленый`,
  "hue": `Оттенок`,
  "light": `светлый`,
  "lightness": `Освещенность`,
  "magenta": `пурпурный`,
  "magenta pink": `пурпурно-розовый`,
  "orange": `оранжевый`,
  "orange yellow": `оранжево-желтый`,
  "pale": `бледный`,
  "pink": `розовый`,
  "pink red": `розово-красный`,
  "purple": `фиолетовый`,
  "purple magenta": `фиолетово-пурпурный`,
  "red": `Красный`,
  "red orange": `красно-оранжевый`,
  "saturation": `Насыщенность`,
  "transparentColorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}, прозрачный на ${args.percentTransparent}`,
  "very dark": `очень темный`,
  "very light": `очень светлый`,
  "vibrant": `яркий`,
  "white": `белый`,
  "yellow": `желтый`,
  "yellow green": `желто-зеленый`
};

// node_modules/@react-stately/color/dist/sk-SK.mjs
var $4da03c1ecd9a9c7d$exports = {};
$4da03c1ecd9a9c7d$exports = {
  "alpha": `Alfa`,
  "black": `čierna`,
  "blue": `Modrá`,
  "blue purple": `modrofialová`,
  "brightness": `Jas`,
  "brown": `hnedá`,
  "brown yellow": `hnedožltá`,
  "colorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}`,
  "cyan": `azúrová`,
  "cyan blue": `azúrová modrá`,
  "dark": `tmavá`,
  "gray": `sivá`,
  "grayish": `sivastá`,
  "green": `Zelená`,
  "green cyan": `zelená azúrová`,
  "hue": `Odtieň`,
  "light": `svetlá`,
  "lightness": `Svetlosť`,
  "magenta": `purpurová`,
  "magenta pink": `ružová purpurová`,
  "orange": `oranžová`,
  "orange yellow": `oranžovožltá`,
  "pale": `bledá`,
  "pink": `ružová`,
  "pink red": `ružovočervená`,
  "purple": `fialová`,
  "purple magenta": `fialová purpurová`,
  "red": `Červená`,
  "red orange": `červenooranžová`,
  "saturation": `Sýtosť`,
  "transparentColorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}, ${args.percentTransparent} priehľadná`,
  "very dark": `veľmi tmavá`,
  "very light": `veľmi svetlá`,
  "vibrant": `energická`,
  "white": `biela`,
  "yellow": `žltá`,
  "yellow green": `žltozelená`
};

// node_modules/@react-stately/color/dist/sl-SI.mjs
var $edb6b2fe456ed4e8$exports = {};
$edb6b2fe456ed4e8$exports = {
  "alpha": `Alfa`,
  "black": `črna`,
  "blue": `Modra`,
  "blue purple": `modro vijolična`,
  "brightness": `Svetlost`,
  "brown": `rjava`,
  "brown yellow": `rjavo rumena`,
  "colorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}`,
  "cyan": `cian`,
  "cyan blue": `cian modra`,
  "dark": `temna`,
  "gray": `siva`,
  "grayish": `sivkasta`,
  "green": `Zelena`,
  "green cyan": `zelena cian`,
  "hue": `Barva`,
  "light": `svetla`,
  "lightness": `Lahkost`,
  "magenta": `škrlatna`,
  "magenta pink": `škrlatno roza`,
  "orange": `oranžna`,
  "orange yellow": `oranžno rumena`,
  "pale": `bleda`,
  "pink": `roza`,
  "pink red": `roza rdeča`,
  "purple": `vijolična`,
  "purple magenta": `vijolično škrlatna`,
  "red": `Rdeča`,
  "red orange": `rdeče oranžna`,
  "saturation": `Nasičenost`,
  "transparentColorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}, ${args.percentTransparent} prozorna`,
  "very dark": `zelo temna`,
  "very light": `zelo svetla`,
  "vibrant": `živahna`,
  "white": `bela`,
  "yellow": `rumena`,
  "yellow green": `rumeno zelena`
};

// node_modules/@react-stately/color/dist/sr-SP.mjs
var $264cd81c52b30815$exports = {};
$264cd81c52b30815$exports = {
  "alpha": `Alfa`,
  "black": `crno`,
  "blue": `Plava`,
  "blue purple": `plavoljubičasta`,
  "brightness": `Osvetljenost`,
  "brown": `smeđa`,
  "brown yellow": `smeđežuta`,
  "colorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}`,
  "cyan": `cijan`,
  "cyan blue": `cijan plava`,
  "dark": `tamno`,
  "gray": `siva`,
  "grayish": `sivkasta`,
  "green": `Zelena`,
  "green cyan": `zeleno cijan`,
  "hue": `Nijansa`,
  "light": `svetla`,
  "lightness": `Osvetljenje`,
  "magenta": `purpurnocrvena`,
  "magenta pink": `magenta ružičasta`,
  "orange": `narandžasta`,
  "orange yellow": `narandžastožuta`,
  "pale": `bledo`,
  "pink": `ružičasta`,
  "pink red": `ružičastocrvena`,
  "purple": `ljubičasta`,
  "purple magenta": `ljubičasta magenta`,
  "red": `Crvena`,
  "red orange": `crvenonarandžasta`,
  "saturation": `Zasićenje`,
  "transparentColorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}, ${args.percentTransparent} prozirna`,
  "very dark": `veoma tamno`,
  "very light": `vrlo svetlo`,
  "vibrant": `živopisna`,
  "white": `bela`,
  "yellow": `žuto`,
  "yellow green": `žutozelena`
};

// node_modules/@react-stately/color/dist/sv-SE.mjs
var $6f80afde0270dda7$exports = {};
$6f80afde0270dda7$exports = {
  "alpha": `Alfa`,
  "black": `svart`,
  "blue": `Blått`,
  "blue purple": `blålila`,
  "brightness": `Ljusstyrka`,
  "brown": `brun`,
  "brown yellow": `brungul`,
  "colorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}`,
  "cyan": `cyan`,
  "cyan blue": `cyanblå`,
  "dark": `mörk`,
  "gray": `grå`,
  "grayish": `gråaktig`,
  "green": `Grönt`,
  "green cyan": `grön cyan`,
  "hue": `Nyans`,
  "light": `ljus`,
  "lightness": `Ljushet`,
  "magenta": `magenta`,
  "magenta pink": `magentarosa`,
  "orange": `orange`,
  "orange yellow": `orangegul`,
  "pale": `blek`,
  "pink": `rosa`,
  "pink red": `rosaröd`,
  "purple": `lila`,
  "purple magenta": `lila magenta`,
  "red": `Rött`,
  "red orange": `rödorange`,
  "saturation": `Mättnad`,
  "transparentColorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}, ${args.percentTransparent} genomskinlig`,
  "very dark": `mycket mörk`,
  "very light": `mycket ljus`,
  "vibrant": `livfull`,
  "white": `vit`,
  "yellow": `gul`,
  "yellow green": `gulgrön`
};

// node_modules/@react-stately/color/dist/tr-TR.mjs
var $23a92651c6957668$exports = {};
$23a92651c6957668$exports = {
  "alpha": `Alfa`,
  "black": `siyah`,
  "blue": `Mavi`,
  "blue purple": `mavi mor`,
  "brightness": `Parlaklık`,
  "brown": `kahverengi`,
  "brown yellow": `kahverengi sarı`,
  "colorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}`,
  "cyan": `camgöbeği`,
  "cyan blue": `camgöbeği mavi`,
  "dark": `koyu`,
  "gray": `gri`,
  "grayish": `grimsi`,
  "green": `Yeşil`,
  "green cyan": `yeşil camgöbeği`,
  "hue": `Ton`,
  "light": `açık`,
  "lightness": `Canlılık`,
  "magenta": `eflatun`,
  "magenta pink": `eflatun pembe`,
  "orange": `turuncu`,
  "orange yellow": `turuncu sarı`,
  "pale": `solgun`,
  "pink": `pembe`,
  "pink red": `pembe kırmızı`,
  "purple": `mor`,
  "purple magenta": `mor eflatun`,
  "red": `Kırmızı`,
  "red orange": `kırmızı portakal`,
  "saturation": `Doygunluk`,
  "transparentColorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}, ${args.percentTransparent} saydam`,
  "very dark": `çok koyu`,
  "very light": `çok açık`,
  "vibrant": `canlı`,
  "white": `beyaz`,
  "yellow": `sarı`,
  "yellow green": `sarı yeşil`
};

// node_modules/@react-stately/color/dist/uk-UA.mjs
var $0f9b1074d04f4954$exports = {};
$0f9b1074d04f4954$exports = {
  "alpha": `Альфа`,
  "black": `чорний`,
  "blue": `Синій`,
  "blue purple": `синьо-фіолетовий`,
  "brightness": `Яскравість`,
  "brown": `коричневий`,
  "brown yellow": `коричнево-жовтий`,
  "colorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}`,
  "cyan": `блакитний`,
  "cyan blue": `синьо-блакитний`,
  "dark": `темний`,
  "gray": `сірий`,
  "grayish": `сіруватий`,
  "green": `Зелений`,
  "green cyan": `зелено-блакитний`,
  "hue": `Тон`,
  "light": `світлий`,
  "lightness": `Освітленість`,
  "magenta": `пурпуровий`,
  "magenta pink": `пурпурово-рожевий`,
  "orange": `помаранчевий`,
  "orange yellow": `помаранчево-жовтий`,
  "pale": `блідий`,
  "pink": `рожевий`,
  "pink red": `рожево-червоний`,
  "purple": `фіолетовий`,
  "purple magenta": `фіолетово-пурпуровий`,
  "red": `Червоний`,
  "red orange": `червоно-помаранчевий`,
  "saturation": `Насиченість`,
  "transparentColorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}, прозорий на ${args.percentTransparent}`,
  "very dark": `дуже темний`,
  "very light": `дуже світлий`,
  "vibrant": `яскравий`,
  "white": `білий`,
  "yellow": `жовтий`,
  "yellow green": `жовто-зелений`
};

// node_modules/@react-stately/color/dist/zh-CN.mjs
var $a9cedf75b94e4916$exports = {};
$a9cedf75b94e4916$exports = {
  "alpha": `Alpha`,
  "black": `黑色`,
  "blue": `蓝色`,
  "blue purple": `蓝紫色`,
  "brightness": `亮度`,
  "brown": `棕色的`,
  "brown yellow": `棕黄色`,
  "colorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}`,
  "cyan": `蓝绿色`,
  "cyan blue": `青蓝色`,
  "dark": `深色`,
  "gray": `灰色`,
  "grayish": `浅灰色的`,
  "green": `绿色`,
  "green cyan": `绿青色`,
  "hue": `色相`,
  "light": `浅色`,
  "lightness": `明亮度`,
  "magenta": `紫红色`,
  "magenta pink": `紫粉色`,
  "orange": `橙色`,
  "orange yellow": `橙黄色`,
  "pale": `苍白的`,
  "pink": `粉色`,
  "pink red": `粉红色`,
  "purple": `紫色`,
  "purple magenta": `紫洋红色`,
  "red": `红色`,
  "red orange": `红橙色`,
  "saturation": `饱和度`,
  "transparentColorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}, ${args.percentTransparent} 透明`,
  "very dark": `很暗`,
  "very light": `很浅`,
  "vibrant": `生机勃勃`,
  "white": `白色`,
  "yellow": `黄色`,
  "yellow green": `黄色/绿色`
};

// node_modules/@react-stately/color/dist/zh-TW.mjs
var $37cff576474bc8d4$exports = {};
$37cff576474bc8d4$exports = {
  "alpha": `Alpha`,
  "black": `黑`,
  "blue": `藍色`,
  "blue purple": `藍紫`,
  "brightness": `亮度`,
  "brown": `棕`,
  "brown yellow": `棕黃`,
  "colorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}`,
  "cyan": `青`,
  "cyan blue": `青藍`,
  "dark": `暗`,
  "gray": `灰`,
  "grayish": `偏灰`,
  "green": `綠色`,
  "green cyan": `青綠`,
  "hue": `色相`,
  "light": `淺`,
  "lightness": `明亮`,
  "magenta": `洋紅`,
  "magenta pink": `淺洋紅`,
  "orange": `橙`,
  "orange yellow": `橙黃`,
  "pale": `淡`,
  "pink": `粉紅`,
  "pink red": `粉紅`,
  "purple": `紫`,
  "purple magenta": `紫洋紅`,
  "red": `紅色`,
  "red orange": `橙紅`,
  "saturation": `飽和度`,
  "transparentColorName": (args) => `${args.lightness} ${args.chroma} ${args.hue}, ${args.percentTransparent} 透明`,
  "very dark": `很暗`,
  "very light": `很淺`,
  "vibrant": `鮮豔`,
  "white": `白`,
  "yellow": `黃`,
  "yellow green": `黃綠`
};

// node_modules/@react-stately/color/dist/intlStrings.mjs
var $f98dad178a72c00d$exports = {};
$f98dad178a72c00d$exports = {
  "ar-AE": $2d805fd52bb48883$exports,
  "bg-BG": $6c28468dc1df643c$exports,
  "cs-CZ": $807554f8230db0ed$exports,
  "da-DK": $7097f64386f1761c$exports,
  "de-DE": $bdd847d8beb08799$exports,
  "el-GR": $a53e00b683950971$exports,
  "en-US": $21cdd87e84f28d89$exports,
  "es-ES": $92fee9698e4d675a$exports,
  "et-EE": $7ea012e91a5ad3ee$exports,
  "fi-FI": $8460c13bb2d75345$exports,
  "fr-FR": $2a2d5dc14e680587$exports,
  "he-IL": $9a3f292371bb0589$exports,
  "hr-HR": $4742231a685fa068$exports,
  "hu-HU": $05e247fd2960981e$exports,
  "it-IT": $a67524a79ccbe190$exports,
  "ja-JP": $a9eefe9d6c8cb7d5$exports,
  "ko-KR": $4a6b836d4f1bfaba$exports,
  "lt-LT": $c950e4b1c482abde$exports,
  "lv-LV": $d10d6b60dc50b438$exports,
  "nb-NO": $371a732b2494f452$exports,
  "nl-NL": $6d042cae6243464b$exports,
  "pl-PL": $d9ab5c2611e0bcd3$exports,
  "pt-BR": $73f77c9902e29ca6$exports,
  "pt-PT": $4f461eb266a95c10$exports,
  "ro-RO": $dc46bea2f2597899$exports,
  "ru-RU": $622bbd6719cc95af$exports,
  "sk-SK": $4da03c1ecd9a9c7d$exports,
  "sl-SI": $edb6b2fe456ed4e8$exports,
  "sr-SP": $264cd81c52b30815$exports,
  "sv-SE": $6f80afde0270dda7$exports,
  "tr-TR": $23a92651c6957668$exports,
  "uk-UA": $0f9b1074d04f4954$exports,
  "zh-CN": $a9cedf75b94e4916$exports,
  "zh-TW": $37cff576474bc8d4$exports
};

// node_modules/@react-stately/color/dist/Color.mjs
function $parcel$interopDefault5(a) {
  return a && a.__esModule ? a.default : a;
}
var $799cddbef784668f$var$dictionary = new (0, $5b160d28a433310d$export$c17fa47878dc55b6)((0, $parcel$interopDefault5($f98dad178a72c00d$exports)));
function $799cddbef784668f$export$6e865ea70d7724f(value) {
  let res = $799cddbef784668f$var$RGBColor.parse(value) || $799cddbef784668f$var$HSBColor.parse(value) || $799cddbef784668f$var$HSLColor.parse(value);
  if (res) return res;
  throw new Error("Invalid color value: " + value);
}
function $799cddbef784668f$export$4cde5df63f53f473(v) {
  if (typeof v === "string") return $799cddbef784668f$export$6e865ea70d7724f(v);
  else return v;
}
function $799cddbef784668f$export$1c0c08912582810c(colorSpace) {
  switch (colorSpace) {
    case "rgb":
      return $799cddbef784668f$var$RGBColor.colorChannels;
    case "hsl":
      return $799cddbef784668f$var$HSLColor.colorChannels;
    case "hsb":
      return $799cddbef784668f$var$HSBColor.colorChannels;
  }
}
function $799cddbef784668f$export$87f5012e10bb20b2(hue) {
  if (hue === 360) return hue;
  return (hue % 360 + 360) % 360;
}
var $799cddbef784668f$var$ORANGE_LIGHTNESS_THRESHOLD = 0.68;
var $799cddbef784668f$var$YELLOW_GREEN_LIGHTNESS_THRESHOLD = 0.85;
var $799cddbef784668f$var$MAX_DARK_LIGHTNESS = 0.55;
var $799cddbef784668f$var$GRAY_THRESHOLD = 1e-3;
var $799cddbef784668f$var$OKLCH_HUES = [
  [
    0,
    "pink"
  ],
  [
    15,
    "red"
  ],
  [
    48,
    "orange"
  ],
  [
    94,
    "yellow"
  ],
  [
    135,
    "green"
  ],
  [
    175,
    "cyan"
  ],
  [
    264,
    "blue"
  ],
  [
    284,
    "purple"
  ],
  [
    320,
    "magenta"
  ],
  [
    349,
    "pink"
  ]
];
var $799cddbef784668f$var$Color = class {
  toHexInt() {
    return this.toFormat("rgb").toHexInt();
  }
  getChannelValue(channel) {
    if (channel in this) return this[channel];
    throw new Error("Unsupported color channel: " + channel);
  }
  withChannelValue(channel, value) {
    if (channel in this) {
      let x = this.clone();
      x[channel] = value;
      return x;
    }
    throw new Error("Unsupported color channel: " + channel);
  }
  getChannelName(channel, locale) {
    let strings = (0, $5b160d28a433310d$export$c17fa47878dc55b6).getGlobalDictionaryForPackage("@react-stately/color") || $799cddbef784668f$var$dictionary;
    return strings.getStringForLocale(channel, locale);
  }
  getColorSpaceAxes(xyChannels) {
    let { xChannel, yChannel } = xyChannels;
    let xCh = xChannel || this.getColorChannels().find((c) => c !== yChannel);
    let yCh = yChannel || this.getColorChannels().find((c) => c !== xCh);
    let zCh = this.getColorChannels().find((c) => c !== xCh && c !== yCh);
    return {
      xChannel: xCh,
      yChannel: yCh,
      zChannel: zCh
    };
  }
  getColorName(locale) {
    let [l, c, h] = $799cddbef784668f$var$toOKLCH(this);
    let strings = (0, $5b160d28a433310d$export$c17fa47878dc55b6).getGlobalDictionaryForPackage("@react-stately/color") || $799cddbef784668f$var$dictionary;
    if (l > 0.999) return strings.getStringForLocale("white", locale);
    if (l < 1e-3) return strings.getStringForLocale("black", locale);
    let hue;
    [hue, l] = this.getOklchHue(l, c, h, locale);
    let lightness = "";
    let chroma = "";
    if (c <= 0.1 && c >= $799cddbef784668f$var$GRAY_THRESHOLD) {
      if (l >= 0.7) chroma = "pale";
      else chroma = "grayish";
    } else if (c >= 0.15) chroma = "vibrant";
    if (l < 0.3) lightness = "very dark";
    else if (l < $799cddbef784668f$var$MAX_DARK_LIGHTNESS) lightness = "dark";
    else if (l < 0.7) ;
    else if (l < 0.85) lightness = "light";
    else lightness = "very light";
    if (chroma) chroma = strings.getStringForLocale(chroma, locale);
    if (lightness) lightness = strings.getStringForLocale(lightness, locale);
    let alpha = this.getChannelValue("alpha");
    let formatter = new (0, $6db58dc88e78b024$export$2f817fcdc4b89ae0)(locale, strings);
    if (alpha < 1) {
      let percentTransparent = new (0, $488c6ddbf4ef74c2$export$cc77c4ff7e8673c5)(locale, {
        style: "percent"
      }).format(1 - alpha);
      return formatter.format("transparentColorName", {
        lightness,
        chroma,
        hue,
        percentTransparent
      }).replace(/\s+/g, " ").trim();
    } else return formatter.format("colorName", {
      lightness,
      chroma,
      hue
    }).replace(/\s+/g, " ").trim();
  }
  getOklchHue(l, c, h, locale) {
    let strings = (0, $5b160d28a433310d$export$c17fa47878dc55b6).getGlobalDictionaryForPackage("@react-stately/color") || $799cddbef784668f$var$dictionary;
    if (c < $799cddbef784668f$var$GRAY_THRESHOLD) return [
      strings.getStringForLocale("gray", locale),
      l
    ];
    for (let i = 0; i < $799cddbef784668f$var$OKLCH_HUES.length; i++) {
      let [hue, hueName] = $799cddbef784668f$var$OKLCH_HUES[i];
      let [nextHue, nextHueName] = $799cddbef784668f$var$OKLCH_HUES[i + 1] || [
        360,
        "pink"
      ];
      if (h >= hue && h < nextHue) {
        if (hueName === "orange") {
          if (l < $799cddbef784668f$var$ORANGE_LIGHTNESS_THRESHOLD) hueName = "brown";
          else
            l = l - $799cddbef784668f$var$ORANGE_LIGHTNESS_THRESHOLD + $799cddbef784668f$var$MAX_DARK_LIGHTNESS;
        }
        if (h > hue + (nextHue - hue) / 2 && hueName !== nextHueName) hueName = `${hueName} ${nextHueName}`;
        else if (hueName === "yellow" && l < $799cddbef784668f$var$YELLOW_GREEN_LIGHTNESS_THRESHOLD)
          hueName = "yellow green";
        let name = strings.getStringForLocale(hueName, locale).toLocaleLowerCase(locale);
        return [
          name,
          l
        ];
      }
    }
    throw new Error("Unexpected hue");
  }
  getHueName(locale) {
    let [l, c, h] = $799cddbef784668f$var$toOKLCH(this);
    let [name] = this.getOklchHue(l, c, h, locale);
    return name;
  }
};
var $799cddbef784668f$var$RGBColor = class _$799cddbef784668f$var$RGBColor extends $799cddbef784668f$var$Color {
  static parse(value) {
    let colors = [];
    if (/^#[\da-f]+$/i.test(value) && [
      4,
      5,
      7,
      9
    ].includes(value.length)) {
      const values = (value.length < 6 ? value.replace(/[^#]/gi, "$&$&") : value).slice(1).split("");
      while (values.length > 0) colors.push(parseInt(values.splice(0, 2).join(""), 16));
      colors[3] = colors[3] !== void 0 ? colors[3] / 255 : void 0;
    }
    const match = value.match(/^rgba?\((.*)\)$/);
    if (match === null || match === void 0 ? void 0 : match[1]) {
      colors = match[1].split(",").map((value2) => Number(value2.trim()));
      colors = colors.map((num, i) => {
        return (0, $9446cca9a3875146$export$7d15b64cf5a3a4c4)(num !== null && num !== void 0 ? num : 0, 0, i < 3 ? 255 : 1);
      });
    }
    if (colors[0] === void 0 || colors[1] === void 0 || colors[2] === void 0) return void 0;
    var _colors_;
    return colors.length < 3 ? void 0 : new _$799cddbef784668f$var$RGBColor(colors[0], colors[1], colors[2], (_colors_ = colors[3]) !== null && _colors_ !== void 0 ? _colors_ : 1);
  }
  toString(format = "css") {
    switch (format) {
      case "hex":
        return "#" + (this.red.toString(16).padStart(2, "0") + this.green.toString(16).padStart(2, "0") + this.blue.toString(16).padStart(2, "0")).toUpperCase();
      case "hexa":
        return "#" + (this.red.toString(16).padStart(2, "0") + this.green.toString(16).padStart(2, "0") + this.blue.toString(16).padStart(2, "0") + Math.round(this.alpha * 255).toString(16).padStart(2, "0")).toUpperCase();
      case "rgb":
        return `rgb(${this.red}, ${this.green}, ${this.blue})`;
      case "css":
      case "rgba":
        return `rgba(${this.red}, ${this.green}, ${this.blue}, ${this.alpha})`;
      default:
        return this.toFormat(format).toString(format);
    }
  }
  toFormat(format) {
    switch (format) {
      case "hex":
      case "hexa":
      case "rgb":
      case "rgba":
        return this;
      case "hsb":
      case "hsba":
        return this.toHSB();
      case "hsl":
      case "hsla":
        return this.toHSL();
      default:
        throw new Error("Unsupported color conversion: rgb -> " + format);
    }
  }
  toHexInt() {
    return this.red << 16 | this.green << 8 | this.blue;
  }
  /**
  * Converts an RGB color value to HSB.
  * Conversion formula adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#From_RGB.
  * @returns An HSBColor object.
  */
  toHSB() {
    const red = this.red / 255;
    const green = this.green / 255;
    const blue = this.blue / 255;
    const min = Math.min(red, green, blue);
    const brightness = Math.max(red, green, blue);
    const chroma = brightness - min;
    const saturation = brightness === 0 ? 0 : chroma / brightness;
    let hue = 0;
    if (chroma !== 0) {
      switch (brightness) {
        case red:
          hue = (green - blue) / chroma + (green < blue ? 6 : 0);
          break;
        case green:
          hue = (blue - red) / chroma + 2;
          break;
        case blue:
          hue = (red - green) / chroma + 4;
          break;
      }
      hue /= 6;
    }
    return new $799cddbef784668f$var$HSBColor((0, $9446cca9a3875146$export$b6268554fba451f)(hue * 360, 2), (0, $9446cca9a3875146$export$b6268554fba451f)(saturation * 100, 2), (0, $9446cca9a3875146$export$b6268554fba451f)(brightness * 100, 2), this.alpha);
  }
  /**
  * Converts an RGB color value to HSL.
  * Conversion formula adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#From_RGB.
  * @returns An HSLColor object.
  */
  toHSL() {
    const red = this.red / 255;
    const green = this.green / 255;
    const blue = this.blue / 255;
    const min = Math.min(red, green, blue);
    const max = Math.max(red, green, blue);
    const lightness = (max + min) / 2;
    const chroma = max - min;
    let hue;
    let saturation;
    if (chroma === 0) hue = saturation = 0;
    else {
      saturation = chroma / (lightness < 0.5 ? max + min : 2 - max - min);
      switch (max) {
        case red:
          hue = (green - blue) / chroma + (green < blue ? 6 : 0);
          break;
        case green:
          hue = (blue - red) / chroma + 2;
          break;
        case blue:
        default:
          hue = (red - green) / chroma + 4;
          break;
      }
      hue /= 6;
    }
    return new $799cddbef784668f$var$HSLColor((0, $9446cca9a3875146$export$b6268554fba451f)(hue * 360, 2), (0, $9446cca9a3875146$export$b6268554fba451f)(saturation * 100, 2), (0, $9446cca9a3875146$export$b6268554fba451f)(lightness * 100, 2), this.alpha);
  }
  clone() {
    return new _$799cddbef784668f$var$RGBColor(this.red, this.green, this.blue, this.alpha);
  }
  getChannelRange(channel) {
    switch (channel) {
      case "red":
      case "green":
      case "blue":
        return {
          minValue: 0,
          maxValue: 255,
          step: 1,
          pageSize: 17
        };
      case "alpha":
        return {
          minValue: 0,
          maxValue: 1,
          step: 0.01,
          pageSize: 0.1
        };
      default:
        throw new Error("Unknown color channel: " + channel);
    }
  }
  getChannelFormatOptions(channel) {
    switch (channel) {
      case "red":
      case "green":
      case "blue":
        return {
          style: "decimal"
        };
      case "alpha":
        return {
          style: "percent"
        };
      default:
        throw new Error("Unknown color channel: " + channel);
    }
  }
  formatChannelValue(channel, locale) {
    let options = this.getChannelFormatOptions(channel);
    let value = this.getChannelValue(channel);
    return new (0, $488c6ddbf4ef74c2$export$cc77c4ff7e8673c5)(locale, options).format(value);
  }
  getColorSpace() {
    return "rgb";
  }
  getColorChannels() {
    return _$799cddbef784668f$var$RGBColor.colorChannels;
  }
  constructor(red, green, blue, alpha) {
    super(), this.red = red, this.green = green, this.blue = blue, this.alpha = alpha;
  }
};
$799cddbef784668f$var$RGBColor.colorChannels = [
  "red",
  "green",
  "blue"
];
var $799cddbef784668f$var$HSB_REGEX = /hsb\(([-+]?\d+(?:.\d+)?\s*,\s*[-+]?\d+(?:.\d+)?%\s*,\s*[-+]?\d+(?:.\d+)?%)\)|hsba\(([-+]?\d+(?:.\d+)?\s*,\s*[-+]?\d+(?:.\d+)?%\s*,\s*[-+]?\d+(?:.\d+)?%\s*,\s*[-+]?\d(.\d+)?)\)/;
var $799cddbef784668f$var$HSBColor = class _$799cddbef784668f$var$HSBColor extends $799cddbef784668f$var$Color {
  static parse(value) {
    let m;
    if (m = value.match($799cddbef784668f$var$HSB_REGEX)) {
      var _m_;
      const [h, s, b, a] = ((_m_ = m[1]) !== null && _m_ !== void 0 ? _m_ : m[2]).split(",").map((n) => Number(n.trim().replace("%", "")));
      return new _$799cddbef784668f$var$HSBColor($799cddbef784668f$export$87f5012e10bb20b2(h), (0, $9446cca9a3875146$export$7d15b64cf5a3a4c4)(s, 0, 100), (0, $9446cca9a3875146$export$7d15b64cf5a3a4c4)(b, 0, 100), (0, $9446cca9a3875146$export$7d15b64cf5a3a4c4)(a !== null && a !== void 0 ? a : 1, 0, 1));
    }
  }
  toString(format = "css") {
    switch (format) {
      case "css":
        return this.toHSL().toString("css");
      case "hex":
        return this.toRGB().toString("hex");
      case "hexa":
        return this.toRGB().toString("hexa");
      case "hsb":
        return `hsb(${this.hue}, ${(0, $9446cca9a3875146$export$b6268554fba451f)(this.saturation, 2)}%, ${(0, $9446cca9a3875146$export$b6268554fba451f)(this.brightness, 2)}%)`;
      case "hsba":
        return `hsba(${this.hue}, ${(0, $9446cca9a3875146$export$b6268554fba451f)(this.saturation, 2)}%, ${(0, $9446cca9a3875146$export$b6268554fba451f)(this.brightness, 2)}%, ${this.alpha})`;
      default:
        return this.toFormat(format).toString(format);
    }
  }
  toFormat(format) {
    switch (format) {
      case "hsb":
      case "hsba":
        return this;
      case "hsl":
      case "hsla":
        return this.toHSL();
      case "rgb":
      case "rgba":
        return this.toRGB();
      default:
        throw new Error("Unsupported color conversion: hsb -> " + format);
    }
  }
  /**
  * Converts a HSB color to HSL.
  * Conversion formula adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#HSV_to_HSL.
  * @returns An HSLColor object.
  */
  toHSL() {
    let saturation = this.saturation / 100;
    let brightness = this.brightness / 100;
    let lightness = brightness * (1 - saturation / 2);
    saturation = lightness === 0 || lightness === 1 ? 0 : (brightness - lightness) / Math.min(lightness, 1 - lightness);
    return new $799cddbef784668f$var$HSLColor((0, $9446cca9a3875146$export$b6268554fba451f)(this.hue, 2), (0, $9446cca9a3875146$export$b6268554fba451f)(saturation * 100, 2), (0, $9446cca9a3875146$export$b6268554fba451f)(lightness * 100, 2), this.alpha);
  }
  /**
  * Converts a HSV color value to RGB.
  * Conversion formula adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#HSV_to_RGB_alternative.
  * @returns An RGBColor object.
  */
  toRGB() {
    let hue = this.hue;
    let saturation = this.saturation / 100;
    let brightness = this.brightness / 100;
    let fn = (n, k = (n + hue / 60) % 6) => brightness - saturation * brightness * Math.max(Math.min(k, 4 - k, 1), 0);
    return new $799cddbef784668f$var$RGBColor(Math.round(fn(5) * 255), Math.round(fn(3) * 255), Math.round(fn(1) * 255), this.alpha);
  }
  clone() {
    return new _$799cddbef784668f$var$HSBColor(this.hue, this.saturation, this.brightness, this.alpha);
  }
  getChannelRange(channel) {
    switch (channel) {
      case "hue":
        return {
          minValue: 0,
          maxValue: 360,
          step: 1,
          pageSize: 15
        };
      case "saturation":
      case "brightness":
        return {
          minValue: 0,
          maxValue: 100,
          step: 1,
          pageSize: 10
        };
      case "alpha":
        return {
          minValue: 0,
          maxValue: 1,
          step: 0.01,
          pageSize: 0.1
        };
      default:
        throw new Error("Unknown color channel: " + channel);
    }
  }
  getChannelFormatOptions(channel) {
    switch (channel) {
      case "hue":
        return {
          style: "unit",
          unit: "degree",
          unitDisplay: "narrow"
        };
      case "saturation":
      case "brightness":
      case "alpha":
        return {
          style: "percent"
        };
      default:
        throw new Error("Unknown color channel: " + channel);
    }
  }
  formatChannelValue(channel, locale) {
    let options = this.getChannelFormatOptions(channel);
    let value = this.getChannelValue(channel);
    if (channel === "saturation" || channel === "brightness") value /= 100;
    return new (0, $488c6ddbf4ef74c2$export$cc77c4ff7e8673c5)(locale, options).format(value);
  }
  getColorSpace() {
    return "hsb";
  }
  getColorChannels() {
    return _$799cddbef784668f$var$HSBColor.colorChannels;
  }
  constructor(hue, saturation, brightness, alpha) {
    super(), this.hue = hue, this.saturation = saturation, this.brightness = brightness, this.alpha = alpha;
  }
};
$799cddbef784668f$var$HSBColor.colorChannels = [
  "hue",
  "saturation",
  "brightness"
];
var $799cddbef784668f$var$HSL_REGEX = /hsl\(([-+]?\d+(?:.\d+)?\s*,\s*[-+]?\d+(?:.\d+)?%\s*,\s*[-+]?\d+(?:.\d+)?%)\)|hsla\(([-+]?\d+(?:.\d+)?\s*,\s*[-+]?\d+(?:.\d+)?%\s*,\s*[-+]?\d+(?:.\d+)?%\s*,\s*[-+]?\d(.\d+)?)\)/;
var $799cddbef784668f$var$HSLColor = class _$799cddbef784668f$var$HSLColor extends $799cddbef784668f$var$Color {
  static parse(value) {
    let m;
    if (m = value.match($799cddbef784668f$var$HSL_REGEX)) {
      var _m_;
      const [h, s, l, a] = ((_m_ = m[1]) !== null && _m_ !== void 0 ? _m_ : m[2]).split(",").map((n) => Number(n.trim().replace("%", "")));
      return new _$799cddbef784668f$var$HSLColor($799cddbef784668f$export$87f5012e10bb20b2(h), (0, $9446cca9a3875146$export$7d15b64cf5a3a4c4)(s, 0, 100), (0, $9446cca9a3875146$export$7d15b64cf5a3a4c4)(l, 0, 100), (0, $9446cca9a3875146$export$7d15b64cf5a3a4c4)(a !== null && a !== void 0 ? a : 1, 0, 1));
    }
  }
  toString(format = "css") {
    switch (format) {
      case "hex":
        return this.toRGB().toString("hex");
      case "hexa":
        return this.toRGB().toString("hexa");
      case "hsl":
        return `hsl(${this.hue}, ${(0, $9446cca9a3875146$export$b6268554fba451f)(this.saturation, 2)}%, ${(0, $9446cca9a3875146$export$b6268554fba451f)(this.lightness, 2)}%)`;
      case "css":
      case "hsla":
        return `hsla(${this.hue}, ${(0, $9446cca9a3875146$export$b6268554fba451f)(this.saturation, 2)}%, ${(0, $9446cca9a3875146$export$b6268554fba451f)(this.lightness, 2)}%, ${this.alpha})`;
      default:
        return this.toFormat(format).toString(format);
    }
  }
  toFormat(format) {
    switch (format) {
      case "hsl":
      case "hsla":
        return this;
      case "hsb":
      case "hsba":
        return this.toHSB();
      case "rgb":
      case "rgba":
        return this.toRGB();
      default:
        throw new Error("Unsupported color conversion: hsl -> " + format);
    }
  }
  /**
  * Converts a HSL color to HSB.
  * Conversion formula adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#HSL_to_HSV.
  * @returns An HSBColor object.
  */
  toHSB() {
    let saturation = this.saturation / 100;
    let lightness = this.lightness / 100;
    let brightness = lightness + saturation * Math.min(lightness, 1 - lightness);
    saturation = brightness === 0 ? 0 : 2 * (1 - lightness / brightness);
    return new $799cddbef784668f$var$HSBColor((0, $9446cca9a3875146$export$b6268554fba451f)(this.hue, 2), (0, $9446cca9a3875146$export$b6268554fba451f)(saturation * 100, 2), (0, $9446cca9a3875146$export$b6268554fba451f)(brightness * 100, 2), this.alpha);
  }
  /**
  * Converts a HSL color to RGB.
  * Conversion formula adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#HSL_to_RGB_alternative.
  * @returns An RGBColor object.
  */
  toRGB() {
    let hue = this.hue;
    let saturation = this.saturation / 100;
    let lightness = this.lightness / 100;
    let a = saturation * Math.min(lightness, 1 - lightness);
    let fn = (n, k = (n + hue / 30) % 12) => lightness - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);
    return new $799cddbef784668f$var$RGBColor(Math.round(fn(0) * 255), Math.round(fn(8) * 255), Math.round(fn(4) * 255), this.alpha);
  }
  clone() {
    return new _$799cddbef784668f$var$HSLColor(this.hue, this.saturation, this.lightness, this.alpha);
  }
  getChannelRange(channel) {
    switch (channel) {
      case "hue":
        return {
          minValue: 0,
          maxValue: 360,
          step: 1,
          pageSize: 15
        };
      case "saturation":
      case "lightness":
        return {
          minValue: 0,
          maxValue: 100,
          step: 1,
          pageSize: 10
        };
      case "alpha":
        return {
          minValue: 0,
          maxValue: 1,
          step: 0.01,
          pageSize: 0.1
        };
      default:
        throw new Error("Unknown color channel: " + channel);
    }
  }
  getChannelFormatOptions(channel) {
    switch (channel) {
      case "hue":
        return {
          style: "unit",
          unit: "degree",
          unitDisplay: "narrow"
        };
      case "saturation":
      case "lightness":
      case "alpha":
        return {
          style: "percent"
        };
      default:
        throw new Error("Unknown color channel: " + channel);
    }
  }
  formatChannelValue(channel, locale) {
    let options = this.getChannelFormatOptions(channel);
    let value = this.getChannelValue(channel);
    if (channel === "saturation" || channel === "lightness") value /= 100;
    return new (0, $488c6ddbf4ef74c2$export$cc77c4ff7e8673c5)(locale, options).format(value);
  }
  getColorSpace() {
    return "hsl";
  }
  getColorChannels() {
    return _$799cddbef784668f$var$HSLColor.colorChannels;
  }
  constructor(hue, saturation, lightness, alpha) {
    super(), this.hue = hue, this.saturation = saturation, this.lightness = lightness, this.alpha = alpha;
  }
};
$799cddbef784668f$var$HSLColor.colorChannels = [
  "hue",
  "saturation",
  "lightness"
];
function $799cddbef784668f$var$toOKLCH(color) {
  let rgb = color.toFormat("rgb");
  let red = rgb.getChannelValue("red") / 255;
  let green = rgb.getChannelValue("green") / 255;
  let blue = rgb.getChannelValue("blue") / 255;
  [red, green, blue] = $799cddbef784668f$var$lin_sRGB(red, green, blue);
  let [x, y, z] = $799cddbef784668f$var$lin_sRGB_to_XYZ(red, green, blue);
  let [l, a, b] = $799cddbef784668f$var$XYZ_to_OKLab(x, y, z);
  return $799cddbef784668f$var$OKLab_to_OKLCH(l, a, b);
}
function $799cddbef784668f$var$OKLab_to_OKLCH(l, a, b) {
  var hue = Math.atan2(b, a) * 180 / Math.PI;
  return [
    l,
    Math.sqrt(a ** 2 + b ** 2),
    hue >= 0 ? hue : hue + 360
    // Hue, in degrees [0 to 360)
  ];
}
function $799cddbef784668f$var$lin_sRGB(r, g, b) {
  return [
    $799cddbef784668f$var$lin_sRGB_component(r),
    $799cddbef784668f$var$lin_sRGB_component(g),
    $799cddbef784668f$var$lin_sRGB_component(b)
  ];
}
function $799cddbef784668f$var$lin_sRGB_component(val) {
  let sign = val < 0 ? -1 : 1;
  let abs = Math.abs(val);
  if (abs <= 0.04045) return val / 12.92;
  return sign * Math.pow((abs + 0.055) / 1.055, 2.4);
}
function $799cddbef784668f$var$lin_sRGB_to_XYZ(r, g, b) {
  const M = [
    506752 / 1228815,
    87881 / 245763,
    12673 / 70218,
    87098 / 409605,
    175762 / 245763,
    12673 / 175545,
    7918 / 409605,
    87881 / 737289,
    1001167 / 1053270
  ];
  return $799cddbef784668f$var$multiplyMatrix(M, r, g, b);
}
function $799cddbef784668f$var$XYZ_to_OKLab(x, y, z) {
  const XYZtoLMS = [
    0.819022437996703,
    0.3619062600528904,
    -0.1288737815209879,
    0.0329836539323885,
    0.9292868615863434,
    0.0361446663506424,
    0.0481771893596242,
    0.2642395317527308,
    0.6335478284694309
  ];
  const LMStoOKLab = [
    0.210454268309314,
    0.7936177747023054,
    -0.0040720430116193,
    1.9779985324311684,
    -2.42859224204858,
    0.450593709617411,
    0.0259040424655478,
    0.7827717124575296,
    -0.8086757549230774
  ];
  let [a, b, c] = $799cddbef784668f$var$multiplyMatrix(XYZtoLMS, x, y, z);
  return $799cddbef784668f$var$multiplyMatrix(LMStoOKLab, Math.cbrt(a), Math.cbrt(b), Math.cbrt(c));
}
function $799cddbef784668f$var$multiplyMatrix(m, x, y, z) {
  let a = m[0] * x + m[1] * y + m[2] * z;
  let b = m[3] * x + m[4] * y + m[5] * z;
  let c = m[6] * x + m[7] * y + m[8] * z;
  return [
    a,
    b,
    c
  ];
}

// node_modules/@react-stately/color/dist/useColorAreaState.mjs
var import_react65 = __toESM(require_react(), 1);
var $6e14a98a7f67141d$var$DEFAULT_COLOR = (0, $799cddbef784668f$export$6e865ea70d7724f)("#ffffff");
function $6e14a98a7f67141d$export$6df7f0e2cabc7eef(props) {
  let { value, defaultValue, colorSpace, xChannel, yChannel, onChange, onChangeEnd } = props;
  if (!value && !defaultValue) defaultValue = $6e14a98a7f67141d$var$DEFAULT_COLOR;
  if (value) value = (0, $799cddbef784668f$export$4cde5df63f53f473)(value);
  if (defaultValue) defaultValue = (0, $799cddbef784668f$export$4cde5df63f53f473)(defaultValue);
  let [colorValue, setColorState] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(value, defaultValue, onChange);
  let color = (0, import_react65.useMemo)(() => colorSpace && colorValue ? colorValue.toFormat(colorSpace) : colorValue, [
    colorValue,
    colorSpace
  ]);
  let valueRef = (0, import_react65.useRef)(color);
  let setColor = (color2) => {
    valueRef.current = color2;
    setColorState(color2);
  };
  let channels = (0, import_react65.useMemo)(() => color.getColorSpaceAxes({
    xChannel,
    yChannel
  }), [
    color,
    xChannel,
    yChannel
  ]);
  let xChannelRange = color.getChannelRange(channels.xChannel);
  let yChannelRange = color.getChannelRange(channels.yChannel);
  let { minValue: minValueX, maxValue: maxValueX, step: stepX, pageSize: pageSizeX } = xChannelRange;
  let { minValue: minValueY, maxValue: maxValueY, step: stepY, pageSize: pageSizeY } = yChannelRange;
  let [isDragging, setDragging] = (0, import_react65.useState)(false);
  let isDraggingRef = (0, import_react65.useRef)(false);
  let xValue = color.getChannelValue(channels.xChannel);
  let yValue = color.getChannelValue(channels.yChannel);
  let setXValue = (v) => {
    if (v === xValue) return;
    let newColor = color.withChannelValue(channels.xChannel, v);
    setColor(newColor);
  };
  let setYValue = (v) => {
    if (v === yValue) return;
    let newColor = color.withChannelValue(channels.yChannel, v);
    setColor(newColor);
  };
  return {
    channels,
    xChannelStep: stepX,
    yChannelStep: stepY,
    xChannelPageStep: pageSizeX,
    yChannelPageStep: pageSizeY,
    value: color,
    setValue(value2) {
      setColor((0, $799cddbef784668f$export$4cde5df63f53f473)(value2));
    },
    xValue,
    setXValue,
    yValue,
    setYValue,
    setColorFromPoint(x, y) {
      let newXValue = minValueX + (0, $9446cca9a3875146$export$7d15b64cf5a3a4c4)(x, 0, 1) * (maxValueX - minValueX);
      let newYValue = minValueY + (1 - (0, $9446cca9a3875146$export$7d15b64cf5a3a4c4)(y, 0, 1)) * (maxValueY - minValueY);
      let newColor;
      if (newXValue !== xValue) {
        newXValue = (0, $9446cca9a3875146$export$cb6e0bb50bc19463)(newXValue, minValueX, maxValueX, stepX);
        newColor = color.withChannelValue(channels.xChannel, newXValue);
      }
      if (newYValue !== yValue) {
        newYValue = (0, $9446cca9a3875146$export$cb6e0bb50bc19463)(newYValue, minValueY, maxValueY, stepY);
        newColor = (newColor || color).withChannelValue(channels.yChannel, newYValue);
      }
      if (newColor) setColor(newColor);
    },
    getThumbPosition() {
      let x = (xValue - minValueX) / (maxValueX - minValueX);
      let y = 1 - (yValue - minValueY) / (maxValueY - minValueY);
      return {
        x,
        y
      };
    },
    incrementX(stepSize = 1) {
      setXValue(xValue + stepSize > maxValueX ? maxValueX : (0, $9446cca9a3875146$export$cb6e0bb50bc19463)(xValue + stepSize, minValueX, maxValueX, stepX));
    },
    incrementY(stepSize = 1) {
      setYValue(yValue + stepSize > maxValueY ? maxValueY : (0, $9446cca9a3875146$export$cb6e0bb50bc19463)(yValue + stepSize, minValueY, maxValueY, stepY));
    },
    decrementX(stepSize = 1) {
      setXValue((0, $9446cca9a3875146$export$cb6e0bb50bc19463)(xValue - stepSize, minValueX, maxValueX, stepX));
    },
    decrementY(stepSize = 1) {
      setYValue((0, $9446cca9a3875146$export$cb6e0bb50bc19463)(yValue - stepSize, minValueY, maxValueY, stepY));
    },
    setDragging(isDragging2) {
      let wasDragging = isDraggingRef.current;
      isDraggingRef.current = isDragging2;
      if (onChangeEnd && !isDragging2 && wasDragging) onChangeEnd(valueRef.current);
      setDragging(isDragging2);
    },
    isDragging,
    getDisplayColor() {
      return color.withChannelValue("alpha", 1);
    }
  };
}

// node_modules/@react-stately/slider/dist/useSliderState.mjs
var import_react66 = __toESM(require_react(), 1);
var $28f99e3e86e6ec45$var$DEFAULT_MIN_VALUE = 0;
var $28f99e3e86e6ec45$var$DEFAULT_MAX_VALUE = 100;
var $28f99e3e86e6ec45$var$DEFAULT_STEP_VALUE = 1;
function $28f99e3e86e6ec45$export$e5fda3247f5d67f9(props) {
  const { isDisabled = false, minValue = $28f99e3e86e6ec45$var$DEFAULT_MIN_VALUE, maxValue = $28f99e3e86e6ec45$var$DEFAULT_MAX_VALUE, numberFormatter: formatter, step = $28f99e3e86e6ec45$var$DEFAULT_STEP_VALUE, orientation = "horizontal" } = props;
  let pageSize = (0, import_react66.useMemo)(() => {
    let calcPageSize = (maxValue - minValue) / 10;
    calcPageSize = (0, $9446cca9a3875146$export$cb6e0bb50bc19463)(calcPageSize, 0, calcPageSize + step, step);
    return Math.max(calcPageSize, step);
  }, [
    step,
    maxValue,
    minValue
  ]);
  let restrictValues = (0, import_react66.useCallback)((values2) => values2 === null || values2 === void 0 ? void 0 : values2.map((val, idx) => {
    let min = idx === 0 ? minValue : values2[idx - 1];
    let max = idx === values2.length - 1 ? maxValue : values2[idx + 1];
    return (0, $9446cca9a3875146$export$cb6e0bb50bc19463)(val, min, max, step);
  }), [
    minValue,
    maxValue,
    step
  ]);
  let value = (0, import_react66.useMemo)(() => restrictValues($28f99e3e86e6ec45$var$convertValue(props.value)), [
    props.value
  ]);
  let defaultValue = (0, import_react66.useMemo)(() => {
    var _convertValue;
    return restrictValues((_convertValue = $28f99e3e86e6ec45$var$convertValue(props.defaultValue)) !== null && _convertValue !== void 0 ? _convertValue : [
      minValue
    ]);
  }, [
    props.defaultValue,
    minValue
  ]);
  let onChange = $28f99e3e86e6ec45$var$createOnChange(props.value, props.defaultValue, props.onChange);
  let onChangeEnd = $28f99e3e86e6ec45$var$createOnChange(props.value, props.defaultValue, props.onChangeEnd);
  const [values, setValuesState] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(value, defaultValue, onChange);
  const [isDraggings, setDraggingsState] = (0, import_react66.useState)(new Array(values.length).fill(false));
  const isEditablesRef = (0, import_react66.useRef)(new Array(values.length).fill(true));
  const [focusedIndex, setFocusedIndex] = (0, import_react66.useState)(void 0);
  const valuesRef = (0, import_react66.useRef)(values);
  const isDraggingsRef = (0, import_react66.useRef)(isDraggings);
  let setValues = (values2) => {
    valuesRef.current = values2;
    setValuesState(values2);
  };
  let setDraggings = (draggings) => {
    isDraggingsRef.current = draggings;
    setDraggingsState(draggings);
  };
  function getValuePercent(value2) {
    return (value2 - minValue) / (maxValue - minValue);
  }
  function getThumbMinValue(index) {
    return index === 0 ? minValue : values[index - 1];
  }
  function getThumbMaxValue(index) {
    return index === values.length - 1 ? maxValue : values[index + 1];
  }
  function isThumbEditable(index) {
    return isEditablesRef.current[index];
  }
  function setThumbEditable(index, editable) {
    isEditablesRef.current[index] = editable;
  }
  function updateValue(index, value2) {
    if (isDisabled || !isThumbEditable(index)) return;
    const thisMin = getThumbMinValue(index);
    const thisMax = getThumbMaxValue(index);
    value2 = (0, $9446cca9a3875146$export$cb6e0bb50bc19463)(value2, thisMin, thisMax, step);
    let newValues = $28f99e3e86e6ec45$var$replaceIndex(valuesRef.current, index, value2);
    setValues(newValues);
  }
  function updateDragging(index, dragging) {
    if (isDisabled || !isThumbEditable(index)) return;
    if (dragging) valuesRef.current = values;
    const wasDragging = isDraggingsRef.current[index];
    isDraggingsRef.current = $28f99e3e86e6ec45$var$replaceIndex(isDraggingsRef.current, index, dragging);
    setDraggings(isDraggingsRef.current);
    if (onChangeEnd && wasDragging && !isDraggingsRef.current.some(Boolean)) onChangeEnd(valuesRef.current);
  }
  function getFormattedValue(value2) {
    return formatter.format(value2);
  }
  function setThumbPercent(index, percent) {
    updateValue(index, getPercentValue(percent));
  }
  function getRoundedValue(value2) {
    return Math.round((value2 - minValue) / step) * step + minValue;
  }
  function getPercentValue(percent) {
    const val = percent * (maxValue - minValue) + minValue;
    return (0, $9446cca9a3875146$export$7d15b64cf5a3a4c4)(getRoundedValue(val), minValue, maxValue);
  }
  function incrementThumb(index, stepSize = 1) {
    let s = Math.max(stepSize, step);
    updateValue(index, (0, $9446cca9a3875146$export$cb6e0bb50bc19463)(values[index] + s, minValue, maxValue, step));
  }
  function decrementThumb(index, stepSize = 1) {
    let s = Math.max(stepSize, step);
    updateValue(index, (0, $9446cca9a3875146$export$cb6e0bb50bc19463)(values[index] - s, minValue, maxValue, step));
  }
  return {
    values,
    getThumbValue: (index) => values[index],
    setThumbValue: updateValue,
    setThumbPercent,
    isThumbDragging: (index) => isDraggings[index],
    setThumbDragging: updateDragging,
    focusedThumb: focusedIndex,
    setFocusedThumb: setFocusedIndex,
    getThumbPercent: (index) => getValuePercent(values[index]),
    getValuePercent,
    getThumbValueLabel: (index) => getFormattedValue(values[index]),
    getFormattedValue,
    getThumbMinValue,
    getThumbMaxValue,
    getPercentValue,
    isThumbEditable,
    setThumbEditable,
    incrementThumb,
    decrementThumb,
    step,
    pageSize,
    orientation,
    isDisabled
  };
}
function $28f99e3e86e6ec45$var$replaceIndex(array, index, value) {
  if (array[index] === value) return array;
  return [
    ...array.slice(0, index),
    value,
    ...array.slice(index + 1)
  ];
}
function $28f99e3e86e6ec45$var$convertValue(value) {
  if (value == null) return void 0;
  return Array.isArray(value) ? value : [
    value
  ];
}
function $28f99e3e86e6ec45$var$createOnChange(value, defaultValue, onChange) {
  return (newValue) => {
    if (typeof value === "number" || typeof defaultValue === "number") onChange === null || onChange === void 0 ? void 0 : onChange(newValue[0]);
    else onChange === null || onChange === void 0 ? void 0 : onChange(newValue);
  };
}

// node_modules/@react-stately/color/dist/useColorSliderState.mjs
var import_react67 = __toESM(require_react(), 1);
function $25a25ac0d1624665$export$57bc203e1c9c6d44(props) {
  let { channel, colorSpace, value, defaultValue, onChange, locale, ...otherProps } = props;
  if (value == null && defaultValue == null) throw new Error("useColorSliderState requires a value or defaultValue");
  if (value) value = (0, $799cddbef784668f$export$4cde5df63f53f473)(value);
  if (defaultValue) defaultValue = (0, $799cddbef784668f$export$4cde5df63f53f473)(defaultValue);
  let [colorValue, setColor] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(value, defaultValue, onChange);
  let color = (0, import_react67.useMemo)(() => colorSpace && colorValue ? colorValue.toFormat(colorSpace) : colorValue, [
    colorValue,
    colorSpace
  ]);
  let sliderState = (0, $28f99e3e86e6ec45$export$e5fda3247f5d67f9)({
    ...color.getChannelRange(channel),
    ...otherProps,
    // Unused except in getThumbValueLabel, which is overridden below. null to localize the TypeScript error for ignoring.
    // @ts-ignore
    numberFormatter: null,
    value: color.getChannelValue(channel),
    onChange(v) {
      setColor(color.withChannelValue(channel, v));
    },
    onChangeEnd(v) {
      if (props.onChangeEnd) props.onChangeEnd(color.withChannelValue(channel, v));
    }
  });
  let { step, pageSize } = color.getChannelRange(channel);
  return {
    ...sliderState,
    value: color,
    setValue(value2) {
      setColor((0, $799cddbef784668f$export$4cde5df63f53f473)(value2));
    },
    getDisplayColor() {
      switch (channel) {
        case "hue":
          return (0, $799cddbef784668f$export$6e865ea70d7724f)(`hsl(${color.getChannelValue("hue")}, 100%, 50%)`);
        case "lightness":
        case "brightness":
        case "saturation":
        case "red":
        case "green":
        case "blue":
          return color.withChannelValue("alpha", 1);
        case "alpha":
          return color;
        default:
          throw new Error("Unknown color channel: " + channel);
      }
    },
    getThumbValueLabel() {
      return color.formatChannelValue(channel, locale);
    },
    step,
    pageSize,
    isDragging: sliderState.isThumbDragging(0)
  };
}

// node_modules/@react-stately/color/dist/useColorWheelState.mjs
var import_react68 = __toESM(require_react(), 1);
var $ee4262c74a467b07$var$DEFAULT_COLOR = (0, $799cddbef784668f$export$6e865ea70d7724f)("hsl(0, 100%, 50%)");
function $ee4262c74a467b07$var$roundToStep(value, step) {
  return Math.round(value / step) * step;
}
function $ee4262c74a467b07$var$mod(n, m) {
  return (n % m + m) % m;
}
function $ee4262c74a467b07$var$roundDown(v) {
  let r = Math.floor(v);
  if (r === v) return v - 1;
  else return r;
}
function $ee4262c74a467b07$var$degToRad(deg) {
  return deg * Math.PI / 180;
}
function $ee4262c74a467b07$var$radToDeg(rad) {
  return rad * 180 / Math.PI;
}
function $ee4262c74a467b07$var$angleToCartesian(angle, radius) {
  let rad = $ee4262c74a467b07$var$degToRad(360 - angle + 90);
  let x = Math.sin(rad) * radius;
  let y = Math.cos(rad) * radius;
  return {
    x,
    y
  };
}
function $ee4262c74a467b07$var$cartesianToAngle(x, y, radius) {
  let deg = $ee4262c74a467b07$var$radToDeg(Math.atan2(y / radius, x / radius));
  return (deg + 360) % 360;
}
function $ee4262c74a467b07$export$f4301076d9336137(props) {
  let { value: propsValue, defaultValue, onChange, onChangeEnd } = props;
  if (!propsValue && !defaultValue) defaultValue = $ee4262c74a467b07$var$DEFAULT_COLOR;
  if (propsValue) propsValue = (0, $799cddbef784668f$export$4cde5df63f53f473)(propsValue);
  if (defaultValue) defaultValue = (0, $799cddbef784668f$export$4cde5df63f53f473)(defaultValue);
  let [stateValue, setValueState] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(propsValue, defaultValue, onChange);
  let value = (0, import_react68.useMemo)(() => {
    let colorSpace = stateValue.getColorSpace();
    return colorSpace === "hsl" || colorSpace === "hsb" ? stateValue : stateValue.toFormat("hsl");
  }, [
    stateValue
  ]);
  let valueRef = (0, import_react68.useRef)(value);
  let setValue = (value2) => {
    valueRef.current = value2;
    setValueState(value2);
  };
  let channelRange = value.getChannelRange("hue");
  let { minValue: minValueX, maxValue: maxValueX, step, pageSize: pageStep } = channelRange;
  let [isDragging, setDragging] = (0, import_react68.useState)(false);
  let isDraggingRef = (0, import_react68.useRef)(false);
  let hue = value.getChannelValue("hue");
  function setHue(v) {
    if (v > 360)
      v = 0;
    v = $ee4262c74a467b07$var$roundToStep($ee4262c74a467b07$var$mod(v, 360), step);
    if (hue !== v) {
      let color = value.withChannelValue("hue", v);
      setValue(color);
    }
  }
  return {
    value,
    step,
    pageStep,
    setValue(v) {
      let color = (0, $799cddbef784668f$export$4cde5df63f53f473)(v);
      setValue(color);
    },
    hue,
    setHue,
    setHueFromPoint(x, y, radius) {
      setHue($ee4262c74a467b07$var$cartesianToAngle(x, y, radius));
    },
    getThumbPosition(radius) {
      return $ee4262c74a467b07$var$angleToCartesian(value.getChannelValue("hue"), radius);
    },
    increment(stepSize = 1) {
      let s = Math.max(stepSize, step);
      let newValue = hue + s;
      if (newValue >= maxValueX)
        newValue = minValueX;
      setHue($ee4262c74a467b07$var$roundToStep($ee4262c74a467b07$var$mod(newValue, 360), s));
    },
    decrement(stepSize = 1) {
      let s = Math.max(stepSize, step);
      if (hue === 0)
        setHue($ee4262c74a467b07$var$roundDown(360 / s) * s);
      else setHue($ee4262c74a467b07$var$roundToStep($ee4262c74a467b07$var$mod(hue - s, 360), s));
    },
    setDragging(isDragging2) {
      let wasDragging = isDraggingRef.current;
      isDraggingRef.current = isDragging2;
      if (onChangeEnd && !isDragging2 && wasDragging) onChangeEnd(valueRef.current);
      setDragging(isDragging2);
    },
    isDragging,
    getDisplayColor() {
      return value.toFormat("hsl").withChannelValue("saturation", 100).withChannelValue("lightness", 50).withChannelValue("alpha", 1);
    },
    isDisabled: props.isDisabled || false
  };
}

// node_modules/@react-stately/color/dist/useColor.mjs
var import_react69 = __toESM(require_react(), 1);
function $aa90ad8b2b1d015f$export$5aadd9c0606af5c2(value) {
  return (0, import_react69.useMemo)(() => {
    if (typeof value === "string") try {
      return (0, $799cddbef784668f$export$6e865ea70d7724f)(value);
    } catch {
      return void 0;
    }
    return value;
  }, [
    value
  ]);
}

// node_modules/@react-stately/color/dist/useColorFieldState.mjs
var import_react70 = __toESM(require_react(), 1);
var $b335ada08155d9c0$var$MIN_COLOR = (0, $799cddbef784668f$export$6e865ea70d7724f)("#000000");
var $b335ada08155d9c0$var$MAX_COLOR = (0, $799cddbef784668f$export$6e865ea70d7724f)("#FFFFFF");
var $b335ada08155d9c0$var$MIN_COLOR_INT = $b335ada08155d9c0$var$MIN_COLOR.toHexInt();
var $b335ada08155d9c0$var$MAX_COLOR_INT = $b335ada08155d9c0$var$MAX_COLOR.toHexInt();
function $b335ada08155d9c0$export$d52a01683abdfcd6(props) {
  let { value, defaultValue, onChange } = props;
  let { step } = $b335ada08155d9c0$var$MIN_COLOR.getChannelRange("red");
  let initialValue = (0, $aa90ad8b2b1d015f$export$5aadd9c0606af5c2)(value);
  let initialDefaultValue = (0, $aa90ad8b2b1d015f$export$5aadd9c0606af5c2)(defaultValue);
  let [colorValue, setColorValue] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(initialValue, initialDefaultValue, onChange);
  let [inputValue, setInputValue] = (0, import_react70.useState)(() => (value || defaultValue) && colorValue ? colorValue.toString("hex") : "");
  let validation = (0, $e5be200c675c3b3a$export$fc1a364ae1f3ff10)({
    ...props,
    value: colorValue
  });
  let safelySetColorValue = (newColor) => {
    if (!colorValue || !newColor) {
      setColorValue(newColor);
      return;
    }
    if (newColor.toHexInt() !== colorValue.toHexInt()) {
      setColorValue(newColor);
      return;
    }
  };
  let [prevValue, setPrevValue] = (0, import_react70.useState)(colorValue);
  if (prevValue !== colorValue) {
    setInputValue(colorValue ? colorValue.toString("hex") : "");
    setPrevValue(colorValue);
  }
  let parsedValue = (0, import_react70.useMemo)(() => {
    let color;
    try {
      color = (0, $799cddbef784668f$export$6e865ea70d7724f)(inputValue.startsWith("#") ? inputValue : `#${inputValue}`);
    } catch {
      color = null;
    }
    return color;
  }, [
    inputValue
  ]);
  let commit = () => {
    if (!inputValue.length) {
      safelySetColorValue(null);
      if (value === void 0 || colorValue === null) setInputValue("");
      else setInputValue(colorValue.toString("hex"));
      return;
    }
    if (parsedValue == null) {
      setInputValue(colorValue ? colorValue.toString("hex") : "");
      return;
    }
    safelySetColorValue(parsedValue);
    let newColorValue = "";
    if (colorValue) newColorValue = colorValue.toString("hex");
    setInputValue(newColorValue);
  };
  let increment = () => {
    let newValue = $b335ada08155d9c0$var$addColorValue(parsedValue, step);
    if (newValue === colorValue) setInputValue(newValue.toString("hex"));
    safelySetColorValue(newValue);
    validation.commitValidation();
  };
  let decrement = () => {
    let newValue = $b335ada08155d9c0$var$addColorValue(parsedValue, -step);
    if (newValue === colorValue) setInputValue(newValue.toString("hex"));
    safelySetColorValue(newValue);
    validation.commitValidation();
  };
  let incrementToMax = () => safelySetColorValue($b335ada08155d9c0$var$MAX_COLOR);
  let decrementToMin = () => safelySetColorValue($b335ada08155d9c0$var$MIN_COLOR);
  let validate = (value2) => {
    var _value_match;
    return value2 === "" || !!((_value_match = value2.match(/^#?[0-9a-f]{0,6}$/i)) === null || _value_match === void 0 ? void 0 : _value_match[0]);
  };
  return {
    ...validation,
    validate,
    colorValue,
    inputValue,
    setInputValue,
    commit,
    increment,
    incrementToMax,
    decrement,
    decrementToMin
  };
}
function $b335ada08155d9c0$var$addColorValue(color, step) {
  let newColor = color ? color : $b335ada08155d9c0$var$MIN_COLOR;
  let colorInt = newColor.toHexInt();
  let clampInt = Math.min(Math.max(colorInt + step, $b335ada08155d9c0$var$MIN_COLOR_INT), $b335ada08155d9c0$var$MAX_COLOR_INT);
  if (clampInt !== colorInt) {
    let newColorString = `#${clampInt.toString(16).padStart(6, "0").toUpperCase()}`;
    newColor = (0, $799cddbef784668f$export$6e865ea70d7724f)(newColorString);
  }
  return newColor;
}

// node_modules/@react-stately/numberfield/dist/useNumberFieldState.mjs
var import_react71 = __toESM(require_react(), 1);
function $de67e98908f0c6ee$export$7f629e9dc1ecf37c(props) {
  let { minValue, maxValue, step, formatOptions, value, defaultValue = NaN, onChange, locale, isDisabled, isReadOnly } = props;
  if (value === null) value = NaN;
  if (value !== void 0 && !isNaN(value)) {
    if (step !== void 0 && !isNaN(step)) value = (0, $9446cca9a3875146$export$cb6e0bb50bc19463)(value, minValue, maxValue, step);
    else value = (0, $9446cca9a3875146$export$7d15b64cf5a3a4c4)(value, minValue, maxValue);
  }
  if (!isNaN(defaultValue)) {
    if (step !== void 0 && !isNaN(step)) defaultValue = (0, $9446cca9a3875146$export$cb6e0bb50bc19463)(defaultValue, minValue, maxValue, step);
    else defaultValue = (0, $9446cca9a3875146$export$7d15b64cf5a3a4c4)(defaultValue, minValue, maxValue);
  }
  let [numberValue, setNumberValue] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(value, isNaN(defaultValue) ? NaN : defaultValue, onChange);
  let [inputValue, setInputValue] = (0, import_react71.useState)(() => isNaN(numberValue) ? "" : new (0, $488c6ddbf4ef74c2$export$cc77c4ff7e8673c5)(locale, formatOptions).format(numberValue));
  let numberParser = (0, import_react71.useMemo)(() => new (0, $6c7bd7858deea686$export$cd11ab140839f11d)(locale, formatOptions), [
    locale,
    formatOptions
  ]);
  let numberingSystem = (0, import_react71.useMemo)(() => numberParser.getNumberingSystem(inputValue), [
    numberParser,
    inputValue
  ]);
  let formatter = (0, import_react71.useMemo)(() => new (0, $488c6ddbf4ef74c2$export$cc77c4ff7e8673c5)(locale, {
    ...formatOptions,
    numberingSystem
  }), [
    locale,
    formatOptions,
    numberingSystem
  ]);
  let intlOptions = (0, import_react71.useMemo)(() => formatter.resolvedOptions(), [
    formatter
  ]);
  let format = (0, import_react71.useCallback)((value2) => isNaN(value2) || value2 === null ? "" : formatter.format(value2), [
    formatter
  ]);
  let validation = (0, $e5be200c675c3b3a$export$fc1a364ae1f3ff10)({
    ...props,
    value: numberValue
  });
  let clampStep = step !== void 0 && !isNaN(step) ? step : 1;
  if (intlOptions.style === "percent" && (step === void 0 || isNaN(step))) clampStep = 0.01;
  let [prevValue, setPrevValue] = (0, import_react71.useState)(numberValue);
  let [prevLocale, setPrevLocale] = (0, import_react71.useState)(locale);
  let [prevFormatOptions, setPrevFormatOptions] = (0, import_react71.useState)(formatOptions);
  if (!Object.is(numberValue, prevValue) || locale !== prevLocale || formatOptions !== prevFormatOptions) {
    setInputValue(format(numberValue));
    setPrevValue(numberValue);
    setPrevLocale(locale);
    setPrevFormatOptions(formatOptions);
  }
  let parsedValue = (0, import_react71.useMemo)(() => numberParser.parse(inputValue), [
    numberParser,
    inputValue
  ]);
  let commit = () => {
    if (!inputValue.length) {
      setNumberValue(NaN);
      setInputValue(value === void 0 ? "" : format(numberValue));
      return;
    }
    if (isNaN(parsedValue)) {
      setInputValue(format(numberValue));
      return;
    }
    let clampedValue;
    if (step === void 0 || isNaN(step)) clampedValue = (0, $9446cca9a3875146$export$7d15b64cf5a3a4c4)(parsedValue, minValue, maxValue);
    else clampedValue = (0, $9446cca9a3875146$export$cb6e0bb50bc19463)(parsedValue, minValue, maxValue, step);
    clampedValue = numberParser.parse(format(clampedValue));
    setNumberValue(clampedValue);
    setInputValue(format(value === void 0 ? clampedValue : numberValue));
  };
  let safeNextStep = (operation, minMax = 0) => {
    let prev = parsedValue;
    if (isNaN(prev)) {
      let newValue = isNaN(minMax) ? 0 : minMax;
      return (0, $9446cca9a3875146$export$cb6e0bb50bc19463)(newValue, minValue, maxValue, clampStep);
    } else {
      let newValue = (0, $9446cca9a3875146$export$cb6e0bb50bc19463)(prev, minValue, maxValue, clampStep);
      if (operation === "+" && newValue > prev || operation === "-" && newValue < prev) return newValue;
      return (0, $9446cca9a3875146$export$cb6e0bb50bc19463)($de67e98908f0c6ee$var$handleDecimalOperation(operation, prev, clampStep), minValue, maxValue, clampStep);
    }
  };
  let increment = () => {
    let newValue = safeNextStep("+", minValue);
    if (newValue === numberValue) setInputValue(format(newValue));
    setNumberValue(newValue);
    validation.commitValidation();
  };
  let decrement = () => {
    let newValue = safeNextStep("-", maxValue);
    if (newValue === numberValue) setInputValue(format(newValue));
    setNumberValue(newValue);
    validation.commitValidation();
  };
  let incrementToMax = () => {
    if (maxValue != null) {
      setNumberValue((0, $9446cca9a3875146$export$cb6e0bb50bc19463)(maxValue, minValue, maxValue, clampStep));
      validation.commitValidation();
    }
  };
  let decrementToMin = () => {
    if (minValue != null) {
      setNumberValue(minValue);
      validation.commitValidation();
    }
  };
  let canIncrement = (0, import_react71.useMemo)(() => !isDisabled && !isReadOnly && (isNaN(parsedValue) || maxValue === void 0 || isNaN(maxValue) || (0, $9446cca9a3875146$export$cb6e0bb50bc19463)(parsedValue, minValue, maxValue, clampStep) > parsedValue || $de67e98908f0c6ee$var$handleDecimalOperation("+", parsedValue, clampStep) <= maxValue), [
    isDisabled,
    isReadOnly,
    minValue,
    maxValue,
    clampStep,
    parsedValue
  ]);
  let canDecrement = (0, import_react71.useMemo)(() => !isDisabled && !isReadOnly && (isNaN(parsedValue) || minValue === void 0 || isNaN(minValue) || (0, $9446cca9a3875146$export$cb6e0bb50bc19463)(parsedValue, minValue, maxValue, clampStep) < parsedValue || $de67e98908f0c6ee$var$handleDecimalOperation("-", parsedValue, clampStep) >= minValue), [
    isDisabled,
    isReadOnly,
    minValue,
    maxValue,
    clampStep,
    parsedValue
  ]);
  let validate = (value2) => numberParser.isValidPartialNumber(value2, minValue, maxValue);
  return {
    ...validation,
    validate,
    increment,
    incrementToMax,
    decrement,
    decrementToMin,
    canIncrement,
    canDecrement,
    minValue,
    maxValue,
    numberValue: parsedValue,
    setNumberValue,
    setInputValue,
    inputValue,
    commit
  };
}
function $de67e98908f0c6ee$var$handleDecimalOperation(operator, value1, value2) {
  let result = operator === "+" ? value1 + value2 : value1 - value2;
  if (value1 % 1 !== 0 || value2 % 1 !== 0) {
    const value1Decimal = value1.toString().split(".");
    const value2Decimal = value2.toString().split(".");
    const value1DecimalLength = value1Decimal[1] && value1Decimal[1].length || 0;
    const value2DecimalLength = value2Decimal[1] && value2Decimal[1].length || 0;
    const multiplier = Math.pow(10, Math.max(value1DecimalLength, value2DecimalLength));
    value1 = Math.round(value1 * multiplier);
    value2 = Math.round(value2 * multiplier);
    result = operator === "+" ? value1 + value2 : value1 - value2;
    result /= multiplier;
  }
  return result;
}

// node_modules/@react-stately/color/dist/useColorChannelFieldState.mjs
var import_react72 = __toESM(require_react(), 1);
function $31a863bb88e75dd6$export$b9fc0d69c9190c4a(props) {
  let { channel, colorSpace, locale } = props;
  let black = (0, $aa90ad8b2b1d015f$export$5aadd9c0606af5c2)("#000");
  let initialValue = (0, $aa90ad8b2b1d015f$export$5aadd9c0606af5c2)(props.value);
  let initialDefaultValue = (0, $aa90ad8b2b1d015f$export$5aadd9c0606af5c2)(props.defaultValue);
  let [colorValue, setColor] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(initialValue, initialDefaultValue !== null && initialDefaultValue !== void 0 ? initialDefaultValue : null, props.onChange);
  let color = (0, import_react72.useMemo)(() => {
    let nonNullColorValue = colorValue || black;
    return colorSpace && nonNullColorValue ? nonNullColorValue.toFormat(colorSpace) : nonNullColorValue;
  }, [
    black,
    colorValue,
    colorSpace
  ]);
  let value = color.getChannelValue(channel);
  let range = color.getChannelRange(channel);
  let formatOptions = (0, import_react72.useMemo)(() => color.getChannelFormatOptions(channel), [
    color,
    channel
  ]);
  let multiplier = formatOptions.style === "percent" && range.maxValue === 100 ? 100 : 1;
  let numberFieldState = (0, $de67e98908f0c6ee$export$7f629e9dc1ecf37c)({
    locale,
    value: colorValue === null ? NaN : value / multiplier,
    onChange: (v) => {
      if (!Number.isNaN(v)) setColor(color.withChannelValue(channel, v * multiplier));
      else setColor(null);
    },
    minValue: range.minValue / multiplier,
    maxValue: range.maxValue / multiplier,
    step: range.step / multiplier,
    formatOptions
  });
  return {
    ...numberFieldState,
    colorValue: color
  };
}

// node_modules/@react-stately/color/dist/useColorPickerState.mjs
function $309d2b7669014898$export$dc6b73b623f8645f(props) {
  let value = (0, $aa90ad8b2b1d015f$export$5aadd9c0606af5c2)(props.value);
  let defaultValue = (0, $aa90ad8b2b1d015f$export$5aadd9c0606af5c2)(props.defaultValue || "#000000");
  let [color, setColor] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(value || void 0, defaultValue, props.onChange);
  return {
    color,
    setColor(color2) {
      if (color2 != null) setColor(color2 || (0, $799cddbef784668f$export$6e865ea70d7724f)("#000000"));
    }
  };
}

// node_modules/@react-aria/color/dist/useColorAreaGradient.mjs
var import_react73 = __toESM(require_react(), 1);
var $40297c24c53588e6$var$hue = (color) => [
  0,
  60,
  120,
  180,
  240,
  300,
  360
].map((hue) => color.withChannelValue("hue", hue).toString("css")).join(", ");
var $40297c24c53588e6$var$saturation = (color) => `${color.withChannelValue("saturation", 0)}, transparent`;
var $40297c24c53588e6$var$hslChannels = {
  hue: $40297c24c53588e6$var$hue,
  saturation: $40297c24c53588e6$var$saturation,
  lightness: () => "black, transparent, white"
};
var $40297c24c53588e6$var$hsbChannels = {
  hue: $40297c24c53588e6$var$hue,
  saturation: $40297c24c53588e6$var$saturation,
  brightness: () => "black, transparent"
};
function $40297c24c53588e6$export$dd62420467d245ca({ direction, state, zChannel, xChannel, yChannel }) {
  let returnVal = (0, import_react73.useMemo)(() => {
    let end = direction === "rtl" ? "left" : "right";
    let colorAreaStyles = {};
    let zValue = state.value.getChannelValue(zChannel);
    switch (state.value.getColorSpace()) {
      case "rgb": {
        let rgb = (0, $799cddbef784668f$export$6e865ea70d7724f)("rgb(0, 0, 0)");
        colorAreaStyles = {
          background: [
            // The screen blend mode multiplies the inverse of each channel, e.g. 1 - (1 - a) * (1 - b).
            // Create a layer for each channel, with the other channels as 0. After blending, this should
            // result in the gradients being combined channel by channel.
            `linear-gradient(to ${end}, ${rgb.withChannelValue(xChannel, 0)}, ${rgb.withChannelValue(xChannel, 255)})`,
            `linear-gradient(to top, ${rgb.withChannelValue(yChannel, 0)}, ${rgb.withChannelValue(yChannel, 255)})`,
            rgb.withChannelValue(zChannel, zValue)
          ].join(","),
          backgroundBlendMode: "screen"
        };
        break;
      }
      case "hsl": {
        let channels = state.value.getColorChannels();
        let value = (0, $799cddbef784668f$export$6e865ea70d7724f)("hsl(0, 100%, 50%)").withChannelValue(zChannel, zValue);
        let bg = channels.filter((c) => c !== zChannel).map((c) => `linear-gradient(to ${c === xChannel ? end : "top"}, ${$40297c24c53588e6$var$hslChannels[c](value)})`).reverse();
        if (zChannel === "hue") bg.push(value.toString("css"));
        colorAreaStyles = {
          background: bg.join(", ")
        };
        break;
      }
      case "hsb": {
        let channels = state.value.getColorChannels();
        let value = (0, $799cddbef784668f$export$6e865ea70d7724f)("hsb(0, 100%, 100%)").withChannelValue(zChannel, zValue);
        let bg = channels.filter((c) => c !== zChannel).map((c) => `linear-gradient(to ${c === xChannel ? end : "top"}, ${$40297c24c53588e6$var$hsbChannels[c](value)})`).reverse();
        if (zChannel === "hue") bg.push(value.toString("css"));
        colorAreaStyles = {
          background: bg.join(", ")
        };
        break;
      }
    }
    let { x, y } = state.getThumbPosition();
    if (direction === "rtl") x = 1 - x;
    let forcedColorAdjustNoneStyle = {
      forcedColorAdjust: "none"
    };
    return {
      colorAreaStyleProps: {
        style: {
          position: "relative",
          touchAction: "none",
          ...forcedColorAdjustNoneStyle,
          ...colorAreaStyles
        }
      },
      thumbStyleProps: {
        style: {
          position: "absolute",
          left: `${x * 100}%`,
          top: `${y * 100}%`,
          transform: "translate(-50%, -50%)",
          touchAction: "none",
          ...forcedColorAdjustNoneStyle
        }
      }
    };
  }, [
    direction,
    state,
    zChannel,
    xChannel,
    yChannel
  ]);
  return returnVal;
}

// node_modules/@react-aria/color/dist/useColorArea.mjs
var import_react75 = __toESM(require_react(), 1);

// node_modules/@react-aria/visually-hidden/dist/VisuallyHidden.mjs
var import_react74 = __toESM(require_react(), 1);
var $5c3e21d68f1c4674$var$styles = {
  border: 0,
  clip: "rect(0 0 0 0)",
  clipPath: "inset(50%)",
  height: "1px",
  margin: "-1px",
  overflow: "hidden",
  padding: 0,
  position: "absolute",
  width: "1px",
  whiteSpace: "nowrap"
};
function $5c3e21d68f1c4674$export$a966af930f325cab(props = {}) {
  let { style, isFocusable } = props;
  let [isFocused, setFocused] = (0, import_react74.useState)(false);
  let { focusWithinProps } = (0, $9ab94262bd0047c7$export$420e68273165f4ec)({
    isDisabled: !isFocusable,
    onFocusWithinChange: (val) => setFocused(val)
  });
  let combinedStyles = (0, import_react74.useMemo)(() => {
    if (isFocused) return style;
    else if (style) return {
      ...$5c3e21d68f1c4674$var$styles,
      ...style
    };
    else return $5c3e21d68f1c4674$var$styles;
  }, [
    isFocused
  ]);
  return {
    visuallyHiddenProps: {
      ...focusWithinProps,
      style: combinedStyles
    }
  };
}
function $5c3e21d68f1c4674$export$439d29a4e110a164(props) {
  let { children, elementType: Element2 = "div", isFocusable, style, ...otherProps } = props;
  let { visuallyHiddenProps } = $5c3e21d68f1c4674$export$a966af930f325cab(props);
  return (0, import_react74.default).createElement(Element2, (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(otherProps, visuallyHiddenProps), children);
}

// node_modules/@react-aria/color/dist/useColorArea.mjs
function $parcel$interopDefault6(a) {
  return a && a.__esModule ? a.default : a;
}
function $60bd7d6e45dcddfa$export$2f92a7a615a014f6(props, state) {
  let { isDisabled, inputXRef, inputYRef, containerRef, "aria-label": ariaLabel, xName, yName } = props;
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault6($3493a52097159720$exports)), "@react-aria/color");
  let { addGlobalListener, removeGlobalListener } = (0, $03deb23ff14920c4$export$4eaf04e54aa8eed6)();
  let { direction, locale } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let [focusedInput, setFocusedInput] = (0, import_react75.useState)(null);
  let focusInput = (0, import_react75.useCallback)((inputRef = inputXRef) => {
    if (inputRef.current) (0, $7215afc6de606d6b$export$de79e2c695e052f3)(inputRef.current);
  }, [
    inputXRef
  ]);
  (0, $99facab73266f662$export$5add1d006293d136)(inputXRef, [
    state.xValue,
    state.yValue
  ], ([x, y]) => {
    let newColor = state.value.withChannelValue(state.channels.xChannel, x).withChannelValue(state.channels.yChannel, y);
    state.setValue(newColor);
  });
  let [valueChangedViaKeyboard, setValueChangedViaKeyboard] = (0, import_react75.useState)(false);
  let [valueChangedViaInputChangeEvent, setValueChangedViaInputChangeEvent] = (0, import_react75.useState)(false);
  let { xChannel, yChannel, zChannel } = state.channels;
  let xChannelStep = state.xChannelStep;
  let yChannelStep = state.yChannelStep;
  let currentPosition = (0, import_react75.useRef)(null);
  let { keyboardProps } = (0, $46d819fcbaf35654$export$8f71654801c2f7cd)({
    onKeyDown(e) {
      if (!/^(PageUp|PageDown|Home|End)$/.test(e.key)) {
        e.continuePropagation();
        return;
      }
      e.preventDefault();
      state.setDragging(true);
      setValueChangedViaKeyboard(true);
      let dir;
      switch (e.key) {
        case "PageUp":
          state.incrementY(state.yChannelPageStep);
          dir = "y";
          break;
        case "PageDown":
          state.decrementY(state.yChannelPageStep);
          dir = "y";
          break;
        case "Home":
          direction === "rtl" ? state.incrementX(state.xChannelPageStep) : state.decrementX(state.xChannelPageStep);
          dir = "x";
          break;
        case "End":
          direction === "rtl" ? state.decrementX(state.xChannelPageStep) : state.incrementX(state.xChannelPageStep);
          dir = "x";
          break;
      }
      state.setDragging(false);
      if (dir) {
        let input = dir === "x" ? inputXRef : inputYRef;
        focusInput(input);
        setFocusedInput(dir);
      }
    }
  });
  let moveHandler = {
    onMoveStart() {
      currentPosition.current = null;
      state.setDragging(true);
    },
    onMove({ deltaX, deltaY, pointerType, shiftKey }) {
      var _containerRef_current;
      let { incrementX, decrementX, incrementY, decrementY, xChannelPageStep, xChannelStep: xChannelStep2, yChannelPageStep, yChannelStep: yChannelStep2, getThumbPosition, setColorFromPoint } = state;
      if (currentPosition.current == null) currentPosition.current = getThumbPosition();
      let { width, height } = ((_containerRef_current = containerRef.current) === null || _containerRef_current === void 0 ? void 0 : _containerRef_current.getBoundingClientRect()) || {
        width: 0,
        height: 0
      };
      let valueChanged = deltaX !== 0 || deltaY !== 0;
      if (pointerType === "keyboard") {
        let deltaXValue = shiftKey && xChannelPageStep > xChannelStep2 ? xChannelPageStep : xChannelStep2;
        let deltaYValue = shiftKey && yChannelPageStep > yChannelStep2 ? yChannelPageStep : yChannelStep2;
        if (deltaX > 0 && direction === "ltr" || deltaX < 0 && direction === "rtl") incrementX(deltaXValue);
        else if (deltaX < 0 && direction === "ltr" || deltaX > 0 && direction === "rtl") decrementX(deltaXValue);
        else if (deltaY > 0) decrementY(deltaYValue);
        else if (deltaY < 0) incrementY(deltaYValue);
        setValueChangedViaKeyboard(valueChanged);
        focusedInput = valueChanged && Math.abs(deltaY) > Math.abs(deltaX) ? "y" : "x";
        setFocusedInput(focusedInput);
      } else {
        currentPosition.current.x += (direction === "rtl" ? -1 : 1) * deltaX / width;
        currentPosition.current.y += deltaY / height;
        setColorFromPoint(currentPosition.current.x, currentPosition.current.y);
      }
    },
    onMoveEnd() {
      isOnColorArea.current = false;
      state.setDragging(false);
      let input = focusedInput === "x" ? inputXRef : inputYRef;
      focusInput(input);
    }
  };
  let { moveProps: movePropsThumb } = (0, $e8a7022cf87cba2a$export$36da96379f79f245)(moveHandler);
  let { focusWithinProps } = (0, $9ab94262bd0047c7$export$420e68273165f4ec)({
    onFocusWithinChange: (focusWithin) => {
      if (!focusWithin) {
        setValueChangedViaKeyboard(false);
        setValueChangedViaInputChangeEvent(false);
      }
    }
  });
  let currentPointer = (0, import_react75.useRef)(void 0);
  let isOnColorArea = (0, import_react75.useRef)(false);
  let { moveProps: movePropsContainer } = (0, $e8a7022cf87cba2a$export$36da96379f79f245)({
    onMoveStart() {
      if (isOnColorArea.current) moveHandler.onMoveStart();
    },
    onMove(e) {
      if (isOnColorArea.current) moveHandler.onMove(e);
    },
    onMoveEnd() {
      if (isOnColorArea.current) moveHandler.onMoveEnd();
    }
  });
  let onThumbDown = (id) => {
    if (!state.isDragging) {
      currentPointer.current = id;
      setValueChangedViaKeyboard(false);
      focusInput();
      state.setDragging(true);
      if (typeof PointerEvent !== "undefined") addGlobalListener(window, "pointerup", onThumbUp, false);
      else {
        addGlobalListener(window, "mouseup", onThumbUp, false);
        addGlobalListener(window, "touchend", onThumbUp, false);
      }
    }
  };
  let onThumbUp = (e) => {
    var _e_changedTouches;
    var _e_pointerId;
    let id = (_e_pointerId = e.pointerId) !== null && _e_pointerId !== void 0 ? _e_pointerId : (_e_changedTouches = e.changedTouches) === null || _e_changedTouches === void 0 ? void 0 : _e_changedTouches[0].identifier;
    if (id === currentPointer.current) {
      setValueChangedViaKeyboard(false);
      focusInput();
      state.setDragging(false);
      currentPointer.current = void 0;
      isOnColorArea.current = false;
      if (typeof PointerEvent !== "undefined") removeGlobalListener(window, "pointerup", onThumbUp, false);
      else {
        removeGlobalListener(window, "mouseup", onThumbUp, false);
        removeGlobalListener(window, "touchend", onThumbUp, false);
      }
    }
  };
  let onColorAreaDown = (colorArea, id, clientX, clientY) => {
    let rect = colorArea.getBoundingClientRect();
    let { width, height } = rect;
    let x = (clientX - rect.x) / width;
    let y = (clientY - rect.y) / height;
    if (direction === "rtl") x = 1 - x;
    if (x >= 0 && x <= 1 && y >= 0 && y <= 1 && !state.isDragging && currentPointer.current === void 0) {
      isOnColorArea.current = true;
      setValueChangedViaKeyboard(false);
      currentPointer.current = id;
      state.setColorFromPoint(x, y);
      focusInput();
      state.setDragging(true);
      if (typeof PointerEvent !== "undefined") addGlobalListener(window, "pointerup", onColorAreaUp, false);
      else {
        addGlobalListener(window, "mouseup", onColorAreaUp, false);
        addGlobalListener(window, "touchend", onColorAreaUp, false);
      }
    }
  };
  let onColorAreaUp = (e) => {
    var _e_changedTouches;
    var _e_pointerId;
    let id = (_e_pointerId = e.pointerId) !== null && _e_pointerId !== void 0 ? _e_pointerId : (_e_changedTouches = e.changedTouches) === null || _e_changedTouches === void 0 ? void 0 : _e_changedTouches[0].identifier;
    if (isOnColorArea.current && id === currentPointer.current) {
      isOnColorArea.current = false;
      setValueChangedViaKeyboard(false);
      currentPointer.current = void 0;
      state.setDragging(false);
      focusInput();
      if (typeof PointerEvent !== "undefined") removeGlobalListener(window, "pointerup", onColorAreaUp, false);
      else {
        removeGlobalListener(window, "mouseup", onColorAreaUp, false);
        removeGlobalListener(window, "touchend", onColorAreaUp, false);
      }
    }
  };
  let colorAreaInteractions = isDisabled ? {} : (0, $3ef42575df84b30b$export$9d1611c77c2fe928)({
    ...typeof PointerEvent !== "undefined" ? {
      onPointerDown: (e) => {
        if (e.pointerType === "mouse" && (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey)) return;
        onColorAreaDown(e.currentTarget, e.pointerId, e.clientX, e.clientY);
      }
    } : {
      onMouseDown: (e) => {
        if (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey) return;
        onColorAreaDown(e.currentTarget, void 0, e.clientX, e.clientY);
      },
      onTouchStart: (e) => {
        onColorAreaDown(e.currentTarget, e.changedTouches[0].identifier, e.changedTouches[0].clientX, e.changedTouches[0].clientY);
      }
    }
  }, movePropsContainer);
  let thumbInteractions = isDisabled ? {} : (0, $3ef42575df84b30b$export$9d1611c77c2fe928)({
    ...typeof PointerEvent !== "undefined" ? {
      onPointerDown: (e) => {
        if (e.pointerType === "mouse" && (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey)) return;
        onThumbDown(e.pointerId);
      }
    } : {
      onMouseDown: (e) => {
        if (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey) return;
        onThumbDown(void 0);
      },
      onTouchStart: (e) => {
        onThumbDown(e.changedTouches[0].identifier);
      }
    }
  }, focusWithinProps, keyboardProps, movePropsThumb);
  let { focusProps: xInputFocusProps } = (0, $a1ea59d68270f0dd$export$f8168d8dd8fd66e6)({
    onFocus: () => {
      setFocusedInput("x");
    }
  });
  let { focusProps: yInputFocusProps } = (0, $a1ea59d68270f0dd$export$f8168d8dd8fd66e6)({
    onFocus: () => {
      setFocusedInput("y");
    }
  });
  const onChange = (e) => {
    const { target } = e;
    setValueChangedViaInputChangeEvent(true);
    if (target === inputXRef.current) state.setXValue(parseFloat(target.value));
    else if (target === inputYRef.current) state.setYValue(parseFloat(target.value));
  };
  let isMobile = (0, $c87311424ea30a05$export$fedb369cb70207f1)() || (0, $c87311424ea30a05$export$a11b0059900ceec8)();
  let value = state.getDisplayColor();
  const getAriaValueTextForChannel = (0, import_react75.useCallback)((channel) => {
    const isAfterInput = valueChangedViaInputChangeEvent || valueChangedViaKeyboard;
    return `${isAfterInput ? stringFormatter.format("colorNameAndValue", {
      name: value.getChannelName(channel, locale),
      value: value.formatChannelValue(channel, locale)
    }) : [
      stringFormatter.format("colorNameAndValue", {
        name: value.getChannelName(channel, locale),
        value: value.formatChannelValue(channel, locale)
      }),
      stringFormatter.format("colorNameAndValue", {
        name: value.getChannelName(channel === yChannel ? xChannel : yChannel, locale),
        value: value.formatChannelValue(channel === yChannel ? xChannel : yChannel, locale)
      }),
      stringFormatter.format("colorNameAndValue", {
        name: value.getChannelName(zChannel, locale),
        value: value.formatChannelValue(zChannel, locale)
      })
    ].join(", ")}, ${value.getColorName(locale)}`;
  }, [
    locale,
    value,
    stringFormatter,
    valueChangedViaInputChangeEvent,
    valueChangedViaKeyboard,
    xChannel,
    yChannel,
    zChannel
  ]);
  let colorPickerLabel = stringFormatter.format("colorPicker");
  let xInputLabellingProps = (0, $313b98861ee5dd6c$export$d6875122194c7b44)({
    ...props,
    "aria-label": ariaLabel ? stringFormatter.format("colorInputLabel", {
      label: ariaLabel,
      channelLabel: colorPickerLabel
    }) : colorPickerLabel
  });
  let yInputLabellingProps = (0, $313b98861ee5dd6c$export$d6875122194c7b44)({
    ...props,
    "aria-label": ariaLabel ? stringFormatter.format("colorInputLabel", {
      label: ariaLabel,
      channelLabel: colorPickerLabel
    }) : colorPickerLabel
  });
  let colorAreaLabellingProps = (0, $313b98861ee5dd6c$export$d6875122194c7b44)({
    ...props,
    "aria-label": ariaLabel ? `${ariaLabel}, ${colorPickerLabel}` : void 0
  }, isMobile ? colorPickerLabel : void 0);
  let ariaRoleDescription = stringFormatter.format("twoDimensionalSlider");
  let { visuallyHiddenProps } = (0, $5c3e21d68f1c4674$export$a966af930f325cab)({
    style: {
      opacity: "0.0001",
      width: "100%",
      height: "100%",
      pointerEvents: "none"
    }
  });
  let { colorAreaStyleProps, thumbStyleProps } = (0, $40297c24c53588e6$export$dd62420467d245ca)({
    direction,
    state,
    xChannel,
    yChannel,
    zChannel
  });
  return {
    colorAreaProps: {
      ...colorAreaLabellingProps,
      ...colorAreaInteractions,
      ...colorAreaStyleProps,
      role: "group"
    },
    thumbProps: {
      ...thumbInteractions,
      ...thumbStyleProps,
      role: "presentation"
    },
    xInputProps: {
      ...xInputLabellingProps,
      ...visuallyHiddenProps,
      ...xInputFocusProps,
      type: "range",
      min: state.value.getChannelRange(xChannel).minValue,
      max: state.value.getChannelRange(xChannel).maxValue,
      step: xChannelStep,
      "aria-roledescription": ariaRoleDescription,
      "aria-valuetext": getAriaValueTextForChannel(xChannel),
      "aria-orientation": "horizontal",
      "aria-describedby": props["aria-describedby"],
      "aria-details": props["aria-details"],
      disabled: isDisabled,
      value: state.value.getChannelValue(xChannel),
      name: xName,
      tabIndex: isMobile || !focusedInput || focusedInput === "x" ? void 0 : -1,
      /*
        So that only a single "2d slider" control shows up when listing form elements for screen readers,
        add aria-hidden="true" to the unfocused control when the value has not changed via the keyboard,
        but remove aria-hidden to reveal the input for each channel when the value has changed with the keyboard.
      */
      "aria-hidden": isMobile || !focusedInput || focusedInput === "x" || valueChangedViaKeyboard ? void 0 : "true",
      onChange
    },
    yInputProps: {
      ...yInputLabellingProps,
      ...visuallyHiddenProps,
      ...yInputFocusProps,
      type: "range",
      min: state.value.getChannelRange(yChannel).minValue,
      max: state.value.getChannelRange(yChannel).maxValue,
      step: yChannelStep,
      "aria-roledescription": ariaRoleDescription,
      "aria-valuetext": getAriaValueTextForChannel(yChannel),
      "aria-orientation": "vertical",
      "aria-describedby": props["aria-describedby"],
      "aria-details": props["aria-details"],
      disabled: isDisabled,
      value: state.value.getChannelValue(yChannel),
      name: yName,
      tabIndex: isMobile || focusedInput === "y" ? void 0 : -1,
      /*
        So that only a single "2d slider" control shows up when listing form elements for screen readers,
        add aria-hidden="true" to the unfocused input when the value has not changed via the keyboard,
        but remove aria-hidden to reveal the input for each channel when the value has changed with the keyboard.
      */
      "aria-hidden": isMobile || focusedInput === "y" || valueChangedViaKeyboard ? void 0 : "true",
      onChange
    }
  };
}

// node_modules/@react-aria/slider/dist/utils.mjs
var $aa519ee6cf463259$export$d6c8d9636a3dc49c = /* @__PURE__ */ new WeakMap();
function $aa519ee6cf463259$export$68e648cbec363a18(state, index) {
  let data = $aa519ee6cf463259$export$d6c8d9636a3dc49c.get(state);
  if (!data) throw new Error("Unknown slider state");
  return `${data.id}-${index}`;
}

// node_modules/@react-aria/slider/dist/useSlider.mjs
var import_react76 = __toESM(require_react(), 1);
function $bcca50147b47f54d$export$56b2c08e277f365(props, state, trackRef) {
  let { labelProps, fieldProps } = (0, $d191a55c9702f145$export$8467354a121f1b9f)(props);
  let isVertical = props.orientation === "vertical";
  var _labelProps_id;
  (0, $aa519ee6cf463259$export$d6c8d9636a3dc49c).set(state, {
    id: (_labelProps_id = labelProps.id) !== null && _labelProps_id !== void 0 ? _labelProps_id : fieldProps.id,
    "aria-describedby": props["aria-describedby"],
    "aria-details": props["aria-details"]
  });
  let { direction } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let { addGlobalListener, removeGlobalListener } = (0, $03deb23ff14920c4$export$4eaf04e54aa8eed6)();
  const realTimeTrackDraggingIndex = (0, import_react76.useRef)(null);
  const reverseX = direction === "rtl";
  const currentPosition = (0, import_react76.useRef)(null);
  const { moveProps } = (0, $e8a7022cf87cba2a$export$36da96379f79f245)({
    onMoveStart() {
      currentPosition.current = null;
    },
    onMove({ deltaX, deltaY }) {
      if (!trackRef.current) return;
      let { height, width } = trackRef.current.getBoundingClientRect();
      let size = isVertical ? height : width;
      if (currentPosition.current == null && realTimeTrackDraggingIndex.current != null) currentPosition.current = state.getThumbPercent(realTimeTrackDraggingIndex.current) * size;
      let delta = isVertical ? deltaY : deltaX;
      if (isVertical || reverseX) delta = -delta;
      currentPosition.current += delta;
      if (realTimeTrackDraggingIndex.current != null && trackRef.current) {
        const percent = (0, $9446cca9a3875146$export$7d15b64cf5a3a4c4)(currentPosition.current / size, 0, 1);
        state.setThumbPercent(realTimeTrackDraggingIndex.current, percent);
      }
    },
    onMoveEnd() {
      if (realTimeTrackDraggingIndex.current != null) {
        state.setThumbDragging(realTimeTrackDraggingIndex.current, false);
        realTimeTrackDraggingIndex.current = null;
      }
    }
  });
  let currentPointer = (0, import_react76.useRef)(void 0);
  let onDownTrack = (e, id, clientX, clientY) => {
    if (trackRef.current && !props.isDisabled && state.values.every((_, i) => !state.isThumbDragging(i))) {
      let { height, width, top, left } = trackRef.current.getBoundingClientRect();
      let size = isVertical ? height : width;
      const trackPosition = isVertical ? top : left;
      const clickPosition = isVertical ? clientY : clientX;
      const offset = clickPosition - trackPosition;
      let percent = offset / size;
      if (direction === "rtl" || isVertical) percent = 1 - percent;
      let value = state.getPercentValue(percent);
      let closestThumb;
      let split = state.values.findIndex((v) => value - v < 0);
      if (split === 0) closestThumb = split;
      else if (split === -1) closestThumb = state.values.length - 1;
      else {
        let lastLeft = state.values[split - 1];
        let firstRight = state.values[split];
        if (Math.abs(lastLeft - value) < Math.abs(firstRight - value)) closestThumb = split - 1;
        else closestThumb = split;
      }
      if (closestThumb >= 0 && state.isThumbEditable(closestThumb)) {
        e.preventDefault();
        realTimeTrackDraggingIndex.current = closestThumb;
        state.setFocusedThumb(closestThumb);
        currentPointer.current = id;
        state.setThumbDragging(realTimeTrackDraggingIndex.current, true);
        state.setThumbValue(closestThumb, value);
        addGlobalListener(window, "mouseup", onUpTrack, false);
        addGlobalListener(window, "touchend", onUpTrack, false);
        addGlobalListener(window, "pointerup", onUpTrack, false);
      } else realTimeTrackDraggingIndex.current = null;
    }
  };
  let onUpTrack = (e) => {
    var _e_changedTouches;
    var _e_pointerId;
    let id = (_e_pointerId = e.pointerId) !== null && _e_pointerId !== void 0 ? _e_pointerId : (_e_changedTouches = e.changedTouches) === null || _e_changedTouches === void 0 ? void 0 : _e_changedTouches[0].identifier;
    if (id === currentPointer.current) {
      if (realTimeTrackDraggingIndex.current != null) {
        state.setThumbDragging(realTimeTrackDraggingIndex.current, false);
        realTimeTrackDraggingIndex.current = null;
      }
      removeGlobalListener(window, "mouseup", onUpTrack, false);
      removeGlobalListener(window, "touchend", onUpTrack, false);
      removeGlobalListener(window, "pointerup", onUpTrack, false);
    }
  };
  if ("htmlFor" in labelProps && labelProps.htmlFor) {
    delete labelProps.htmlFor;
    labelProps.onClick = () => {
      var _document_getElementById;
      (_document_getElementById = document.getElementById((0, $aa519ee6cf463259$export$68e648cbec363a18)(state, 0))) === null || _document_getElementById === void 0 ? void 0 : _document_getElementById.focus();
      (0, $507fabe10e71c6fb$export$8397ddfc504fdb9a)("keyboard");
    };
  }
  return {
    labelProps,
    // The root element of the Slider will have role="group" to group together
    // all the thumb inputs in the Slider.  The label of the Slider will
    // be used to label the group.
    groupProps: {
      role: "group",
      ...fieldProps
    },
    trackProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)({
      onMouseDown(e) {
        if (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey) return;
        onDownTrack(e, void 0, e.clientX, e.clientY);
      },
      onPointerDown(e) {
        if (e.pointerType === "mouse" && (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey)) return;
        onDownTrack(e, e.pointerId, e.clientX, e.clientY);
      },
      onTouchStart(e) {
        onDownTrack(e, e.changedTouches[0].identifier, e.changedTouches[0].clientX, e.changedTouches[0].clientY);
      },
      style: {
        position: "relative",
        touchAction: "none"
      }
    }, moveProps),
    outputProps: {
      htmlFor: state.values.map((_, index) => (0, $aa519ee6cf463259$export$68e648cbec363a18)(state, index)).join(" "),
      "aria-live": "off"
    }
  };
}

// node_modules/@react-aria/slider/dist/useSliderThumb.mjs
var import_react77 = __toESM(require_react(), 1);
function $47b897dc8cdb026b$export$8d15029008292ae(opts, state) {
  let { index = 0, isRequired, validationState, isInvalid, trackRef, inputRef, orientation = state.orientation, name } = opts;
  let isDisabled = opts.isDisabled || state.isDisabled;
  let isVertical = orientation === "vertical";
  let { direction } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let { addGlobalListener, removeGlobalListener } = (0, $03deb23ff14920c4$export$4eaf04e54aa8eed6)();
  let data = (0, $aa519ee6cf463259$export$d6c8d9636a3dc49c).get(state);
  var _opts_arialabelledby;
  const { labelProps, fieldProps } = (0, $d191a55c9702f145$export$8467354a121f1b9f)({
    ...opts,
    id: (0, $aa519ee6cf463259$export$68e648cbec363a18)(state, index),
    "aria-labelledby": `${data.id} ${(_opts_arialabelledby = opts["aria-labelledby"]) !== null && _opts_arialabelledby !== void 0 ? _opts_arialabelledby : ""}`.trim()
  });
  const value = state.values[index];
  const focusInput = (0, import_react77.useCallback)(() => {
    if (inputRef.current) (0, $7215afc6de606d6b$export$de79e2c695e052f3)(inputRef.current);
  }, [
    inputRef
  ]);
  const isFocused = state.focusedThumb === index;
  (0, import_react77.useEffect)(() => {
    if (isFocused) focusInput();
  }, [
    isFocused,
    focusInput
  ]);
  let reverseX = direction === "rtl";
  let currentPosition = (0, import_react77.useRef)(null);
  let { keyboardProps } = (0, $46d819fcbaf35654$export$8f71654801c2f7cd)({
    onKeyDown(e) {
      let { getThumbMaxValue, getThumbMinValue, decrementThumb, incrementThumb, setThumbValue, setThumbDragging, pageSize } = state;
      if (!/^(PageUp|PageDown|Home|End)$/.test(e.key)) {
        e.continuePropagation();
        return;
      }
      e.preventDefault();
      setThumbDragging(index, true);
      switch (e.key) {
        case "PageUp":
          incrementThumb(index, pageSize);
          break;
        case "PageDown":
          decrementThumb(index, pageSize);
          break;
        case "Home":
          setThumbValue(index, getThumbMinValue(index));
          break;
        case "End":
          setThumbValue(index, getThumbMaxValue(index));
          break;
      }
      setThumbDragging(index, false);
    }
  });
  let { moveProps } = (0, $e8a7022cf87cba2a$export$36da96379f79f245)({
    onMoveStart() {
      currentPosition.current = null;
      state.setThumbDragging(index, true);
    },
    onMove({ deltaX, deltaY, pointerType, shiftKey }) {
      const { getThumbPercent, setThumbPercent, decrementThumb, incrementThumb, step, pageSize } = state;
      if (!trackRef.current) return;
      let { width, height } = trackRef.current.getBoundingClientRect();
      let size = isVertical ? height : width;
      if (currentPosition.current == null) currentPosition.current = getThumbPercent(index) * size;
      if (pointerType === "keyboard") {
        if (deltaX > 0 && reverseX || deltaX < 0 && !reverseX || deltaY > 0) decrementThumb(index, shiftKey ? pageSize : step);
        else incrementThumb(index, shiftKey ? pageSize : step);
      } else {
        let delta = isVertical ? deltaY : deltaX;
        if (isVertical || reverseX) delta = -delta;
        currentPosition.current += delta;
        setThumbPercent(index, (0, $9446cca9a3875146$export$7d15b64cf5a3a4c4)(currentPosition.current / size, 0, 1));
      }
    },
    onMoveEnd() {
      state.setThumbDragging(index, false);
    }
  });
  state.setThumbEditable(index, !isDisabled);
  const { focusableProps } = (0, $f645667febf57a63$export$4c014de7c8940b4c)((0, $3ef42575df84b30b$export$9d1611c77c2fe928)(opts, {
    onFocus: () => state.setFocusedThumb(index),
    onBlur: () => state.setFocusedThumb(void 0)
  }), inputRef);
  let currentPointer = (0, import_react77.useRef)(void 0);
  let onDown = (id) => {
    focusInput();
    currentPointer.current = id;
    state.setThumbDragging(index, true);
    addGlobalListener(window, "mouseup", onUp, false);
    addGlobalListener(window, "touchend", onUp, false);
    addGlobalListener(window, "pointerup", onUp, false);
  };
  let onUp = (e) => {
    var _e_changedTouches;
    var _e_pointerId;
    let id = (_e_pointerId = e.pointerId) !== null && _e_pointerId !== void 0 ? _e_pointerId : (_e_changedTouches = e.changedTouches) === null || _e_changedTouches === void 0 ? void 0 : _e_changedTouches[0].identifier;
    if (id === currentPointer.current) {
      focusInput();
      state.setThumbDragging(index, false);
      removeGlobalListener(window, "mouseup", onUp, false);
      removeGlobalListener(window, "touchend", onUp, false);
      removeGlobalListener(window, "pointerup", onUp, false);
    }
  };
  let thumbPosition = state.getThumbPercent(index);
  if (isVertical || direction === "rtl") thumbPosition = 1 - thumbPosition;
  let interactions = !isDisabled ? (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(keyboardProps, moveProps, {
    onMouseDown: (e) => {
      if (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey) return;
      onDown();
    },
    onPointerDown: (e) => {
      if (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey) return;
      onDown(e.pointerId);
    },
    onTouchStart: (e) => {
      onDown(e.changedTouches[0].identifier);
    }
  }) : {};
  (0, $99facab73266f662$export$5add1d006293d136)(inputRef, value, (v) => {
    state.setThumbValue(index, v);
  });
  return {
    inputProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(focusableProps, fieldProps, {
      type: "range",
      tabIndex: !isDisabled ? 0 : void 0,
      min: state.getThumbMinValue(index),
      max: state.getThumbMaxValue(index),
      step: state.step,
      value,
      name,
      disabled: isDisabled,
      "aria-orientation": orientation,
      "aria-valuetext": state.getThumbValueLabel(index),
      "aria-required": isRequired || void 0,
      "aria-invalid": isInvalid || validationState === "invalid" || void 0,
      "aria-errormessage": opts["aria-errormessage"],
      "aria-describedby": [
        data["aria-describedby"],
        opts["aria-describedby"]
      ].filter(Boolean).join(" "),
      "aria-details": [
        data["aria-details"],
        opts["aria-details"]
      ].filter(Boolean).join(" "),
      onChange: (e) => {
        state.setThumbValue(index, parseFloat(e.target.value));
      }
    }),
    thumbProps: {
      ...interactions,
      style: {
        position: "absolute",
        [isVertical ? "top" : "left"]: `${thumbPosition * 100}%`,
        transform: "translate(-50%, -50%)",
        touchAction: "none"
      }
    },
    labelProps,
    isDragging: state.isThumbDragging(index),
    isDisabled,
    isFocused
  };
}

// node_modules/@react-aria/color/dist/useColorSlider.mjs
function $40af666d6c251e36$export$106b7a4e66508f66(props, state) {
  let { trackRef, inputRef, orientation, channel, "aria-label": ariaLabel, name } = props;
  let { locale, direction } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  if (!props.label && !ariaLabel && !props["aria-labelledby"]) ariaLabel = state.value.getChannelName(channel, locale);
  let { groupProps, trackProps, labelProps, outputProps } = (0, $bcca50147b47f54d$export$56b2c08e277f365)({
    ...props,
    "aria-label": ariaLabel
  }, state, trackRef);
  let { inputProps, thumbProps } = (0, $47b897dc8cdb026b$export$8d15029008292ae)({
    index: 0,
    orientation,
    isDisabled: props.isDisabled,
    name,
    trackRef,
    inputRef
  }, state);
  let value = state.getDisplayColor();
  let generateBackground = () => {
    let to;
    if (orientation === "vertical") to = "top";
    else if (direction === "ltr") to = "right";
    else to = "left";
    switch (channel) {
      case "hue": {
        let stops = [
          0,
          60,
          120,
          180,
          240,
          300,
          360
        ].map((hue) => value.withChannelValue("hue", hue).toString("css")).join(", ");
        return `linear-gradient(to ${to}, ${stops})`;
      }
      case "lightness": {
        let min = state.getThumbMinValue(0);
        let max = state.getThumbMaxValue(0);
        let start = value.withChannelValue(channel, min).toString("css");
        let middle = value.withChannelValue(channel, (max - min) / 2).toString("css");
        let end = value.withChannelValue(channel, max).toString("css");
        return `linear-gradient(to ${to}, ${start}, ${middle}, ${end})`;
      }
      case "saturation":
      case "brightness":
      case "red":
      case "green":
      case "blue":
      case "alpha": {
        let start = value.withChannelValue(channel, state.getThumbMinValue(0)).toString("css");
        let end = value.withChannelValue(channel, state.getThumbMaxValue(0)).toString("css");
        return `linear-gradient(to ${to}, ${start}, ${end})`;
      }
      default:
        throw new Error("Unknown color channel: " + channel);
    }
  };
  let forcedColorAdjustNoneStyle = {
    forcedColorAdjust: "none"
  };
  if (channel === "hue") inputProps["aria-valuetext"] += `, ${value.getHueName(locale)}`;
  else if (channel !== "alpha") inputProps["aria-valuetext"] += `, ${value.getColorName(locale)}`;
  let { visuallyHiddenProps } = (0, $5c3e21d68f1c4674$export$a966af930f325cab)({
    style: {
      opacity: "0.0001",
      width: "100%",
      height: "100%",
      pointerEvents: "none"
    }
  });
  return {
    trackProps: {
      ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(groupProps, trackProps),
      style: {
        ...trackProps.style,
        ...forcedColorAdjustNoneStyle,
        background: generateBackground()
      }
    },
    inputProps: {
      ...inputProps,
      style: {
        ...inputProps.style,
        ...visuallyHiddenProps.style
      }
    },
    thumbProps: {
      ...thumbProps,
      style: {
        ...thumbProps.style,
        ...forcedColorAdjustNoneStyle
      }
    },
    labelProps,
    outputProps
  };
}

// node_modules/@react-aria/color/dist/useColorWheel.mjs
var import_react78 = __toESM(require_react(), 1);
function $b4a0a4fdc900495e$export$9064ff4e44b3729a(props, state, inputRef) {
  let { isDisabled, innerRadius, outerRadius, "aria-label": ariaLabel, name } = props;
  let { addGlobalListener, removeGlobalListener } = (0, $03deb23ff14920c4$export$4eaf04e54aa8eed6)();
  let thumbRadius = (innerRadius + outerRadius) / 2;
  let focusInput = (0, import_react78.useCallback)(() => {
    if (inputRef.current) (0, $7215afc6de606d6b$export$de79e2c695e052f3)(inputRef.current);
  }, [
    inputRef
  ]);
  (0, $99facab73266f662$export$5add1d006293d136)(inputRef, state.hue, state.setHue);
  let currentPosition = (0, import_react78.useRef)(null);
  let { keyboardProps } = (0, $46d819fcbaf35654$export$8f71654801c2f7cd)({
    onKeyDown(e) {
      if (!/^(PageUp|PageDown)$/.test(e.key)) {
        e.continuePropagation();
        return;
      }
      e.preventDefault();
      state.setDragging(true);
      switch (e.key) {
        case "PageUp":
          e.preventDefault();
          state.increment(state.pageStep);
          break;
        case "PageDown":
          e.preventDefault();
          state.decrement(state.pageStep);
          break;
      }
      state.setDragging(false);
    }
  });
  let moveHandler = {
    onMoveStart() {
      currentPosition.current = null;
      state.setDragging(true);
    },
    onMove({ deltaX, deltaY, pointerType, shiftKey }) {
      if (currentPosition.current == null) currentPosition.current = state.getThumbPosition(thumbRadius);
      currentPosition.current.x += deltaX;
      currentPosition.current.y += deltaY;
      if (pointerType === "keyboard") {
        if (deltaX > 0 || deltaY < 0) state.increment(shiftKey ? state.pageStep : state.step);
        else if (deltaX < 0 || deltaY > 0) state.decrement(shiftKey ? state.pageStep : state.step);
      } else state.setHueFromPoint(currentPosition.current.x, currentPosition.current.y, thumbRadius);
    },
    onMoveEnd() {
      isOnTrack.current = false;
      state.setDragging(false);
      focusInput();
    }
  };
  let { moveProps: movePropsThumb } = (0, $e8a7022cf87cba2a$export$36da96379f79f245)(moveHandler);
  let currentPointer = (0, import_react78.useRef)(void 0);
  let isOnTrack = (0, import_react78.useRef)(false);
  let { moveProps: movePropsContainer } = (0, $e8a7022cf87cba2a$export$36da96379f79f245)({
    onMoveStart() {
      if (isOnTrack.current) moveHandler.onMoveStart();
    },
    onMove(e) {
      if (isOnTrack.current) moveHandler.onMove(e);
    },
    onMoveEnd() {
      if (isOnTrack.current) moveHandler.onMoveEnd();
    }
  });
  let onThumbDown = (id) => {
    if (!state.isDragging) {
      currentPointer.current = id;
      focusInput();
      state.setDragging(true);
      if (typeof PointerEvent !== "undefined") addGlobalListener(window, "pointerup", onThumbUp, false);
      else {
        addGlobalListener(window, "mouseup", onThumbUp, false);
        addGlobalListener(window, "touchend", onThumbUp, false);
      }
    }
  };
  let onThumbUp = (e) => {
    var _e_changedTouches;
    var _e_pointerId;
    let id = (_e_pointerId = e.pointerId) !== null && _e_pointerId !== void 0 ? _e_pointerId : (_e_changedTouches = e.changedTouches) === null || _e_changedTouches === void 0 ? void 0 : _e_changedTouches[0].identifier;
    if (id === currentPointer.current) {
      focusInput();
      state.setDragging(false);
      currentPointer.current = void 0;
      isOnTrack.current = false;
      if (typeof PointerEvent !== "undefined") removeGlobalListener(window, "pointerup", onThumbUp, false);
      else {
        removeGlobalListener(window, "mouseup", onThumbUp, false);
        removeGlobalListener(window, "touchend", onThumbUp, false);
      }
    }
  };
  let onTrackDown = (track, id, pageX, pageY) => {
    let rect = track.getBoundingClientRect();
    let x2 = pageX - rect.x - rect.width / 2;
    let y2 = pageY - rect.y - rect.height / 2;
    let radius = Math.sqrt(x2 * x2 + y2 * y2);
    if (innerRadius < radius && radius < outerRadius && !state.isDragging && currentPointer.current === void 0) {
      isOnTrack.current = true;
      currentPointer.current = id;
      state.setHueFromPoint(x2, y2, radius);
      focusInput();
      state.setDragging(true);
      if (typeof PointerEvent !== "undefined") addGlobalListener(window, "pointerup", onTrackUp, false);
      else {
        addGlobalListener(window, "mouseup", onTrackUp, false);
        addGlobalListener(window, "touchend", onTrackUp, false);
      }
    }
  };
  let onTrackUp = (e) => {
    var _e_changedTouches;
    var _e_pointerId;
    let id = (_e_pointerId = e.pointerId) !== null && _e_pointerId !== void 0 ? _e_pointerId : (_e_changedTouches = e.changedTouches) === null || _e_changedTouches === void 0 ? void 0 : _e_changedTouches[0].identifier;
    if (isOnTrack.current && id === currentPointer.current) {
      isOnTrack.current = false;
      currentPointer.current = void 0;
      state.setDragging(false);
      focusInput();
      if (typeof PointerEvent !== "undefined") removeGlobalListener(window, "pointerup", onTrackUp, false);
      else {
        removeGlobalListener(window, "mouseup", onTrackUp, false);
        removeGlobalListener(window, "touchend", onTrackUp, false);
      }
    }
  };
  let trackInteractions = isDisabled ? {} : (0, $3ef42575df84b30b$export$9d1611c77c2fe928)({
    ...typeof PointerEvent !== "undefined" ? {
      onPointerDown: (e) => {
        if (e.pointerType === "mouse" && (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey)) return;
        onTrackDown(e.currentTarget, e.pointerId, e.clientX, e.clientY);
      }
    } : {
      onMouseDown: (e) => {
        if (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey) return;
        onTrackDown(e.currentTarget, void 0, e.clientX, e.clientY);
      },
      onTouchStart: (e) => {
        onTrackDown(e.currentTarget, e.changedTouches[0].identifier, e.changedTouches[0].clientX, e.changedTouches[0].clientY);
      }
    }
  }, movePropsContainer);
  let thumbInteractions = isDisabled ? {} : (0, $3ef42575df84b30b$export$9d1611c77c2fe928)({
    onMouseDown: (e) => {
      if (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey) return;
      onThumbDown(void 0);
    },
    onPointerDown: (e) => {
      if (e.pointerType === "mouse" && (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey)) return;
      onThumbDown(e.pointerId);
    },
    onTouchStart: (e) => {
      onThumbDown(e.changedTouches[0].identifier);
    }
  }, keyboardProps, movePropsThumb);
  let { x, y } = state.getThumbPosition(thumbRadius);
  let { locale } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  if (ariaLabel == null && props["aria-labelledby"] == null) ariaLabel = state.value.getChannelName("hue", locale);
  let inputLabellingProps = (0, $313b98861ee5dd6c$export$d6875122194c7b44)({
    ...props,
    "aria-label": ariaLabel
  });
  let { minValue, maxValue, step } = state.value.getChannelRange("hue");
  let forcedColorAdjustNoneStyle = {
    forcedColorAdjust: "none"
  };
  let { visuallyHiddenProps } = (0, $5c3e21d68f1c4674$export$a966af930f325cab)({
    style: {
      opacity: "0.0001",
      width: "100%",
      height: "100%",
      pointerEvents: "none"
    }
  });
  return {
    trackProps: {
      ...trackInteractions,
      style: {
        position: "relative",
        touchAction: "none",
        width: outerRadius * 2,
        height: outerRadius * 2,
        background: `
          conic-gradient(
            from 90deg,
            hsl(0, 100%, 50%),
            hsl(30, 100%, 50%),
            hsl(60, 100%, 50%),
            hsl(90, 100%, 50%),
            hsl(120, 100%, 50%),
            hsl(150, 100%, 50%),
            hsl(180, 100%, 50%),
            hsl(210, 100%, 50%),
            hsl(240, 100%, 50%),
            hsl(270, 100%, 50%),
            hsl(300, 100%, 50%),
            hsl(330, 100%, 50%),
            hsl(360, 100%, 50%)
          )
        `,
        clipPath: `path(evenodd, "${$b4a0a4fdc900495e$var$circlePath(outerRadius, outerRadius, outerRadius)} ${$b4a0a4fdc900495e$var$circlePath(outerRadius, outerRadius, innerRadius)}")`,
        ...forcedColorAdjustNoneStyle
      }
    },
    thumbProps: {
      ...thumbInteractions,
      style: {
        position: "absolute",
        left: outerRadius + x,
        top: outerRadius + y,
        transform: "translate(-50%, -50%)",
        touchAction: "none",
        ...forcedColorAdjustNoneStyle
      }
    },
    inputProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(inputLabellingProps, {
      type: "range",
      min: String(minValue),
      max: String(maxValue),
      step: String(step),
      "aria-valuetext": `${state.value.formatChannelValue("hue", locale)}, ${state.value.getHueName(locale)}`,
      disabled: isDisabled,
      value: `${state.value.getChannelValue("hue")}`,
      name,
      onChange: (e) => {
        state.setHue(parseFloat(e.target.value));
      },
      style: visuallyHiddenProps.style,
      "aria-errormessage": props["aria-errormessage"],
      "aria-describedby": props["aria-describedby"],
      "aria-details": props["aria-details"]
    })
  };
}
function $b4a0a4fdc900495e$var$circlePath(cx, cy, r) {
  return `M ${cx}, ${cy} m ${-r}, 0 a ${r}, ${r}, 0, 1, 0, ${r * 2}, 0 a ${r}, ${r}, 0, 1, 0 ${-r * 2}, 0`;
}

// node_modules/@react-aria/color/dist/useColorField.mjs
var import_react82 = __toESM(require_react(), 1);

// node_modules/@react-aria/textfield/dist/useTextField.mjs
var import_react79 = __toESM(require_react(), 1);
function $2d73ec29415bd339$export$712718f7aec83d5(props, ref) {
  let { inputElementType = "input", isDisabled = false, isRequired = false, isReadOnly = false, type = "text", validationBehavior = "aria" } = props;
  let [value, setValue] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(props.value, props.defaultValue || "", props.onChange);
  let { focusableProps } = (0, $f645667febf57a63$export$4c014de7c8940b4c)(props, ref);
  let validationState = (0, $e5be200c675c3b3a$export$fc1a364ae1f3ff10)({
    ...props,
    value
  });
  let { isInvalid, validationErrors, validationDetails } = validationState.displayValidation;
  let { labelProps, fieldProps, descriptionProps, errorMessageProps } = (0, $2baaea4c71418dea$export$294aa081a6c6f55d)({
    ...props,
    isInvalid,
    errorMessage: props.errorMessage || validationErrors
  });
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props, {
    labelable: true
  });
  const inputOnlyProps = {
    type,
    pattern: props.pattern
  };
  (0, $99facab73266f662$export$5add1d006293d136)(ref, value, setValue);
  (0, $e93e671b31057976$export$b8473d3665f3a75a)(props, validationState, ref);
  (0, import_react79.useEffect)(() => {
    if (ref.current instanceof (0, $431fbd86ca7dc216$export$f21a1ffae260145a)(ref.current).HTMLTextAreaElement) {
      let input = ref.current;
      Object.defineProperty(input, "defaultValue", {
        get: () => input.value,
        set: () => {
        },
        configurable: true
      });
    }
  }, [
    ref
  ]);
  return {
    labelProps,
    inputProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(domProps, inputElementType === "input" ? inputOnlyProps : void 0, {
      disabled: isDisabled,
      readOnly: isReadOnly,
      required: isRequired && validationBehavior === "native",
      "aria-required": isRequired && validationBehavior === "aria" || void 0,
      "aria-invalid": isInvalid || void 0,
      "aria-errormessage": props["aria-errormessage"],
      "aria-activedescendant": props["aria-activedescendant"],
      "aria-autocomplete": props["aria-autocomplete"],
      "aria-haspopup": props["aria-haspopup"],
      "aria-controls": props["aria-controls"],
      value,
      onChange: (e) => setValue(e.target.value),
      autoComplete: props.autoComplete,
      autoCapitalize: props.autoCapitalize,
      maxLength: props.maxLength,
      minLength: props.minLength,
      name: props.name,
      placeholder: props.placeholder,
      inputMode: props.inputMode,
      autoCorrect: props.autoCorrect,
      spellCheck: props.spellCheck,
      [parseInt((0, import_react79.default).version, 10) >= 17 ? "enterKeyHint" : "enterkeyhint"]: props.enterKeyHint,
      // Clipboard events
      onCopy: props.onCopy,
      onCut: props.onCut,
      onPaste: props.onPaste,
      // Composition events
      onCompositionEnd: props.onCompositionEnd,
      onCompositionStart: props.onCompositionStart,
      onCompositionUpdate: props.onCompositionUpdate,
      // Selection events
      onSelect: props.onSelect,
      // Input events
      onBeforeInput: props.onBeforeInput,
      onInput: props.onInput,
      ...focusableProps,
      ...fieldProps
    }),
    descriptionProps,
    errorMessageProps,
    isInvalid,
    validationErrors,
    validationDetails
  };
}

// node_modules/@react-aria/textfield/dist/useFormattedTextField.mjs
var import_react80 = __toESM(require_react(), 1);
function $d841c8010a73d545$var$supportsNativeBeforeInputEvent() {
  return typeof window !== "undefined" && window.InputEvent && typeof InputEvent.prototype.getTargetRanges === "function";
}
function $d841c8010a73d545$export$4f384c9210e583c3(props, state, inputRef) {
  let onBeforeInputFallback = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e) => {
    let input = inputRef.current;
    if (!input) return;
    let nextValue = null;
    switch (e.inputType) {
      case "historyUndo":
      case "historyRedo":
        return;
      case "insertLineBreak":
        return;
      case "deleteContent":
      case "deleteByCut":
      case "deleteByDrag":
        nextValue = input.value.slice(0, input.selectionStart) + input.value.slice(input.selectionEnd);
        break;
      case "deleteContentForward":
        nextValue = input.selectionEnd === input.selectionStart ? input.value.slice(0, input.selectionStart) + input.value.slice(input.selectionEnd + 1) : input.value.slice(0, input.selectionStart) + input.value.slice(input.selectionEnd);
        break;
      case "deleteContentBackward":
        nextValue = input.selectionEnd === input.selectionStart ? input.value.slice(0, input.selectionStart - 1) + input.value.slice(input.selectionStart) : input.value.slice(0, input.selectionStart) + input.value.slice(input.selectionEnd);
        break;
      case "deleteSoftLineBackward":
      case "deleteHardLineBackward":
        nextValue = input.value.slice(input.selectionStart);
        break;
      default:
        if (e.data != null) nextValue = input.value.slice(0, input.selectionStart) + e.data + input.value.slice(input.selectionEnd);
        break;
    }
    if (nextValue == null || !state.validate(nextValue)) e.preventDefault();
  });
  (0, import_react80.useEffect)(() => {
    if (!$d841c8010a73d545$var$supportsNativeBeforeInputEvent() || !inputRef.current) return;
    let input = inputRef.current;
    input.addEventListener("beforeinput", onBeforeInputFallback, false);
    return () => {
      input.removeEventListener("beforeinput", onBeforeInputFallback, false);
    };
  }, [
    inputRef,
    onBeforeInputFallback
  ]);
  let onBeforeInput = !$d841c8010a73d545$var$supportsNativeBeforeInputEvent() ? (e) => {
    let nextValue = e.target.value.slice(0, e.target.selectionStart) + e.data + e.target.value.slice(e.target.selectionEnd);
    if (!state.validate(nextValue)) e.preventDefault();
  } : null;
  let { labelProps, inputProps: textFieldProps, descriptionProps, errorMessageProps, ...validation } = (0, $2d73ec29415bd339$export$712718f7aec83d5)(props, inputRef);
  let compositionStartState = (0, import_react80.useRef)(null);
  return {
    inputProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(textFieldProps, {
      onBeforeInput,
      onCompositionStart() {
        let { value, selectionStart, selectionEnd } = inputRef.current;
        compositionStartState.current = {
          value,
          selectionStart,
          selectionEnd
        };
      },
      onCompositionEnd() {
        if (inputRef.current && !state.validate(inputRef.current.value)) {
          let { value, selectionStart, selectionEnd } = compositionStartState.current;
          inputRef.current.value = value;
          inputRef.current.setSelectionRange(selectionStart, selectionEnd);
          state.setInputValue(value);
        }
      }
    }),
    labelProps,
    descriptionProps,
    errorMessageProps,
    ...validation
  };
}

// node_modules/@react-aria/spinbutton/dist/ar-AE.mjs
var $ed6aae4e5f766f1e$exports = {};
$ed6aae4e5f766f1e$exports = {
  "Empty": `فارغ`
};

// node_modules/@react-aria/spinbutton/dist/bg-BG.mjs
var $38854e2b175151fa$exports = {};
$38854e2b175151fa$exports = {
  "Empty": `Изпразни`
};

// node_modules/@react-aria/spinbutton/dist/cs-CZ.mjs
var $15b25ab20f3945b2$exports = {};
$15b25ab20f3945b2$exports = {
  "Empty": `Prázdné`
};

// node_modules/@react-aria/spinbutton/dist/da-DK.mjs
var $692a4298b6b649a2$exports = {};
$692a4298b6b649a2$exports = {
  "Empty": `Tom`
};

// node_modules/@react-aria/spinbutton/dist/de-DE.mjs
var $1c6e1539193f1243$exports = {};
$1c6e1539193f1243$exports = {
  "Empty": `Leer`
};

// node_modules/@react-aria/spinbutton/dist/el-GR.mjs
var $1e8678632c464b6d$exports = {};
$1e8678632c464b6d$exports = {
  "Empty": `Άδειο`
};

// node_modules/@react-aria/spinbutton/dist/en-US.mjs
var $4adc85d9bf5b9eed$exports = {};
$4adc85d9bf5b9eed$exports = {
  "Empty": `Empty`
};

// node_modules/@react-aria/spinbutton/dist/es-ES.mjs
var $41c4b2bb61dafbca$exports = {};
$41c4b2bb61dafbca$exports = {
  "Empty": `Vacío`
};

// node_modules/@react-aria/spinbutton/dist/et-EE.mjs
var $405f8b24f5dd2a60$exports = {};
$405f8b24f5dd2a60$exports = {
  "Empty": `Tühjenda`
};

// node_modules/@react-aria/spinbutton/dist/fi-FI.mjs
var $7efe3ed02b9b9dd4$exports = {};
$7efe3ed02b9b9dd4$exports = {
  "Empty": `Tyhjä`
};

// node_modules/@react-aria/spinbutton/dist/fr-FR.mjs
var $99fc4c101d92daf3$exports = {};
$99fc4c101d92daf3$exports = {
  "Empty": `Vide`
};

// node_modules/@react-aria/spinbutton/dist/he-IL.mjs
var $f9e155e6e8cacaa2$exports = {};
$f9e155e6e8cacaa2$exports = {
  "Empty": `ריק`
};

// node_modules/@react-aria/spinbutton/dist/hr-HR.mjs
var $c31b5e8e9a249fd5$exports = {};
$c31b5e8e9a249fd5$exports = {
  "Empty": `Prazno`
};

// node_modules/@react-aria/spinbutton/dist/hu-HU.mjs
var $9c5435bc17499bd9$exports = {};
$9c5435bc17499bd9$exports = {
  "Empty": `Üres`
};

// node_modules/@react-aria/spinbutton/dist/it-IT.mjs
var $6d1fc8e84d8165e1$exports = {};
$6d1fc8e84d8165e1$exports = {
  "Empty": `Vuoto`
};

// node_modules/@react-aria/spinbutton/dist/ja-JP.mjs
var $46ea6b3641b83e71$exports = {};
$46ea6b3641b83e71$exports = {
  "Empty": `空`
};

// node_modules/@react-aria/spinbutton/dist/ko-KR.mjs
var $0e3cc9a288289dc5$exports = {};
$0e3cc9a288289dc5$exports = {
  "Empty": `비어 있음`
};

// node_modules/@react-aria/spinbutton/dist/lt-LT.mjs
var $4ff2bb25c0089ffb$exports = {};
$4ff2bb25c0089ffb$exports = {
  "Empty": `Tuščias`
};

// node_modules/@react-aria/spinbutton/dist/lv-LV.mjs
var $6cf33cd4c010a2fb$exports = {};
$6cf33cd4c010a2fb$exports = {
  "Empty": `Tukšs`
};

// node_modules/@react-aria/spinbutton/dist/nb-NO.mjs
var $5a9f8486f8b8837e$exports = {};
$5a9f8486f8b8837e$exports = {
  "Empty": `Tom`
};

// node_modules/@react-aria/spinbutton/dist/nl-NL.mjs
var $583f94d807f6ecea$exports = {};
$583f94d807f6ecea$exports = {
  "Empty": `Leeg`
};

// node_modules/@react-aria/spinbutton/dist/pl-PL.mjs
var $cc4dcfeea2b4050d$exports = {};
$cc4dcfeea2b4050d$exports = {
  "Empty": `Pusty`
};

// node_modules/@react-aria/spinbutton/dist/pt-BR.mjs
var $68ac2954d56e12b4$exports = {};
$68ac2954d56e12b4$exports = {
  "Empty": `Vazio`
};

// node_modules/@react-aria/spinbutton/dist/pt-PT.mjs
var $fdb0616f309780b0$exports = {};
$fdb0616f309780b0$exports = {
  "Empty": `Vazio`
};

// node_modules/@react-aria/spinbutton/dist/ro-RO.mjs
var $fe1eccf4ee1d6f52$exports = {};
$fe1eccf4ee1d6f52$exports = {
  "Empty": `Gol`
};

// node_modules/@react-aria/spinbutton/dist/ru-RU.mjs
var $a38b6c4e18725976$exports = {};
$a38b6c4e18725976$exports = {
  "Empty": `Не заполнено`
};

// node_modules/@react-aria/spinbutton/dist/sk-SK.mjs
var $6c14ae2b766b652c$exports = {};
$6c14ae2b766b652c$exports = {
  "Empty": `Prázdne`
};

// node_modules/@react-aria/spinbutton/dist/sl-SI.mjs
var $8f1c9692e16dc5eb$exports = {};
$8f1c9692e16dc5eb$exports = {
  "Empty": `Prazen`
};

// node_modules/@react-aria/spinbutton/dist/sr-SP.mjs
var $d2aa7abea627cafa$exports = {};
$d2aa7abea627cafa$exports = {
  "Empty": `Prazno`
};

// node_modules/@react-aria/spinbutton/dist/sv-SE.mjs
var $676b82e4b56408e6$exports = {};
$676b82e4b56408e6$exports = {
  "Empty": `Tomt`
};

// node_modules/@react-aria/spinbutton/dist/tr-TR.mjs
var $14c9042552d7ce08$exports = {};
$14c9042552d7ce08$exports = {
  "Empty": `Boş`
};

// node_modules/@react-aria/spinbutton/dist/uk-UA.mjs
var $393254ebcb66c9f5$exports = {};
$393254ebcb66c9f5$exports = {
  "Empty": `Пусто`
};

// node_modules/@react-aria/spinbutton/dist/zh-CN.mjs
var $d49d621f310cf6ce$exports = {};
$d49d621f310cf6ce$exports = {
  "Empty": `空`
};

// node_modules/@react-aria/spinbutton/dist/zh-TW.mjs
var $94b60c866ca5dfe6$exports = {};
$94b60c866ca5dfe6$exports = {
  "Empty": `空白`
};

// node_modules/@react-aria/spinbutton/dist/intlStrings.mjs
var $a99895ee3dc79e61$exports = {};
$a99895ee3dc79e61$exports = {
  "ar-AE": $ed6aae4e5f766f1e$exports,
  "bg-BG": $38854e2b175151fa$exports,
  "cs-CZ": $15b25ab20f3945b2$exports,
  "da-DK": $692a4298b6b649a2$exports,
  "de-DE": $1c6e1539193f1243$exports,
  "el-GR": $1e8678632c464b6d$exports,
  "en-US": $4adc85d9bf5b9eed$exports,
  "es-ES": $41c4b2bb61dafbca$exports,
  "et-EE": $405f8b24f5dd2a60$exports,
  "fi-FI": $7efe3ed02b9b9dd4$exports,
  "fr-FR": $99fc4c101d92daf3$exports,
  "he-IL": $f9e155e6e8cacaa2$exports,
  "hr-HR": $c31b5e8e9a249fd5$exports,
  "hu-HU": $9c5435bc17499bd9$exports,
  "it-IT": $6d1fc8e84d8165e1$exports,
  "ja-JP": $46ea6b3641b83e71$exports,
  "ko-KR": $0e3cc9a288289dc5$exports,
  "lt-LT": $4ff2bb25c0089ffb$exports,
  "lv-LV": $6cf33cd4c010a2fb$exports,
  "nb-NO": $5a9f8486f8b8837e$exports,
  "nl-NL": $583f94d807f6ecea$exports,
  "pl-PL": $cc4dcfeea2b4050d$exports,
  "pt-BR": $68ac2954d56e12b4$exports,
  "pt-PT": $fdb0616f309780b0$exports,
  "ro-RO": $fe1eccf4ee1d6f52$exports,
  "ru-RU": $a38b6c4e18725976$exports,
  "sk-SK": $6c14ae2b766b652c$exports,
  "sl-SI": $8f1c9692e16dc5eb$exports,
  "sr-SP": $d2aa7abea627cafa$exports,
  "sv-SE": $676b82e4b56408e6$exports,
  "tr-TR": $14c9042552d7ce08$exports,
  "uk-UA": $393254ebcb66c9f5$exports,
  "zh-CN": $d49d621f310cf6ce$exports,
  "zh-TW": $94b60c866ca5dfe6$exports
};

// node_modules/@react-aria/spinbutton/dist/useSpinButton.mjs
var import_react81 = __toESM(require_react(), 1);
function $parcel$interopDefault7(a) {
  return a && a.__esModule ? a.default : a;
}
function $d2e8511e6f209edf$export$e908e06f4b8e3402(props) {
  const _async = (0, import_react81.useRef)(void 0);
  let { value, textValue, minValue, maxValue, isDisabled, isReadOnly, isRequired, onIncrement, onIncrementPage, onDecrement, onDecrementPage, onDecrementToMin, onIncrementToMax } = props;
  const stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault7($a99895ee3dc79e61$exports)), "@react-aria/spinbutton");
  const clearAsync = () => clearTimeout(_async.current);
  (0, import_react81.useEffect)(() => {
    return () => clearAsync();
  }, []);
  let onKeyDown = (e) => {
    if (e.ctrlKey || e.metaKey || e.shiftKey || e.altKey || isReadOnly) return;
    switch (e.key) {
      case "PageUp":
        if (onIncrementPage) {
          e.preventDefault();
          onIncrementPage === null || onIncrementPage === void 0 ? void 0 : onIncrementPage();
          break;
        }
      // fallthrough!
      case "ArrowUp":
      case "Up":
        if (onIncrement) {
          e.preventDefault();
          onIncrement === null || onIncrement === void 0 ? void 0 : onIncrement();
        }
        break;
      case "PageDown":
        if (onDecrementPage) {
          e.preventDefault();
          onDecrementPage === null || onDecrementPage === void 0 ? void 0 : onDecrementPage();
          break;
        }
      // fallthrough
      case "ArrowDown":
      case "Down":
        if (onDecrement) {
          e.preventDefault();
          onDecrement === null || onDecrement === void 0 ? void 0 : onDecrement();
        }
        break;
      case "Home":
        if (onDecrementToMin) {
          e.preventDefault();
          onDecrementToMin === null || onDecrementToMin === void 0 ? void 0 : onDecrementToMin();
        }
        break;
      case "End":
        if (onIncrementToMax) {
          e.preventDefault();
          onIncrementToMax === null || onIncrementToMax === void 0 ? void 0 : onIncrementToMax();
        }
        break;
    }
  };
  let isFocused = (0, import_react81.useRef)(false);
  let onFocus = () => {
    isFocused.current = true;
  };
  let onBlur = () => {
    isFocused.current = false;
  };
  let ariaTextValue = textValue === "" ? stringFormatter.format("Empty") : (textValue || `${value}`).replace("-", "−");
  (0, import_react81.useEffect)(() => {
    if (isFocused.current) {
      (0, $319e236875307eab$export$d10ae4f68404609a)("assertive");
      (0, $319e236875307eab$export$a9b970dcc4ae71a9)(ariaTextValue, "assertive");
    }
  }, [
    ariaTextValue
  ]);
  const onIncrementPressStart = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((initialStepDelay) => {
    clearAsync();
    onIncrement === null || onIncrement === void 0 ? void 0 : onIncrement();
    _async.current = window.setTimeout(() => {
      if (maxValue === void 0 || isNaN(maxValue) || value === void 0 || isNaN(value) || value < maxValue) onIncrementPressStart(60);
    }, initialStepDelay);
  });
  const onDecrementPressStart = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((initialStepDelay) => {
    clearAsync();
    onDecrement === null || onDecrement === void 0 ? void 0 : onDecrement();
    _async.current = window.setTimeout(() => {
      if (minValue === void 0 || isNaN(minValue) || value === void 0 || isNaN(value) || value > minValue) onDecrementPressStart(60);
    }, initialStepDelay);
  });
  let cancelContextMenu = (e) => {
    e.preventDefault();
  };
  let { addGlobalListener, removeAllGlobalListeners } = (0, $03deb23ff14920c4$export$4eaf04e54aa8eed6)();
  return {
    spinButtonProps: {
      role: "spinbutton",
      "aria-valuenow": value !== void 0 && !isNaN(value) ? value : void 0,
      "aria-valuetext": ariaTextValue,
      "aria-valuemin": minValue,
      "aria-valuemax": maxValue,
      "aria-disabled": isDisabled || void 0,
      "aria-readonly": isReadOnly || void 0,
      "aria-required": isRequired || void 0,
      onKeyDown,
      onFocus,
      onBlur
    },
    incrementButtonProps: {
      onPressStart: () => {
        onIncrementPressStart(400);
        addGlobalListener(window, "contextmenu", cancelContextMenu);
      },
      onPressEnd: () => {
        clearAsync();
        removeAllGlobalListeners();
      },
      onFocus,
      onBlur
    },
    decrementButtonProps: {
      onPressStart: () => {
        onDecrementPressStart(400);
        addGlobalListener(window, "contextmenu", cancelContextMenu);
      },
      onPressEnd: () => {
        clearAsync();
        removeAllGlobalListeners();
      },
      onFocus,
      onBlur
    }
  };
}

// node_modules/@react-aria/color/dist/useColorField.mjs
function $f6896b05b2ecad12$export$77e32ca575a28fdf(props, state, ref) {
  let { isDisabled, isReadOnly, isRequired, isWheelDisabled, validationBehavior = "aria" } = props;
  let { colorValue, inputValue, increment, decrement, incrementToMax, decrementToMin, commit } = state;
  let inputId = (0, $bdb11010cef70236$export$f680877a34711e37)();
  let { spinButtonProps } = (0, $d2e8511e6f209edf$export$e908e06f4b8e3402)({
    isDisabled,
    isReadOnly,
    isRequired,
    maxValue: 16777215,
    minValue: 0,
    onIncrement: increment,
    onIncrementToMax: incrementToMax,
    onDecrement: decrement,
    onDecrementToMin: decrementToMin,
    value: colorValue ? colorValue.toHexInt() : void 0,
    textValue: colorValue ? colorValue.toString("hex") : void 0
  });
  let [focusWithin, setFocusWithin] = (0, import_react82.useState)(false);
  let { focusWithinProps } = (0, $9ab94262bd0047c7$export$420e68273165f4ec)({
    isDisabled,
    onFocusWithinChange: setFocusWithin
  });
  let onWheel = (0, import_react82.useCallback)((e) => {
    if (Math.abs(e.deltaY) <= Math.abs(e.deltaX)) return;
    if (e.deltaY > 0) increment();
    else if (e.deltaY < 0) decrement();
  }, [
    decrement,
    increment
  ]);
  let scrollingDisabled = isWheelDisabled || isDisabled || isReadOnly || !focusWithin;
  (0, $7d0a636d7a4dcefd$export$2123ff2b87c81ca)({
    onScroll: onWheel,
    isDisabled: scrollingDisabled
  }, ref);
  let onChange = (value) => {
    if (state.validate(value)) state.setInputValue(value);
  };
  let { inputProps, ...otherProps } = (0, $d841c8010a73d545$export$4f384c9210e583c3)({
    ...props,
    id: inputId,
    value: inputValue,
    defaultValue: void 0,
    validate: void 0,
    [(0, $e5be200c675c3b3a$export$a763b9476acd3eb)]: state,
    type: "text",
    autoComplete: "off",
    onChange
  }, state, ref);
  inputProps = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(inputProps, spinButtonProps, focusWithinProps, {
    role: "textbox",
    "aria-valuemax": null,
    "aria-valuemin": null,
    "aria-valuenow": null,
    "aria-valuetext": null,
    autoCorrect: "off",
    spellCheck: "false",
    onBlur: commit
  });
  if (validationBehavior === "native") inputProps["aria-required"] = void 0;
  return {
    inputProps,
    ...otherProps
  };
}

// node_modules/@react-aria/color/dist/useColorSwatch.mjs
var import_react83 = __toESM(require_react(), 1);
function $parcel$interopDefault8(a) {
  return a && a.__esModule ? a.default : a;
}
function $2993fcad7650b98d$export$9060ae606178d849(props) {
  let { color: value, colorName } = props;
  let nonNullValue = value || "#fff0";
  let color = (0, import_react83.useMemo)(() => typeof nonNullValue === "string" ? (0, $799cddbef784668f$export$6e865ea70d7724f)(nonNullValue) : nonNullValue, [
    nonNullValue
  ]);
  let { locale } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let DOMProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props, {
    labelable: true
  });
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault8($3493a52097159720$exports)), "@react-aria/color");
  let id = (0, $bdb11010cef70236$export$f680877a34711e37)(props.id);
  if (!colorName) colorName = color.getChannelValue("alpha") === 0 ? stringFormatter.format("transparent") : color.getColorName(locale);
  return {
    colorSwatchProps: {
      ...DOMProps,
      role: "img",
      "aria-roledescription": stringFormatter.format("colorSwatch"),
      "aria-label": [
        colorName,
        props["aria-label"] || ""
      ].filter(Boolean).join(", "),
      "aria-labelledby": props["aria-labelledby"] ? `${id} ${props["aria-labelledby"]}` : void 0,
      id,
      style: {
        backgroundColor: color.toString("css"),
        // @ts-ignore
        forcedColorAdjust: "none"
      }
    },
    color: color || null
  };
}

// node_modules/@react-aria/numberfield/dist/ar-AE.mjs
var $fb78e0f6ab6349ed$exports = {};
$fb78e0f6ab6349ed$exports = {
  "decrease": (args) => `خفض ${args.fieldLabel}`,
  "increase": (args) => `زيادة ${args.fieldLabel}`,
  "numberField": `حقل رقمي`
};

// node_modules/@react-aria/numberfield/dist/bg-BG.mjs
var $2776acdd9959a647$exports = {};
$2776acdd9959a647$exports = {
  "decrease": (args) => `Намаляване ${args.fieldLabel}`,
  "increase": (args) => `Усилване ${args.fieldLabel}`,
  "numberField": `Номер на полето`
};

// node_modules/@react-aria/numberfield/dist/cs-CZ.mjs
var $741954410a365ad3$exports = {};
$741954410a365ad3$exports = {
  "decrease": (args) => `Snížit ${args.fieldLabel}`,
  "increase": (args) => `Zvýšit ${args.fieldLabel}`,
  "numberField": `Číselné pole`
};

// node_modules/@react-aria/numberfield/dist/da-DK.mjs
var $8321ed0f8ab642f0$exports = {};
$8321ed0f8ab642f0$exports = {
  "decrease": (args) => `Reducer ${args.fieldLabel}`,
  "increase": (args) => `Øg ${args.fieldLabel}`,
  "numberField": `Talfelt`
};

// node_modules/@react-aria/numberfield/dist/de-DE.mjs
var $92978e0c4ecafa32$exports = {};
$92978e0c4ecafa32$exports = {
  "decrease": (args) => `${args.fieldLabel} verringern`,
  "increase": (args) => `${args.fieldLabel} erhöhen`,
  "numberField": `Nummernfeld`
};

// node_modules/@react-aria/numberfield/dist/el-GR.mjs
var $ac5ff71962864a84$exports = {};
$ac5ff71962864a84$exports = {
  "decrease": (args) => `Μείωση ${args.fieldLabel}`,
  "increase": (args) => `Αύξηση ${args.fieldLabel}`,
  "numberField": `Πεδίο αριθμού`
};

// node_modules/@react-aria/numberfield/dist/en-US.mjs
var $efe4685e2440d8be$exports = {};
$efe4685e2440d8be$exports = {
  "decrease": (args) => `Decrease ${args.fieldLabel}`,
  "increase": (args) => `Increase ${args.fieldLabel}`,
  "numberField": `Number field`
};

// node_modules/@react-aria/numberfield/dist/es-ES.mjs
var $e50a9a48739b90e1$exports = {};
$e50a9a48739b90e1$exports = {
  "decrease": (args) => `Reducir ${args.fieldLabel}`,
  "increase": (args) => `Aumentar ${args.fieldLabel}`,
  "numberField": `Campo de número`
};

// node_modules/@react-aria/numberfield/dist/et-EE.mjs
var $6e0d5294ecbb8ab6$exports = {};
$6e0d5294ecbb8ab6$exports = {
  "decrease": (args) => `Vähenda ${args.fieldLabel}`,
  "increase": (args) => `Suurenda ${args.fieldLabel}`,
  "numberField": `Numbri väli`
};

// node_modules/@react-aria/numberfield/dist/fi-FI.mjs
var $e7129d65f607f77f$exports = {};
$e7129d65f607f77f$exports = {
  "decrease": (args) => `Vähennä ${args.fieldLabel}`,
  "increase": (args) => `Lisää ${args.fieldLabel}`,
  "numberField": `Numerokenttä`
};

// node_modules/@react-aria/numberfield/dist/fr-FR.mjs
var $d72adf5b20573e34$exports = {};
$d72adf5b20573e34$exports = {
  "decrease": (args) => `Diminuer ${args.fieldLabel}`,
  "increase": (args) => `Augmenter ${args.fieldLabel}`,
  "numberField": `Champ de nombre`
};

// node_modules/@react-aria/numberfield/dist/he-IL.mjs
var $a25c707e88b844a7$exports = {};
$a25c707e88b844a7$exports = {
  "decrease": (args) => `הקטן ${args.fieldLabel}`,
  "increase": (args) => `הגדל ${args.fieldLabel}`,
  "numberField": `שדה מספר`
};

// node_modules/@react-aria/numberfield/dist/hr-HR.mjs
var $69b41140b9a4ca54$exports = {};
$69b41140b9a4ca54$exports = {
  "decrease": (args) => `Smanji ${args.fieldLabel}`,
  "increase": (args) => `Povećaj ${args.fieldLabel}`,
  "numberField": `Polje broja`
};

// node_modules/@react-aria/numberfield/dist/hu-HU.mjs
var $81dab28f37f59d1a$exports = {};
$81dab28f37f59d1a$exports = {
  "decrease": (args) => `${args.fieldLabel} csökkentése`,
  "increase": (args) => `${args.fieldLabel} növelése`,
  "numberField": `Számmező`
};

// node_modules/@react-aria/numberfield/dist/it-IT.mjs
var $866555b31f2d7711$exports = {};
$866555b31f2d7711$exports = {
  "decrease": (args) => `Riduci ${args.fieldLabel}`,
  "increase": (args) => `Aumenta ${args.fieldLabel}`,
  "numberField": `Campo numero`
};

// node_modules/@react-aria/numberfield/dist/ja-JP.mjs
var $dafcd55d52b9d371$exports = {};
$dafcd55d52b9d371$exports = {
  "decrease": (args) => `${args.fieldLabel}を縮小`,
  "increase": (args) => `${args.fieldLabel}を拡大`,
  "numberField": `数値フィールド`
};

// node_modules/@react-aria/numberfield/dist/ko-KR.mjs
var $f090c1f8c5da0145$exports = {};
$f090c1f8c5da0145$exports = {
  "decrease": (args) => `${args.fieldLabel} 감소`,
  "increase": (args) => `${args.fieldLabel} 증가`,
  "numberField": `번호 필드`
};

// node_modules/@react-aria/numberfield/dist/lt-LT.mjs
var $6f10f3a13360a75c$exports = {};
$6f10f3a13360a75c$exports = {
  "decrease": (args) => `Sumažinti ${args.fieldLabel}`,
  "increase": (args) => `Padidinti ${args.fieldLabel}`,
  "numberField": `Numerio laukas`
};

// node_modules/@react-aria/numberfield/dist/lv-LV.mjs
var $47432cefd4b7bd1b$exports = {};
$47432cefd4b7bd1b$exports = {
  "decrease": (args) => `Samazināšana ${args.fieldLabel}`,
  "increase": (args) => `Palielināšana ${args.fieldLabel}`,
  "numberField": `Skaitļu lauks`
};

// node_modules/@react-aria/numberfield/dist/nb-NO.mjs
var $dc578a950a2bf23d$exports = {};
$dc578a950a2bf23d$exports = {
  "decrease": (args) => `Reduser ${args.fieldLabel}`,
  "increase": (args) => `Øk ${args.fieldLabel}`,
  "numberField": `Tallfelt`
};

// node_modules/@react-aria/numberfield/dist/nl-NL.mjs
var $353f1bfca4dc395a$exports = {};
$353f1bfca4dc395a$exports = {
  "decrease": (args) => `${args.fieldLabel} verlagen`,
  "increase": (args) => `${args.fieldLabel} verhogen`,
  "numberField": `Getalveld`
};

// node_modules/@react-aria/numberfield/dist/pl-PL.mjs
var $241bc0bbd870e982$exports = {};
$241bc0bbd870e982$exports = {
  "decrease": (args) => `Zmniejsz ${args.fieldLabel}`,
  "increase": (args) => `Zwiększ ${args.fieldLabel}`,
  "numberField": `Pole numeru`
};

// node_modules/@react-aria/numberfield/dist/pt-BR.mjs
var $da3005c7bd72b0a8$exports = {};
$da3005c7bd72b0a8$exports = {
  "decrease": (args) => `Diminuir ${args.fieldLabel}`,
  "increase": (args) => `Aumentar ${args.fieldLabel}`,
  "numberField": `Campo de número`
};

// node_modules/@react-aria/numberfield/dist/pt-PT.mjs
var $cf48bfc540882310$exports = {};
$cf48bfc540882310$exports = {
  "decrease": (args) => `Diminuir ${args.fieldLabel}`,
  "increase": (args) => `Aumentar ${args.fieldLabel}`,
  "numberField": `Campo numérico`
};

// node_modules/@react-aria/numberfield/dist/ro-RO.mjs
var $b63a28c481ab9ee3$exports = {};
$b63a28c481ab9ee3$exports = {
  "decrease": (args) => `Scădere ${args.fieldLabel}`,
  "increase": (args) => `Creștere ${args.fieldLabel}`,
  "numberField": `Câmp numeric`
};

// node_modules/@react-aria/numberfield/dist/ru-RU.mjs
var $19f9df95c2464ab6$exports = {};
$19f9df95c2464ab6$exports = {
  "decrease": (args) => `Уменьшение ${args.fieldLabel}`,
  "increase": (args) => `Увеличение ${args.fieldLabel}`,
  "numberField": `Числовое поле`
};

// node_modules/@react-aria/numberfield/dist/sk-SK.mjs
var $b272932a685e8482$exports = {};
$b272932a685e8482$exports = {
  "decrease": (args) => `Znížiť ${args.fieldLabel}`,
  "increase": (args) => `Zvýšiť ${args.fieldLabel}`,
  "numberField": `Číselné pole`
};

// node_modules/@react-aria/numberfield/dist/sl-SI.mjs
var $cbaf8b5b61f9e544$exports = {};
$cbaf8b5b61f9e544$exports = {
  "decrease": (args) => `Upadati ${args.fieldLabel}`,
  "increase": (args) => `Povečajte ${args.fieldLabel}`,
  "numberField": `Številčno polje`
};

// node_modules/@react-aria/numberfield/dist/sr-SP.mjs
var $e0a3af6ac1449b2f$exports = {};
$e0a3af6ac1449b2f$exports = {
  "decrease": (args) => `Smanji ${args.fieldLabel}`,
  "increase": (args) => `Povećaj ${args.fieldLabel}`,
  "numberField": `Polje broja`
};

// node_modules/@react-aria/numberfield/dist/sv-SE.mjs
var $71e167d2458a6019$exports = {};
$71e167d2458a6019$exports = {
  "decrease": (args) => `Minska ${args.fieldLabel}`,
  "increase": (args) => `Öka ${args.fieldLabel}`,
  "numberField": `Nummerfält`
};

// node_modules/@react-aria/numberfield/dist/tr-TR.mjs
var $3719245abc082946$exports = {};
$3719245abc082946$exports = {
  "decrease": (args) => `${args.fieldLabel} azalt`,
  "increase": (args) => `${args.fieldLabel} arttır`,
  "numberField": `Sayı alanı`
};

// node_modules/@react-aria/numberfield/dist/uk-UA.mjs
var $2ccc589e2f51824d$exports = {};
$2ccc589e2f51824d$exports = {
  "decrease": (args) => `Зменшити ${args.fieldLabel}`,
  "increase": (args) => `Збільшити ${args.fieldLabel}`,
  "numberField": `Поле номера`
};

// node_modules/@react-aria/numberfield/dist/zh-CN.mjs
var $e1103cb9b4c13942$exports = {};
$e1103cb9b4c13942$exports = {
  "decrease": (args) => `降低 ${args.fieldLabel}`,
  "increase": (args) => `提高 ${args.fieldLabel}`,
  "numberField": `数字字段`
};

// node_modules/@react-aria/numberfield/dist/zh-TW.mjs
var $448607634f80dccb$exports = {};
$448607634f80dccb$exports = {
  "decrease": (args) => `縮小 ${args.fieldLabel}`,
  "increase": (args) => `放大 ${args.fieldLabel}`,
  "numberField": `數字欄位`
};

// node_modules/@react-aria/numberfield/dist/intlStrings.mjs
var $280a227d7cb94b92$exports = {};
$280a227d7cb94b92$exports = {
  "ar-AE": $fb78e0f6ab6349ed$exports,
  "bg-BG": $2776acdd9959a647$exports,
  "cs-CZ": $741954410a365ad3$exports,
  "da-DK": $8321ed0f8ab642f0$exports,
  "de-DE": $92978e0c4ecafa32$exports,
  "el-GR": $ac5ff71962864a84$exports,
  "en-US": $efe4685e2440d8be$exports,
  "es-ES": $e50a9a48739b90e1$exports,
  "et-EE": $6e0d5294ecbb8ab6$exports,
  "fi-FI": $e7129d65f607f77f$exports,
  "fr-FR": $d72adf5b20573e34$exports,
  "he-IL": $a25c707e88b844a7$exports,
  "hr-HR": $69b41140b9a4ca54$exports,
  "hu-HU": $81dab28f37f59d1a$exports,
  "it-IT": $866555b31f2d7711$exports,
  "ja-JP": $dafcd55d52b9d371$exports,
  "ko-KR": $f090c1f8c5da0145$exports,
  "lt-LT": $6f10f3a13360a75c$exports,
  "lv-LV": $47432cefd4b7bd1b$exports,
  "nb-NO": $dc578a950a2bf23d$exports,
  "nl-NL": $353f1bfca4dc395a$exports,
  "pl-PL": $241bc0bbd870e982$exports,
  "pt-BR": $da3005c7bd72b0a8$exports,
  "pt-PT": $cf48bfc540882310$exports,
  "ro-RO": $b63a28c481ab9ee3$exports,
  "ru-RU": $19f9df95c2464ab6$exports,
  "sk-SK": $b272932a685e8482$exports,
  "sl-SI": $cbaf8b5b61f9e544$exports,
  "sr-SP": $e0a3af6ac1449b2f$exports,
  "sv-SE": $71e167d2458a6019$exports,
  "tr-TR": $3719245abc082946$exports,
  "uk-UA": $2ccc589e2f51824d$exports,
  "zh-CN": $e1103cb9b4c13942$exports,
  "zh-TW": $448607634f80dccb$exports
};

// node_modules/@react-aria/numberfield/dist/useNumberField.mjs
var import_react84 = __toESM(require_react(), 1);
function $parcel$interopDefault9(a) {
  return a && a.__esModule ? a.default : a;
}
function $81397a9303501bda$export$23f548e970bdf099(props, state, inputRef) {
  let { id, decrementAriaLabel, incrementAriaLabel, isDisabled, isReadOnly, isRequired, minValue, maxValue, autoFocus, label, formatOptions, onBlur = () => {
  }, onFocus, onFocusChange, onKeyDown, onKeyUp, description, errorMessage, isWheelDisabled, ...otherProps } = props;
  let { increment, incrementToMax, decrement, decrementToMin, numberValue, inputValue, commit, commitValidation } = state;
  const stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault9($280a227d7cb94b92$exports)), "@react-aria/numberfield");
  let inputId = (0, $bdb11010cef70236$export$f680877a34711e37)(id);
  let { focusProps } = (0, $a1ea59d68270f0dd$export$f8168d8dd8fd66e6)({
    onBlur() {
      commit();
    }
  });
  let numberFormatter = (0, $a916eb452884faea$export$b7a616150fdb9f44)(formatOptions);
  let intlOptions = (0, import_react84.useMemo)(() => numberFormatter.resolvedOptions(), [
    numberFormatter
  ]);
  let textValueFormatter = (0, $a916eb452884faea$export$b7a616150fdb9f44)({
    ...formatOptions,
    currencySign: void 0
  });
  let textValue = (0, import_react84.useMemo)(() => isNaN(numberValue) ? "" : textValueFormatter.format(numberValue), [
    textValueFormatter,
    numberValue
  ]);
  let { spinButtonProps, incrementButtonProps: incButtonProps, decrementButtonProps: decButtonProps } = (0, $d2e8511e6f209edf$export$e908e06f4b8e3402)({
    isDisabled,
    isReadOnly,
    isRequired,
    maxValue,
    minValue,
    onIncrement: increment,
    onIncrementToMax: incrementToMax,
    onDecrement: decrement,
    onDecrementToMin: decrementToMin,
    value: numberValue,
    textValue
  });
  let [focusWithin, setFocusWithin] = (0, import_react84.useState)(false);
  let { focusWithinProps } = (0, $9ab94262bd0047c7$export$420e68273165f4ec)({
    isDisabled,
    onFocusWithinChange: setFocusWithin
  });
  let onWheel = (0, import_react84.useCallback)((e) => {
    if (Math.abs(e.deltaY) <= Math.abs(e.deltaX)) return;
    if (e.deltaY > 0) increment();
    else if (e.deltaY < 0) decrement();
  }, [
    decrement,
    increment
  ]);
  let scrollingDisabled = isWheelDisabled || isDisabled || isReadOnly || !focusWithin;
  (0, $7d0a636d7a4dcefd$export$2123ff2b87c81ca)({
    onScroll: onWheel,
    isDisabled: scrollingDisabled
  }, inputRef);
  var _intlOptions_maximumFractionDigits;
  let hasDecimals = ((_intlOptions_maximumFractionDigits = intlOptions.maximumFractionDigits) !== null && _intlOptions_maximumFractionDigits !== void 0 ? _intlOptions_maximumFractionDigits : 0) > 0;
  let hasNegative = state.minValue === void 0 || isNaN(state.minValue) || state.minValue < 0;
  let inputMode = "numeric";
  if ((0, $c87311424ea30a05$export$186c6964ca17d99)()) {
    if (hasNegative) inputMode = "text";
    else if (hasDecimals) inputMode = "decimal";
  } else if ((0, $c87311424ea30a05$export$a11b0059900ceec8)()) {
    if (hasNegative) inputMode = "numeric";
    else if (hasDecimals) inputMode = "decimal";
  }
  let onChange = (value) => {
    if (state.validate(value)) state.setInputValue(value);
  };
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  let onKeyDownEnter = (0, import_react84.useCallback)((e) => {
    if (e.key === "Enter") {
      commit();
      commitValidation();
    } else e.continuePropagation();
  }, [
    commit,
    commitValidation
  ]);
  let { isInvalid, validationErrors, validationDetails } = state.displayValidation;
  let { labelProps, inputProps: textFieldProps, descriptionProps, errorMessageProps } = (0, $d841c8010a73d545$export$4f384c9210e583c3)({
    ...otherProps,
    ...domProps,
    name: void 0,
    label,
    autoFocus,
    isDisabled,
    isReadOnly,
    isRequired,
    validate: void 0,
    [(0, $e5be200c675c3b3a$export$a763b9476acd3eb)]: state,
    value: inputValue,
    defaultValue: void 0,
    autoComplete: "off",
    "aria-label": props["aria-label"] || void 0,
    "aria-labelledby": props["aria-labelledby"] || void 0,
    id: inputId,
    type: "text",
    inputMode,
    onChange,
    onBlur,
    onFocus,
    onFocusChange,
    onKeyDown: (0, import_react84.useMemo)(() => (0, $ff5963eb1fccf552$export$e08e3b67e392101e)(onKeyDownEnter, onKeyDown), [
      onKeyDownEnter,
      onKeyDown
    ]),
    onKeyUp,
    description,
    errorMessage
  }, state, inputRef);
  (0, $99facab73266f662$export$5add1d006293d136)(inputRef, state.numberValue, state.setNumberValue);
  let inputProps = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(spinButtonProps, focusProps, textFieldProps, {
    // override the spinbutton role, we can't focus a spin button with VO
    role: null,
    // ignore aria-roledescription on iOS so that required state will announce when it is present
    "aria-roledescription": !(0, $c87311424ea30a05$export$fedb369cb70207f1)() ? stringFormatter.format("numberField") : null,
    "aria-valuemax": null,
    "aria-valuemin": null,
    "aria-valuenow": null,
    "aria-valuetext": null,
    autoCorrect: "off",
    spellCheck: "false"
  });
  if (props.validationBehavior === "native") inputProps["aria-required"] = void 0;
  let onButtonPressStart = (e) => {
    var _inputRef_current;
    if (document.activeElement === inputRef.current) return;
    if (e.pointerType === "mouse") (_inputRef_current = inputRef.current) === null || _inputRef_current === void 0 ? void 0 : _inputRef_current.focus();
    else e.target.focus();
  };
  let fieldLabel = props["aria-label"] || (typeof props.label === "string" ? props.label : "");
  let ariaLabelledby;
  if (!fieldLabel) ariaLabelledby = props.label != null ? labelProps.id : props["aria-labelledby"];
  let incrementId = (0, $bdb11010cef70236$export$f680877a34711e37)();
  let decrementId = (0, $bdb11010cef70236$export$f680877a34711e37)();
  let incrementButtonProps = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(incButtonProps, {
    "aria-label": incrementAriaLabel || stringFormatter.format("increase", {
      fieldLabel
    }).trim(),
    id: ariaLabelledby && !incrementAriaLabel ? incrementId : null,
    "aria-labelledby": ariaLabelledby && !incrementAriaLabel ? `${incrementId} ${ariaLabelledby}` : null,
    "aria-controls": inputId,
    excludeFromTabOrder: true,
    preventFocusOnPress: true,
    allowFocusWhenDisabled: true,
    isDisabled: !state.canIncrement,
    onPressStart: onButtonPressStart
  });
  let decrementButtonProps = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(decButtonProps, {
    "aria-label": decrementAriaLabel || stringFormatter.format("decrease", {
      fieldLabel
    }).trim(),
    id: ariaLabelledby && !decrementAriaLabel ? decrementId : null,
    "aria-labelledby": ariaLabelledby && !decrementAriaLabel ? `${decrementId} ${ariaLabelledby}` : null,
    "aria-controls": inputId,
    excludeFromTabOrder: true,
    preventFocusOnPress: true,
    allowFocusWhenDisabled: true,
    isDisabled: !state.canDecrement,
    onPressStart: onButtonPressStart
  });
  return {
    groupProps: {
      ...focusWithinProps,
      role: "group",
      "aria-disabled": isDisabled,
      "aria-invalid": isInvalid ? "true" : void 0
    },
    labelProps,
    inputProps,
    incrementButtonProps,
    decrementButtonProps,
    errorMessageProps,
    descriptionProps,
    isInvalid,
    validationErrors,
    validationDetails
  };
}

// node_modules/@react-aria/color/dist/useColorChannelField.mjs
function $5e632d1ff0188f00$export$e55dd820142d3131(props, state, inputRef) {
  let { locale } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  return (0, $81397a9303501bda$export$23f548e970bdf099)({
    ...props,
    value: void 0,
    defaultValue: void 0,
    onChange: void 0,
    validate: void 0,
    // Provide a default aria-label if no other label is provided.
    "aria-label": props["aria-label"] || (props.label || props["aria-labelledby"] ? void 0 : state.colorValue.getChannelName(props.channel, locale))
  }, state, inputRef);
}

// node_modules/@react-aria/combobox/dist/ar-AE.mjs
var $02cb4c75c506befe$exports = {};
$02cb4c75c506befe$exports = {
  "buttonLabel": `عرض المقترحات`,
  "countAnnouncement": (args, formatter) => `${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} خيار`,
    other: () => `${formatter.number(args.optionCount)} خيارات`
  })} متاحة.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `المجموعة المدخلة ${args.groupTitle}, مع ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} خيار`,
      other: () => `${formatter.number(args.groupCount)} خيارات`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, محدد`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `مقترحات`,
  "selectedAnnouncement": (args) => `${args.optionText}، محدد`
};

// node_modules/@react-aria/combobox/dist/bg-BG.mjs
var $568b8163f1e56faf$exports = {};
$568b8163f1e56faf$exports = {
  "buttonLabel": `Покажи предложения`,
  "countAnnouncement": (args, formatter) => `${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} опция`,
    other: () => `${formatter.number(args.optionCount)} опции`
  })} на разположение.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Въведена група ${args.groupTitle}, с ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} опция`,
      other: () => `${formatter.number(args.groupCount)} опции`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, избрани`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `Предложения`,
  "selectedAnnouncement": (args) => `${args.optionText}, избрани`
};

// node_modules/@react-aria/combobox/dist/cs-CZ.mjs
var $87581c0202d106b8$exports = {};
$87581c0202d106b8$exports = {
  "buttonLabel": `Zobrazit doporučení`,
  "countAnnouncement": (args, formatter) => `K dispozici ${formatter.plural(args.optionCount, {
    one: () => `je ${formatter.number(args.optionCount)} možnost`,
    other: () => `jsou/je ${formatter.number(args.optionCount)} možnosti/-í`
  })}.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Zadaná skupina „${args.groupTitle}“ ${formatter.plural(args.groupCount, {
      one: () => `s ${formatter.number(args.groupCount)} možností`,
      other: () => `se ${formatter.number(args.groupCount)} možnostmi`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: ` (vybráno)`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `Návrhy`,
  "selectedAnnouncement": (args) => `${args.optionText}, vybráno`
};

// node_modules/@react-aria/combobox/dist/da-DK.mjs
var $a10a0369f5433ed1$exports = {};
$a10a0369f5433ed1$exports = {
  "buttonLabel": `Vis forslag`,
  "countAnnouncement": (args, formatter) => `${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} mulighed tilgængelig`,
    other: () => `${formatter.number(args.optionCount)} muligheder tilgængelige`
  })}.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Angivet gruppe ${args.groupTitle}, med ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} mulighed`,
      other: () => `${formatter.number(args.groupCount)} muligheder`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, valgt`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `Forslag`,
  "selectedAnnouncement": (args) => `${args.optionText}, valgt`
};

// node_modules/@react-aria/combobox/dist/de-DE.mjs
var $bfd288727d5cb166$exports = {};
$bfd288727d5cb166$exports = {
  "buttonLabel": `Empfehlungen anzeigen`,
  "countAnnouncement": (args, formatter) => `${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} Option`,
    other: () => `${formatter.number(args.optionCount)} Optionen`
  })} verfügbar.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Eingetretene Gruppe ${args.groupTitle}, mit ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} Option`,
      other: () => `${formatter.number(args.groupCount)} Optionen`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, ausgewählt`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `Empfehlungen`,
  "selectedAnnouncement": (args) => `${args.optionText}, ausgewählt`
};

// node_modules/@react-aria/combobox/dist/el-GR.mjs
var $ca177778f9a74e3c$exports = {};
$ca177778f9a74e3c$exports = {
  "buttonLabel": `Προβολή προτάσεων`,
  "countAnnouncement": (args, formatter) => `${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} επιλογή`,
    other: () => `${formatter.number(args.optionCount)} επιλογές `
  })} διαθέσιμες.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Εισαγμένη ομάδα ${args.groupTitle}, με ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} επιλογή`,
      other: () => `${formatter.number(args.groupCount)} επιλογές`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, επιλεγμένο`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `Προτάσεις`,
  "selectedAnnouncement": (args) => `${args.optionText}, επιλέχθηκε`
};

// node_modules/@react-aria/combobox/dist/en-US.mjs
var $9b5aa79ef84beb6c$exports = {};
$9b5aa79ef84beb6c$exports = {
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Entered group ${args.groupTitle}, with ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} option`,
      other: () => `${formatter.number(args.groupCount)} options`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, selected`,
    other: ``
  }, args.isSelected)}`,
  "countAnnouncement": (args, formatter) => `${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} option`,
    other: () => `${formatter.number(args.optionCount)} options`
  })} available.`,
  "selectedAnnouncement": (args) => `${args.optionText}, selected`,
  "buttonLabel": `Show suggestions`,
  "listboxLabel": `Suggestions`
};

// node_modules/@react-aria/combobox/dist/es-ES.mjs
var $57968e8209de2557$exports = {};
$57968e8209de2557$exports = {
  "buttonLabel": `Mostrar sugerencias`,
  "countAnnouncement": (args, formatter) => `${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} opción`,
    other: () => `${formatter.number(args.optionCount)} opciones`
  })} disponible(s).`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Se ha unido al grupo ${args.groupTitle}, con ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} opción`,
      other: () => `${formatter.number(args.groupCount)} opciones`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, seleccionado`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `Sugerencias`,
  "selectedAnnouncement": (args) => `${args.optionText}, seleccionado`
};

// node_modules/@react-aria/combobox/dist/et-EE.mjs
var $60690790bf4c1c6a$exports = {};
$60690790bf4c1c6a$exports = {
  "buttonLabel": `Kuva soovitused`,
  "countAnnouncement": (args, formatter) => `${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} valik`,
    other: () => `${formatter.number(args.optionCount)} valikud`
  })} saadaval.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Sisestatud rühm ${args.groupTitle}, valikuga ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} valik`,
      other: () => `${formatter.number(args.groupCount)} valikud`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, valitud`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `Soovitused`,
  "selectedAnnouncement": (args) => `${args.optionText}, valitud`
};

// node_modules/@react-aria/combobox/dist/fi-FI.mjs
var $1101246e8c7d9357$exports = {};
$1101246e8c7d9357$exports = {
  "buttonLabel": `Näytä ehdotukset`,
  "countAnnouncement": (args, formatter) => `${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} vaihtoehto`,
    other: () => `${formatter.number(args.optionCount)} vaihtoehdot`
  })} saatavilla.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Mentiin ryhmään ${args.groupTitle}, ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} vaihtoehdon`,
      other: () => `${formatter.number(args.groupCount)} vaihtoehdon`
    })} kanssa.`,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, valittu`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `Ehdotukset`,
  "selectedAnnouncement": (args) => `${args.optionText}, valittu`
};

// node_modules/@react-aria/combobox/dist/fr-FR.mjs
var $6404b5cb5b241730$exports = {};
$6404b5cb5b241730$exports = {
  "buttonLabel": `Afficher les suggestions`,
  "countAnnouncement": (args, formatter) => `${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} option`,
    other: () => `${formatter.number(args.optionCount)} options`
  })} disponible(s).`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Groupe ${args.groupTitle} rejoint, avec ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} option`,
      other: () => `${formatter.number(args.groupCount)} options`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, sélectionné(s)`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `Suggestions`,
  "selectedAnnouncement": (args) => `${args.optionText}, sélectionné`
};

// node_modules/@react-aria/combobox/dist/he-IL.mjs
var $dfeafa702e92e31f$exports = {};
$dfeafa702e92e31f$exports = {
  "buttonLabel": `הצג הצעות`,
  "countAnnouncement": (args, formatter) => `${formatter.plural(args.optionCount, {
    one: () => `אפשרות ${formatter.number(args.optionCount)}`,
    other: () => `${formatter.number(args.optionCount)} אפשרויות`
  })} במצב זמין.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `נכנס לקבוצה ${args.groupTitle}, עם ${formatter.plural(args.groupCount, {
      one: () => `אפשרות ${formatter.number(args.groupCount)}`,
      other: () => `${formatter.number(args.groupCount)} אפשרויות`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, נבחר`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `הצעות`,
  "selectedAnnouncement": (args) => `${args.optionText}, נבחר`
};

// node_modules/@react-aria/combobox/dist/hr-HR.mjs
var $2d125e0b34676352$exports = {};
$2d125e0b34676352$exports = {
  "buttonLabel": `Prikaži prijedloge`,
  "countAnnouncement": (args, formatter) => `Dostupno još: ${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} opcija`,
    other: () => `${formatter.number(args.optionCount)} opcije/a`
  })}.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Unesena skupina ${args.groupTitle}, s ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} opcijom`,
      other: () => `${formatter.number(args.groupCount)} opcije/a`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, odabranih`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `Prijedlozi`,
  "selectedAnnouncement": (args) => `${args.optionText}, odabrano`
};

// node_modules/@react-aria/combobox/dist/hu-HU.mjs
var $ea029611d7634059$exports = {};
$ea029611d7634059$exports = {
  "buttonLabel": `Javaslatok megjelenítése`,
  "countAnnouncement": (args, formatter) => `${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} lehetőség`,
    other: () => `${formatter.number(args.optionCount)} lehetőség`
  })} áll rendelkezésre.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Belépett a(z) ${args.groupTitle} csoportba, amely ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} lehetőséget`,
      other: () => `${formatter.number(args.groupCount)} lehetőséget`
    })} tartalmaz. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, kijelölve`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `Javaslatok`,
  "selectedAnnouncement": (args) => `${args.optionText}, kijelölve`
};

// node_modules/@react-aria/combobox/dist/it-IT.mjs
var $77f075bb86ad7091$exports = {};
$77f075bb86ad7091$exports = {
  "buttonLabel": `Mostra suggerimenti`,
  "countAnnouncement": (args, formatter) => `${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} opzione disponibile`,
    other: () => `${formatter.number(args.optionCount)} opzioni disponibili`
  })}.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Ingresso nel gruppo ${args.groupTitle}, con ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} opzione`,
      other: () => `${formatter.number(args.groupCount)} opzioni`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, selezionato`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `Suggerimenti`,
  "selectedAnnouncement": (args) => `${args.optionText}, selezionato`
};

// node_modules/@react-aria/combobox/dist/ja-JP.mjs
var $6e87462e84907983$exports = {};
$6e87462e84907983$exports = {
  "buttonLabel": `候補を表示`,
  "countAnnouncement": (args, formatter) => `${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} 個のオプション`,
    other: () => `${formatter.number(args.optionCount)} 個のオプション`
  })}を利用できます。`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `入力されたグループ ${args.groupTitle}、${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} 個のオプション`,
      other: () => `${formatter.number(args.groupCount)} 個のオプション`
    })}を含む。`,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `、選択済み`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `候補`,
  "selectedAnnouncement": (args) => `${args.optionText}、選択済み`
};

// node_modules/@react-aria/combobox/dist/ko-KR.mjs
var $9246f2c6edc6b232$exports = {};
$9246f2c6edc6b232$exports = {
  "buttonLabel": `제안 사항 표시`,
  "countAnnouncement": (args, formatter) => `${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)}개 옵션`,
    other: () => `${formatter.number(args.optionCount)}개 옵션`
  })}을 사용할 수 있습니다.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `입력한 그룹 ${args.groupTitle}, ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)}개 옵션`,
      other: () => `${formatter.number(args.groupCount)}개 옵션`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, 선택됨`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `제안`,
  "selectedAnnouncement": (args) => `${args.optionText}, 선택됨`
};

// node_modules/@react-aria/combobox/dist/lt-LT.mjs
var $e587accc6c0a434c$exports = {};
$e587accc6c0a434c$exports = {
  "buttonLabel": `Rodyti pasiūlymus`,
  "countAnnouncement": (args, formatter) => `Yra ${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} parinktis`,
    other: () => `${formatter.number(args.optionCount)} parinktys (-ių)`
  })}.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Įvesta grupė ${args.groupTitle}, su ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} parinktimi`,
      other: () => `${formatter.number(args.groupCount)} parinktimis (-ių)`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, pasirinkta`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `Pasiūlymai`,
  "selectedAnnouncement": (args) => `${args.optionText}, pasirinkta`
};

// node_modules/@react-aria/combobox/dist/lv-LV.mjs
var $03a1900e7400b5ab$exports = {};
$03a1900e7400b5ab$exports = {
  "buttonLabel": `Rādīt ieteikumus`,
  "countAnnouncement": (args, formatter) => `Pieejamo opciju skaits: ${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} opcija`,
    other: () => `${formatter.number(args.optionCount)} opcijas`
  })}.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Ievadīta grupa ${args.groupTitle}, ar ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} opciju`,
      other: () => `${formatter.number(args.groupCount)} opcijām`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, atlasīta`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `Ieteikumi`,
  "selectedAnnouncement": (args) => `${args.optionText}, atlasīta`
};

// node_modules/@react-aria/combobox/dist/nb-NO.mjs
var $1387676441be6cf6$exports = {};
$1387676441be6cf6$exports = {
  "buttonLabel": `Vis forslag`,
  "countAnnouncement": (args, formatter) => `${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} alternativ`,
    other: () => `${formatter.number(args.optionCount)} alternativer`
  })} finnes.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Angitt gruppe ${args.groupTitle}, med ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} alternativ`,
      other: () => `${formatter.number(args.groupCount)} alternativer`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, valgt`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `Forslag`,
  "selectedAnnouncement": (args) => `${args.optionText}, valgt`
};

// node_modules/@react-aria/combobox/dist/nl-NL.mjs
var $17e82ebf0f8ab91f$exports = {};
$17e82ebf0f8ab91f$exports = {
  "buttonLabel": `Suggesties weergeven`,
  "countAnnouncement": (args, formatter) => `${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} optie`,
    other: () => `${formatter.number(args.optionCount)} opties`
  })} beschikbaar.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Groep ${args.groupTitle} ingevoerd met ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} optie`,
      other: () => `${formatter.number(args.groupCount)} opties`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, geselecteerd`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `Suggesties`,
  "selectedAnnouncement": (args) => `${args.optionText}, geselecteerd`
};

// node_modules/@react-aria/combobox/dist/pl-PL.mjs
var $2f5377d3471630e5$exports = {};
$2f5377d3471630e5$exports = {
  "buttonLabel": `Wyświetlaj sugestie`,
  "countAnnouncement": (args, formatter) => `dostępna/dostępne(-nych) ${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} opcja`,
    other: () => `${formatter.number(args.optionCount)} opcje(-i)`
  })}.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Dołączono do grupy ${args.groupTitle}, z ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} opcją`,
      other: () => `${formatter.number(args.groupCount)} opcjami`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, wybrano`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `Sugestie`,
  "selectedAnnouncement": (args) => `${args.optionText}, wybrano`
};

// node_modules/@react-aria/combobox/dist/pt-BR.mjs
var $dee9868b6fa95ffe$exports = {};
$dee9868b6fa95ffe$exports = {
  "buttonLabel": `Mostrar sugestões`,
  "countAnnouncement": (args, formatter) => `${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} opção`,
    other: () => `${formatter.number(args.optionCount)} opções`
  })} disponível.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Grupo inserido ${args.groupTitle}, com ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} opção`,
      other: () => `${formatter.number(args.groupCount)} opções`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, selecionado`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `Sugestões`,
  "selectedAnnouncement": (args) => `${args.optionText}, selecionado`
};

// node_modules/@react-aria/combobox/dist/pt-PT.mjs
var $f8b2e63637cbb5a6$exports = {};
$f8b2e63637cbb5a6$exports = {
  "buttonLabel": `Apresentar sugestões`,
  "countAnnouncement": (args, formatter) => `${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} opção`,
    other: () => `${formatter.number(args.optionCount)} opções`
  })} disponível.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Grupo introduzido ${args.groupTitle}, com ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} opção`,
      other: () => `${formatter.number(args.groupCount)} opções`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, selecionado`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `Sugestões`,
  "selectedAnnouncement": (args) => `${args.optionText}, selecionado`
};

// node_modules/@react-aria/combobox/dist/ro-RO.mjs
var $46a885db3b44ea95$exports = {};
$46a885db3b44ea95$exports = {
  "buttonLabel": `Afișare sugestii`,
  "countAnnouncement": (args, formatter) => `${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} opțiune`,
    other: () => `${formatter.number(args.optionCount)} opțiuni`
  })} disponibile.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Grup ${args.groupTitle} introdus, cu ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} opțiune`,
      other: () => `${formatter.number(args.groupCount)} opțiuni`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, selectat`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `Sugestii`,
  "selectedAnnouncement": (args) => `${args.optionText}, selectat`
};

// node_modules/@react-aria/combobox/dist/ru-RU.mjs
var $50d8a8f0afa9dee5$exports = {};
$50d8a8f0afa9dee5$exports = {
  "buttonLabel": `Показать предложения`,
  "countAnnouncement": (args, formatter) => `${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} параметр`,
    other: () => `${formatter.number(args.optionCount)} параметров`
  })} доступно.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Введенная группа ${args.groupTitle}, с ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} параметром`,
      other: () => `${formatter.number(args.groupCount)} параметрами`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, выбранными`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `Предложения`,
  "selectedAnnouncement": (args) => `${args.optionText}, выбрано`
};

// node_modules/@react-aria/combobox/dist/sk-SK.mjs
var $2867ee6173245507$exports = {};
$2867ee6173245507$exports = {
  "buttonLabel": `Zobraziť návrhy`,
  "countAnnouncement": (args, formatter) => `${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} možnosť`,
    other: () => `${formatter.number(args.optionCount)} možnosti/-í`
  })} k dispozícii.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Zadaná skupina ${args.groupTitle}, s ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} možnosťou`,
      other: () => `${formatter.number(args.groupCount)} možnosťami`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, vybraté`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `Návrhy`,
  "selectedAnnouncement": (args) => `${args.optionText}, vybraté`
};

// node_modules/@react-aria/combobox/dist/sl-SI.mjs
var $0631b65beeb09b50$exports = {};
$0631b65beeb09b50$exports = {
  "buttonLabel": `Prikaži predloge`,
  "countAnnouncement": (args, formatter) => `Na voljo je ${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} opcija`,
    other: () => `${formatter.number(args.optionCount)} opcije`
  })}.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Vnesena skupina ${args.groupTitle}, z ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} opcija`,
      other: () => `${formatter.number(args.groupCount)} opcije`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, izbrano`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `Predlogi`,
  "selectedAnnouncement": (args) => `${args.optionText}, izbrano`
};

// node_modules/@react-aria/combobox/dist/sr-SP.mjs
var $65fc749265dcd686$exports = {};
$65fc749265dcd686$exports = {
  "buttonLabel": `Prikaži predloge`,
  "countAnnouncement": (args, formatter) => `Dostupno još: ${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} opcija`,
    other: () => `${formatter.number(args.optionCount)} opcije/a`
  })}.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Unesena grupa ${args.groupTitle}, s ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} opcijom`,
      other: () => `${formatter.number(args.groupCount)} optione/a`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, izabranih`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `Predlozi`,
  "selectedAnnouncement": (args) => `${args.optionText}, izabrano`
};

// node_modules/@react-aria/combobox/dist/sv-SE.mjs
var $69ba655c7853c08e$exports = {};
$69ba655c7853c08e$exports = {
  "buttonLabel": `Visa förslag`,
  "countAnnouncement": (args, formatter) => `${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} alternativ`,
    other: () => `${formatter.number(args.optionCount)} alternativ`
  })} tillgängliga.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Ingick i gruppen ${args.groupTitle} med ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} alternativ`,
      other: () => `${formatter.number(args.groupCount)} alternativ`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, valda`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `Förslag`,
  "selectedAnnouncement": (args) => `${args.optionText}, valda`
};

// node_modules/@react-aria/combobox/dist/tr-TR.mjs
var $a79794784d61577c$exports = {};
$a79794784d61577c$exports = {
  "buttonLabel": `Önerileri göster`,
  "countAnnouncement": (args, formatter) => `${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} seçenek`,
    other: () => `${formatter.number(args.optionCount)} seçenekler`
  })} kullanılabilir.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Girilen grup ${args.groupTitle}, ile ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} seçenek`,
      other: () => `${formatter.number(args.groupCount)} seçenekler`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, seçildi`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `Öneriler`,
  "selectedAnnouncement": (args) => `${args.optionText}, seçildi`
};

// node_modules/@react-aria/combobox/dist/uk-UA.mjs
var $c2845791417ebaf4$exports = {};
$c2845791417ebaf4$exports = {
  "buttonLabel": `Показати пропозиції`,
  "countAnnouncement": (args, formatter) => `${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} параметр`,
    other: () => `${formatter.number(args.optionCount)} параметри(-ів)`
  })} доступно.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Введена група ${args.groupTitle}, з ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} параметр`,
      other: () => `${formatter.number(args.groupCount)} параметри(-ів)`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, вибрано`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `Пропозиції`,
  "selectedAnnouncement": (args) => `${args.optionText}, вибрано`
};

// node_modules/@react-aria/combobox/dist/zh-CN.mjs
var $29b642d0025cc7a4$exports = {};
$29b642d0025cc7a4$exports = {
  "buttonLabel": `显示建议`,
  "countAnnouncement": (args, formatter) => `有 ${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} 个选项`,
    other: () => `${formatter.number(args.optionCount)} 个选项`
  })}可用。`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `进入了 ${args.groupTitle} 组，其中有 ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} 个选项`,
      other: () => `${formatter.number(args.groupCount)} 个选项`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, 已选择`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `建议`,
  "selectedAnnouncement": (args) => `${args.optionText}, 已选择`
};

// node_modules/@react-aria/combobox/dist/zh-TW.mjs
var $cd36dd33f9d46936$exports = {};
$cd36dd33f9d46936$exports = {
  "buttonLabel": `顯示建議`,
  "countAnnouncement": (args, formatter) => `${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} 選項`,
    other: () => `${formatter.number(args.optionCount)} 選項`
  })} 可用。`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `輸入的群組 ${args.groupTitle}, 有 ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} 選項`,
      other: () => `${formatter.number(args.groupCount)} 選項`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, 已選取`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `建議`,
  "selectedAnnouncement": (args) => `${args.optionText}, 已選取`
};

// node_modules/@react-aria/combobox/dist/intlStrings.mjs
var $de5926a92e8ebc5b$exports = {};
$de5926a92e8ebc5b$exports = {
  "ar-AE": $02cb4c75c506befe$exports,
  "bg-BG": $568b8163f1e56faf$exports,
  "cs-CZ": $87581c0202d106b8$exports,
  "da-DK": $a10a0369f5433ed1$exports,
  "de-DE": $bfd288727d5cb166$exports,
  "el-GR": $ca177778f9a74e3c$exports,
  "en-US": $9b5aa79ef84beb6c$exports,
  "es-ES": $57968e8209de2557$exports,
  "et-EE": $60690790bf4c1c6a$exports,
  "fi-FI": $1101246e8c7d9357$exports,
  "fr-FR": $6404b5cb5b241730$exports,
  "he-IL": $dfeafa702e92e31f$exports,
  "hr-HR": $2d125e0b34676352$exports,
  "hu-HU": $ea029611d7634059$exports,
  "it-IT": $77f075bb86ad7091$exports,
  "ja-JP": $6e87462e84907983$exports,
  "ko-KR": $9246f2c6edc6b232$exports,
  "lt-LT": $e587accc6c0a434c$exports,
  "lv-LV": $03a1900e7400b5ab$exports,
  "nb-NO": $1387676441be6cf6$exports,
  "nl-NL": $17e82ebf0f8ab91f$exports,
  "pl-PL": $2f5377d3471630e5$exports,
  "pt-BR": $dee9868b6fa95ffe$exports,
  "pt-PT": $f8b2e63637cbb5a6$exports,
  "ro-RO": $46a885db3b44ea95$exports,
  "ru-RU": $50d8a8f0afa9dee5$exports,
  "sk-SK": $2867ee6173245507$exports,
  "sl-SI": $0631b65beeb09b50$exports,
  "sr-SP": $65fc749265dcd686$exports,
  "sv-SE": $69ba655c7853c08e$exports,
  "tr-TR": $a79794784d61577c$exports,
  "uk-UA": $c2845791417ebaf4$exports,
  "zh-CN": $29b642d0025cc7a4$exports,
  "zh-TW": $cd36dd33f9d46936$exports
};

// node_modules/@react-aria/overlays/dist/calculatePosition.mjs
var $edcf132a9284368a$var$AXIS = {
  top: "top",
  bottom: "top",
  left: "left",
  right: "left"
};
var $edcf132a9284368a$var$FLIPPED_DIRECTION = {
  top: "bottom",
  bottom: "top",
  left: "right",
  right: "left"
};
var $edcf132a9284368a$var$CROSS_AXIS = {
  top: "left",
  left: "top"
};
var $edcf132a9284368a$var$AXIS_SIZE = {
  top: "height",
  left: "width"
};
var $edcf132a9284368a$var$TOTAL_SIZE = {
  width: "totalWidth",
  height: "totalHeight"
};
var $edcf132a9284368a$var$PARSED_PLACEMENT_CACHE = {};
var $edcf132a9284368a$var$visualViewport = typeof document !== "undefined" ? window.visualViewport : null;
function $edcf132a9284368a$var$getContainerDimensions(containerNode) {
  let width = 0, height = 0, totalWidth = 0, totalHeight = 0, top = 0, left = 0;
  let scroll = {};
  var _visualViewport_scale;
  let isPinchZoomedIn = ((_visualViewport_scale = $edcf132a9284368a$var$visualViewport === null || $edcf132a9284368a$var$visualViewport === void 0 ? void 0 : $edcf132a9284368a$var$visualViewport.scale) !== null && _visualViewport_scale !== void 0 ? _visualViewport_scale : 1) > 1;
  if (containerNode.tagName === "BODY") {
    let documentElement = document.documentElement;
    totalWidth = documentElement.clientWidth;
    totalHeight = documentElement.clientHeight;
    var _visualViewport_width;
    width = (_visualViewport_width = $edcf132a9284368a$var$visualViewport === null || $edcf132a9284368a$var$visualViewport === void 0 ? void 0 : $edcf132a9284368a$var$visualViewport.width) !== null && _visualViewport_width !== void 0 ? _visualViewport_width : totalWidth;
    var _visualViewport_height;
    height = (_visualViewport_height = $edcf132a9284368a$var$visualViewport === null || $edcf132a9284368a$var$visualViewport === void 0 ? void 0 : $edcf132a9284368a$var$visualViewport.height) !== null && _visualViewport_height !== void 0 ? _visualViewport_height : totalHeight;
    scroll.top = documentElement.scrollTop || containerNode.scrollTop;
    scroll.left = documentElement.scrollLeft || containerNode.scrollLeft;
    if ($edcf132a9284368a$var$visualViewport) {
      top = $edcf132a9284368a$var$visualViewport.offsetTop;
      left = $edcf132a9284368a$var$visualViewport.offsetLeft;
    }
  } else {
    ({ width, height, top, left } = $edcf132a9284368a$var$getOffset(containerNode));
    scroll.top = containerNode.scrollTop;
    scroll.left = containerNode.scrollLeft;
    totalWidth = width;
    totalHeight = height;
  }
  if ((0, $c87311424ea30a05$export$78551043582a6a98)() && (containerNode.tagName === "BODY" || containerNode.tagName === "HTML") && isPinchZoomedIn) {
    scroll.top = 0;
    scroll.left = 0;
    var _visualViewport_pageTop;
    top = (_visualViewport_pageTop = $edcf132a9284368a$var$visualViewport === null || $edcf132a9284368a$var$visualViewport === void 0 ? void 0 : $edcf132a9284368a$var$visualViewport.pageTop) !== null && _visualViewport_pageTop !== void 0 ? _visualViewport_pageTop : 0;
    var _visualViewport_pageLeft;
    left = (_visualViewport_pageLeft = $edcf132a9284368a$var$visualViewport === null || $edcf132a9284368a$var$visualViewport === void 0 ? void 0 : $edcf132a9284368a$var$visualViewport.pageLeft) !== null && _visualViewport_pageLeft !== void 0 ? _visualViewport_pageLeft : 0;
  }
  return {
    width,
    height,
    totalWidth,
    totalHeight,
    scroll,
    top,
    left
  };
}
function $edcf132a9284368a$var$getScroll(node) {
  return {
    top: node.scrollTop,
    left: node.scrollLeft,
    width: node.scrollWidth,
    height: node.scrollHeight
  };
}
function $edcf132a9284368a$var$getDelta(axis, offset, size, boundaryDimensions, containerDimensions, padding, containerOffsetWithBoundary) {
  var _containerDimensions_scroll_axis;
  let containerScroll = (_containerDimensions_scroll_axis = containerDimensions.scroll[axis]) !== null && _containerDimensions_scroll_axis !== void 0 ? _containerDimensions_scroll_axis : 0;
  let boundarySize = boundaryDimensions[$edcf132a9284368a$var$AXIS_SIZE[axis]];
  let boundaryStartEdge = boundaryDimensions.scroll[$edcf132a9284368a$var$AXIS[axis]] + padding;
  let boundaryEndEdge = boundarySize + boundaryDimensions.scroll[$edcf132a9284368a$var$AXIS[axis]] - padding;
  let startEdgeOffset = offset - containerScroll + containerOffsetWithBoundary[axis] - boundaryDimensions[$edcf132a9284368a$var$AXIS[axis]];
  let endEdgeOffset = offset - containerScroll + size + containerOffsetWithBoundary[axis] - boundaryDimensions[$edcf132a9284368a$var$AXIS[axis]];
  if (startEdgeOffset < boundaryStartEdge) return boundaryStartEdge - startEdgeOffset;
  else if (endEdgeOffset > boundaryEndEdge) return Math.max(boundaryEndEdge - endEdgeOffset, boundaryStartEdge - startEdgeOffset);
  else return 0;
}
function $edcf132a9284368a$var$getMargins(node) {
  let style = window.getComputedStyle(node);
  return {
    top: parseInt(style.marginTop, 10) || 0,
    bottom: parseInt(style.marginBottom, 10) || 0,
    left: parseInt(style.marginLeft, 10) || 0,
    right: parseInt(style.marginRight, 10) || 0
  };
}
function $edcf132a9284368a$var$parsePlacement(input) {
  if ($edcf132a9284368a$var$PARSED_PLACEMENT_CACHE[input]) return $edcf132a9284368a$var$PARSED_PLACEMENT_CACHE[input];
  let [placement, crossPlacement] = input.split(" ");
  let axis = $edcf132a9284368a$var$AXIS[placement] || "right";
  let crossAxis = $edcf132a9284368a$var$CROSS_AXIS[axis];
  if (!$edcf132a9284368a$var$AXIS[crossPlacement]) crossPlacement = "center";
  let size = $edcf132a9284368a$var$AXIS_SIZE[axis];
  let crossSize = $edcf132a9284368a$var$AXIS_SIZE[crossAxis];
  $edcf132a9284368a$var$PARSED_PLACEMENT_CACHE[input] = {
    placement,
    crossPlacement,
    axis,
    crossAxis,
    size,
    crossSize
  };
  return $edcf132a9284368a$var$PARSED_PLACEMENT_CACHE[input];
}
function $edcf132a9284368a$var$computePosition(childOffset, boundaryDimensions, overlaySize, placementInfo, offset, crossOffset, containerOffsetWithBoundary, isContainerPositioned, arrowSize, arrowBoundaryOffset) {
  let { placement, crossPlacement, axis, crossAxis, size, crossSize } = placementInfo;
  let position = {};
  var _childOffset_crossAxis;
  position[crossAxis] = (_childOffset_crossAxis = childOffset[crossAxis]) !== null && _childOffset_crossAxis !== void 0 ? _childOffset_crossAxis : 0;
  var _childOffset_crossSize, _overlaySize_crossSize, _childOffset_crossSize1, _overlaySize_crossSize1;
  if (crossPlacement === "center")
    position[crossAxis] += (((_childOffset_crossSize = childOffset[crossSize]) !== null && _childOffset_crossSize !== void 0 ? _childOffset_crossSize : 0) - ((_overlaySize_crossSize = overlaySize[crossSize]) !== null && _overlaySize_crossSize !== void 0 ? _overlaySize_crossSize : 0)) / 2;
  else if (crossPlacement !== crossAxis)
    position[crossAxis] += ((_childOffset_crossSize1 = childOffset[crossSize]) !== null && _childOffset_crossSize1 !== void 0 ? _childOffset_crossSize1 : 0) - ((_overlaySize_crossSize1 = overlaySize[crossSize]) !== null && _overlaySize_crossSize1 !== void 0 ? _overlaySize_crossSize1 : 0);
  position[crossAxis] += crossOffset;
  const minPosition = childOffset[crossAxis] - overlaySize[crossSize] + arrowSize + arrowBoundaryOffset;
  const maxPosition = childOffset[crossAxis] + childOffset[crossSize] - arrowSize - arrowBoundaryOffset;
  position[crossAxis] = (0, $9446cca9a3875146$export$7d15b64cf5a3a4c4)(position[crossAxis], minPosition, maxPosition);
  if (placement === axis) {
    const containerHeight = isContainerPositioned ? containerOffsetWithBoundary[size] : boundaryDimensions[$edcf132a9284368a$var$TOTAL_SIZE[size]];
    position[$edcf132a9284368a$var$FLIPPED_DIRECTION[axis]] = Math.floor(containerHeight - childOffset[axis] + offset);
  } else position[axis] = Math.floor(childOffset[axis] + childOffset[size] + offset);
  return position;
}
function $edcf132a9284368a$var$getMaxHeight(position, boundaryDimensions, containerOffsetWithBoundary, isContainerPositioned, margins, padding, overlayHeight, heightGrowthDirection) {
  const containerHeight = isContainerPositioned ? containerOffsetWithBoundary.height : boundaryDimensions[$edcf132a9284368a$var$TOTAL_SIZE.height];
  var _position_bottom;
  let overlayTop = position.top != null ? containerOffsetWithBoundary.top + position.top : containerOffsetWithBoundary.top + (containerHeight - ((_position_bottom = position.bottom) !== null && _position_bottom !== void 0 ? _position_bottom : 0) - overlayHeight);
  var _boundaryDimensions_scroll_top, _margins_top, _margins_bottom, _boundaryDimensions_scroll_top1, _margins_top1, _margins_bottom1;
  let maxHeight = heightGrowthDirection !== "top" ? (
    // We want the distance between the top of the overlay to the bottom of the boundary
    Math.max(0, boundaryDimensions.height + boundaryDimensions.top + ((_boundaryDimensions_scroll_top = boundaryDimensions.scroll.top) !== null && _boundaryDimensions_scroll_top !== void 0 ? _boundaryDimensions_scroll_top : 0) - overlayTop - (((_margins_top = margins.top) !== null && _margins_top !== void 0 ? _margins_top : 0) + ((_margins_bottom = margins.bottom) !== null && _margins_bottom !== void 0 ? _margins_bottom : 0) + padding))
  ) : Math.max(0, overlayTop + overlayHeight - (boundaryDimensions.top + ((_boundaryDimensions_scroll_top1 = boundaryDimensions.scroll.top) !== null && _boundaryDimensions_scroll_top1 !== void 0 ? _boundaryDimensions_scroll_top1 : 0)) - (((_margins_top1 = margins.top) !== null && _margins_top1 !== void 0 ? _margins_top1 : 0) + ((_margins_bottom1 = margins.bottom) !== null && _margins_bottom1 !== void 0 ? _margins_bottom1 : 0) + padding));
  return Math.min(boundaryDimensions.height - padding * 2, maxHeight);
}
function $edcf132a9284368a$var$getAvailableSpace(boundaryDimensions, containerOffsetWithBoundary, childOffset, margins, padding, placementInfo) {
  let { placement, axis, size } = placementInfo;
  var _boundaryDimensions_scroll_axis, _margins_axis;
  if (placement === axis) return Math.max(0, childOffset[axis] - boundaryDimensions[axis] - ((_boundaryDimensions_scroll_axis = boundaryDimensions.scroll[axis]) !== null && _boundaryDimensions_scroll_axis !== void 0 ? _boundaryDimensions_scroll_axis : 0) + containerOffsetWithBoundary[axis] - ((_margins_axis = margins[axis]) !== null && _margins_axis !== void 0 ? _margins_axis : 0) - margins[$edcf132a9284368a$var$FLIPPED_DIRECTION[axis]] - padding);
  var _margins_axis1;
  return Math.max(0, boundaryDimensions[size] + boundaryDimensions[axis] + boundaryDimensions.scroll[axis] - containerOffsetWithBoundary[axis] - childOffset[axis] - childOffset[size] - ((_margins_axis1 = margins[axis]) !== null && _margins_axis1 !== void 0 ? _margins_axis1 : 0) - margins[$edcf132a9284368a$var$FLIPPED_DIRECTION[axis]] - padding);
}
function $edcf132a9284368a$export$6839422d1f33cee9(placementInput, childOffset, overlaySize, scrollSize, margins, padding, flip, boundaryDimensions, containerDimensions, containerOffsetWithBoundary, offset, crossOffset, isContainerPositioned, userSetMaxHeight, arrowSize, arrowBoundaryOffset) {
  let placementInfo = $edcf132a9284368a$var$parsePlacement(placementInput);
  let { size, crossAxis, crossSize, placement, crossPlacement } = placementInfo;
  let position = $edcf132a9284368a$var$computePosition(childOffset, boundaryDimensions, overlaySize, placementInfo, offset, crossOffset, containerOffsetWithBoundary, isContainerPositioned, arrowSize, arrowBoundaryOffset);
  let normalizedOffset = offset;
  let space = $edcf132a9284368a$var$getAvailableSpace(boundaryDimensions, containerOffsetWithBoundary, childOffset, margins, padding + offset, placementInfo);
  if (flip && scrollSize[size] > space) {
    let flippedPlacementInfo = $edcf132a9284368a$var$parsePlacement(`${$edcf132a9284368a$var$FLIPPED_DIRECTION[placement]} ${crossPlacement}`);
    let flippedPosition = $edcf132a9284368a$var$computePosition(childOffset, boundaryDimensions, overlaySize, flippedPlacementInfo, offset, crossOffset, containerOffsetWithBoundary, isContainerPositioned, arrowSize, arrowBoundaryOffset);
    let flippedSpace = $edcf132a9284368a$var$getAvailableSpace(boundaryDimensions, containerOffsetWithBoundary, childOffset, margins, padding + offset, flippedPlacementInfo);
    if (flippedSpace > space) {
      placementInfo = flippedPlacementInfo;
      position = flippedPosition;
      normalizedOffset = offset;
    }
  }
  let heightGrowthDirection = "bottom";
  if (placementInfo.axis === "top") {
    if (placementInfo.placement === "top") heightGrowthDirection = "top";
    else if (placementInfo.placement === "bottom") heightGrowthDirection = "bottom";
  } else if (placementInfo.crossAxis === "top") {
    if (placementInfo.crossPlacement === "top") heightGrowthDirection = "bottom";
    else if (placementInfo.crossPlacement === "bottom") heightGrowthDirection = "top";
  }
  let delta = $edcf132a9284368a$var$getDelta(crossAxis, position[crossAxis], overlaySize[crossSize], boundaryDimensions, containerDimensions, padding, containerOffsetWithBoundary);
  position[crossAxis] += delta;
  let maxHeight = $edcf132a9284368a$var$getMaxHeight(position, boundaryDimensions, containerOffsetWithBoundary, isContainerPositioned, margins, padding, overlaySize.height, heightGrowthDirection);
  if (userSetMaxHeight && userSetMaxHeight < maxHeight) maxHeight = userSetMaxHeight;
  overlaySize.height = Math.min(overlaySize.height, maxHeight);
  position = $edcf132a9284368a$var$computePosition(childOffset, boundaryDimensions, overlaySize, placementInfo, normalizedOffset, crossOffset, containerOffsetWithBoundary, isContainerPositioned, arrowSize, arrowBoundaryOffset);
  delta = $edcf132a9284368a$var$getDelta(crossAxis, position[crossAxis], overlaySize[crossSize], boundaryDimensions, containerDimensions, padding, containerOffsetWithBoundary);
  position[crossAxis] += delta;
  let arrowPosition = {};
  let preferredArrowPosition = childOffset[crossAxis] + 0.5 * childOffset[crossSize] - position[crossAxis] - margins[$edcf132a9284368a$var$AXIS[crossAxis]];
  const arrowMinPosition = arrowSize / 2 + arrowBoundaryOffset;
  var _margins_left, _margins_right, _margins_top, _margins_bottom;
  const overlayMargin = $edcf132a9284368a$var$AXIS[crossAxis] === "left" ? ((_margins_left = margins.left) !== null && _margins_left !== void 0 ? _margins_left : 0) + ((_margins_right = margins.right) !== null && _margins_right !== void 0 ? _margins_right : 0) : ((_margins_top = margins.top) !== null && _margins_top !== void 0 ? _margins_top : 0) + ((_margins_bottom = margins.bottom) !== null && _margins_bottom !== void 0 ? _margins_bottom : 0);
  const arrowMaxPosition = overlaySize[crossSize] - overlayMargin - arrowSize / 2 - arrowBoundaryOffset;
  const arrowOverlappingChildMinEdge = childOffset[crossAxis] + arrowSize / 2 - (position[crossAxis] + margins[$edcf132a9284368a$var$AXIS[crossAxis]]);
  const arrowOverlappingChildMaxEdge = childOffset[crossAxis] + childOffset[crossSize] - arrowSize / 2 - (position[crossAxis] + margins[$edcf132a9284368a$var$AXIS[crossAxis]]);
  const arrowPositionOverlappingChild = (0, $9446cca9a3875146$export$7d15b64cf5a3a4c4)(preferredArrowPosition, arrowOverlappingChildMinEdge, arrowOverlappingChildMaxEdge);
  arrowPosition[crossAxis] = (0, $9446cca9a3875146$export$7d15b64cf5a3a4c4)(arrowPositionOverlappingChild, arrowMinPosition, arrowMaxPosition);
  return {
    position,
    maxHeight,
    arrowOffsetLeft: arrowPosition.left,
    arrowOffsetTop: arrowPosition.top,
    placement: placementInfo.placement
  };
}
function $edcf132a9284368a$export$b3ceb0cbf1056d98(opts) {
  let { placement, targetNode, overlayNode, scrollNode, padding, shouldFlip, boundaryElement, offset, crossOffset, maxHeight, arrowSize = 0, arrowBoundaryOffset = 0 } = opts;
  let container = overlayNode instanceof HTMLElement ? $edcf132a9284368a$var$getContainingBlock(overlayNode) : document.documentElement;
  let isViewportContainer = container === document.documentElement;
  const containerPositionStyle = window.getComputedStyle(container).position;
  let isContainerPositioned = !!containerPositionStyle && containerPositionStyle !== "static";
  let childOffset = isViewportContainer ? $edcf132a9284368a$var$getOffset(targetNode) : $edcf132a9284368a$var$getPosition(targetNode, container);
  if (!isViewportContainer) {
    let { marginTop, marginLeft } = window.getComputedStyle(targetNode);
    childOffset.top += parseInt(marginTop, 10) || 0;
    childOffset.left += parseInt(marginLeft, 10) || 0;
  }
  let overlaySize = $edcf132a9284368a$var$getOffset(overlayNode);
  let margins = $edcf132a9284368a$var$getMargins(overlayNode);
  var _margins_left, _margins_right;
  overlaySize.width += ((_margins_left = margins.left) !== null && _margins_left !== void 0 ? _margins_left : 0) + ((_margins_right = margins.right) !== null && _margins_right !== void 0 ? _margins_right : 0);
  var _margins_top, _margins_bottom;
  overlaySize.height += ((_margins_top = margins.top) !== null && _margins_top !== void 0 ? _margins_top : 0) + ((_margins_bottom = margins.bottom) !== null && _margins_bottom !== void 0 ? _margins_bottom : 0);
  let scrollSize = $edcf132a9284368a$var$getScroll(scrollNode);
  let boundaryDimensions = $edcf132a9284368a$var$getContainerDimensions(boundaryElement);
  let containerDimensions = $edcf132a9284368a$var$getContainerDimensions(container);
  let containerOffsetWithBoundary = boundaryElement.tagName === "BODY" ? $edcf132a9284368a$var$getOffset(container) : $edcf132a9284368a$var$getPosition(container, boundaryElement);
  if (container.tagName === "HTML" && boundaryElement.tagName === "BODY") {
    containerDimensions.scroll.top = 0;
    containerDimensions.scroll.left = 0;
  }
  return $edcf132a9284368a$export$6839422d1f33cee9(placement, childOffset, overlaySize, scrollSize, margins, padding, shouldFlip, boundaryDimensions, containerDimensions, containerOffsetWithBoundary, offset, crossOffset, isContainerPositioned, maxHeight, arrowSize, arrowBoundaryOffset);
}
function $edcf132a9284368a$var$getOffset(node) {
  let { top, left, width, height } = node.getBoundingClientRect();
  let { scrollTop, scrollLeft, clientTop, clientLeft } = document.documentElement;
  return {
    top: top + scrollTop - clientTop,
    left: left + scrollLeft - clientLeft,
    width,
    height
  };
}
function $edcf132a9284368a$var$getPosition(node, parent) {
  let style = window.getComputedStyle(node);
  let offset;
  if (style.position === "fixed") {
    let { top, left, width, height } = node.getBoundingClientRect();
    offset = {
      top,
      left,
      width,
      height
    };
  } else {
    offset = $edcf132a9284368a$var$getOffset(node);
    let parentOffset = $edcf132a9284368a$var$getOffset(parent);
    let parentStyle = window.getComputedStyle(parent);
    parentOffset.top += (parseInt(parentStyle.borderTopWidth, 10) || 0) - parent.scrollTop;
    parentOffset.left += (parseInt(parentStyle.borderLeftWidth, 10) || 0) - parent.scrollLeft;
    offset.top -= parentOffset.top;
    offset.left -= parentOffset.left;
  }
  offset.top -= parseInt(style.marginTop, 10) || 0;
  offset.left -= parseInt(style.marginLeft, 10) || 0;
  return offset;
}
function $edcf132a9284368a$var$getContainingBlock(node) {
  let offsetParent = node.offsetParent;
  if (offsetParent && offsetParent === document.body && window.getComputedStyle(offsetParent).position === "static" && !$edcf132a9284368a$var$isContainingBlock(offsetParent)) offsetParent = document.documentElement;
  if (offsetParent == null) {
    offsetParent = node.parentElement;
    while (offsetParent && !$edcf132a9284368a$var$isContainingBlock(offsetParent)) offsetParent = offsetParent.parentElement;
  }
  return offsetParent || document.documentElement;
}
function $edcf132a9284368a$var$isContainingBlock(node) {
  let style = window.getComputedStyle(node);
  return style.transform !== "none" || /transform|perspective/.test(style.willChange) || style.filter !== "none" || style.contain === "paint" || "backdropFilter" in style && style.backdropFilter !== "none" || "WebkitBackdropFilter" in style && style.WebkitBackdropFilter !== "none";
}

// node_modules/@react-aria/overlays/dist/useCloseOnScroll.mjs
var import_react85 = __toESM(require_react(), 1);
var $dd149f63282afbbf$export$f6211563215e3b37 = /* @__PURE__ */ new WeakMap();
function $dd149f63282afbbf$export$18fc8428861184da(opts) {
  let { triggerRef, isOpen, onClose } = opts;
  (0, import_react85.useEffect)(() => {
    if (!isOpen || onClose === null) return;
    let onScroll = (e) => {
      let target = e.target;
      if (!triggerRef.current || target instanceof Node && !target.contains(triggerRef.current)) return;
      if (e.target instanceof HTMLInputElement || e.target instanceof HTMLTextAreaElement) return;
      let onCloseHandler = onClose || $dd149f63282afbbf$export$f6211563215e3b37.get(triggerRef.current);
      if (onCloseHandler) onCloseHandler();
    };
    window.addEventListener("scroll", onScroll, true);
    return () => {
      window.removeEventListener("scroll", onScroll, true);
    };
  }, [
    isOpen,
    onClose,
    triggerRef
  ]);
}

// node_modules/@react-aria/overlays/dist/useOverlayPosition.mjs
var import_react86 = __toESM(require_react(), 1);
var $2a41e45df1593e64$var$visualViewport = typeof document !== "undefined" ? window.visualViewport : null;
function $2a41e45df1593e64$export$d39e1813b3bdd0e1(props) {
  let { direction } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let { arrowSize = 0, targetRef, overlayRef, scrollRef = overlayRef, placement = "bottom", containerPadding = 12, shouldFlip = true, boundaryElement = typeof document !== "undefined" ? document.body : null, offset = 0, crossOffset = 0, shouldUpdatePosition = true, isOpen = true, onClose, maxHeight, arrowBoundaryOffset = 0 } = props;
  let [position, setPosition] = (0, import_react86.useState)(null);
  let deps = [
    shouldUpdatePosition,
    placement,
    overlayRef.current,
    targetRef.current,
    scrollRef.current,
    containerPadding,
    shouldFlip,
    boundaryElement,
    offset,
    crossOffset,
    isOpen,
    direction,
    maxHeight,
    arrowBoundaryOffset,
    arrowSize
  ];
  let lastScale = (0, import_react86.useRef)($2a41e45df1593e64$var$visualViewport === null || $2a41e45df1593e64$var$visualViewport === void 0 ? void 0 : $2a41e45df1593e64$var$visualViewport.scale);
  (0, import_react86.useEffect)(() => {
    if (isOpen) lastScale.current = $2a41e45df1593e64$var$visualViewport === null || $2a41e45df1593e64$var$visualViewport === void 0 ? void 0 : $2a41e45df1593e64$var$visualViewport.scale;
  }, [
    isOpen
  ]);
  let updatePosition = (0, import_react86.useCallback)(() => {
    if (shouldUpdatePosition === false || !isOpen || !overlayRef.current || !targetRef.current || !boundaryElement) return;
    if (($2a41e45df1593e64$var$visualViewport === null || $2a41e45df1593e64$var$visualViewport === void 0 ? void 0 : $2a41e45df1593e64$var$visualViewport.scale) !== lastScale.current) return;
    let anchor = null;
    if (scrollRef.current && scrollRef.current.contains(document.activeElement)) {
      var _document_activeElement;
      let anchorRect = (_document_activeElement = document.activeElement) === null || _document_activeElement === void 0 ? void 0 : _document_activeElement.getBoundingClientRect();
      let scrollRect = scrollRef.current.getBoundingClientRect();
      var _anchorRect_top;
      anchor = {
        type: "top",
        offset: ((_anchorRect_top = anchorRect === null || anchorRect === void 0 ? void 0 : anchorRect.top) !== null && _anchorRect_top !== void 0 ? _anchorRect_top : 0) - scrollRect.top
      };
      if (anchor.offset > scrollRect.height / 2) {
        anchor.type = "bottom";
        var _anchorRect_bottom;
        anchor.offset = ((_anchorRect_bottom = anchorRect === null || anchorRect === void 0 ? void 0 : anchorRect.bottom) !== null && _anchorRect_bottom !== void 0 ? _anchorRect_bottom : 0) - scrollRect.bottom;
      }
    }
    let overlay = overlayRef.current;
    if (!maxHeight && overlayRef.current) {
      var _window_visualViewport;
      overlay.style.top = "0px";
      overlay.style.bottom = "";
      var _window_visualViewport_height;
      overlay.style.maxHeight = ((_window_visualViewport_height = (_window_visualViewport = window.visualViewport) === null || _window_visualViewport === void 0 ? void 0 : _window_visualViewport.height) !== null && _window_visualViewport_height !== void 0 ? _window_visualViewport_height : window.innerHeight) + "px";
    }
    let position2 = (0, $edcf132a9284368a$export$b3ceb0cbf1056d98)({
      placement: $2a41e45df1593e64$var$translateRTL(placement, direction),
      overlayNode: overlayRef.current,
      targetNode: targetRef.current,
      scrollNode: scrollRef.current || overlayRef.current,
      padding: containerPadding,
      shouldFlip,
      boundaryElement,
      offset,
      crossOffset,
      maxHeight,
      arrowSize,
      arrowBoundaryOffset
    });
    if (!position2.position) return;
    overlay.style.top = "";
    overlay.style.bottom = "";
    overlay.style.left = "";
    overlay.style.right = "";
    Object.keys(position2.position).forEach((key) => overlay.style[key] = position2.position[key] + "px");
    overlay.style.maxHeight = position2.maxHeight != null ? position2.maxHeight + "px" : "";
    if (anchor && document.activeElement && scrollRef.current) {
      let anchorRect = document.activeElement.getBoundingClientRect();
      let scrollRect = scrollRef.current.getBoundingClientRect();
      let newOffset = anchorRect[anchor.type] - scrollRect[anchor.type];
      scrollRef.current.scrollTop += newOffset - anchor.offset;
    }
    setPosition(position2);
  }, deps);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(updatePosition, deps);
  $2a41e45df1593e64$var$useResize(updatePosition);
  (0, $9daab02d461809db$export$683480f191c0e3ea)({
    ref: overlayRef,
    onResize: updatePosition
  });
  (0, $9daab02d461809db$export$683480f191c0e3ea)({
    ref: targetRef,
    onResize: updatePosition
  });
  let isResizing = (0, import_react86.useRef)(false);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    let timeout;
    let onResize = () => {
      isResizing.current = true;
      clearTimeout(timeout);
      timeout = setTimeout(() => {
        isResizing.current = false;
      }, 500);
      updatePosition();
    };
    let onScroll = () => {
      if (isResizing.current) onResize();
    };
    $2a41e45df1593e64$var$visualViewport === null || $2a41e45df1593e64$var$visualViewport === void 0 ? void 0 : $2a41e45df1593e64$var$visualViewport.addEventListener("resize", onResize);
    $2a41e45df1593e64$var$visualViewport === null || $2a41e45df1593e64$var$visualViewport === void 0 ? void 0 : $2a41e45df1593e64$var$visualViewport.addEventListener("scroll", onScroll);
    return () => {
      $2a41e45df1593e64$var$visualViewport === null || $2a41e45df1593e64$var$visualViewport === void 0 ? void 0 : $2a41e45df1593e64$var$visualViewport.removeEventListener("resize", onResize);
      $2a41e45df1593e64$var$visualViewport === null || $2a41e45df1593e64$var$visualViewport === void 0 ? void 0 : $2a41e45df1593e64$var$visualViewport.removeEventListener("scroll", onScroll);
    };
  }, [
    updatePosition
  ]);
  let close = (0, import_react86.useCallback)(() => {
    if (!isResizing.current) onClose === null || onClose === void 0 ? void 0 : onClose();
  }, [
    onClose,
    isResizing
  ]);
  (0, $dd149f63282afbbf$export$18fc8428861184da)({
    triggerRef: targetRef,
    isOpen,
    onClose: onClose && close
  });
  var _position_maxHeight, _position_placement;
  return {
    overlayProps: {
      style: {
        position: "absolute",
        zIndex: 1e5,
        ...position === null || position === void 0 ? void 0 : position.position,
        maxHeight: (_position_maxHeight = position === null || position === void 0 ? void 0 : position.maxHeight) !== null && _position_maxHeight !== void 0 ? _position_maxHeight : "100vh"
      }
    },
    placement: (_position_placement = position === null || position === void 0 ? void 0 : position.placement) !== null && _position_placement !== void 0 ? _position_placement : null,
    arrowProps: {
      "aria-hidden": "true",
      role: "presentation",
      style: {
        left: position === null || position === void 0 ? void 0 : position.arrowOffsetLeft,
        top: position === null || position === void 0 ? void 0 : position.arrowOffsetTop
      }
    },
    updatePosition
  };
}
function $2a41e45df1593e64$var$useResize(onResize) {
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    window.addEventListener("resize", onResize, false);
    return () => {
      window.removeEventListener("resize", onResize, false);
    };
  }, [
    onResize
  ]);
}
function $2a41e45df1593e64$var$translateRTL(position, direction) {
  if (direction === "rtl") return position.replace("start", "right").replace("end", "left");
  return position.replace("start", "left").replace("end", "right");
}

// node_modules/@react-aria/overlays/dist/useOverlay.mjs
var import_react87 = __toESM(require_react(), 1);
var $a11501f3d1d39e6c$var$visibleOverlays = [];
function $a11501f3d1d39e6c$export$ea8f71083e90600f(props, ref) {
  let { onClose, shouldCloseOnBlur, isOpen, isDismissable = false, isKeyboardDismissDisabled = false, shouldCloseOnInteractOutside } = props;
  (0, import_react87.useEffect)(() => {
    if (isOpen && !$a11501f3d1d39e6c$var$visibleOverlays.includes(ref)) {
      $a11501f3d1d39e6c$var$visibleOverlays.push(ref);
      return () => {
        let index = $a11501f3d1d39e6c$var$visibleOverlays.indexOf(ref);
        if (index >= 0) $a11501f3d1d39e6c$var$visibleOverlays.splice(index, 1);
      };
    }
  }, [
    isOpen,
    ref
  ]);
  let onHide = () => {
    if ($a11501f3d1d39e6c$var$visibleOverlays[$a11501f3d1d39e6c$var$visibleOverlays.length - 1] === ref && onClose) onClose();
  };
  let onInteractOutsideStart = (e) => {
    if (!shouldCloseOnInteractOutside || shouldCloseOnInteractOutside(e.target)) {
      if ($a11501f3d1d39e6c$var$visibleOverlays[$a11501f3d1d39e6c$var$visibleOverlays.length - 1] === ref) {
        e.stopPropagation();
        e.preventDefault();
      }
    }
  };
  let onInteractOutside = (e) => {
    if (!shouldCloseOnInteractOutside || shouldCloseOnInteractOutside(e.target)) {
      if ($a11501f3d1d39e6c$var$visibleOverlays[$a11501f3d1d39e6c$var$visibleOverlays.length - 1] === ref) {
        e.stopPropagation();
        e.preventDefault();
      }
      onHide();
    }
  };
  let onKeyDown = (e) => {
    if (e.key === "Escape" && !isKeyboardDismissDisabled && !e.nativeEvent.isComposing) {
      e.stopPropagation();
      e.preventDefault();
      onHide();
    }
  };
  (0, $e0b6e0b68ec7f50f$export$872b660ac5a1ff98)({
    ref,
    onInteractOutside: isDismissable && isOpen ? onInteractOutside : void 0,
    onInteractOutsideStart
  });
  let { focusWithinProps } = (0, $9ab94262bd0047c7$export$420e68273165f4ec)({
    isDisabled: !shouldCloseOnBlur,
    onBlurWithin: (e) => {
      if (!e.relatedTarget || (0, $9bf71ea28793e738$export$1258395f99bf9cbf)(e.relatedTarget)) return;
      if (!shouldCloseOnInteractOutside || shouldCloseOnInteractOutside(e.relatedTarget)) onClose === null || onClose === void 0 ? void 0 : onClose();
    }
  });
  let onPointerDownUnderlay = (e) => {
    if (e.target === e.currentTarget) e.preventDefault();
  };
  return {
    overlayProps: {
      onKeyDown,
      ...focusWithinProps
    },
    underlayProps: {
      onPointerDown: onPointerDownUnderlay
    }
  };
}

// node_modules/@react-aria/overlays/dist/useOverlayTrigger.mjs
var import_react88 = __toESM(require_react(), 1);
function $628037886ba31236$export$f9d5c8beee7d008d(props, state, ref) {
  let { type } = props;
  let { isOpen } = state;
  (0, import_react88.useEffect)(() => {
    if (ref && ref.current) (0, $dd149f63282afbbf$export$f6211563215e3b37).set(ref.current, state.close);
  });
  let ariaHasPopup = void 0;
  if (type === "menu") ariaHasPopup = true;
  else if (type === "listbox") ariaHasPopup = "listbox";
  let overlayId = (0, $bdb11010cef70236$export$f680877a34711e37)();
  return {
    triggerProps: {
      "aria-haspopup": ariaHasPopup,
      "aria-expanded": isOpen,
      "aria-controls": isOpen ? overlayId : void 0,
      onPress: state.toggle
    },
    overlayProps: {
      id: overlayId
    }
  };
}

// node_modules/@react-aria/overlays/dist/usePreventScroll.mjs
var $49c51c25361d4cd2$var$visualViewport = typeof document !== "undefined" && window.visualViewport;
var $49c51c25361d4cd2$var$nonTextInputTypes = /* @__PURE__ */ new Set([
  "checkbox",
  "radio",
  "range",
  "color",
  "file",
  "image",
  "button",
  "submit",
  "reset"
]);
var $49c51c25361d4cd2$var$preventScrollCount = 0;
var $49c51c25361d4cd2$var$restore;
function $49c51c25361d4cd2$export$ee0f7cc6afcd1c18(options = {}) {
  let { isDisabled } = options;
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    if (isDisabled) return;
    $49c51c25361d4cd2$var$preventScrollCount++;
    if ($49c51c25361d4cd2$var$preventScrollCount === 1) {
      if ((0, $c87311424ea30a05$export$fedb369cb70207f1)()) $49c51c25361d4cd2$var$restore = $49c51c25361d4cd2$var$preventScrollMobileSafari();
      else $49c51c25361d4cd2$var$restore = $49c51c25361d4cd2$var$preventScrollStandard();
    }
    return () => {
      $49c51c25361d4cd2$var$preventScrollCount--;
      if ($49c51c25361d4cd2$var$preventScrollCount === 0) $49c51c25361d4cd2$var$restore();
    };
  }, [
    isDisabled
  ]);
}
function $49c51c25361d4cd2$var$preventScrollStandard() {
  let scrollbarWidth = window.innerWidth - document.documentElement.clientWidth;
  return (0, $ff5963eb1fccf552$export$e08e3b67e392101e)(scrollbarWidth > 0 && // Use scrollbar-gutter when supported because it also works for fixed positioned elements.
  ("scrollbarGutter" in document.documentElement.style ? $49c51c25361d4cd2$var$setStyle(document.documentElement, "scrollbarGutter", "stable") : $49c51c25361d4cd2$var$setStyle(document.documentElement, "paddingRight", `${scrollbarWidth}px`)), $49c51c25361d4cd2$var$setStyle(document.documentElement, "overflow", "hidden"));
}
function $49c51c25361d4cd2$var$preventScrollMobileSafari() {
  let scrollable;
  let restoreScrollableStyles;
  let onTouchStart = (e) => {
    scrollable = (0, $62d8ded9296f3872$export$cfa2225e87938781)(e.target, true);
    if (scrollable === document.documentElement && scrollable === document.body) return;
    if (scrollable instanceof HTMLElement && window.getComputedStyle(scrollable).overscrollBehavior === "auto") restoreScrollableStyles = $49c51c25361d4cd2$var$setStyle(scrollable, "overscrollBehavior", "contain");
  };
  let onTouchMove = (e) => {
    if (!scrollable || scrollable === document.documentElement || scrollable === document.body) {
      e.preventDefault();
      return;
    }
    if (scrollable.scrollHeight === scrollable.clientHeight && scrollable.scrollWidth === scrollable.clientWidth) e.preventDefault();
  };
  let onTouchEnd = () => {
    if (restoreScrollableStyles) restoreScrollableStyles();
  };
  let onFocus = (e) => {
    let target = e.target;
    if ($49c51c25361d4cd2$var$willOpenKeyboard(target)) {
      setupStyles();
      target.style.transform = "translateY(-2000px)";
      requestAnimationFrame(() => {
        target.style.transform = "";
        if ($49c51c25361d4cd2$var$visualViewport) {
          if ($49c51c25361d4cd2$var$visualViewport.height < window.innerHeight)
            requestAnimationFrame(() => {
              $49c51c25361d4cd2$var$scrollIntoView(target);
            });
          else
            $49c51c25361d4cd2$var$visualViewport.addEventListener("resize", () => $49c51c25361d4cd2$var$scrollIntoView(target), {
              once: true
            });
        }
      });
    }
  };
  let restoreStyles = null;
  let setupStyles = () => {
    if (restoreStyles) return;
    let onWindowScroll = () => {
      window.scrollTo(0, 0);
    };
    let scrollX = window.pageXOffset;
    let scrollY = window.pageYOffset;
    restoreStyles = (0, $ff5963eb1fccf552$export$e08e3b67e392101e)($49c51c25361d4cd2$var$addEvent(window, "scroll", onWindowScroll), $49c51c25361d4cd2$var$setStyle(document.documentElement, "paddingRight", `${window.innerWidth - document.documentElement.clientWidth}px`), $49c51c25361d4cd2$var$setStyle(document.documentElement, "overflow", "hidden"), $49c51c25361d4cd2$var$setStyle(document.body, "marginTop", `-${scrollY}px`), () => {
      window.scrollTo(scrollX, scrollY);
    });
    window.scrollTo(0, 0);
  };
  let removeEvents = (0, $ff5963eb1fccf552$export$e08e3b67e392101e)($49c51c25361d4cd2$var$addEvent(document, "touchstart", onTouchStart, {
    passive: false,
    capture: true
  }), $49c51c25361d4cd2$var$addEvent(document, "touchmove", onTouchMove, {
    passive: false,
    capture: true
  }), $49c51c25361d4cd2$var$addEvent(document, "touchend", onTouchEnd, {
    passive: false,
    capture: true
  }), $49c51c25361d4cd2$var$addEvent(document, "focus", onFocus, true));
  return () => {
    restoreScrollableStyles === null || restoreScrollableStyles === void 0 ? void 0 : restoreScrollableStyles();
    restoreStyles === null || restoreStyles === void 0 ? void 0 : restoreStyles();
    removeEvents();
  };
}
function $49c51c25361d4cd2$var$setStyle(element, style, value) {
  let cur = element.style[style];
  element.style[style] = value;
  return () => {
    element.style[style] = cur;
  };
}
function $49c51c25361d4cd2$var$addEvent(target, event, handler, options) {
  target.addEventListener(event, handler, options);
  return () => {
    target.removeEventListener(event, handler, options);
  };
}
function $49c51c25361d4cd2$var$scrollIntoView(target) {
  let root = document.scrollingElement || document.documentElement;
  let nextTarget = target;
  while (nextTarget && nextTarget !== root) {
    let scrollable = (0, $62d8ded9296f3872$export$cfa2225e87938781)(nextTarget);
    if (scrollable !== document.documentElement && scrollable !== document.body && scrollable !== nextTarget) {
      let scrollableTop = scrollable.getBoundingClientRect().top;
      let targetTop = nextTarget.getBoundingClientRect().top;
      if (targetTop > scrollableTop + nextTarget.clientHeight) scrollable.scrollTop += targetTop - scrollableTop;
    }
    nextTarget = scrollable.parentElement;
  }
}
function $49c51c25361d4cd2$var$willOpenKeyboard(target) {
  return target instanceof HTMLInputElement && !$49c51c25361d4cd2$var$nonTextInputTypes.has(target.type) || target instanceof HTMLTextAreaElement || target instanceof HTMLElement && target.isContentEditable;
}

// node_modules/@react-aria/overlays/dist/PortalProvider.mjs
var import_react89 = __toESM(require_react(), 1);
var $96b38030c423d352$export$60d741e20e0aa309 = (0, import_react89.createContext)({});
function $96b38030c423d352$export$9fc1347d4195ccb3() {
  var _useContext;
  return (_useContext = (0, import_react89.useContext)($96b38030c423d352$export$60d741e20e0aa309)) !== null && _useContext !== void 0 ? _useContext : {};
}

// node_modules/@react-aria/overlays/dist/useModal.mjs
var import_react90 = __toESM(require_react(), 1);
var import_react_dom4 = __toESM(require_react_dom(), 1);
var $f57aed4a881a3485$var$Context = (0, import_react90.default).createContext(null);
function $f57aed4a881a3485$export$178405afcd8c5eb(props) {
  let { children } = props;
  let parent = (0, import_react90.useContext)($f57aed4a881a3485$var$Context);
  let [modalCount, setModalCount] = (0, import_react90.useState)(0);
  let context = (0, import_react90.useMemo)(() => ({
    parent,
    modalCount,
    addModal() {
      setModalCount((count) => count + 1);
      if (parent) parent.addModal();
    },
    removeModal() {
      setModalCount((count) => count - 1);
      if (parent) parent.removeModal();
    }
  }), [
    parent,
    modalCount
  ]);
  return (0, import_react90.default).createElement($f57aed4a881a3485$var$Context.Provider, {
    value: context
  }, children);
}
function $f57aed4a881a3485$export$d9aaed4c3ece1bc0() {
  let context = (0, import_react90.useContext)($f57aed4a881a3485$var$Context);
  return {
    modalProviderProps: {
      "aria-hidden": context && context.modalCount > 0 ? true : void 0
    }
  };
}
function $f57aed4a881a3485$var$OverlayContainerDOM(props) {
  let { modalProviderProps } = $f57aed4a881a3485$export$d9aaed4c3ece1bc0();
  return (0, import_react90.default).createElement("div", {
    "data-overlay-container": true,
    ...props,
    ...modalProviderProps
  });
}
function $f57aed4a881a3485$export$bf688221f59024e5(props) {
  return (0, import_react90.default).createElement($f57aed4a881a3485$export$178405afcd8c5eb, null, (0, import_react90.default).createElement($f57aed4a881a3485$var$OverlayContainerDOM, props));
}
function $f57aed4a881a3485$export$b47c3594eab58386(props) {
  let isSSR = (0, $b5e257d569688ac6$export$535bd6ca7f90a273)();
  let { portalContainer = isSSR ? null : document.body, ...rest } = props;
  let { getContainer } = (0, $96b38030c423d352$export$9fc1347d4195ccb3)();
  if (!props.portalContainer && getContainer) portalContainer = getContainer();
  (0, import_react90.default).useEffect(() => {
    if (portalContainer === null || portalContainer === void 0 ? void 0 : portalContainer.closest("[data-overlay-container]")) throw new Error("An OverlayContainer must not be inside another container. Please change the portalContainer prop.");
  }, [
    portalContainer
  ]);
  if (!portalContainer) return null;
  let contents = (0, import_react90.default).createElement($f57aed4a881a3485$export$bf688221f59024e5, rest);
  return (0, import_react_dom4.default).createPortal(contents, portalContainer);
}

// node_modules/@react-aria/overlays/dist/ar-AE.mjs
var $773d5888b972f1cf$exports = {};
$773d5888b972f1cf$exports = {
  "dismiss": `تجاهل`
};

// node_modules/@react-aria/overlays/dist/bg-BG.mjs
var $d11f19852b941573$exports = {};
$d11f19852b941573$exports = {
  "dismiss": `Отхвърляне`
};

// node_modules/@react-aria/overlays/dist/cs-CZ.mjs
var $b983974c2ee1efb3$exports = {};
$b983974c2ee1efb3$exports = {
  "dismiss": `Odstranit`
};

// node_modules/@react-aria/overlays/dist/da-DK.mjs
var $5809cc9d4e92de73$exports = {};
$5809cc9d4e92de73$exports = {
  "dismiss": `Luk`
};

// node_modules/@react-aria/overlays/dist/de-DE.mjs
var $c68c2e4fc74398d1$exports = {};
$c68c2e4fc74398d1$exports = {
  "dismiss": `Schließen`
};

// node_modules/@react-aria/overlays/dist/el-GR.mjs
var $0898b4c153db2b77$exports = {};
$0898b4c153db2b77$exports = {
  "dismiss": `Απόρριψη`
};

// node_modules/@react-aria/overlays/dist/en-US.mjs
var $6d74810286a15183$exports = {};
$6d74810286a15183$exports = {
  "dismiss": `Dismiss`
};

// node_modules/@react-aria/overlays/dist/es-ES.mjs
var $309d73dc65f78055$exports = {};
$309d73dc65f78055$exports = {
  "dismiss": `Descartar`
};

// node_modules/@react-aria/overlays/dist/et-EE.mjs
var $44ad94f7205cf593$exports = {};
$44ad94f7205cf593$exports = {
  "dismiss": `Lõpeta`
};

// node_modules/@react-aria/overlays/dist/fi-FI.mjs
var $7c28f5687f0779a9$exports = {};
$7c28f5687f0779a9$exports = {
  "dismiss": `Hylkää`
};

// node_modules/@react-aria/overlays/dist/fr-FR.mjs
var $e6d75df4b68bd73a$exports = {};
$e6d75df4b68bd73a$exports = {
  "dismiss": `Rejeter`
};

// node_modules/@react-aria/overlays/dist/he-IL.mjs
var $87505c9dab186d0f$exports = {};
$87505c9dab186d0f$exports = {
  "dismiss": `התעלם`
};

// node_modules/@react-aria/overlays/dist/hr-HR.mjs
var $553439c3ffb3e492$exports = {};
$553439c3ffb3e492$exports = {
  "dismiss": `Odbaci`
};

// node_modules/@react-aria/overlays/dist/hu-HU.mjs
var $74cf411061b983a2$exports = {};
$74cf411061b983a2$exports = {
  "dismiss": `Elutasítás`
};

// node_modules/@react-aria/overlays/dist/it-IT.mjs
var $e933f298574dc435$exports = {};
$e933f298574dc435$exports = {
  "dismiss": `Ignora`
};

// node_modules/@react-aria/overlays/dist/ja-JP.mjs
var $ac91fc9fe02f71f6$exports = {};
$ac91fc9fe02f71f6$exports = {
  "dismiss": `閉じる`
};

// node_modules/@react-aria/overlays/dist/ko-KR.mjs
var $52b96f86422025af$exports = {};
$52b96f86422025af$exports = {
  "dismiss": `무시`
};

// node_modules/@react-aria/overlays/dist/lt-LT.mjs
var $c0d724c3e51dafa6$exports = {};
$c0d724c3e51dafa6$exports = {
  "dismiss": `Atmesti`
};

// node_modules/@react-aria/overlays/dist/lv-LV.mjs
var $c92899672a3fe72e$exports = {};
$c92899672a3fe72e$exports = {
  "dismiss": `Nerādīt`
};

// node_modules/@react-aria/overlays/dist/nb-NO.mjs
var $9f576b39d8e7a9d6$exports = {};
$9f576b39d8e7a9d6$exports = {
  "dismiss": `Lukk`
};

// node_modules/@react-aria/overlays/dist/nl-NL.mjs
var $9d025808aeec81a7$exports = {};
$9d025808aeec81a7$exports = {
  "dismiss": `Negeren`
};

// node_modules/@react-aria/overlays/dist/pl-PL.mjs
var $fce709921e2c0fa6$exports = {};
$fce709921e2c0fa6$exports = {
  "dismiss": `Zignoruj`
};

// node_modules/@react-aria/overlays/dist/pt-BR.mjs
var $2599cf0c4ab37f59$exports = {};
$2599cf0c4ab37f59$exports = {
  "dismiss": `Descartar`
};

// node_modules/@react-aria/overlays/dist/pt-PT.mjs
var $3c220ae7ef8a35fd$exports = {};
$3c220ae7ef8a35fd$exports = {
  "dismiss": `Dispensar`
};

// node_modules/@react-aria/overlays/dist/ro-RO.mjs
var $93562b5094072f54$exports = {};
$93562b5094072f54$exports = {
  "dismiss": `Revocare`
};

// node_modules/@react-aria/overlays/dist/ru-RU.mjs
var $cd9e2abd0d06c7b4$exports = {};
$cd9e2abd0d06c7b4$exports = {
  "dismiss": `Пропустить`
};

// node_modules/@react-aria/overlays/dist/sk-SK.mjs
var $45375701f409adf1$exports = {};
$45375701f409adf1$exports = {
  "dismiss": `Zrušiť`
};

// node_modules/@react-aria/overlays/dist/sl-SI.mjs
var $27fab53a576de9dd$exports = {};
$27fab53a576de9dd$exports = {
  "dismiss": `Opusti`
};

// node_modules/@react-aria/overlays/dist/sr-SP.mjs
var $4438748d9952e7c7$exports = {};
$4438748d9952e7c7$exports = {
  "dismiss": `Odbaci`
};

// node_modules/@react-aria/overlays/dist/sv-SE.mjs
var $0936d7347ef4da4c$exports = {};
$0936d7347ef4da4c$exports = {
  "dismiss": `Avvisa`
};

// node_modules/@react-aria/overlays/dist/tr-TR.mjs
var $29700c92185d38f8$exports = {};
$29700c92185d38f8$exports = {
  "dismiss": `Kapat`
};

// node_modules/@react-aria/overlays/dist/uk-UA.mjs
var $662ccaf2be4c25b3$exports = {};
$662ccaf2be4c25b3$exports = {
  "dismiss": `Скасувати`
};

// node_modules/@react-aria/overlays/dist/zh-CN.mjs
var $d80a27deda7cdb3c$exports = {};
$d80a27deda7cdb3c$exports = {
  "dismiss": `取消`
};

// node_modules/@react-aria/overlays/dist/zh-TW.mjs
var $2b2734393847c884$exports = {};
$2b2734393847c884$exports = {
  "dismiss": `關閉`
};

// node_modules/@react-aria/overlays/dist/intlStrings.mjs
var $a2f21f5f14f60553$exports = {};
$a2f21f5f14f60553$exports = {
  "ar-AE": $773d5888b972f1cf$exports,
  "bg-BG": $d11f19852b941573$exports,
  "cs-CZ": $b983974c2ee1efb3$exports,
  "da-DK": $5809cc9d4e92de73$exports,
  "de-DE": $c68c2e4fc74398d1$exports,
  "el-GR": $0898b4c153db2b77$exports,
  "en-US": $6d74810286a15183$exports,
  "es-ES": $309d73dc65f78055$exports,
  "et-EE": $44ad94f7205cf593$exports,
  "fi-FI": $7c28f5687f0779a9$exports,
  "fr-FR": $e6d75df4b68bd73a$exports,
  "he-IL": $87505c9dab186d0f$exports,
  "hr-HR": $553439c3ffb3e492$exports,
  "hu-HU": $74cf411061b983a2$exports,
  "it-IT": $e933f298574dc435$exports,
  "ja-JP": $ac91fc9fe02f71f6$exports,
  "ko-KR": $52b96f86422025af$exports,
  "lt-LT": $c0d724c3e51dafa6$exports,
  "lv-LV": $c92899672a3fe72e$exports,
  "nb-NO": $9f576b39d8e7a9d6$exports,
  "nl-NL": $9d025808aeec81a7$exports,
  "pl-PL": $fce709921e2c0fa6$exports,
  "pt-BR": $2599cf0c4ab37f59$exports,
  "pt-PT": $3c220ae7ef8a35fd$exports,
  "ro-RO": $93562b5094072f54$exports,
  "ru-RU": $cd9e2abd0d06c7b4$exports,
  "sk-SK": $45375701f409adf1$exports,
  "sl-SI": $27fab53a576de9dd$exports,
  "sr-SP": $4438748d9952e7c7$exports,
  "sv-SE": $0936d7347ef4da4c$exports,
  "tr-TR": $29700c92185d38f8$exports,
  "uk-UA": $662ccaf2be4c25b3$exports,
  "zh-CN": $d80a27deda7cdb3c$exports,
  "zh-TW": $2b2734393847c884$exports
};

// node_modules/@react-aria/overlays/dist/DismissButton.mjs
var import_react91 = __toESM(require_react(), 1);
function $parcel$interopDefault10(a) {
  return a && a.__esModule ? a.default : a;
}
function $86ea4cb521eb2e37$export$2317d149ed6f78c4(props) {
  let { onDismiss, ...otherProps } = props;
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault10($a2f21f5f14f60553$exports)), "@react-aria/overlays");
  let labels = (0, $313b98861ee5dd6c$export$d6875122194c7b44)(otherProps, stringFormatter.format("dismiss"));
  let onClick = () => {
    if (onDismiss) onDismiss();
  };
  return (0, import_react91.default).createElement((0, $5c3e21d68f1c4674$export$439d29a4e110a164), null, (0, import_react91.default).createElement("button", {
    ...labels,
    tabIndex: -1,
    onClick,
    style: {
      width: 1,
      height: 1
    }
  }));
}

// node_modules/@react-aria/overlays/dist/ariaHideOutside.mjs
var $5e3802645cc19319$var$refCountMap = /* @__PURE__ */ new WeakMap();
var $5e3802645cc19319$var$observerStack = [];
function $5e3802645cc19319$export$1c3ebcada18427bf(targets, root = document.body) {
  let visibleNodes = new Set(targets);
  let hiddenNodes = /* @__PURE__ */ new Set();
  let walk = (root2) => {
    for (let element of root2.querySelectorAll("[data-live-announcer], [data-react-aria-top-layer]")) visibleNodes.add(element);
    let acceptNode = (node) => {
      if (visibleNodes.has(node) || node.parentElement && hiddenNodes.has(node.parentElement) && node.parentElement.getAttribute("role") !== "row") return NodeFilter.FILTER_REJECT;
      for (let target of visibleNodes) {
        if (node.contains(target)) return NodeFilter.FILTER_SKIP;
      }
      return NodeFilter.FILTER_ACCEPT;
    };
    let walker = document.createTreeWalker(root2, NodeFilter.SHOW_ELEMENT, {
      acceptNode
    });
    let acceptRoot = acceptNode(root2);
    if (acceptRoot === NodeFilter.FILTER_ACCEPT) hide(root2);
    if (acceptRoot !== NodeFilter.FILTER_REJECT) {
      let node = walker.nextNode();
      while (node != null) {
        hide(node);
        node = walker.nextNode();
      }
    }
  };
  let hide = (node) => {
    var _refCountMap_get;
    let refCount = (_refCountMap_get = $5e3802645cc19319$var$refCountMap.get(node)) !== null && _refCountMap_get !== void 0 ? _refCountMap_get : 0;
    if (node.getAttribute("aria-hidden") === "true" && refCount === 0) return;
    if (refCount === 0) node.setAttribute("aria-hidden", "true");
    hiddenNodes.add(node);
    $5e3802645cc19319$var$refCountMap.set(node, refCount + 1);
  };
  if ($5e3802645cc19319$var$observerStack.length) $5e3802645cc19319$var$observerStack[$5e3802645cc19319$var$observerStack.length - 1].disconnect();
  walk(root);
  let observer = new MutationObserver((changes) => {
    for (let change of changes) {
      if (change.type !== "childList" || change.addedNodes.length === 0) continue;
      if (![
        ...visibleNodes,
        ...hiddenNodes
      ].some((node) => node.contains(change.target))) {
        for (let node of change.removedNodes) if (node instanceof Element) {
          visibleNodes.delete(node);
          hiddenNodes.delete(node);
        }
        for (let node of change.addedNodes) {
          if ((node instanceof HTMLElement || node instanceof SVGElement) && (node.dataset.liveAnnouncer === "true" || node.dataset.reactAriaTopLayer === "true")) visibleNodes.add(node);
          else if (node instanceof Element) walk(node);
        }
      }
    }
  });
  observer.observe(root, {
    childList: true,
    subtree: true
  });
  let observerWrapper = {
    visibleNodes,
    hiddenNodes,
    observe() {
      observer.observe(root, {
        childList: true,
        subtree: true
      });
    },
    disconnect() {
      observer.disconnect();
    }
  };
  $5e3802645cc19319$var$observerStack.push(observerWrapper);
  return () => {
    observer.disconnect();
    for (let node of hiddenNodes) {
      let count = $5e3802645cc19319$var$refCountMap.get(node);
      if (count == null) continue;
      if (count === 1) {
        node.removeAttribute("aria-hidden");
        $5e3802645cc19319$var$refCountMap.delete(node);
      } else $5e3802645cc19319$var$refCountMap.set(node, count - 1);
    }
    if (observerWrapper === $5e3802645cc19319$var$observerStack[$5e3802645cc19319$var$observerStack.length - 1]) {
      $5e3802645cc19319$var$observerStack.pop();
      if ($5e3802645cc19319$var$observerStack.length) $5e3802645cc19319$var$observerStack[$5e3802645cc19319$var$observerStack.length - 1].observe();
    } else $5e3802645cc19319$var$observerStack.splice($5e3802645cc19319$var$observerStack.indexOf(observerWrapper), 1);
  };
}
function $5e3802645cc19319$export$1020fa7f77e17884(element) {
  let observer = $5e3802645cc19319$var$observerStack[$5e3802645cc19319$var$observerStack.length - 1];
  if (observer && !observer.visibleNodes.has(element)) {
    observer.visibleNodes.add(element);
    return () => {
      observer.visibleNodes.delete(element);
    };
  }
}

// node_modules/@react-aria/overlays/dist/usePopover.mjs
function $f2f8a6077418541e$export$542a6fd13ac93354(props, state) {
  let { triggerRef, popoverRef, groupRef, isNonModal, isKeyboardDismissDisabled, shouldCloseOnInteractOutside, ...otherProps } = props;
  let isSubmenu = otherProps["trigger"] === "SubmenuTrigger";
  let { overlayProps, underlayProps } = (0, $a11501f3d1d39e6c$export$ea8f71083e90600f)({
    isOpen: state.isOpen,
    onClose: state.close,
    shouldCloseOnBlur: true,
    isDismissable: !isNonModal || isSubmenu,
    isKeyboardDismissDisabled,
    shouldCloseOnInteractOutside
  }, groupRef !== null && groupRef !== void 0 ? groupRef : popoverRef);
  let { overlayProps: positionProps, arrowProps, placement } = (0, $2a41e45df1593e64$export$d39e1813b3bdd0e1)({
    ...otherProps,
    targetRef: triggerRef,
    overlayRef: popoverRef,
    isOpen: state.isOpen,
    onClose: isNonModal && !isSubmenu ? state.close : null
  });
  (0, $49c51c25361d4cd2$export$ee0f7cc6afcd1c18)({
    isDisabled: isNonModal || !state.isOpen
  });
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    if (state.isOpen && popoverRef.current) {
      var _groupRef_current, _groupRef_current1;
      if (isNonModal) return (0, $5e3802645cc19319$export$1020fa7f77e17884)((_groupRef_current = groupRef === null || groupRef === void 0 ? void 0 : groupRef.current) !== null && _groupRef_current !== void 0 ? _groupRef_current : popoverRef.current);
      else return (0, $5e3802645cc19319$export$1c3ebcada18427bf)([
        (_groupRef_current1 = groupRef === null || groupRef === void 0 ? void 0 : groupRef.current) !== null && _groupRef_current1 !== void 0 ? _groupRef_current1 : popoverRef.current
      ]);
    }
  }, [
    isNonModal,
    state.isOpen,
    popoverRef,
    groupRef
  ]);
  return {
    popoverProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(overlayProps, positionProps),
    arrowProps,
    underlayProps,
    placement
  };
}

// node_modules/@react-aria/overlays/dist/Overlay.mjs
var import_react92 = __toESM(require_react(), 1);
var import_react_dom5 = __toESM(require_react_dom(), 1);
var $337b884510726a0d$export$a2200b96afd16271 = (0, import_react92.default).createContext(null);
function $337b884510726a0d$export$c6fdb837b070b4ff(props) {
  let isSSR = (0, $b5e257d569688ac6$export$535bd6ca7f90a273)();
  let { portalContainer = isSSR ? null : document.body, isExiting } = props;
  let [contain, setContain] = (0, import_react92.useState)(false);
  let contextValue = (0, import_react92.useMemo)(() => ({
    contain,
    setContain
  }), [
    contain,
    setContain
  ]);
  let { getContainer } = (0, $96b38030c423d352$export$9fc1347d4195ccb3)();
  if (!props.portalContainer && getContainer) portalContainer = getContainer();
  if (!portalContainer) return null;
  let contents = props.children;
  if (!props.disableFocusManagement) contents = (0, import_react92.default).createElement((0, $9bf71ea28793e738$export$20e40289641fbbb6), {
    restoreFocus: true,
    contain: (props.shouldContainFocus || contain) && !isExiting
  }, contents);
  contents = (0, import_react92.default).createElement($337b884510726a0d$export$a2200b96afd16271.Provider, {
    value: contextValue
  }, (0, import_react92.default).createElement((0, $f1ab8c75478c6f73$export$cf75428e0b9ed1ea), null, contents));
  return (0, import_react_dom5.default).createPortal(contents, portalContainer);
}
function $337b884510726a0d$export$14c98a7594375490() {
  let ctx = (0, import_react92.useContext)($337b884510726a0d$export$a2200b96afd16271);
  let setContain = ctx === null || ctx === void 0 ? void 0 : ctx.setContain;
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    setContain === null || setContain === void 0 ? void 0 : setContain(true);
  }, [
    setContain
  ]);
}

// node_modules/@react-aria/overlays/dist/useModalOverlay.mjs
var import_react93 = __toESM(require_react(), 1);
function $8ac8429251c45e4b$export$dbc0f175b25fb0fb(props, state, ref) {
  let { overlayProps, underlayProps } = (0, $a11501f3d1d39e6c$export$ea8f71083e90600f)({
    ...props,
    isOpen: state.isOpen,
    onClose: state.close
  }, ref);
  (0, $49c51c25361d4cd2$export$ee0f7cc6afcd1c18)({
    isDisabled: !state.isOpen
  });
  (0, $337b884510726a0d$export$14c98a7594375490)();
  (0, import_react93.useEffect)(() => {
    if (state.isOpen && ref.current) return (0, $5e3802645cc19319$export$1c3ebcada18427bf)([
      ref.current
    ]);
  }, [
    state.isOpen,
    ref
  ]);
  return {
    modalProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(overlayProps),
    underlayProps
  };
}

// node_modules/@react-aria/listbox/dist/utils.mjs
var $b1f0cad8af73213b$export$3585ede4d035bf14 = /* @__PURE__ */ new WeakMap();
function $b1f0cad8af73213b$var$normalizeKey(key) {
  if (typeof key === "string") return key.replace(/\s*/g, "");
  return "" + key;
}
function $b1f0cad8af73213b$export$9145995848b05025(state, itemKey) {
  let data = $b1f0cad8af73213b$export$3585ede4d035bf14.get(state);
  if (!data) throw new Error("Unknown list");
  return `${data.id}-option-${$b1f0cad8af73213b$var$normalizeKey(itemKey)}`;
}

// node_modules/@react-aria/selection/dist/utils.mjs
function $feb5ffebff200149$export$d3e3bd3e26688c04(e) {
  return (0, $c87311424ea30a05$export$e1865c3bedcd822b)() ? e.altKey : e.ctrlKey;
}
function $feb5ffebff200149$export$c3d8340acf92597f(collectionRef, key) {
  var _collectionRef_current, _collectionRef_current1;
  let selector = `[data-key="${CSS.escape(String(key))}"]`;
  let collection = (_collectionRef_current = collectionRef.current) === null || _collectionRef_current === void 0 ? void 0 : _collectionRef_current.dataset.collection;
  if (collection) selector = `[data-collection="${CSS.escape(collection)}"]${selector}`;
  return (_collectionRef_current1 = collectionRef.current) === null || _collectionRef_current1 === void 0 ? void 0 : _collectionRef_current1.querySelector(selector);
}
var $feb5ffebff200149$var$collectionMap = /* @__PURE__ */ new WeakMap();
function $feb5ffebff200149$export$881eb0d9f3605d9d(collection) {
  let id = (0, $bdb11010cef70236$export$f680877a34711e37)();
  $feb5ffebff200149$var$collectionMap.set(collection, id);
  return id;
}
function $feb5ffebff200149$export$6aeb1680a0ae8741(collection) {
  return $feb5ffebff200149$var$collectionMap.get(collection);
}

// node_modules/@react-aria/selection/dist/useTypeSelect.mjs
var import_react94 = __toESM(require_react(), 1);
var $fb3050f43d946246$var$TYPEAHEAD_DEBOUNCE_WAIT_MS = 1e3;
function $fb3050f43d946246$export$e32c88dfddc6e1d8(options) {
  let { keyboardDelegate, selectionManager, onTypeSelect } = options;
  let state = (0, import_react94.useRef)({
    search: "",
    timeout: void 0
  }).current;
  let onKeyDown = (e) => {
    let character = $fb3050f43d946246$var$getStringForKey(e.key);
    if (!character || e.ctrlKey || e.metaKey || !e.currentTarget.contains(e.target)) return;
    if (character === " " && state.search.trim().length > 0) {
      e.preventDefault();
      if (!("continuePropagation" in e)) e.stopPropagation();
    }
    state.search += character;
    if (keyboardDelegate.getKeyForSearch != null) {
      let key = keyboardDelegate.getKeyForSearch(state.search, selectionManager.focusedKey);
      if (key == null) key = keyboardDelegate.getKeyForSearch(state.search);
      if (key != null) {
        selectionManager.setFocusedKey(key);
        if (onTypeSelect) onTypeSelect(key);
      }
    }
    clearTimeout(state.timeout);
    state.timeout = setTimeout(() => {
      state.search = "";
    }, $fb3050f43d946246$var$TYPEAHEAD_DEBOUNCE_WAIT_MS);
  };
  return {
    typeSelectProps: {
      // Using a capturing listener to catch the keydown event before
      // other hooks in order to handle the Spacebar event.
      onKeyDownCapture: keyboardDelegate.getKeyForSearch ? onKeyDown : void 0
    }
  };
}
function $fb3050f43d946246$var$getStringForKey(key) {
  if (key.length === 1 || !/^[A-Z]/i.test(key)) return key;
  return "";
}

// node_modules/@react-aria/selection/dist/useSelectableCollection.mjs
var import_react_dom6 = __toESM(require_react_dom(), 1);
var import_react95 = __toESM(require_react(), 1);
function $ae20dd8cbca75726$export$d6daf82dcd84e87c(options) {
  let { selectionManager: manager, keyboardDelegate: delegate, ref, autoFocus = false, shouldFocusWrap = false, disallowEmptySelection = false, disallowSelectAll = false, escapeKeyBehavior = "clearSelection", selectOnFocus = manager.selectionBehavior === "replace", disallowTypeAhead = false, shouldUseVirtualFocus, allowsTabNavigation = false, isVirtualized, scrollRef = ref, linkBehavior = "action" } = options;
  let { direction } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let router = (0, $ea8dcbcb9ea1b556$export$9a302a45f65d0572)();
  let onKeyDown = (e) => {
    var _ref_current;
    if (e.altKey && e.key === "Tab") e.preventDefault();
    if (!((_ref_current = ref.current) === null || _ref_current === void 0 ? void 0 : _ref_current.contains(e.target))) return;
    const navigateToKey = (key, childFocus) => {
      if (key != null) {
        if (manager.isLink(key) && linkBehavior === "selection" && selectOnFocus && !(0, $feb5ffebff200149$export$d3e3bd3e26688c04)(e)) {
          (0, import_react_dom6.flushSync)(() => {
            manager.setFocusedKey(key, childFocus);
          });
          let item = (0, $feb5ffebff200149$export$c3d8340acf92597f)(ref, key);
          let itemProps = manager.getItemProps(key);
          if (item) router.open(item, e, itemProps.href, itemProps.routerOptions);
          return;
        }
        manager.setFocusedKey(key, childFocus);
        if (manager.isLink(key) && linkBehavior === "override") return;
        if (e.shiftKey && manager.selectionMode === "multiple") manager.extendSelection(key);
        else if (selectOnFocus && !(0, $feb5ffebff200149$export$d3e3bd3e26688c04)(e)) manager.replaceSelection(key);
      }
    };
    switch (e.key) {
      case "ArrowDown":
        if (delegate.getKeyBelow) {
          var _delegate_getKeyBelow, _delegate_getFirstKey, _delegate_getFirstKey1;
          let nextKey = manager.focusedKey != null ? (_delegate_getKeyBelow = delegate.getKeyBelow) === null || _delegate_getKeyBelow === void 0 ? void 0 : _delegate_getKeyBelow.call(delegate, manager.focusedKey) : (_delegate_getFirstKey = delegate.getFirstKey) === null || _delegate_getFirstKey === void 0 ? void 0 : _delegate_getFirstKey.call(delegate);
          if (nextKey == null && shouldFocusWrap) nextKey = (_delegate_getFirstKey1 = delegate.getFirstKey) === null || _delegate_getFirstKey1 === void 0 ? void 0 : _delegate_getFirstKey1.call(delegate, manager.focusedKey);
          if (nextKey != null) {
            e.preventDefault();
            navigateToKey(nextKey);
          }
        }
        break;
      case "ArrowUp":
        if (delegate.getKeyAbove) {
          var _delegate_getKeyAbove, _delegate_getLastKey, _delegate_getLastKey1;
          let nextKey = manager.focusedKey != null ? (_delegate_getKeyAbove = delegate.getKeyAbove) === null || _delegate_getKeyAbove === void 0 ? void 0 : _delegate_getKeyAbove.call(delegate, manager.focusedKey) : (_delegate_getLastKey = delegate.getLastKey) === null || _delegate_getLastKey === void 0 ? void 0 : _delegate_getLastKey.call(delegate);
          if (nextKey == null && shouldFocusWrap) nextKey = (_delegate_getLastKey1 = delegate.getLastKey) === null || _delegate_getLastKey1 === void 0 ? void 0 : _delegate_getLastKey1.call(delegate, manager.focusedKey);
          if (nextKey != null) {
            e.preventDefault();
            navigateToKey(nextKey);
          }
        }
        break;
      case "ArrowLeft":
        if (delegate.getKeyLeftOf) {
          var _delegate_getKeyLeftOf, _delegate_getFirstKey2, _delegate_getLastKey2;
          let nextKey = manager.focusedKey != null ? (_delegate_getKeyLeftOf = delegate.getKeyLeftOf) === null || _delegate_getKeyLeftOf === void 0 ? void 0 : _delegate_getKeyLeftOf.call(delegate, manager.focusedKey) : null;
          if (nextKey == null && shouldFocusWrap) nextKey = direction === "rtl" ? (_delegate_getFirstKey2 = delegate.getFirstKey) === null || _delegate_getFirstKey2 === void 0 ? void 0 : _delegate_getFirstKey2.call(delegate, manager.focusedKey) : (_delegate_getLastKey2 = delegate.getLastKey) === null || _delegate_getLastKey2 === void 0 ? void 0 : _delegate_getLastKey2.call(delegate, manager.focusedKey);
          if (nextKey != null) {
            e.preventDefault();
            navigateToKey(nextKey, direction === "rtl" ? "first" : "last");
          }
        }
        break;
      case "ArrowRight":
        if (delegate.getKeyRightOf) {
          var _delegate_getKeyRightOf, _delegate_getLastKey3, _delegate_getFirstKey3;
          let nextKey = manager.focusedKey != null ? (_delegate_getKeyRightOf = delegate.getKeyRightOf) === null || _delegate_getKeyRightOf === void 0 ? void 0 : _delegate_getKeyRightOf.call(delegate, manager.focusedKey) : null;
          if (nextKey == null && shouldFocusWrap) nextKey = direction === "rtl" ? (_delegate_getLastKey3 = delegate.getLastKey) === null || _delegate_getLastKey3 === void 0 ? void 0 : _delegate_getLastKey3.call(delegate, manager.focusedKey) : (_delegate_getFirstKey3 = delegate.getFirstKey) === null || _delegate_getFirstKey3 === void 0 ? void 0 : _delegate_getFirstKey3.call(delegate, manager.focusedKey);
          if (nextKey != null) {
            e.preventDefault();
            navigateToKey(nextKey, direction === "rtl" ? "last" : "first");
          }
        }
        break;
      case "Home":
        if (delegate.getFirstKey) {
          if (manager.focusedKey === null && e.shiftKey) return;
          e.preventDefault();
          let firstKey = delegate.getFirstKey(manager.focusedKey, (0, $21f1aa98acb08317$export$16792effe837dba3)(e));
          manager.setFocusedKey(firstKey);
          if (firstKey != null) {
            if ((0, $21f1aa98acb08317$export$16792effe837dba3)(e) && e.shiftKey && manager.selectionMode === "multiple") manager.extendSelection(firstKey);
            else if (selectOnFocus) manager.replaceSelection(firstKey);
          }
        }
        break;
      case "End":
        if (delegate.getLastKey) {
          if (manager.focusedKey === null && e.shiftKey) return;
          e.preventDefault();
          let lastKey = delegate.getLastKey(manager.focusedKey, (0, $21f1aa98acb08317$export$16792effe837dba3)(e));
          manager.setFocusedKey(lastKey);
          if (lastKey != null) {
            if ((0, $21f1aa98acb08317$export$16792effe837dba3)(e) && e.shiftKey && manager.selectionMode === "multiple") manager.extendSelection(lastKey);
            else if (selectOnFocus) manager.replaceSelection(lastKey);
          }
        }
        break;
      case "PageDown":
        if (delegate.getKeyPageBelow && manager.focusedKey != null) {
          let nextKey = delegate.getKeyPageBelow(manager.focusedKey);
          if (nextKey != null) {
            e.preventDefault();
            navigateToKey(nextKey);
          }
        }
        break;
      case "PageUp":
        if (delegate.getKeyPageAbove && manager.focusedKey != null) {
          let nextKey = delegate.getKeyPageAbove(manager.focusedKey);
          if (nextKey != null) {
            e.preventDefault();
            navigateToKey(nextKey);
          }
        }
        break;
      case "a":
        if ((0, $21f1aa98acb08317$export$16792effe837dba3)(e) && manager.selectionMode === "multiple" && disallowSelectAll !== true) {
          e.preventDefault();
          manager.selectAll();
        }
        break;
      case "Escape":
        if (escapeKeyBehavior === "clearSelection" && !disallowEmptySelection && manager.selectedKeys.size !== 0) {
          e.stopPropagation();
          e.preventDefault();
          manager.clearSelection();
        }
        break;
      case "Tab":
        if (!allowsTabNavigation) {
          if (e.shiftKey) ref.current.focus();
          else {
            let walker = (0, $9bf71ea28793e738$export$2d6ec8fc375ceafa)(ref.current, {
              tabbable: true
            });
            let next = void 0;
            let last;
            do {
              last = walker.lastChild();
              if (last) next = last;
            } while (last);
            if (next && !next.contains(document.activeElement)) (0, $7215afc6de606d6b$export$de79e2c695e052f3)(next);
          }
          break;
        }
    }
  };
  let scrollPos = (0, import_react95.useRef)({
    top: 0,
    left: 0
  });
  (0, $e9faafb641e167db$export$90fc3a17d93f704c)(scrollRef, "scroll", isVirtualized ? void 0 : () => {
    var _scrollRef_current, _scrollRef_current1;
    var _scrollRef_current_scrollTop, _scrollRef_current_scrollLeft;
    scrollPos.current = {
      top: (_scrollRef_current_scrollTop = (_scrollRef_current = scrollRef.current) === null || _scrollRef_current === void 0 ? void 0 : _scrollRef_current.scrollTop) !== null && _scrollRef_current_scrollTop !== void 0 ? _scrollRef_current_scrollTop : 0,
      left: (_scrollRef_current_scrollLeft = (_scrollRef_current1 = scrollRef.current) === null || _scrollRef_current1 === void 0 ? void 0 : _scrollRef_current1.scrollLeft) !== null && _scrollRef_current_scrollLeft !== void 0 ? _scrollRef_current_scrollLeft : 0
    };
  });
  let onFocus = (e) => {
    if (manager.isFocused) {
      if (!e.currentTarget.contains(e.target)) manager.setFocused(false);
      return;
    }
    if (!e.currentTarget.contains(e.target)) return;
    manager.setFocused(true);
    if (manager.focusedKey == null) {
      var _delegate_getLastKey, _delegate_getFirstKey;
      let navigateToKey = (key) => {
        if (key != null) {
          manager.setFocusedKey(key);
          if (selectOnFocus && !manager.isSelected(key)) manager.replaceSelection(key);
        }
      };
      let relatedTarget = e.relatedTarget;
      var _manager_lastSelectedKey, _manager_firstSelectedKey;
      if (relatedTarget && e.currentTarget.compareDocumentPosition(relatedTarget) & Node.DOCUMENT_POSITION_FOLLOWING) navigateToKey((_manager_lastSelectedKey = manager.lastSelectedKey) !== null && _manager_lastSelectedKey !== void 0 ? _manager_lastSelectedKey : (_delegate_getLastKey = delegate.getLastKey) === null || _delegate_getLastKey === void 0 ? void 0 : _delegate_getLastKey.call(delegate));
      else navigateToKey((_manager_firstSelectedKey = manager.firstSelectedKey) !== null && _manager_firstSelectedKey !== void 0 ? _manager_firstSelectedKey : (_delegate_getFirstKey = delegate.getFirstKey) === null || _delegate_getFirstKey === void 0 ? void 0 : _delegate_getFirstKey.call(delegate));
    } else if (!isVirtualized && scrollRef.current) {
      scrollRef.current.scrollTop = scrollPos.current.top;
      scrollRef.current.scrollLeft = scrollPos.current.left;
    }
    if (manager.focusedKey != null && scrollRef.current) {
      let element = (0, $feb5ffebff200149$export$c3d8340acf92597f)(ref, manager.focusedKey);
      if (element instanceof HTMLElement) {
        if (!element.contains(document.activeElement) && !shouldUseVirtualFocus) (0, $7215afc6de606d6b$export$de79e2c695e052f3)(element);
        let modality = (0, $507fabe10e71c6fb$export$630ff653c5ada6a9)();
        if (modality === "keyboard") (0, $2f04cbc44ee30ce0$export$c826860796309d1b)(element, {
          containingElement: ref.current
        });
      }
    }
  };
  let onBlur = (e) => {
    if (!e.currentTarget.contains(e.relatedTarget)) manager.setFocused(false);
  };
  let shouldVirtualFocusFirst = (0, import_react95.useRef)(false);
  (0, $e9faafb641e167db$export$90fc3a17d93f704c)(ref, (0, $5671b20cf9b562b2$export$831c820ad60f9d12), !shouldUseVirtualFocus ? void 0 : (e) => {
    let { detail } = e;
    e.stopPropagation();
    manager.setFocused(true);
    if ((detail === null || detail === void 0 ? void 0 : detail.focusStrategy) === "first") shouldVirtualFocusFirst.current = true;
  });
  let updateActiveDescendant = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)(() => {
    var _delegate_getFirstKey;
    var _delegate_getFirstKey1;
    let keyToFocus = (_delegate_getFirstKey1 = (_delegate_getFirstKey = delegate.getFirstKey) === null || _delegate_getFirstKey === void 0 ? void 0 : _delegate_getFirstKey.call(delegate)) !== null && _delegate_getFirstKey1 !== void 0 ? _delegate_getFirstKey1 : null;
    if (keyToFocus == null) {
      (0, $55f9b1ae81f22853$export$76e4e37e5339496d)(ref.current);
      if (manager.collection.size > 0) shouldVirtualFocusFirst.current = false;
    } else {
      manager.setFocusedKey(keyToFocus);
      shouldVirtualFocusFirst.current = false;
    }
  });
  (0, $ca9b37712f007381$export$72ef708ab07251f1)(() => {
    if (shouldVirtualFocusFirst.current) updateActiveDescendant();
  }, [
    manager.collection,
    updateActiveDescendant
  ]);
  let resetFocusFirstFlag = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)(() => {
    if (manager.collection.size > 0) shouldVirtualFocusFirst.current = false;
  });
  (0, $ca9b37712f007381$export$72ef708ab07251f1)(() => {
    resetFocusFirstFlag();
  }, [
    manager.focusedKey,
    resetFocusFirstFlag
  ]);
  (0, $e9faafb641e167db$export$90fc3a17d93f704c)(ref, (0, $5671b20cf9b562b2$export$447a38995de2c711), !shouldUseVirtualFocus ? void 0 : (e) => {
    var _e_detail;
    e.stopPropagation();
    manager.setFocused(false);
    if ((_e_detail = e.detail) === null || _e_detail === void 0 ? void 0 : _e_detail.clearFocusKey) manager.setFocusedKey(null);
  });
  const autoFocusRef = (0, import_react95.useRef)(autoFocus);
  const didAutoFocusRef = (0, import_react95.useRef)(false);
  (0, import_react95.useEffect)(() => {
    if (autoFocusRef.current) {
      var _delegate_getFirstKey, _delegate_getLastKey;
      let focusedKey = null;
      var _delegate_getFirstKey1;
      if (autoFocus === "first") focusedKey = (_delegate_getFirstKey1 = (_delegate_getFirstKey = delegate.getFirstKey) === null || _delegate_getFirstKey === void 0 ? void 0 : _delegate_getFirstKey.call(delegate)) !== null && _delegate_getFirstKey1 !== void 0 ? _delegate_getFirstKey1 : null;
      var _delegate_getLastKey1;
      if (autoFocus === "last") focusedKey = (_delegate_getLastKey1 = (_delegate_getLastKey = delegate.getLastKey) === null || _delegate_getLastKey === void 0 ? void 0 : _delegate_getLastKey.call(delegate)) !== null && _delegate_getLastKey1 !== void 0 ? _delegate_getLastKey1 : null;
      let selectedKeys = manager.selectedKeys;
      if (selectedKeys.size) {
        for (let key of selectedKeys) if (manager.canSelectItem(key)) {
          focusedKey = key;
          break;
        }
      }
      manager.setFocused(true);
      manager.setFocusedKey(focusedKey);
      if (focusedKey == null && !shouldUseVirtualFocus && ref.current) (0, $3ad3f6e1647bc98d$export$80f3e147d781571c)(ref.current);
      if (manager.collection.size > 0) {
        autoFocusRef.current = false;
        didAutoFocusRef.current = true;
      }
    }
  });
  let lastFocusedKey = (0, import_react95.useRef)(manager.focusedKey);
  let raf = (0, import_react95.useRef)(null);
  (0, import_react95.useEffect)(() => {
    if (manager.isFocused && manager.focusedKey != null && (manager.focusedKey !== lastFocusedKey.current || didAutoFocusRef.current) && scrollRef.current && ref.current) {
      let modality = (0, $507fabe10e71c6fb$export$630ff653c5ada6a9)();
      let element = (0, $feb5ffebff200149$export$c3d8340acf92597f)(ref, manager.focusedKey);
      if (!(element instanceof HTMLElement))
        return;
      if (modality === "keyboard" || didAutoFocusRef.current) {
        if (raf.current) cancelAnimationFrame(raf.current);
        raf.current = requestAnimationFrame(() => {
          if (scrollRef.current) {
            (0, $2f04cbc44ee30ce0$export$53a0910f038337bd)(scrollRef.current, element);
            if (modality !== "virtual") (0, $2f04cbc44ee30ce0$export$c826860796309d1b)(element, {
              containingElement: ref.current
            });
          }
        });
      }
    }
    if (!shouldUseVirtualFocus && manager.isFocused && manager.focusedKey == null && lastFocusedKey.current != null && ref.current) (0, $3ad3f6e1647bc98d$export$80f3e147d781571c)(ref.current);
    lastFocusedKey.current = manager.focusedKey;
    didAutoFocusRef.current = false;
  });
  (0, import_react95.useEffect)(() => {
    return () => {
      if (raf.current) cancelAnimationFrame(raf.current);
    };
  }, []);
  (0, $e9faafb641e167db$export$90fc3a17d93f704c)(ref, "react-aria-focus-scope-restore", (e) => {
    e.preventDefault();
    manager.setFocused(true);
  });
  let handlers = {
    onKeyDown,
    onFocus,
    onBlur,
    onMouseDown(e) {
      if (scrollRef.current === e.target)
        e.preventDefault();
    }
  };
  let { typeSelectProps } = (0, $fb3050f43d946246$export$e32c88dfddc6e1d8)({
    keyboardDelegate: delegate,
    selectionManager: manager
  });
  if (!disallowTypeAhead) handlers = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(typeSelectProps, handlers);
  let tabIndex = void 0;
  if (!shouldUseVirtualFocus) tabIndex = manager.focusedKey == null ? 0 : -1;
  let collectionId = (0, $feb5ffebff200149$export$881eb0d9f3605d9d)(manager.collection);
  return {
    collectionProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(handlers, {
      tabIndex,
      "data-collection": collectionId
    })
  };
}

// node_modules/@react-aria/selection/dist/useSelectableItem.mjs
var import_react96 = __toESM(require_react(), 1);
function $880e95eb8b93ba9a$export$ecf600387e221c37(options) {
  let { id, selectionManager: manager, key, ref, shouldSelectOnPressUp, shouldUseVirtualFocus, focus, isDisabled, onAction, allowsDifferentPressOrigin, linkBehavior = "action" } = options;
  let router = (0, $ea8dcbcb9ea1b556$export$9a302a45f65d0572)();
  id = (0, $bdb11010cef70236$export$f680877a34711e37)(id);
  let onSelect = (e) => {
    if (e.pointerType === "keyboard" && (0, $feb5ffebff200149$export$d3e3bd3e26688c04)(e)) manager.toggleSelection(key);
    else {
      if (manager.selectionMode === "none") return;
      if (manager.isLink(key)) {
        if (linkBehavior === "selection" && ref.current) {
          let itemProps2 = manager.getItemProps(key);
          router.open(ref.current, e, itemProps2.href, itemProps2.routerOptions);
          manager.setSelectedKeys(manager.selectedKeys);
          return;
        } else if (linkBehavior === "override" || linkBehavior === "none") return;
      }
      if (manager.selectionMode === "single") {
        if (manager.isSelected(key) && !manager.disallowEmptySelection) manager.toggleSelection(key);
        else manager.replaceSelection(key);
      } else if (e && e.shiftKey) manager.extendSelection(key);
      else if (manager.selectionBehavior === "toggle" || e && ((0, $21f1aa98acb08317$export$16792effe837dba3)(e) || e.pointerType === "touch" || e.pointerType === "virtual"))
        manager.toggleSelection(key);
      else manager.replaceSelection(key);
    }
  };
  (0, import_react96.useEffect)(() => {
    let isFocused = key === manager.focusedKey;
    if (isFocused && manager.isFocused) {
      if (!shouldUseVirtualFocus) {
        if (focus) focus();
        else if (document.activeElement !== ref.current && ref.current) (0, $3ad3f6e1647bc98d$export$80f3e147d781571c)(ref.current);
      } else (0, $55f9b1ae81f22853$export$76e4e37e5339496d)(ref.current);
    }
  }, [
    ref,
    key,
    manager.focusedKey,
    manager.childFocusStrategy,
    manager.isFocused,
    shouldUseVirtualFocus
  ]);
  isDisabled = isDisabled || manager.isDisabled(key);
  let itemProps = {};
  if (!shouldUseVirtualFocus && !isDisabled) itemProps = {
    tabIndex: key === manager.focusedKey ? 0 : -1,
    onFocus(e) {
      if (e.target === ref.current) manager.setFocusedKey(key);
    }
  };
  else if (isDisabled) itemProps.onMouseDown = (e) => {
    e.preventDefault();
  };
  let isLinkOverride = manager.isLink(key) && linkBehavior === "override";
  let hasLinkAction = manager.isLink(key) && linkBehavior !== "selection" && linkBehavior !== "none";
  let allowsSelection = !isDisabled && manager.canSelectItem(key) && !isLinkOverride;
  let allowsActions = (onAction || hasLinkAction) && !isDisabled;
  let hasPrimaryAction = allowsActions && (manager.selectionBehavior === "replace" ? !allowsSelection : !allowsSelection || manager.isEmpty);
  let hasSecondaryAction = allowsActions && allowsSelection && manager.selectionBehavior === "replace";
  let hasAction = hasPrimaryAction || hasSecondaryAction;
  let modality = (0, import_react96.useRef)(null);
  let longPressEnabled = hasAction && allowsSelection;
  let longPressEnabledOnPressStart = (0, import_react96.useRef)(false);
  let hadPrimaryActionOnPressStart = (0, import_react96.useRef)(false);
  let performAction = (e) => {
    if (onAction) onAction();
    if (hasLinkAction && ref.current) {
      let itemProps2 = manager.getItemProps(key);
      router.open(ref.current, e, itemProps2.href, itemProps2.routerOptions);
    }
  };
  let itemPressProps = {
    ref
  };
  if (shouldSelectOnPressUp) {
    itemPressProps.onPressStart = (e) => {
      modality.current = e.pointerType;
      longPressEnabledOnPressStart.current = longPressEnabled;
      if (e.pointerType === "keyboard" && (!hasAction || $880e95eb8b93ba9a$var$isSelectionKey())) onSelect(e);
    };
    if (!allowsDifferentPressOrigin) itemPressProps.onPress = (e) => {
      if (hasPrimaryAction || hasSecondaryAction && e.pointerType !== "mouse") {
        if (e.pointerType === "keyboard" && !$880e95eb8b93ba9a$var$isActionKey()) return;
        performAction(e);
      } else if (e.pointerType !== "keyboard" && allowsSelection) onSelect(e);
    };
    else {
      itemPressProps.onPressUp = hasPrimaryAction ? void 0 : (e) => {
        if (e.pointerType === "mouse" && allowsSelection) onSelect(e);
      };
      itemPressProps.onPress = hasPrimaryAction ? performAction : (e) => {
        if (e.pointerType !== "keyboard" && e.pointerType !== "mouse" && allowsSelection) onSelect(e);
      };
    }
  } else {
    itemPressProps.onPressStart = (e) => {
      modality.current = e.pointerType;
      longPressEnabledOnPressStart.current = longPressEnabled;
      hadPrimaryActionOnPressStart.current = hasPrimaryAction;
      if (allowsSelection && (e.pointerType === "mouse" && !hasPrimaryAction || e.pointerType === "keyboard" && (!allowsActions || $880e95eb8b93ba9a$var$isSelectionKey()))) onSelect(e);
    };
    itemPressProps.onPress = (e) => {
      if (e.pointerType === "touch" || e.pointerType === "pen" || e.pointerType === "virtual" || e.pointerType === "keyboard" && hasAction && $880e95eb8b93ba9a$var$isActionKey() || e.pointerType === "mouse" && hadPrimaryActionOnPressStart.current) {
        if (hasAction) performAction(e);
        else if (allowsSelection) onSelect(e);
      }
    };
  }
  itemProps["data-collection"] = (0, $feb5ffebff200149$export$6aeb1680a0ae8741)(manager.collection);
  itemProps["data-key"] = key;
  itemPressProps.preventFocusOnPress = shouldUseVirtualFocus;
  if (shouldUseVirtualFocus) itemPressProps = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(itemPressProps, {
    onPressStart(e) {
      if (e.pointerType !== "touch") {
        manager.setFocused(true);
        manager.setFocusedKey(key);
      }
    },
    onPress(e) {
      if (e.pointerType === "touch") {
        manager.setFocused(true);
        manager.setFocusedKey(key);
      }
    }
  });
  let { pressProps, isPressed } = (0, $f6c31cce2adf654f$export$45712eceda6fad21)(itemPressProps);
  let onDoubleClick = hasSecondaryAction ? (e) => {
    if (modality.current === "mouse") {
      e.stopPropagation();
      e.preventDefault();
      performAction(e);
    }
  } : void 0;
  let { longPressProps } = (0, $8a26561d2877236e$export$c24ed0104d07eab9)({
    isDisabled: !longPressEnabled,
    onLongPress(e) {
      if (e.pointerType === "touch") {
        onSelect(e);
        manager.setSelectionBehavior("toggle");
      }
    }
  });
  let onDragStartCapture = (e) => {
    if (modality.current === "touch" && longPressEnabledOnPressStart.current) e.preventDefault();
  };
  let onClick = manager.isLink(key) ? (e) => {
    if (!(0, $ea8dcbcb9ea1b556$export$95185d699e05d4d7).isOpening) e.preventDefault();
  } : void 0;
  return {
    itemProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(
      itemProps,
      allowsSelection || hasPrimaryAction || shouldUseVirtualFocus && !isDisabled ? pressProps : {},
      longPressEnabled ? longPressProps : {},
      {
        onDoubleClick,
        onDragStartCapture,
        onClick,
        id
      },
      // Prevent DOM focus from moving on mouse down when using virtual focus
      shouldUseVirtualFocus ? {
        onMouseDown: (e) => e.preventDefault()
      } : void 0
    ),
    isPressed,
    isSelected: manager.isSelected(key),
    isFocused: manager.isFocused && manager.focusedKey === key,
    isDisabled,
    allowsSelection,
    hasAction
  };
}
function $880e95eb8b93ba9a$var$isActionKey() {
  let event = window.event;
  return (event === null || event === void 0 ? void 0 : event.key) === "Enter";
}
function $880e95eb8b93ba9a$var$isSelectionKey() {
  let event = window.event;
  return (event === null || event === void 0 ? void 0 : event.key) === " " || (event === null || event === void 0 ? void 0 : event.code) === "Space";
}

// node_modules/@react-aria/selection/dist/DOMLayoutDelegate.mjs
var $657e4dc4a6e88df0$export$8f5ed9ff9f511381 = class {
  getItemRect(key) {
    let container = this.ref.current;
    if (!container) return null;
    let item = key != null ? (0, $feb5ffebff200149$export$c3d8340acf92597f)(this.ref, key) : null;
    if (!item) return null;
    let containerRect = container.getBoundingClientRect();
    let itemRect = item.getBoundingClientRect();
    return {
      x: itemRect.left - containerRect.left + container.scrollLeft,
      y: itemRect.top - containerRect.top + container.scrollTop,
      width: itemRect.width,
      height: itemRect.height
    };
  }
  getContentSize() {
    let container = this.ref.current;
    var _container_scrollWidth, _container_scrollHeight;
    return {
      width: (_container_scrollWidth = container === null || container === void 0 ? void 0 : container.scrollWidth) !== null && _container_scrollWidth !== void 0 ? _container_scrollWidth : 0,
      height: (_container_scrollHeight = container === null || container === void 0 ? void 0 : container.scrollHeight) !== null && _container_scrollHeight !== void 0 ? _container_scrollHeight : 0
    };
  }
  getVisibleRect() {
    let container = this.ref.current;
    var _container_scrollLeft, _container_scrollTop, _container_offsetWidth, _container_offsetHeight;
    return {
      x: (_container_scrollLeft = container === null || container === void 0 ? void 0 : container.scrollLeft) !== null && _container_scrollLeft !== void 0 ? _container_scrollLeft : 0,
      y: (_container_scrollTop = container === null || container === void 0 ? void 0 : container.scrollTop) !== null && _container_scrollTop !== void 0 ? _container_scrollTop : 0,
      width: (_container_offsetWidth = container === null || container === void 0 ? void 0 : container.offsetWidth) !== null && _container_offsetWidth !== void 0 ? _container_offsetWidth : 0,
      height: (_container_offsetHeight = container === null || container === void 0 ? void 0 : container.offsetHeight) !== null && _container_offsetHeight !== void 0 ? _container_offsetHeight : 0
    };
  }
  constructor(ref) {
    this.ref = ref;
  }
};

// node_modules/@react-aria/selection/dist/ListKeyboardDelegate.mjs
var $2a25aae57d74318e$export$a05409b8bb224a5a = class {
  isDisabled(item) {
    var _item_props;
    return this.disabledBehavior === "all" && (((_item_props = item.props) === null || _item_props === void 0 ? void 0 : _item_props.isDisabled) || this.disabledKeys.has(item.key));
  }
  findNextNonDisabled(key, getNext) {
    let nextKey = key;
    while (nextKey != null) {
      let item = this.collection.getItem(nextKey);
      if ((item === null || item === void 0 ? void 0 : item.type) === "item" && !this.isDisabled(item)) return nextKey;
      nextKey = getNext(nextKey);
    }
    return null;
  }
  getNextKey(key) {
    let nextKey = key;
    nextKey = this.collection.getKeyAfter(nextKey);
    return this.findNextNonDisabled(nextKey, (key2) => this.collection.getKeyAfter(key2));
  }
  getPreviousKey(key) {
    let nextKey = key;
    nextKey = this.collection.getKeyBefore(nextKey);
    return this.findNextNonDisabled(nextKey, (key2) => this.collection.getKeyBefore(key2));
  }
  findKey(key, nextKey, shouldSkip) {
    let tempKey = key;
    let itemRect = this.layoutDelegate.getItemRect(tempKey);
    if (!itemRect || tempKey == null) return null;
    let prevRect = itemRect;
    do {
      tempKey = nextKey(tempKey);
      if (tempKey == null) break;
      itemRect = this.layoutDelegate.getItemRect(tempKey);
    } while (itemRect && shouldSkip(prevRect, itemRect) && tempKey != null);
    return tempKey;
  }
  isSameRow(prevRect, itemRect) {
    return prevRect.y === itemRect.y || prevRect.x !== itemRect.x;
  }
  isSameColumn(prevRect, itemRect) {
    return prevRect.x === itemRect.x || prevRect.y !== itemRect.y;
  }
  getKeyBelow(key) {
    if (this.layout === "grid" && this.orientation === "vertical") return this.findKey(key, (key2) => this.getNextKey(key2), this.isSameRow);
    else return this.getNextKey(key);
  }
  getKeyAbove(key) {
    if (this.layout === "grid" && this.orientation === "vertical") return this.findKey(key, (key2) => this.getPreviousKey(key2), this.isSameRow);
    else return this.getPreviousKey(key);
  }
  getNextColumn(key, right) {
    return right ? this.getPreviousKey(key) : this.getNextKey(key);
  }
  getKeyRightOf(key) {
    let layoutDelegateMethod = this.direction === "ltr" ? "getKeyRightOf" : "getKeyLeftOf";
    if (this.layoutDelegate[layoutDelegateMethod]) {
      key = this.layoutDelegate[layoutDelegateMethod](key);
      return this.findNextNonDisabled(key, (key2) => this.layoutDelegate[layoutDelegateMethod](key2));
    }
    if (this.layout === "grid") {
      if (this.orientation === "vertical") return this.getNextColumn(key, this.direction === "rtl");
      else return this.findKey(key, (key2) => this.getNextColumn(key2, this.direction === "rtl"), this.isSameColumn);
    } else if (this.orientation === "horizontal") return this.getNextColumn(key, this.direction === "rtl");
    return null;
  }
  getKeyLeftOf(key) {
    let layoutDelegateMethod = this.direction === "ltr" ? "getKeyLeftOf" : "getKeyRightOf";
    if (this.layoutDelegate[layoutDelegateMethod]) {
      key = this.layoutDelegate[layoutDelegateMethod](key);
      return this.findNextNonDisabled(key, (key2) => this.layoutDelegate[layoutDelegateMethod](key2));
    }
    if (this.layout === "grid") {
      if (this.orientation === "vertical") return this.getNextColumn(key, this.direction === "ltr");
      else return this.findKey(key, (key2) => this.getNextColumn(key2, this.direction === "ltr"), this.isSameColumn);
    } else if (this.orientation === "horizontal") return this.getNextColumn(key, this.direction === "ltr");
    return null;
  }
  getFirstKey() {
    let key = this.collection.getFirstKey();
    return this.findNextNonDisabled(key, (key2) => this.collection.getKeyAfter(key2));
  }
  getLastKey() {
    let key = this.collection.getLastKey();
    return this.findNextNonDisabled(key, (key2) => this.collection.getKeyBefore(key2));
  }
  getKeyPageAbove(key) {
    let menu = this.ref.current;
    let itemRect = this.layoutDelegate.getItemRect(key);
    if (!itemRect) return null;
    if (menu && !(0, $cc38e7bd3fc7b213$export$2bb74740c4e19def)(menu)) return this.getFirstKey();
    let nextKey = key;
    if (this.orientation === "horizontal") {
      let pageX = Math.max(0, itemRect.x + itemRect.width - this.layoutDelegate.getVisibleRect().width);
      while (itemRect && itemRect.x > pageX && nextKey != null) {
        nextKey = this.getKeyAbove(nextKey);
        itemRect = nextKey == null ? null : this.layoutDelegate.getItemRect(nextKey);
      }
    } else {
      let pageY = Math.max(0, itemRect.y + itemRect.height - this.layoutDelegate.getVisibleRect().height);
      while (itemRect && itemRect.y > pageY && nextKey != null) {
        nextKey = this.getKeyAbove(nextKey);
        itemRect = nextKey == null ? null : this.layoutDelegate.getItemRect(nextKey);
      }
    }
    return nextKey !== null && nextKey !== void 0 ? nextKey : this.getFirstKey();
  }
  getKeyPageBelow(key) {
    let menu = this.ref.current;
    let itemRect = this.layoutDelegate.getItemRect(key);
    if (!itemRect) return null;
    if (menu && !(0, $cc38e7bd3fc7b213$export$2bb74740c4e19def)(menu)) return this.getLastKey();
    let nextKey = key;
    if (this.orientation === "horizontal") {
      let pageX = Math.min(this.layoutDelegate.getContentSize().width, itemRect.y - itemRect.width + this.layoutDelegate.getVisibleRect().width);
      while (itemRect && itemRect.x < pageX && nextKey != null) {
        nextKey = this.getKeyBelow(nextKey);
        itemRect = nextKey == null ? null : this.layoutDelegate.getItemRect(nextKey);
      }
    } else {
      let pageY = Math.min(this.layoutDelegate.getContentSize().height, itemRect.y - itemRect.height + this.layoutDelegate.getVisibleRect().height);
      while (itemRect && itemRect.y < pageY && nextKey != null) {
        nextKey = this.getKeyBelow(nextKey);
        itemRect = nextKey == null ? null : this.layoutDelegate.getItemRect(nextKey);
      }
    }
    return nextKey !== null && nextKey !== void 0 ? nextKey : this.getLastKey();
  }
  getKeyForSearch(search, fromKey) {
    if (!this.collator) return null;
    let collection = this.collection;
    let key = fromKey || this.getFirstKey();
    while (key != null) {
      let item = collection.getItem(key);
      if (!item) return null;
      let substring = item.textValue.slice(0, search.length);
      if (item.textValue && this.collator.compare(substring, search) === 0) return key;
      key = this.getNextKey(key);
    }
    return null;
  }
  constructor(...args) {
    if (args.length === 1) {
      let opts = args[0];
      this.collection = opts.collection;
      this.ref = opts.ref;
      this.collator = opts.collator;
      this.disabledKeys = opts.disabledKeys || /* @__PURE__ */ new Set();
      this.disabledBehavior = opts.disabledBehavior || "all";
      this.orientation = opts.orientation || "vertical";
      this.direction = opts.direction;
      this.layout = opts.layout || "stack";
      this.layoutDelegate = opts.layoutDelegate || new (0, $657e4dc4a6e88df0$export$8f5ed9ff9f511381)(opts.ref);
    } else {
      this.collection = args[0];
      this.disabledKeys = args[1];
      this.ref = args[2];
      this.collator = args[3];
      this.layout = "stack";
      this.orientation = "vertical";
      this.disabledBehavior = "all";
      this.layoutDelegate = new (0, $657e4dc4a6e88df0$export$8f5ed9ff9f511381)(this.ref);
    }
    if (this.layout === "stack" && this.orientation === "vertical") {
      this.getKeyLeftOf = void 0;
      this.getKeyRightOf = void 0;
    }
  }
};

// node_modules/@react-aria/selection/dist/useSelectableList.mjs
var import_react97 = __toESM(require_react(), 1);
function $982254629710d113$export$b95089534ab7c1fd(props) {
  let { selectionManager, collection, disabledKeys, ref, keyboardDelegate, layoutDelegate } = props;
  let collator = (0, $325a3faab7a68acd$export$a16aca283550c30d)({
    usage: "search",
    sensitivity: "base"
  });
  let disabledBehavior = selectionManager.disabledBehavior;
  let delegate = (0, import_react97.useMemo)(() => keyboardDelegate || new (0, $2a25aae57d74318e$export$a05409b8bb224a5a)({
    collection,
    disabledKeys,
    disabledBehavior,
    ref,
    collator,
    layoutDelegate
  }), [
    keyboardDelegate,
    layoutDelegate,
    collection,
    disabledKeys,
    ref,
    collator,
    disabledBehavior
  ]);
  let { collectionProps } = (0, $ae20dd8cbca75726$export$d6daf82dcd84e87c)({
    ...props,
    ref,
    selectionManager,
    keyboardDelegate: delegate
  });
  return {
    listProps: collectionProps
  };
}

// node_modules/@react-aria/listbox/dist/useListBox.mjs
function $c132121280ec012d$export$50eacbbf140a3141(props, state, ref) {
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props, {
    labelable: true
  });
  let selectionBehavior = props.selectionBehavior || "toggle";
  let linkBehavior = props.linkBehavior || (selectionBehavior === "replace" ? "action" : "override");
  if (selectionBehavior === "toggle" && linkBehavior === "action")
    linkBehavior = "override";
  let { listProps } = (0, $982254629710d113$export$b95089534ab7c1fd)({
    ...props,
    ref,
    selectionManager: state.selectionManager,
    collection: state.collection,
    disabledKeys: state.disabledKeys,
    linkBehavior
  });
  let { focusWithinProps } = (0, $9ab94262bd0047c7$export$420e68273165f4ec)({
    onFocusWithin: props.onFocus,
    onBlurWithin: props.onBlur,
    onFocusWithinChange: props.onFocusChange
  });
  let id = (0, $bdb11010cef70236$export$f680877a34711e37)(props.id);
  (0, $b1f0cad8af73213b$export$3585ede4d035bf14).set(state, {
    id,
    shouldUseVirtualFocus: props.shouldUseVirtualFocus,
    shouldSelectOnPressUp: props.shouldSelectOnPressUp,
    shouldFocusOnHover: props.shouldFocusOnHover,
    isVirtualized: props.isVirtualized,
    onAction: props.onAction,
    linkBehavior
  });
  let { labelProps, fieldProps } = (0, $d191a55c9702f145$export$8467354a121f1b9f)({
    ...props,
    id,
    // listbox is not an HTML input element so it
    // shouldn't be labeled by a <label> element.
    labelElementType: "span"
  });
  return {
    labelProps,
    listBoxProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(domProps, focusWithinProps, state.selectionManager.selectionMode === "multiple" ? {
      "aria-multiselectable": "true"
    } : {}, {
      role: "listbox",
      ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(fieldProps, listProps)
    })
  };
}

// node_modules/@react-stately/collections/dist/Item.mjs
var import_react98 = __toESM(require_react(), 1);
function $c1d7fb2ec91bae71$var$Item(props) {
  return null;
}
$c1d7fb2ec91bae71$var$Item.getCollectionNode = function* getCollectionNode(props, context) {
  let { childItems, title, children } = props;
  let rendered = props.title || props.children;
  let textValue = props.textValue || (typeof rendered === "string" ? rendered : "") || props["aria-label"] || "";
  if (!textValue && !(context === null || context === void 0 ? void 0 : context.suppressTextValueWarning) && true) console.warn("<Item> with non-plain text contents is unsupported by type to select for accessibility. Please add a `textValue` prop.");
  yield {
    type: "item",
    props,
    rendered,
    textValue,
    "aria-label": props["aria-label"],
    hasChildNodes: $c1d7fb2ec91bae71$var$hasChildItems(props),
    *childNodes() {
      if (childItems) for (let child of childItems) yield {
        type: "item",
        value: child
      };
      else if (title) {
        let items = [];
        (0, import_react98.default).Children.forEach(children, (child) => {
          items.push({
            type: "item",
            element: child
          });
        });
        yield* items;
      }
    }
  };
};
function $c1d7fb2ec91bae71$var$hasChildItems(props) {
  if (props.hasChildItems != null) return props.hasChildItems;
  if (props.childItems) return true;
  if (props.title && (0, import_react98.default).Children.count(props.children) > 0) return true;
  return false;
}

// node_modules/@react-stately/collections/dist/Section.mjs
var import_react99 = __toESM(require_react(), 1);
function $9fc4852771d079eb$var$Section(props) {
  return null;
}
$9fc4852771d079eb$var$Section.getCollectionNode = function* getCollectionNode2(props) {
  let { children, title, items } = props;
  yield {
    type: "section",
    props,
    hasChildNodes: true,
    rendered: title,
    "aria-label": props["aria-label"],
    *childNodes() {
      if (typeof children === "function") {
        if (!items) throw new Error("props.children was a function but props.items is missing");
        for (let item of items) yield {
          type: "item",
          value: item,
          renderer: children
        };
      } else {
        let items2 = [];
        (0, import_react99.default).Children.forEach(children, (child) => {
          items2.push({
            type: "item",
            element: child
          });
        });
        yield* items2;
      }
    }
  };
};

// node_modules/@react-stately/collections/dist/CollectionBuilder.mjs
var import_react100 = __toESM(require_react(), 1);
var $eb2240fc39a57fa5$export$bf788dd355e3a401 = class {
  build(props, context) {
    this.context = context;
    return $eb2240fc39a57fa5$var$iterable(() => this.iterateCollection(props));
  }
  *iterateCollection(props) {
    let { children, items } = props;
    if ((0, import_react100.default).isValidElement(children) && children.type === (0, import_react100.default).Fragment) yield* this.iterateCollection({
      children: children.props.children,
      items
    });
    else if (typeof children === "function") {
      if (!items) throw new Error("props.children was a function but props.items is missing");
      let index = 0;
      for (let item of items) {
        yield* this.getFullNode({
          value: item,
          index
        }, {
          renderer: children
        });
        index++;
      }
    } else {
      let items2 = [];
      (0, import_react100.default).Children.forEach(children, (child) => {
        if (child) items2.push(child);
      });
      let index = 0;
      for (let item of items2) {
        let nodes = this.getFullNode({
          element: item,
          index
        }, {});
        for (let node of nodes) {
          index++;
          yield node;
        }
      }
    }
  }
  getKey(item, partialNode, state, parentKey) {
    if (item.key != null) return item.key;
    if (partialNode.type === "cell" && partialNode.key != null) return `${parentKey}${partialNode.key}`;
    let v = partialNode.value;
    if (v != null) {
      var _v_key;
      let key = (_v_key = v.key) !== null && _v_key !== void 0 ? _v_key : v.id;
      if (key == null) throw new Error("No key found for item");
      return key;
    }
    return parentKey ? `${parentKey}.${partialNode.index}` : `$.${partialNode.index}`;
  }
  getChildState(state, partialNode) {
    return {
      renderer: partialNode.renderer || state.renderer
    };
  }
  *getFullNode(partialNode, state, parentKey, parentNode) {
    if ((0, import_react100.default).isValidElement(partialNode.element) && partialNode.element.type === (0, import_react100.default).Fragment) {
      let children = [];
      (0, import_react100.default).Children.forEach(partialNode.element.props.children, (child) => {
        children.push(child);
      });
      var _partialNode_index;
      let index = (_partialNode_index = partialNode.index) !== null && _partialNode_index !== void 0 ? _partialNode_index : 0;
      for (const child of children) yield* this.getFullNode({
        element: child,
        index: index++
      }, state, parentKey, parentNode);
      return;
    }
    let element = partialNode.element;
    if (!element && partialNode.value && state && state.renderer) {
      let cached = this.cache.get(partialNode.value);
      if (cached && (!cached.shouldInvalidate || !cached.shouldInvalidate(this.context))) {
        cached.index = partialNode.index;
        cached.parentKey = parentNode ? parentNode.key : null;
        yield cached;
        return;
      }
      element = state.renderer(partialNode.value);
    }
    if ((0, import_react100.default).isValidElement(element)) {
      let type = element.type;
      if (typeof type !== "function" && typeof type.getCollectionNode !== "function") {
        let name = element.type;
        throw new Error(`Unknown element <${name}> in collection.`);
      }
      let childNodes = type.getCollectionNode(element.props, this.context);
      var _partialNode_index1;
      let index = (_partialNode_index1 = partialNode.index) !== null && _partialNode_index1 !== void 0 ? _partialNode_index1 : 0;
      let result = childNodes.next();
      while (!result.done && result.value) {
        let childNode = result.value;
        partialNode.index = index;
        var _childNode_key;
        let nodeKey = (_childNode_key = childNode.key) !== null && _childNode_key !== void 0 ? _childNode_key : null;
        if (nodeKey == null) nodeKey = childNode.element ? null : this.getKey(element, partialNode, state, parentKey);
        let nodes = this.getFullNode({
          ...childNode,
          key: nodeKey,
          index,
          wrapper: $eb2240fc39a57fa5$var$compose(partialNode.wrapper, childNode.wrapper)
        }, this.getChildState(state, childNode), parentKey ? `${parentKey}${element.key}` : element.key, parentNode);
        let children = [
          ...nodes
        ];
        for (let node2 of children) {
          var _childNode_value, _ref;
          node2.value = (_ref = (_childNode_value = childNode.value) !== null && _childNode_value !== void 0 ? _childNode_value : partialNode.value) !== null && _ref !== void 0 ? _ref : null;
          if (node2.value) this.cache.set(node2.value, node2);
          var _parentNode_type;
          if (partialNode.type && node2.type !== partialNode.type) throw new Error(`Unsupported type <${$eb2240fc39a57fa5$var$capitalize(node2.type)}> in <${$eb2240fc39a57fa5$var$capitalize((_parentNode_type = parentNode === null || parentNode === void 0 ? void 0 : parentNode.type) !== null && _parentNode_type !== void 0 ? _parentNode_type : "unknown parent type")}>. Only <${$eb2240fc39a57fa5$var$capitalize(partialNode.type)}> is supported.`);
          index++;
          yield node2;
        }
        result = childNodes.next(children);
      }
      return;
    }
    if (partialNode.key == null || partialNode.type == null) return;
    let builder = this;
    var _partialNode_value, _partialNode_textValue;
    let node = {
      type: partialNode.type,
      props: partialNode.props,
      key: partialNode.key,
      parentKey: parentNode ? parentNode.key : null,
      value: (_partialNode_value = partialNode.value) !== null && _partialNode_value !== void 0 ? _partialNode_value : null,
      level: parentNode ? parentNode.level + 1 : 0,
      index: partialNode.index,
      rendered: partialNode.rendered,
      textValue: (_partialNode_textValue = partialNode.textValue) !== null && _partialNode_textValue !== void 0 ? _partialNode_textValue : "",
      "aria-label": partialNode["aria-label"],
      wrapper: partialNode.wrapper,
      shouldInvalidate: partialNode.shouldInvalidate,
      hasChildNodes: partialNode.hasChildNodes || false,
      childNodes: $eb2240fc39a57fa5$var$iterable(function* () {
        if (!partialNode.hasChildNodes || !partialNode.childNodes) return;
        let index = 0;
        for (let child of partialNode.childNodes()) {
          if (child.key != null)
            child.key = `${node.key}${child.key}`;
          let nodes = builder.getFullNode({
            ...child,
            index
          }, builder.getChildState(state, child), node.key, node);
          for (let node2 of nodes) {
            index++;
            yield node2;
          }
        }
      })
    };
    yield node;
  }
  constructor() {
    this.cache = /* @__PURE__ */ new WeakMap();
  }
};
function $eb2240fc39a57fa5$var$iterable(iterator) {
  let cache = [];
  let iterable = null;
  return {
    *[Symbol.iterator]() {
      for (let item of cache) yield item;
      if (!iterable) iterable = iterator();
      for (let item of iterable) {
        cache.push(item);
        yield item;
      }
    }
  };
}
function $eb2240fc39a57fa5$var$compose(outer, inner) {
  if (outer && inner) return (element) => outer(inner(element));
  if (outer) return outer;
  if (inner) return inner;
}
function $eb2240fc39a57fa5$var$capitalize(str) {
  return str[0].toUpperCase() + str.slice(1);
}

// node_modules/@react-stately/collections/dist/useCollection.mjs
var import_react101 = __toESM(require_react(), 1);
function $7613b1592d41b092$export$6cd28814d92fa9c9(props, factory, context) {
  let builder = (0, import_react101.useMemo)(() => new (0, $eb2240fc39a57fa5$export$bf788dd355e3a401)(), []);
  let { children, items, collection } = props;
  let result = (0, import_react101.useMemo)(() => {
    if (collection) return collection;
    let nodes = builder.build({
      children,
      items
    }, context);
    return factory(nodes);
  }, [
    builder,
    children,
    items,
    collection,
    context,
    factory
  ]);
  return result;
}

// node_modules/@react-stately/collections/dist/getChildNodes.mjs
function $c5a24bc478652b5f$export$1005530eda016c13(node, collection) {
  if (typeof collection.getChildren === "function") return collection.getChildren(node.key);
  return node.childNodes;
}
function $c5a24bc478652b5f$export$fbdeaa6a76694f71(iterable) {
  return $c5a24bc478652b5f$export$5f3398f8733f90e2(iterable, 0);
}
function $c5a24bc478652b5f$export$5f3398f8733f90e2(iterable, index) {
  if (index < 0) return void 0;
  let i = 0;
  for (let item of iterable) {
    if (i === index) return item;
    i++;
  }
}
function $c5a24bc478652b5f$export$7475b2c64539e4cf(iterable) {
  let lastItem = void 0;
  for (let value of iterable) lastItem = value;
  return lastItem;
}
function $c5a24bc478652b5f$export$8c434b3a7a4dad6(collection, a, b) {
  if (a.parentKey === b.parentKey) return a.index - b.index;
  let aAncestors = [
    ...$c5a24bc478652b5f$var$getAncestors(collection, a),
    a
  ];
  let bAncestors = [
    ...$c5a24bc478652b5f$var$getAncestors(collection, b),
    b
  ];
  let firstNonMatchingAncestor = aAncestors.slice(0, bAncestors.length).findIndex((a2, i) => a2 !== bAncestors[i]);
  if (firstNonMatchingAncestor !== -1) {
    a = aAncestors[firstNonMatchingAncestor];
    b = bAncestors[firstNonMatchingAncestor];
    return a.index - b.index;
  }
  if (aAncestors.findIndex((node) => node === b) >= 0) return 1;
  else if (bAncestors.findIndex((node) => node === a) >= 0) return -1;
  return -1;
}
function $c5a24bc478652b5f$var$getAncestors(collection, node) {
  let parents = [];
  let currNode = node;
  while ((currNode === null || currNode === void 0 ? void 0 : currNode.parentKey) != null) {
    currNode = collection.getItem(currNode.parentKey);
    if (currNode) parents.unshift(currNode);
  }
  return parents;
}

// node_modules/@react-stately/collections/dist/getItemCount.mjs
var $453cc9f0df89c0a5$var$cache = /* @__PURE__ */ new WeakMap();
function $453cc9f0df89c0a5$export$77d5aafae4e095b2(collection) {
  let count = $453cc9f0df89c0a5$var$cache.get(collection);
  if (count != null) return count;
  let counter = 0;
  let countItems = (items) => {
    for (let item of items) {
      if (item.type === "section") countItems((0, $c5a24bc478652b5f$export$1005530eda016c13)(item, collection));
      else if (item.type === "item") counter++;
    }
  };
  countItems(collection);
  $453cc9f0df89c0a5$var$cache.set(collection, counter);
  return counter;
}

// node_modules/@react-aria/listbox/dist/useOption.mjs
function $293f70390ea03370$export$497855f14858aa34(props, state, ref) {
  var _item_props, _item_props1;
  let { key } = props;
  let data = (0, $b1f0cad8af73213b$export$3585ede4d035bf14).get(state);
  var _props_isDisabled;
  let isDisabled = (_props_isDisabled = props.isDisabled) !== null && _props_isDisabled !== void 0 ? _props_isDisabled : state.selectionManager.isDisabled(key);
  var _props_isSelected;
  let isSelected = (_props_isSelected = props.isSelected) !== null && _props_isSelected !== void 0 ? _props_isSelected : state.selectionManager.isSelected(key);
  var _props_shouldSelectOnPressUp;
  let shouldSelectOnPressUp = (_props_shouldSelectOnPressUp = props.shouldSelectOnPressUp) !== null && _props_shouldSelectOnPressUp !== void 0 ? _props_shouldSelectOnPressUp : data === null || data === void 0 ? void 0 : data.shouldSelectOnPressUp;
  var _props_shouldFocusOnHover;
  let shouldFocusOnHover = (_props_shouldFocusOnHover = props.shouldFocusOnHover) !== null && _props_shouldFocusOnHover !== void 0 ? _props_shouldFocusOnHover : data === null || data === void 0 ? void 0 : data.shouldFocusOnHover;
  var _props_shouldUseVirtualFocus;
  let shouldUseVirtualFocus = (_props_shouldUseVirtualFocus = props.shouldUseVirtualFocus) !== null && _props_shouldUseVirtualFocus !== void 0 ? _props_shouldUseVirtualFocus : data === null || data === void 0 ? void 0 : data.shouldUseVirtualFocus;
  var _props_isVirtualized;
  let isVirtualized = (_props_isVirtualized = props.isVirtualized) !== null && _props_isVirtualized !== void 0 ? _props_isVirtualized : data === null || data === void 0 ? void 0 : data.isVirtualized;
  let labelId = (0, $bdb11010cef70236$export$b4cc09c592e8fdb8)();
  let descriptionId = (0, $bdb11010cef70236$export$b4cc09c592e8fdb8)();
  let optionProps = {
    role: "option",
    "aria-disabled": isDisabled || void 0,
    "aria-selected": state.selectionManager.selectionMode !== "none" ? isSelected : void 0
  };
  if (!((0, $c87311424ea30a05$export$9ac100e40613ea10)() && (0, $c87311424ea30a05$export$78551043582a6a98)())) {
    optionProps["aria-label"] = props["aria-label"];
    optionProps["aria-labelledby"] = labelId;
    optionProps["aria-describedby"] = descriptionId;
  }
  let item = state.collection.getItem(key);
  if (isVirtualized) {
    let index = Number(item === null || item === void 0 ? void 0 : item.index);
    optionProps["aria-posinset"] = Number.isNaN(index) ? void 0 : index + 1;
    optionProps["aria-setsize"] = (0, $453cc9f0df89c0a5$export$77d5aafae4e095b2)(state.collection);
  }
  let onAction = (data === null || data === void 0 ? void 0 : data.onAction) ? () => {
    var _data_onAction;
    return data === null || data === void 0 ? void 0 : (_data_onAction = data.onAction) === null || _data_onAction === void 0 ? void 0 : _data_onAction.call(data, key);
  } : void 0;
  let id = (0, $b1f0cad8af73213b$export$9145995848b05025)(state, key);
  let { itemProps, isPressed, isFocused, hasAction, allowsSelection } = (0, $880e95eb8b93ba9a$export$ecf600387e221c37)({
    selectionManager: state.selectionManager,
    key,
    ref,
    shouldSelectOnPressUp,
    allowsDifferentPressOrigin: shouldSelectOnPressUp && shouldFocusOnHover,
    isVirtualized,
    shouldUseVirtualFocus,
    isDisabled,
    onAction: onAction || (item === null || item === void 0 ? void 0 : (_item_props = item.props) === null || _item_props === void 0 ? void 0 : _item_props.onAction) ? (0, $ff5963eb1fccf552$export$e08e3b67e392101e)(item === null || item === void 0 ? void 0 : (_item_props1 = item.props) === null || _item_props1 === void 0 ? void 0 : _item_props1.onAction, onAction) : void 0,
    linkBehavior: data === null || data === void 0 ? void 0 : data.linkBehavior,
    id
  });
  let { hoverProps } = (0, $6179b936705e76d3$export$ae780daf29e6d456)({
    isDisabled: isDisabled || !shouldFocusOnHover,
    onHoverStart() {
      if (!(0, $507fabe10e71c6fb$export$b9b3dfddab17db27)()) {
        state.selectionManager.setFocused(true);
        state.selectionManager.setFocusedKey(key);
      }
    }
  });
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(item === null || item === void 0 ? void 0 : item.props);
  delete domProps.id;
  let linkProps = (0, $ea8dcbcb9ea1b556$export$7e924b3091a3bd18)(item === null || item === void 0 ? void 0 : item.props);
  return {
    optionProps: {
      ...optionProps,
      ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(domProps, itemProps, hoverProps, linkProps),
      id
    },
    labelProps: {
      id: labelId
    },
    descriptionProps: {
      id: descriptionId
    },
    isFocused,
    isFocusVisible: isFocused && state.selectionManager.isFocused && (0, $507fabe10e71c6fb$export$b9b3dfddab17db27)(),
    isSelected,
    isDisabled,
    isPressed,
    allowsSelection,
    hasAction
  };
}

// node_modules/@react-aria/listbox/dist/useListBoxSection.mjs
function $af383d3bef1cfdc9$export$c3f9f39876e4bc7(props) {
  let { heading, "aria-label": ariaLabel } = props;
  let headingId = (0, $bdb11010cef70236$export$f680877a34711e37)();
  return {
    itemProps: {
      role: "presentation"
    },
    headingProps: heading ? {
      // Techincally, listbox cannot contain headings according to ARIA.
      // We hide the heading from assistive technology, using role="presentation",
      // and only use it as a visual label for the nested group.
      id: headingId,
      role: "presentation"
    } : {},
    groupProps: {
      role: "group",
      "aria-label": ariaLabel,
      "aria-labelledby": heading ? headingId : void 0
    }
  };
}

// node_modules/@react-aria/combobox/dist/useComboBox.mjs
var import_react104 = __toESM(require_react(), 1);

// node_modules/@react-aria/menu/dist/ar-AE.mjs
var $c0398ad35c3639b7$exports = {};
$c0398ad35c3639b7$exports = {
  "longPressMessage": `اضغط مطولاً أو اضغط على Alt + السهم لأسفل لفتح القائمة`
};

// node_modules/@react-aria/menu/dist/bg-BG.mjs
var $7af657c4165927c3$exports = {};
$7af657c4165927c3$exports = {
  "longPressMessage": `Натиснете продължително или натиснете Alt+ стрелка надолу, за да отворите менюто`
};

// node_modules/@react-aria/menu/dist/cs-CZ.mjs
var $d95d4da6d531ab81$exports = {};
$d95d4da6d531ab81$exports = {
  "longPressMessage": `Dlouhým stiskem nebo stisknutím kláves Alt + šipka dolů otevřete nabídku`
};

// node_modules/@react-aria/menu/dist/da-DK.mjs
var $24ebda9c775dca17$exports = {};
$24ebda9c775dca17$exports = {
  "longPressMessage": `Langt tryk eller tryk på Alt + pil ned for at åbne menuen`
};

// node_modules/@react-aria/menu/dist/de-DE.mjs
var $743e0dfca6cab1e9$exports = {};
$743e0dfca6cab1e9$exports = {
  "longPressMessage": `Drücken Sie lange oder drücken Sie Alt + Nach-unten, um das Menü zu öffnen`
};

// node_modules/@react-aria/menu/dist/el-GR.mjs
var $a2f41026e05f1c84$exports = {};
$a2f41026e05f1c84$exports = {
  "longPressMessage": `Πιέστε παρατεταμένα ή πατήστε Alt + κάτω βέλος για να ανοίξετε το μενού`
};

// node_modules/@react-aria/menu/dist/en-US.mjs
var $43b800e97c901737$exports = {};
$43b800e97c901737$exports = {
  "longPressMessage": `Long press or press Alt + ArrowDown to open menu`
};

// node_modules/@react-aria/menu/dist/es-ES.mjs
var $442f5f6ac211e29f$exports = {};
$442f5f6ac211e29f$exports = {
  "longPressMessage": `Mantenga pulsado o pulse Alt + flecha abajo para abrir el menú`
};

// node_modules/@react-aria/menu/dist/et-EE.mjs
var $dff280acfeb2d8ac$exports = {};
$dff280acfeb2d8ac$exports = {
  "longPressMessage": `Menüü avamiseks vajutage pikalt või vajutage klahve Alt + allanool`
};

// node_modules/@react-aria/menu/dist/fi-FI.mjs
var $51608325613944d7$exports = {};
$51608325613944d7$exports = {
  "longPressMessage": `Avaa valikko painamalla pohjassa tai näppäinyhdistelmällä Alt + Alanuoli`
};

// node_modules/@react-aria/menu/dist/fr-FR.mjs
var $c4a1b1eabeaa87be$exports = {};
$c4a1b1eabeaa87be$exports = {
  "longPressMessage": `Appuyez de manière prolongée ou appuyez sur Alt + Flèche vers le bas pour ouvrir le menu.`
};

// node_modules/@react-aria/menu/dist/he-IL.mjs
var $8c74815cdee18d1b$exports = {};
$8c74815cdee18d1b$exports = {
  "longPressMessage": `לחץ לחיצה ארוכה או הקש Alt + ArrowDown כדי לפתוח את התפריט`
};

// node_modules/@react-aria/menu/dist/hr-HR.mjs
var $fd0e9ef6a7fe0ec9$exports = {};
$fd0e9ef6a7fe0ec9$exports = {
  "longPressMessage": `Dugo pritisnite ili pritisnite Alt + strelicu prema dolje za otvaranje izbornika`
};

// node_modules/@react-aria/menu/dist/hu-HU.mjs
var $a89a74a39eba465a$exports = {};
$a89a74a39eba465a$exports = {
  "longPressMessage": `Nyomja meg hosszan, vagy nyomja meg az Alt + lefele nyíl gombot a menü megnyitásához`
};

// node_modules/@react-aria/menu/dist/it-IT.mjs
var $edc7c66594a0ae8a$exports = {};
$edc7c66594a0ae8a$exports = {
  "longPressMessage": `Premere a lungo o premere Alt + Freccia giù per aprire il menu`
};

// node_modules/@react-aria/menu/dist/ja-JP.mjs
var $f1ab51510712db52$exports = {};
$f1ab51510712db52$exports = {
  "longPressMessage": `長押しまたは Alt+下矢印キーでメニューを開く`
};

// node_modules/@react-aria/menu/dist/ko-KR.mjs
var $f9b672d9b82fa3d6$exports = {};
$f9b672d9b82fa3d6$exports = {
  "longPressMessage": `길게 누르거나 Alt + 아래쪽 화살표를 눌러 메뉴 열기`
};

// node_modules/@react-aria/menu/dist/lt-LT.mjs
var $a385f3910feda499$exports = {};
$a385f3910feda499$exports = {
  "longPressMessage": `Norėdami atidaryti meniu, nuspaudę palaikykite arba paspauskite „Alt + ArrowDown“.`
};

// node_modules/@react-aria/menu/dist/lv-LV.mjs
var $4f1bde932c441789$exports = {};
$4f1bde932c441789$exports = {
  "longPressMessage": `Lai atvērtu izvēlni, turiet nospiestu vai nospiediet taustiņu kombināciju Alt + lejupvērstā bultiņa`
};

// node_modules/@react-aria/menu/dist/nb-NO.mjs
var $914a51a8a594d5be$exports = {};
$914a51a8a594d5be$exports = {
  "longPressMessage": `Langt trykk eller trykk Alt + PilNed for å åpne menyen`
};

// node_modules/@react-aria/menu/dist/nl-NL.mjs
var $89aaf803103bb500$exports = {};
$89aaf803103bb500$exports = {
  "longPressMessage": `Druk lang op Alt + pijl-omlaag of druk op Alt om het menu te openen`
};

// node_modules/@react-aria/menu/dist/pl-PL.mjs
var $c685891476dbaaca$exports = {};
$c685891476dbaaca$exports = {
  "longPressMessage": `Naciśnij i przytrzymaj lub naciśnij klawisze Alt + Strzałka w dół, aby otworzyć menu`
};

// node_modules/@react-aria/menu/dist/pt-BR.mjs
var $885879b9b10c2959$exports = {};
$885879b9b10c2959$exports = {
  "longPressMessage": `Pressione e segure ou pressione Alt + Seta para baixo para abrir o menu`
};

// node_modules/@react-aria/menu/dist/pt-PT.mjs
var $6b39616688a51692$exports = {};
$6b39616688a51692$exports = {
  "longPressMessage": `Prima continuamente ou prima Alt + Seta Para Baixo para abrir o menu`
};

// node_modules/@react-aria/menu/dist/ro-RO.mjs
var $f26362aed63f47e2$exports = {};
$f26362aed63f47e2$exports = {
  "longPressMessage": `Apăsați lung sau apăsați pe Alt + săgeată în jos pentru a deschide meniul`
};

// node_modules/@react-aria/menu/dist/ru-RU.mjs
var $06cbade644558bf0$exports = {};
$06cbade644558bf0$exports = {
  "longPressMessage": `Нажмите и удерживайте или нажмите Alt + Стрелка вниз, чтобы открыть меню`
};

// node_modules/@react-aria/menu/dist/sk-SK.mjs
var $0a391ff68f9d59b1$exports = {};
$0a391ff68f9d59b1$exports = {
  "longPressMessage": `Ponuku otvoríte dlhým stlačením alebo stlačením klávesu Alt + klávesu so šípkou nadol`
};

// node_modules/@react-aria/menu/dist/sl-SI.mjs
var $8193cf0e649c7928$exports = {};
$8193cf0e649c7928$exports = {
  "longPressMessage": `Za odprtje menija pritisnite in držite gumb ali pritisnite Alt+puščica navzdol`
};

// node_modules/@react-aria/menu/dist/sr-SP.mjs
var $f398debcce5a5c55$exports = {};
$f398debcce5a5c55$exports = {
  "longPressMessage": `Dugo pritisnite ili pritisnite Alt + strelicu prema dole da otvorite meni`
};

// node_modules/@react-aria/menu/dist/sv-SE.mjs
var $9e9fef000aa4c013$exports = {};
$9e9fef000aa4c013$exports = {
  "longPressMessage": `Håll nedtryckt eller tryck på Alt + pil nedåt för att öppna menyn`
};

// node_modules/@react-aria/menu/dist/tr-TR.mjs
var $c016c8183bbe3d68$exports = {};
$c016c8183bbe3d68$exports = {
  "longPressMessage": `Menüyü açmak için uzun basın veya Alt + Aşağı Ok tuşuna basın`
};

// node_modules/@react-aria/menu/dist/uk-UA.mjs
var $ca4f6c8462244e62$exports = {};
$ca4f6c8462244e62$exports = {
  "longPressMessage": `Довго або звичайно натисніть комбінацію клавіш Alt і стрілка вниз, щоб відкрити меню`
};

// node_modules/@react-aria/menu/dist/zh-CN.mjs
var $2d9960c02ccac927$exports = {};
$2d9960c02ccac927$exports = {
  "longPressMessage": `长按或按 Alt + 向下方向键以打开菜单`
};

// node_modules/@react-aria/menu/dist/zh-TW.mjs
var $f1b682a4c8c5631c$exports = {};
$f1b682a4c8c5631c$exports = {
  "longPressMessage": `長按或按 Alt+向下鍵以開啟功能表`
};

// node_modules/@react-aria/menu/dist/intlStrings.mjs
var $2cbb7ca666678a14$exports = {};
$2cbb7ca666678a14$exports = {
  "ar-AE": $c0398ad35c3639b7$exports,
  "bg-BG": $7af657c4165927c3$exports,
  "cs-CZ": $d95d4da6d531ab81$exports,
  "da-DK": $24ebda9c775dca17$exports,
  "de-DE": $743e0dfca6cab1e9$exports,
  "el-GR": $a2f41026e05f1c84$exports,
  "en-US": $43b800e97c901737$exports,
  "es-ES": $442f5f6ac211e29f$exports,
  "et-EE": $dff280acfeb2d8ac$exports,
  "fi-FI": $51608325613944d7$exports,
  "fr-FR": $c4a1b1eabeaa87be$exports,
  "he-IL": $8c74815cdee18d1b$exports,
  "hr-HR": $fd0e9ef6a7fe0ec9$exports,
  "hu-HU": $a89a74a39eba465a$exports,
  "it-IT": $edc7c66594a0ae8a$exports,
  "ja-JP": $f1ab51510712db52$exports,
  "ko-KR": $f9b672d9b82fa3d6$exports,
  "lt-LT": $a385f3910feda499$exports,
  "lv-LV": $4f1bde932c441789$exports,
  "nb-NO": $914a51a8a594d5be$exports,
  "nl-NL": $89aaf803103bb500$exports,
  "pl-PL": $c685891476dbaaca$exports,
  "pt-BR": $885879b9b10c2959$exports,
  "pt-PT": $6b39616688a51692$exports,
  "ro-RO": $f26362aed63f47e2$exports,
  "ru-RU": $06cbade644558bf0$exports,
  "sk-SK": $0a391ff68f9d59b1$exports,
  "sl-SI": $8193cf0e649c7928$exports,
  "sr-SP": $f398debcce5a5c55$exports,
  "sv-SE": $9e9fef000aa4c013$exports,
  "tr-TR": $c016c8183bbe3d68$exports,
  "uk-UA": $ca4f6c8462244e62$exports,
  "zh-CN": $2d9960c02ccac927$exports,
  "zh-TW": $f1b682a4c8c5631c$exports
};

// node_modules/@react-aria/menu/dist/useMenuTrigger.mjs
function $parcel$interopDefault11(a) {
  return a && a.__esModule ? a.default : a;
}
function $168583247155ddda$export$dc9c12ed27dd1b49(props, state, ref) {
  let { type = "menu", isDisabled, trigger = "press" } = props;
  let menuTriggerId = (0, $bdb11010cef70236$export$f680877a34711e37)();
  let { triggerProps, overlayProps } = (0, $628037886ba31236$export$f9d5c8beee7d008d)({
    type
  }, state, ref);
  let onKeyDown = (e) => {
    if (isDisabled) return;
    if (trigger === "longPress" && !e.altKey) return;
    if (ref && ref.current) switch (e.key) {
      case "Enter":
      case " ":
        if (trigger === "longPress") return;
      // fallthrough
      case "ArrowDown":
        if (!("continuePropagation" in e)) e.stopPropagation();
        e.preventDefault();
        state.toggle("first");
        break;
      case "ArrowUp":
        if (!("continuePropagation" in e)) e.stopPropagation();
        e.preventDefault();
        state.toggle("last");
        break;
      default:
        if ("continuePropagation" in e) e.continuePropagation();
    }
  };
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault11($2cbb7ca666678a14$exports)), "@react-aria/menu");
  let { longPressProps } = (0, $8a26561d2877236e$export$c24ed0104d07eab9)({
    isDisabled: isDisabled || trigger !== "longPress",
    accessibilityDescription: stringFormatter.format("longPressMessage"),
    onLongPressStart() {
      state.close();
    },
    onLongPress() {
      state.open("first");
    }
  });
  let pressProps = {
    preventFocusOnPress: true,
    onPressStart(e) {
      if (e.pointerType !== "touch" && e.pointerType !== "keyboard" && !isDisabled) {
        (0, $7215afc6de606d6b$export$de79e2c695e052f3)(e.target);
        state.open(e.pointerType === "virtual" ? "first" : null);
      }
    },
    onPress(e) {
      if (e.pointerType === "touch" && !isDisabled) {
        (0, $7215afc6de606d6b$export$de79e2c695e052f3)(e.target);
        state.toggle();
      }
    }
  };
  delete triggerProps.onPress;
  return {
    // @ts-ignore - TODO we pass out both DOMAttributes AND AriaButtonProps, but useButton will discard the longPress event handlers, it's only through PressResponder magic that this works for RSP and RAC. it does not work in aria examples
    menuTriggerProps: {
      ...triggerProps,
      ...trigger === "press" ? pressProps : longPressProps,
      id: menuTriggerId,
      onKeyDown
    },
    menuProps: {
      ...overlayProps,
      "aria-labelledby": menuTriggerId,
      autoFocus: state.focusStrategy || true,
      onClose: state.close
    }
  };
}

// node_modules/@react-aria/menu/dist/utils.mjs
var $fc79756100351201$export$6f49b4016bfc8d56 = /* @__PURE__ */ new WeakMap();

// node_modules/@react-aria/menu/dist/useMenu.mjs
function $d5336fe17ce95402$export$38eaa17faae8f579(props, state, ref) {
  let { shouldFocusWrap = true, onKeyDown, onKeyUp, ...otherProps } = props;
  if (!props["aria-label"] && !props["aria-labelledby"] && true) console.warn("An aria-label or aria-labelledby prop is required for accessibility.");
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props, {
    labelable: true
  });
  let { listProps } = (0, $982254629710d113$export$b95089534ab7c1fd)({
    ...otherProps,
    ref,
    selectionManager: state.selectionManager,
    collection: state.collection,
    disabledKeys: state.disabledKeys,
    shouldFocusWrap,
    linkBehavior: "override"
  });
  (0, $fc79756100351201$export$6f49b4016bfc8d56).set(state, {
    onClose: props.onClose,
    onAction: props.onAction,
    shouldUseVirtualFocus: props.shouldUseVirtualFocus
  });
  return {
    menuProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(domProps, {
      onKeyDown,
      onKeyUp
    }, {
      role: "menu",
      ...listProps,
      onKeyDown: (e) => {
        var _listProps_onKeyDown;
        if (e.key !== "Escape" || props.shouldUseVirtualFocus) (_listProps_onKeyDown = listProps.onKeyDown) === null || _listProps_onKeyDown === void 0 ? void 0 : _listProps_onKeyDown.call(listProps, e);
      }
    })
  };
}

// node_modules/@react-aria/menu/dist/useMenuItem.mjs
function $a2e5df62f93c7633$export$9d32628fc2aea7da(props, state, ref) {
  let { id, key, closeOnSelect, isVirtualized, "aria-haspopup": hasPopup, onPressStart: pressStartProp, onPressUp: pressUpProp, onPress: pressProp, onPressChange, onPressEnd, onHoverStart: hoverStartProp, onHoverChange, onHoverEnd, onKeyDown, onKeyUp, onFocus, onFocusChange, onBlur, selectionManager = state.selectionManager } = props;
  let isTrigger = !!hasPopup;
  let isTriggerExpanded = isTrigger && props["aria-expanded"] === "true";
  var _props_isDisabled;
  let isDisabled = (_props_isDisabled = props.isDisabled) !== null && _props_isDisabled !== void 0 ? _props_isDisabled : selectionManager.isDisabled(key);
  var _props_isSelected;
  let isSelected = (_props_isSelected = props.isSelected) !== null && _props_isSelected !== void 0 ? _props_isSelected : selectionManager.isSelected(key);
  let data = (0, $fc79756100351201$export$6f49b4016bfc8d56).get(state);
  let item = state.collection.getItem(key);
  let onClose = props.onClose || data.onClose;
  let router = (0, $ea8dcbcb9ea1b556$export$9a302a45f65d0572)();
  let performAction = (e) => {
    var _item_props;
    if (isTrigger) return;
    if (item === null || item === void 0 ? void 0 : (_item_props = item.props) === null || _item_props === void 0 ? void 0 : _item_props.onAction) item.props.onAction();
    else if (props.onAction) props.onAction(key);
    if (data.onAction) {
      let onAction = data.onAction;
      onAction(key);
    }
    if (e.target instanceof HTMLAnchorElement && item) router.open(e.target, e, item.props.href, item.props.routerOptions);
  };
  let role = "menuitem";
  if (!isTrigger) {
    if (selectionManager.selectionMode === "single") role = "menuitemradio";
    else if (selectionManager.selectionMode === "multiple") role = "menuitemcheckbox";
  }
  let labelId = (0, $bdb11010cef70236$export$b4cc09c592e8fdb8)();
  let descriptionId = (0, $bdb11010cef70236$export$b4cc09c592e8fdb8)();
  let keyboardId = (0, $bdb11010cef70236$export$b4cc09c592e8fdb8)();
  let ariaProps = {
    id,
    "aria-disabled": isDisabled || void 0,
    role,
    "aria-label": props["aria-label"],
    "aria-labelledby": labelId,
    "aria-describedby": [
      descriptionId,
      keyboardId
    ].filter(Boolean).join(" ") || void 0,
    "aria-controls": props["aria-controls"],
    "aria-haspopup": hasPopup,
    "aria-expanded": props["aria-expanded"]
  };
  if (selectionManager.selectionMode !== "none" && !isTrigger) ariaProps["aria-checked"] = isSelected;
  if (isVirtualized) {
    ariaProps["aria-posinset"] = item === null || item === void 0 ? void 0 : item.index;
    ariaProps["aria-setsize"] = (0, $453cc9f0df89c0a5$export$77d5aafae4e095b2)(state.collection);
  }
  let onPressStart = (e) => {
    if (e.pointerType === "keyboard") performAction(e);
    pressStartProp === null || pressStartProp === void 0 ? void 0 : pressStartProp(e);
  };
  let maybeClose = () => {
    if (!isTrigger && onClose && (closeOnSelect !== null && closeOnSelect !== void 0 ? closeOnSelect : selectionManager.selectionMode !== "multiple" || selectionManager.isLink(key))) onClose();
  };
  let onPressUp = (e) => {
    if (e.pointerType === "mouse") {
      performAction(e);
      maybeClose();
    }
    pressUpProp === null || pressUpProp === void 0 ? void 0 : pressUpProp(e);
  };
  let onPress = (e) => {
    if (e.pointerType !== "keyboard" && e.pointerType !== "mouse") {
      performAction(e);
      maybeClose();
    }
    pressProp === null || pressProp === void 0 ? void 0 : pressProp(e);
  };
  let { itemProps, isFocused } = (0, $880e95eb8b93ba9a$export$ecf600387e221c37)({
    id,
    selectionManager,
    key,
    ref,
    shouldSelectOnPressUp: true,
    allowsDifferentPressOrigin: true,
    // Disable all handling of links in useSelectable item
    // because we handle it ourselves. The behavior of menus
    // is slightly different from other collections because
    // actions are performed on key down rather than key up.
    linkBehavior: "none",
    shouldUseVirtualFocus: data.shouldUseVirtualFocus
  });
  let { pressProps, isPressed } = (0, $f6c31cce2adf654f$export$45712eceda6fad21)({
    onPressStart,
    onPress,
    onPressUp,
    onPressChange,
    onPressEnd,
    isDisabled
  });
  let { hoverProps } = (0, $6179b936705e76d3$export$ae780daf29e6d456)({
    isDisabled,
    onHoverStart(e) {
      if (!(0, $507fabe10e71c6fb$export$b9b3dfddab17db27)() && !(isTriggerExpanded && hasPopup)) {
        selectionManager.setFocused(true);
        selectionManager.setFocusedKey(key);
      }
      hoverStartProp === null || hoverStartProp === void 0 ? void 0 : hoverStartProp(e);
    },
    onHoverChange,
    onHoverEnd
  });
  let { keyboardProps } = (0, $46d819fcbaf35654$export$8f71654801c2f7cd)({
    onKeyDown: (e) => {
      if (e.repeat) {
        e.continuePropagation();
        return;
      }
      switch (e.key) {
        case " ":
          if (!isDisabled && selectionManager.selectionMode === "none" && !isTrigger && closeOnSelect !== false && onClose) onClose();
          break;
        case "Enter":
          if (!isDisabled && closeOnSelect !== false && !isTrigger && onClose) onClose();
          break;
        default:
          if (!isTrigger) e.continuePropagation();
          onKeyDown === null || onKeyDown === void 0 ? void 0 : onKeyDown(e);
          break;
      }
    },
    onKeyUp
  });
  let { focusProps } = (0, $a1ea59d68270f0dd$export$f8168d8dd8fd66e6)({
    onBlur,
    onFocus,
    onFocusChange
  });
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(item === null || item === void 0 ? void 0 : item.props);
  delete domProps.id;
  let linkProps = (0, $ea8dcbcb9ea1b556$export$7e924b3091a3bd18)(item === null || item === void 0 ? void 0 : item.props);
  return {
    menuItemProps: {
      ...ariaProps,
      ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(
        domProps,
        linkProps,
        isTrigger ? {
          onFocus: itemProps.onFocus,
          "data-collection": itemProps["data-collection"],
          "data-key": itemProps["data-key"]
        } : itemProps,
        pressProps,
        hoverProps,
        keyboardProps,
        focusProps,
        // Prevent DOM focus from moving on mouse down when using virtual focus or this is a submenu/subdialog trigger.
        data.shouldUseVirtualFocus || isTrigger ? {
          onMouseDown: (e) => e.preventDefault()
        } : void 0
      ),
      // If a submenu is expanded, set the tabIndex to -1 so that shift tabbing goes out of the menu instead of the parent menu item.
      tabIndex: itemProps.tabIndex != null && isTriggerExpanded && !data.shouldUseVirtualFocus ? -1 : itemProps.tabIndex
    },
    labelProps: {
      id: labelId
    },
    descriptionProps: {
      id: descriptionId
    },
    keyboardShortcutProps: {
      id: keyboardId
    },
    isFocused,
    isFocusVisible: isFocused && selectionManager.isFocused && (0, $507fabe10e71c6fb$export$b9b3dfddab17db27)() && !isTriggerExpanded,
    isSelected,
    isPressed,
    isDisabled
  };
}

// node_modules/@react-aria/menu/dist/useMenuSection.mjs
function $3e5eb2498db5b506$export$73f7a44322579622(props) {
  let { heading, "aria-label": ariaLabel } = props;
  let headingId = (0, $bdb11010cef70236$export$f680877a34711e37)();
  return {
    itemProps: {
      role: "presentation"
    },
    headingProps: heading ? {
      // Techincally, menus cannot contain headings according to ARIA.
      // We hide the heading from assistive technology, using role="presentation",
      // and only use it as a label for the nested group.
      id: headingId,
      role: "presentation"
    } : {},
    groupProps: {
      role: "group",
      "aria-label": ariaLabel,
      "aria-labelledby": heading ? headingId : void 0
    }
  };
}

// node_modules/@react-aria/menu/dist/useSafelyMouseToSubmenu.mjs
var import_react102 = __toESM(require_react(), 1);
var $d275435c250248f8$var$ALLOWED_INVALID_MOVEMENTS = 2;
var $d275435c250248f8$var$THROTTLE_TIME = 50;
var $d275435c250248f8$var$TIMEOUT_TIME = 1e3;
var $d275435c250248f8$var$ANGLE_PADDING = Math.PI / 12;
function $d275435c250248f8$export$85ec83e04c95f50a(options) {
  let { menuRef, submenuRef, isOpen, isDisabled } = options;
  let prevPointerPos = (0, import_react102.useRef)(void 0);
  let submenuRect = (0, import_react102.useRef)(void 0);
  let lastProcessedTime = (0, import_react102.useRef)(0);
  let timeout = (0, import_react102.useRef)(void 0);
  let autoCloseTimeout = (0, import_react102.useRef)(void 0);
  let submenuSide = (0, import_react102.useRef)(void 0);
  let movementsTowardsSubmenuCount = (0, import_react102.useRef)(2);
  let [preventPointerEvents, setPreventPointerEvents] = (0, import_react102.useState)(false);
  let updateSubmenuRect = () => {
    if (submenuRef.current) {
      submenuRect.current = submenuRef.current.getBoundingClientRect();
      submenuSide.current = void 0;
    }
  };
  (0, $9daab02d461809db$export$683480f191c0e3ea)({
    ref: submenuRef,
    onResize: updateSubmenuRect
  });
  let reset = () => {
    setPreventPointerEvents(false);
    movementsTowardsSubmenuCount.current = $d275435c250248f8$var$ALLOWED_INVALID_MOVEMENTS;
    prevPointerPos.current = void 0;
  };
  let modality = (0, $507fabe10e71c6fb$export$98e20ec92f614cfe)();
  let onPointerDown = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e) => {
    if (preventPointerEvents) e.preventDefault();
  });
  (0, import_react102.useEffect)(() => {
    if (preventPointerEvents && menuRef.current) menuRef.current.style.pointerEvents = "none";
    else menuRef.current.style.pointerEvents = "";
  }, [
    menuRef,
    preventPointerEvents
  ]);
  (0, import_react102.useEffect)(() => {
    let submenu = submenuRef.current;
    let menu = menuRef.current;
    if (isDisabled || !submenu || !isOpen || modality !== "pointer" || !menu) {
      reset();
      return;
    }
    submenuRect.current = submenu.getBoundingClientRect();
    let onPointerMove = (e) => {
      if (e.pointerType === "touch" || e.pointerType === "pen") return;
      let currentTime = Date.now();
      if (currentTime - lastProcessedTime.current < $d275435c250248f8$var$THROTTLE_TIME) return;
      clearTimeout(timeout.current);
      clearTimeout(autoCloseTimeout.current);
      let { clientX: mouseX, clientY: mouseY } = e;
      if (!prevPointerPos.current) {
        prevPointerPos.current = {
          x: mouseX,
          y: mouseY
        };
        return;
      }
      if (!submenuRect.current) return;
      if (!submenuSide.current) submenuSide.current = mouseX > submenuRect.current.right ? "left" : "right";
      if (mouseX < menu.getBoundingClientRect().left || mouseX > menu.getBoundingClientRect().right || mouseY < menu.getBoundingClientRect().top || mouseY > menu.getBoundingClientRect().bottom) {
        reset();
        return;
      }
      let prevMouseX = prevPointerPos.current.x;
      let prevMouseY = prevPointerPos.current.y;
      let toSubmenuX = submenuSide.current === "right" ? submenuRect.current.left - prevMouseX : prevMouseX - submenuRect.current.right;
      let angleTop = Math.atan2(prevMouseY - submenuRect.current.top, toSubmenuX) + $d275435c250248f8$var$ANGLE_PADDING;
      let angleBottom = Math.atan2(prevMouseY - submenuRect.current.bottom, toSubmenuX) - $d275435c250248f8$var$ANGLE_PADDING;
      let anglePointer = Math.atan2(prevMouseY - mouseY, submenuSide.current === "left" ? -(mouseX - prevMouseX) : mouseX - prevMouseX);
      let isMovingTowardsSubmenu = anglePointer < angleTop && anglePointer > angleBottom;
      movementsTowardsSubmenuCount.current = isMovingTowardsSubmenu ? Math.min(movementsTowardsSubmenuCount.current + 1, $d275435c250248f8$var$ALLOWED_INVALID_MOVEMENTS) : Math.max(movementsTowardsSubmenuCount.current - 1, 0);
      if (movementsTowardsSubmenuCount.current >= $d275435c250248f8$var$ALLOWED_INVALID_MOVEMENTS) setPreventPointerEvents(true);
      else setPreventPointerEvents(false);
      lastProcessedTime.current = currentTime;
      prevPointerPos.current = {
        x: mouseX,
        y: mouseY
      };
      if (isMovingTowardsSubmenu) timeout.current = setTimeout(() => {
        reset();
        autoCloseTimeout.current = setTimeout(() => {
          let target = document.elementFromPoint(mouseX, mouseY);
          if (target && menu.contains(target)) target.dispatchEvent(new PointerEvent("pointerover", {
            bubbles: true,
            cancelable: true
          }));
        }, 100);
      }, $d275435c250248f8$var$TIMEOUT_TIME);
    };
    window.addEventListener("pointermove", onPointerMove);
    if (true) window.addEventListener("pointerdown", onPointerDown, true);
    return () => {
      window.removeEventListener("pointermove", onPointerMove);
      if (true) window.removeEventListener("pointerdown", onPointerDown, true);
      clearTimeout(timeout.current);
      clearTimeout(autoCloseTimeout.current);
      movementsTowardsSubmenuCount.current = $d275435c250248f8$var$ALLOWED_INVALID_MOVEMENTS;
    };
  }, [
    isDisabled,
    isOpen,
    menuRef,
    modality,
    setPreventPointerEvents,
    onPointerDown,
    submenuRef
  ]);
}

// node_modules/@react-aria/menu/dist/useSubmenuTrigger.mjs
var import_react103 = __toESM(require_react(), 1);
function $0065b146e7192841$export$7138b0d059a6e743(props, state, ref) {
  let { parentMenuRef, submenuRef, type = "menu", isDisabled, delay = 200, shouldUseVirtualFocus } = props;
  let submenuTriggerId = (0, $bdb11010cef70236$export$f680877a34711e37)();
  let overlayId = (0, $bdb11010cef70236$export$f680877a34711e37)();
  let { direction } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let openTimeout = (0, import_react103.useRef)(void 0);
  let cancelOpenTimeout = (0, import_react103.useCallback)(() => {
    if (openTimeout.current) {
      clearTimeout(openTimeout.current);
      openTimeout.current = void 0;
    }
  }, [
    openTimeout
  ]);
  let onSubmenuOpen = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((focusStrategy) => {
    cancelOpenTimeout();
    state.open(focusStrategy);
  });
  let onSubmenuClose = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)(() => {
    cancelOpenTimeout();
    state.close();
  });
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    return () => {
      cancelOpenTimeout();
    };
  }, [
    cancelOpenTimeout
  ]);
  let submenuKeyDown = (e) => {
    if (!e.currentTarget.contains(document.activeElement)) return;
    switch (e.key) {
      case "ArrowLeft":
        if (direction === "ltr" && e.currentTarget.contains(e.target)) {
          e.preventDefault();
          e.stopPropagation();
          onSubmenuClose();
          if (!shouldUseVirtualFocus && ref.current) (0, $7215afc6de606d6b$export$de79e2c695e052f3)(ref.current);
        }
        break;
      case "ArrowRight":
        if (direction === "rtl" && e.currentTarget.contains(e.target)) {
          e.preventDefault();
          e.stopPropagation();
          onSubmenuClose();
          if (!shouldUseVirtualFocus && ref.current) (0, $7215afc6de606d6b$export$de79e2c695e052f3)(ref.current);
        }
        break;
      case "Escape":
        var _submenuRef_current;
        if ((_submenuRef_current = submenuRef.current) === null || _submenuRef_current === void 0 ? void 0 : _submenuRef_current.contains(e.target)) {
          e.stopPropagation();
          onSubmenuClose();
          if (!shouldUseVirtualFocus && ref.current) (0, $7215afc6de606d6b$export$de79e2c695e052f3)(ref.current);
        }
        break;
    }
  };
  var _state_focusStrategy;
  let submenuProps = {
    id: overlayId,
    "aria-labelledby": submenuTriggerId,
    submenuLevel: state.submenuLevel,
    ...type === "menu" && {
      onClose: state.closeAll,
      autoFocus: (_state_focusStrategy = state.focusStrategy) !== null && _state_focusStrategy !== void 0 ? _state_focusStrategy : void 0,
      onKeyDown: submenuKeyDown
    }
  };
  let submenuTriggerKeyDown = (e) => {
    switch (e.key) {
      case "ArrowRight":
        if (!isDisabled) {
          if (direction === "ltr") {
            e.preventDefault();
            if (!state.isOpen) onSubmenuOpen("first");
            if (type === "menu" && !!(submenuRef === null || submenuRef === void 0 ? void 0 : submenuRef.current) && document.activeElement === (ref === null || ref === void 0 ? void 0 : ref.current)) (0, $7215afc6de606d6b$export$de79e2c695e052f3)(submenuRef.current);
          } else if (state.isOpen) onSubmenuClose();
          else e.continuePropagation();
        }
        break;
      case "ArrowLeft":
        if (!isDisabled) {
          if (direction === "rtl") {
            e.preventDefault();
            if (!state.isOpen) onSubmenuOpen("first");
            if (type === "menu" && !!(submenuRef === null || submenuRef === void 0 ? void 0 : submenuRef.current) && document.activeElement === (ref === null || ref === void 0 ? void 0 : ref.current)) (0, $7215afc6de606d6b$export$de79e2c695e052f3)(submenuRef.current);
          } else if (state.isOpen) onSubmenuClose();
          else e.continuePropagation();
        }
        break;
      default:
        e.continuePropagation();
        break;
    }
  };
  let onPressStart = (e) => {
    if (!isDisabled && (e.pointerType === "virtual" || e.pointerType === "keyboard"))
      onSubmenuOpen("first");
  };
  let onPress = (e) => {
    if (!isDisabled && (e.pointerType === "touch" || e.pointerType === "mouse"))
      onSubmenuOpen();
  };
  let onHoverChange = (isHovered) => {
    if (!isDisabled) {
      if (isHovered && !state.isOpen) {
        if (!openTimeout.current) openTimeout.current = setTimeout(() => {
          onSubmenuOpen();
        }, delay);
      } else if (!isHovered) cancelOpenTimeout();
    }
  };
  let onBlur = (e) => {
    var _parentMenuRef_current;
    if (state.isOpen && ((_parentMenuRef_current = parentMenuRef.current) === null || _parentMenuRef_current === void 0 ? void 0 : _parentMenuRef_current.contains(e.relatedTarget))) onSubmenuClose();
  };
  let shouldCloseOnInteractOutside = (target) => {
    if (target !== ref.current) return true;
    return false;
  };
  (0, $d275435c250248f8$export$85ec83e04c95f50a)({
    menuRef: parentMenuRef,
    submenuRef,
    isOpen: state.isOpen,
    isDisabled
  });
  return {
    submenuTriggerProps: {
      id: submenuTriggerId,
      "aria-controls": state.isOpen ? overlayId : void 0,
      "aria-haspopup": !isDisabled ? type : void 0,
      "aria-expanded": state.isOpen ? "true" : "false",
      onPressStart,
      onPress,
      onHoverChange,
      onKeyDown: submenuTriggerKeyDown,
      onBlur,
      isOpen: state.isOpen
    },
    submenuProps,
    popoverProps: {
      isNonModal: true,
      shouldCloseOnInteractOutside
    }
  };
}

// node_modules/@react-aria/combobox/dist/useComboBox.mjs
function $parcel$interopDefault12(a) {
  return a && a.__esModule ? a.default : a;
}
function $c350ade66beef0af$export$8c18d1b4f7232bbf(props, state) {
  let { buttonRef, popoverRef, inputRef, listBoxRef, keyboardDelegate, layoutDelegate, shouldFocusWrap, isReadOnly, isDisabled } = props;
  let backupBtnRef = (0, import_react104.useRef)(null);
  buttonRef = buttonRef !== null && buttonRef !== void 0 ? buttonRef : backupBtnRef;
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault12($de5926a92e8ebc5b$exports)), "@react-aria/combobox");
  let { menuTriggerProps, menuProps } = (0, $168583247155ddda$export$dc9c12ed27dd1b49)({
    type: "listbox",
    isDisabled: isDisabled || isReadOnly
  }, state, buttonRef);
  (0, $b1f0cad8af73213b$export$3585ede4d035bf14).set(state, {
    id: menuProps.id
  });
  let { collection } = state;
  let { disabledKeys } = state.selectionManager;
  let delegate = (0, import_react104.useMemo)(() => keyboardDelegate || new (0, $2a25aae57d74318e$export$a05409b8bb224a5a)({
    collection,
    disabledKeys,
    ref: listBoxRef,
    layoutDelegate
  }), [
    keyboardDelegate,
    layoutDelegate,
    collection,
    disabledKeys,
    listBoxRef
  ]);
  let { collectionProps } = (0, $ae20dd8cbca75726$export$d6daf82dcd84e87c)({
    selectionManager: state.selectionManager,
    keyboardDelegate: delegate,
    disallowTypeAhead: true,
    disallowEmptySelection: true,
    shouldFocusWrap,
    ref: inputRef,
    // Prevent item scroll behavior from being applied here, should be handled in the user's Popover + ListBox component
    isVirtualized: true
  });
  let router = (0, $ea8dcbcb9ea1b556$export$9a302a45f65d0572)();
  let onKeyDown = (e) => {
    if (e.nativeEvent.isComposing) return;
    switch (e.key) {
      case "Enter":
      case "Tab":
        if (state.isOpen && e.key === "Enter") e.preventDefault();
        if (state.isOpen && listBoxRef.current && state.selectionManager.focusedKey != null && state.selectionManager.isLink(state.selectionManager.focusedKey)) {
          let item = listBoxRef.current.querySelector(`[data-key="${CSS.escape(state.selectionManager.focusedKey.toString())}"]`);
          if (e.key === "Enter" && item instanceof HTMLAnchorElement) {
            let collectionItem = state.collection.getItem(state.selectionManager.focusedKey);
            if (collectionItem) router.open(item, e, collectionItem.props.href, collectionItem.props.routerOptions);
          }
          state.close();
        } else state.commit();
        break;
      case "Escape":
        if (state.selectedKey !== null || state.inputValue === "" || props.allowsCustomValue) e.continuePropagation();
        state.revert();
        break;
      case "ArrowDown":
        state.open("first", "manual");
        break;
      case "ArrowUp":
        state.open("last", "manual");
        break;
      case "ArrowLeft":
      case "ArrowRight":
        state.selectionManager.setFocusedKey(null);
        break;
    }
  };
  let onBlur = (e) => {
    var _popoverRef_current;
    let blurFromButton = (buttonRef === null || buttonRef === void 0 ? void 0 : buttonRef.current) && buttonRef.current === e.relatedTarget;
    let blurIntoPopover = (_popoverRef_current = popoverRef.current) === null || _popoverRef_current === void 0 ? void 0 : _popoverRef_current.contains(e.relatedTarget);
    if (blurFromButton || blurIntoPopover) return;
    if (props.onBlur) props.onBlur(e);
    state.setFocused(false);
  };
  let onFocus = (e) => {
    if (state.isFocused) return;
    if (props.onFocus) props.onFocus(e);
    state.setFocused(true);
  };
  let { isInvalid, validationErrors, validationDetails } = state.displayValidation;
  let { labelProps, inputProps, descriptionProps, errorMessageProps } = (0, $2d73ec29415bd339$export$712718f7aec83d5)({
    ...props,
    onChange: state.setInputValue,
    onKeyDown: !isReadOnly ? (0, $ff5963eb1fccf552$export$e08e3b67e392101e)(state.isOpen && collectionProps.onKeyDown, onKeyDown, props.onKeyDown) : props.onKeyDown,
    onBlur,
    value: state.inputValue,
    onFocus,
    autoComplete: "off",
    validate: void 0,
    [(0, $e5be200c675c3b3a$export$a763b9476acd3eb)]: state
  }, inputRef);
  let onPress = (e) => {
    if (e.pointerType === "touch") {
      var _inputRef_current;
      (_inputRef_current = inputRef.current) === null || _inputRef_current === void 0 ? void 0 : _inputRef_current.focus();
      state.toggle(null, "manual");
    }
  };
  let onPressStart = (e) => {
    if (e.pointerType !== "touch") {
      var _inputRef_current;
      (_inputRef_current = inputRef.current) === null || _inputRef_current === void 0 ? void 0 : _inputRef_current.focus();
      state.toggle(e.pointerType === "keyboard" || e.pointerType === "virtual" ? "first" : null, "manual");
    }
  };
  let triggerLabelProps = (0, $313b98861ee5dd6c$export$d6875122194c7b44)({
    id: menuTriggerProps.id,
    "aria-label": stringFormatter.format("buttonLabel"),
    "aria-labelledby": props["aria-labelledby"] || labelProps.id
  });
  let listBoxProps = (0, $313b98861ee5dd6c$export$d6875122194c7b44)({
    id: menuProps.id,
    "aria-label": stringFormatter.format("listboxLabel"),
    "aria-labelledby": props["aria-labelledby"] || labelProps.id
  });
  let lastEventTime = (0, import_react104.useRef)(0);
  let onTouchEnd = (e) => {
    if (isDisabled || isReadOnly) return;
    if (e.timeStamp - lastEventTime.current < 500) {
      var _inputRef_current;
      e.preventDefault();
      (_inputRef_current = inputRef.current) === null || _inputRef_current === void 0 ? void 0 : _inputRef_current.focus();
      return;
    }
    let rect = e.target.getBoundingClientRect();
    let touch = e.changedTouches[0];
    let centerX = Math.ceil(rect.left + 0.5 * rect.width);
    let centerY = Math.ceil(rect.top + 0.5 * rect.height);
    if (touch.clientX === centerX && touch.clientY === centerY) {
      var _inputRef_current1;
      e.preventDefault();
      (_inputRef_current1 = inputRef.current) === null || _inputRef_current1 === void 0 ? void 0 : _inputRef_current1.focus();
      state.toggle(null, "manual");
      lastEventTime.current = e.timeStamp;
    }
  };
  let focusedItem = state.selectionManager.focusedKey != null && state.isOpen ? state.collection.getItem(state.selectionManager.focusedKey) : void 0;
  var _focusedItem_parentKey;
  let sectionKey = (_focusedItem_parentKey = focusedItem === null || focusedItem === void 0 ? void 0 : focusedItem.parentKey) !== null && _focusedItem_parentKey !== void 0 ? _focusedItem_parentKey : null;
  var _state_selectionManager_focusedKey;
  let itemKey = (_state_selectionManager_focusedKey = state.selectionManager.focusedKey) !== null && _state_selectionManager_focusedKey !== void 0 ? _state_selectionManager_focusedKey : null;
  let lastSection = (0, import_react104.useRef)(sectionKey);
  let lastItem = (0, import_react104.useRef)(itemKey);
  (0, import_react104.useEffect)(() => {
    if ((0, $c87311424ea30a05$export$e1865c3bedcd822b)() && focusedItem != null && itemKey != null && itemKey !== lastItem.current) {
      let isSelected = state.selectionManager.isSelected(itemKey);
      let section = sectionKey != null ? state.collection.getItem(sectionKey) : null;
      let sectionTitle = (section === null || section === void 0 ? void 0 : section["aria-label"]) || (typeof (section === null || section === void 0 ? void 0 : section.rendered) === "string" ? section.rendered : "") || "";
      var _ref;
      let announcement = stringFormatter.format("focusAnnouncement", {
        isGroupChange: (_ref = section && sectionKey !== lastSection.current) !== null && _ref !== void 0 ? _ref : false,
        groupTitle: sectionTitle,
        groupCount: section ? [
          ...(0, $c5a24bc478652b5f$export$1005530eda016c13)(section, state.collection)
        ].length : 0,
        optionText: focusedItem["aria-label"] || focusedItem.textValue || "",
        isSelected
      });
      (0, $319e236875307eab$export$a9b970dcc4ae71a9)(announcement);
    }
    lastSection.current = sectionKey;
    lastItem.current = itemKey;
  });
  let optionCount = (0, $453cc9f0df89c0a5$export$77d5aafae4e095b2)(state.collection);
  let lastSize = (0, import_react104.useRef)(optionCount);
  let lastOpen = (0, import_react104.useRef)(state.isOpen);
  (0, import_react104.useEffect)(() => {
    let didOpenWithoutFocusedItem = state.isOpen !== lastOpen.current && (state.selectionManager.focusedKey == null || (0, $c87311424ea30a05$export$e1865c3bedcd822b)());
    if (state.isOpen && (didOpenWithoutFocusedItem || optionCount !== lastSize.current)) {
      let announcement = stringFormatter.format("countAnnouncement", {
        optionCount
      });
      (0, $319e236875307eab$export$a9b970dcc4ae71a9)(announcement);
    }
    lastSize.current = optionCount;
    lastOpen.current = state.isOpen;
  });
  let lastSelectedKey = (0, import_react104.useRef)(state.selectedKey);
  (0, import_react104.useEffect)(() => {
    if ((0, $c87311424ea30a05$export$e1865c3bedcd822b)() && state.isFocused && state.selectedItem && state.selectedKey !== lastSelectedKey.current) {
      let optionText = state.selectedItem["aria-label"] || state.selectedItem.textValue || "";
      let announcement = stringFormatter.format("selectedAnnouncement", {
        optionText
      });
      (0, $319e236875307eab$export$a9b970dcc4ae71a9)(announcement);
    }
    lastSelectedKey.current = state.selectedKey;
  });
  (0, import_react104.useEffect)(() => {
    if (state.isOpen) return (0, $5e3802645cc19319$export$1c3ebcada18427bf)([
      inputRef.current,
      popoverRef.current
    ].filter((element) => element != null));
  }, [
    state.isOpen,
    inputRef,
    popoverRef
  ]);
  (0, $4f58c5f72bcf79f7$export$496315a1608d9602)(() => {
    if (!focusedItem && inputRef.current && (0, $d4ee10de306f2510$export$cd4e5573fbe2b576)((0, $431fbd86ca7dc216$export$b204af158042fbac)(inputRef.current)) === inputRef.current) (0, $55f9b1ae81f22853$export$2b35b76d2e30e129)(inputRef.current, null);
  }, [
    focusedItem
  ]);
  return {
    labelProps,
    buttonProps: {
      ...menuTriggerProps,
      ...triggerLabelProps,
      excludeFromTabOrder: true,
      preventFocusOnPress: true,
      onPress,
      onPressStart,
      isDisabled: isDisabled || isReadOnly
    },
    inputProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(inputProps, {
      role: "combobox",
      "aria-expanded": menuTriggerProps["aria-expanded"],
      "aria-controls": state.isOpen ? menuProps.id : void 0,
      // TODO: readd proper logic for completionMode = complete (aria-autocomplete: both)
      "aria-autocomplete": "list",
      "aria-activedescendant": focusedItem ? (0, $b1f0cad8af73213b$export$9145995848b05025)(state, focusedItem.key) : void 0,
      onTouchEnd,
      // This disable's iOS's autocorrect suggestions, since the combo box provides its own suggestions.
      autoCorrect: "off",
      // This disable's the macOS Safari spell check auto corrections.
      spellCheck: "false"
    }),
    listBoxProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(menuProps, listBoxProps, {
      autoFocus: state.focusStrategy || true,
      shouldUseVirtualFocus: true,
      shouldSelectOnPressUp: true,
      shouldFocusOnHover: true,
      linkBehavior: "selection"
    }),
    descriptionProps,
    errorMessageProps,
    isInvalid,
    validationErrors,
    validationDetails
  };
}

// node_modules/@react-aria/datepicker/dist/ar-AE.mjs
var $f23889fffbde9058$exports = {};
$f23889fffbde9058$exports = {
  "calendar": `التقويم`,
  "day": `يوم`,
  "dayPeriod": `ص/م`,
  "endDate": `تاريخ الانتهاء`,
  "era": `العصر`,
  "hour": `الساعات`,
  "minute": `الدقائق`,
  "month": `الشهر`,
  "second": `الثواني`,
  "selectedDateDescription": (args) => `تاريخ محدد: ${args.date}`,
  "selectedRangeDescription": (args) => `المدى الزمني المحدد: ${args.startDate} إلى ${args.endDate}`,
  "selectedTimeDescription": (args) => `الوقت المحدد: ${args.time}`,
  "startDate": `تاريخ البدء`,
  "timeZoneName": `التوقيت`,
  "weekday": `اليوم`,
  "year": `السنة`
};

// node_modules/@react-aria/datepicker/dist/bg-BG.mjs
var $09d9badaa8903929$exports = {};
$09d9badaa8903929$exports = {
  "calendar": `Календар`,
  "day": `ден`,
  "dayPeriod": `пр.об./сл.об.`,
  "endDate": `Крайна дата`,
  "era": `ера`,
  "hour": `час`,
  "minute": `минута`,
  "month": `месец`,
  "second": `секунда`,
  "selectedDateDescription": (args) => `Избрана дата: ${args.date}`,
  "selectedRangeDescription": (args) => `Избран диапазон: ${args.startDate} до ${args.endDate}`,
  "selectedTimeDescription": (args) => `Избрано време: ${args.time}`,
  "startDate": `Начална дата`,
  "timeZoneName": `часова зона`,
  "weekday": `ден от седмицата`,
  "year": `година`
};

// node_modules/@react-aria/datepicker/dist/cs-CZ.mjs
var $151b77e0fd711730$exports = {};
$151b77e0fd711730$exports = {
  "calendar": `Kalendář`,
  "day": `den`,
  "dayPeriod": `část dne`,
  "endDate": `Konečné datum`,
  "era": `letopočet`,
  "hour": `hodina`,
  "minute": `minuta`,
  "month": `měsíc`,
  "second": `sekunda`,
  "selectedDateDescription": (args) => `Vybrané datum: ${args.date}`,
  "selectedRangeDescription": (args) => `Vybrané období: ${args.startDate} až ${args.endDate}`,
  "selectedTimeDescription": (args) => `Vybraný čas: ${args.time}`,
  "startDate": `Počáteční datum`,
  "timeZoneName": `časové pásmo`,
  "weekday": `den v týdnu`,
  "year": `rok`
};

// node_modules/@react-aria/datepicker/dist/da-DK.mjs
var $61915aa8630b90a2$exports = {};
$61915aa8630b90a2$exports = {
  "calendar": `Kalender`,
  "day": `dag`,
  "dayPeriod": `AM/PM`,
  "endDate": `Slutdato`,
  "era": `æra`,
  "hour": `time`,
  "minute": `minut`,
  "month": `måned`,
  "second": `sekund`,
  "selectedDateDescription": (args) => `Valgt dato: ${args.date}`,
  "selectedRangeDescription": (args) => `Valgt interval: ${args.startDate} til ${args.endDate}`,
  "selectedTimeDescription": (args) => `Valgt tidspunkt: ${args.time}`,
  "startDate": `Startdato`,
  "timeZoneName": `tidszone`,
  "weekday": `ugedag`,
  "year": `år`
};

// node_modules/@react-aria/datepicker/dist/de-DE.mjs
var $35cea00159787840$exports = {};
$35cea00159787840$exports = {
  "calendar": `Kalender`,
  "day": `Tag`,
  "dayPeriod": `Tageshälfte`,
  "endDate": `Enddatum`,
  "era": `Epoche`,
  "hour": `Stunde`,
  "minute": `Minute`,
  "month": `Monat`,
  "second": `Sekunde`,
  "selectedDateDescription": (args) => `Ausgewähltes Datum: ${args.date}`,
  "selectedRangeDescription": (args) => `Ausgewählter Bereich: ${args.startDate} bis ${args.endDate}`,
  "selectedTimeDescription": (args) => `Ausgewählte Zeit: ${args.time}`,
  "startDate": `Anfangsdatum`,
  "timeZoneName": `Zeitzone`,
  "weekday": `Wochentag`,
  "year": `Jahr`
};

// node_modules/@react-aria/datepicker/dist/el-GR.mjs
var $518b4e82b9eacafd$exports = {};
$518b4e82b9eacafd$exports = {
  "calendar": `Ημερολόγιο`,
  "day": `ημέρα`,
  "dayPeriod": `π.μ./μ.μ.`,
  "endDate": `Ημερομηνία λήξης`,
  "era": `περίοδος`,
  "hour": `ώρα`,
  "minute": `λεπτό`,
  "month": `μήνας`,
  "second": `δευτερόλεπτο`,
  "selectedDateDescription": (args) => `Επιλεγμένη ημερομηνία: ${args.date}`,
  "selectedRangeDescription": (args) => `Επιλεγμένο εύρος: ${args.startDate} έως ${args.endDate}`,
  "selectedTimeDescription": (args) => `Επιλεγμένη ώρα: ${args.time}`,
  "startDate": `Ημερομηνία έναρξης`,
  "timeZoneName": `ζώνη ώρας`,
  "weekday": `καθημερινή`,
  "year": `έτος`
};

// node_modules/@react-aria/datepicker/dist/en-US.mjs
var $1c2b297f7e2cf474$exports = {};
$1c2b297f7e2cf474$exports = {
  "era": `era`,
  "year": `year`,
  "month": `month`,
  "day": `day`,
  "hour": `hour`,
  "minute": `minute`,
  "second": `second`,
  "dayPeriod": `AM/PM`,
  "calendar": `Calendar`,
  "startDate": `Start Date`,
  "endDate": `End Date`,
  "weekday": `day of the week`,
  "timeZoneName": `time zone`,
  "selectedDateDescription": (args) => `Selected Date: ${args.date}`,
  "selectedRangeDescription": (args) => `Selected Range: ${args.startDate} to ${args.endDate}`,
  "selectedTimeDescription": (args) => `Selected Time: ${args.time}`
};

// node_modules/@react-aria/datepicker/dist/es-ES.mjs
var $07f628a707cf9b18$exports = {};
$07f628a707cf9b18$exports = {
  "calendar": `Calendario`,
  "day": `día`,
  "dayPeriod": `a. m./p. m.`,
  "endDate": `Fecha final`,
  "era": `era`,
  "hour": `hora`,
  "minute": `minuto`,
  "month": `mes`,
  "second": `segundo`,
  "selectedDateDescription": (args) => `Fecha seleccionada: ${args.date}`,
  "selectedRangeDescription": (args) => `Rango seleccionado: ${args.startDate} a ${args.endDate}`,
  "selectedTimeDescription": (args) => `Hora seleccionada: ${args.time}`,
  "startDate": `Fecha de inicio`,
  "timeZoneName": `zona horaria`,
  "weekday": `día de la semana`,
  "year": `año`
};

// node_modules/@react-aria/datepicker/dist/et-EE.mjs
var $db553ffe17c7f4db$exports = {};
$db553ffe17c7f4db$exports = {
  "calendar": `Kalender`,
  "day": `päev`,
  "dayPeriod": `enne/pärast lõunat`,
  "endDate": `Lõppkuupäev`,
  "era": `ajastu`,
  "hour": `tund`,
  "minute": `minut`,
  "month": `kuu`,
  "second": `sekund`,
  "selectedDateDescription": (args) => `Valitud kuupäev: ${args.date}`,
  "selectedRangeDescription": (args) => `Valitud vahemik: ${args.startDate} kuni ${args.endDate}`,
  "selectedTimeDescription": (args) => `Valitud aeg: ${args.time}`,
  "startDate": `Alguskuupäev`,
  "timeZoneName": `ajavöönd`,
  "weekday": `nädalapäev`,
  "year": `aasta`
};

// node_modules/@react-aria/datepicker/dist/fi-FI.mjs
var $4afcfe00cd703f83$exports = {};
$4afcfe00cd703f83$exports = {
  "calendar": `Kalenteri`,
  "day": `päivä`,
  "dayPeriod": `vuorokaudenaika`,
  "endDate": `Päättymispäivä`,
  "era": `aikakausi`,
  "hour": `tunti`,
  "minute": `minuutti`,
  "month": `kuukausi`,
  "second": `sekunti`,
  "selectedDateDescription": (args) => `Valittu päivämäärä: ${args.date}`,
  "selectedRangeDescription": (args) => `Valittu aikaväli: ${args.startDate} – ${args.endDate}`,
  "selectedTimeDescription": (args) => `Valittu aika: ${args.time}`,
  "startDate": `Alkamispäivä`,
  "timeZoneName": `aikavyöhyke`,
  "weekday": `viikonpäivä`,
  "year": `vuosi`
};

// node_modules/@react-aria/datepicker/dist/fr-FR.mjs
var $1d2645d18d4c5be0$exports = {};
$1d2645d18d4c5be0$exports = {
  "calendar": `Calendrier`,
  "day": `jour`,
  "dayPeriod": `cadran`,
  "endDate": `Date de fin`,
  "era": `ère`,
  "hour": `heure`,
  "minute": `minute`,
  "month": `mois`,
  "second": `seconde`,
  "selectedDateDescription": (args) => `Date sélectionnée : ${args.date}`,
  "selectedRangeDescription": (args) => `Plage sélectionnée : ${args.startDate} au ${args.endDate}`,
  "selectedTimeDescription": (args) => `Heure choisie : ${args.time}`,
  "startDate": `Date de début`,
  "timeZoneName": `fuseau horaire`,
  "weekday": `jour de la semaine`,
  "year": `année`
};

// node_modules/@react-aria/datepicker/dist/he-IL.mjs
var $64cb6a9be1f6fa48$exports = {};
$64cb6a9be1f6fa48$exports = {
  "calendar": `לוח שנה`,
  "day": `יום`,
  "dayPeriod": `לפנה״צ/אחה״צ`,
  "endDate": `תאריך סיום`,
  "era": `תקופה`,
  "hour": `שעה`,
  "minute": `דקה`,
  "month": `חודש`,
  "second": `שנייה`,
  "selectedDateDescription": (args) => `תאריך נבחר: ${args.date}`,
  "selectedRangeDescription": (args) => `טווח נבחר: ${args.startDate} עד ${args.endDate}`,
  "selectedTimeDescription": (args) => `זמן נבחר: ${args.time}`,
  "startDate": `תאריך התחלה`,
  "timeZoneName": `אזור זמן`,
  "weekday": `יום בשבוע`,
  "year": `שנה`
};

// node_modules/@react-aria/datepicker/dist/hr-HR.mjs
var $2a1ef2e8050be27a$exports = {};
$2a1ef2e8050be27a$exports = {
  "calendar": `Kalendar`,
  "day": `dan`,
  "dayPeriod": `AM/PM`,
  "endDate": `Datum završetka`,
  "era": `era`,
  "hour": `sat`,
  "minute": `minuta`,
  "month": `mjesec`,
  "second": `sekunda`,
  "selectedDateDescription": (args) => `Odabrani datum: ${args.date}`,
  "selectedRangeDescription": (args) => `Odabrani raspon: ${args.startDate} do ${args.endDate}`,
  "selectedTimeDescription": (args) => `Odabrano vrijeme: ${args.time}`,
  "startDate": `Datum početka`,
  "timeZoneName": `vremenska zona`,
  "weekday": `dan u tjednu`,
  "year": `godina`
};

// node_modules/@react-aria/datepicker/dist/hu-HU.mjs
var $ad429dca102acd0e$exports = {};
$ad429dca102acd0e$exports = {
  "calendar": `Naptár`,
  "day": `nap`,
  "dayPeriod": `napszak`,
  "endDate": `Befejező dátum`,
  "era": `éra`,
  "hour": `óra`,
  "minute": `perc`,
  "month": `hónap`,
  "second": `másodperc`,
  "selectedDateDescription": (args) => `Kijelölt dátum: ${args.date}`,
  "selectedRangeDescription": (args) => `Kijelölt tartomány: ${args.startDate}–${args.endDate}`,
  "selectedTimeDescription": (args) => `Kijelölt idő: ${args.time}`,
  "startDate": `Kezdő dátum`,
  "timeZoneName": `időzóna`,
  "weekday": `hét napja`,
  "year": `év`
};

// node_modules/@react-aria/datepicker/dist/it-IT.mjs
var $6e68cb5d1cb97bd2$exports = {};
$6e68cb5d1cb97bd2$exports = {
  "calendar": `Calendario`,
  "day": `giorno`,
  "dayPeriod": `AM/PM`,
  "endDate": `Data finale`,
  "era": `era`,
  "hour": `ora`,
  "minute": `minuto`,
  "month": `mese`,
  "second": `secondo`,
  "selectedDateDescription": (args) => `Data selezionata: ${args.date}`,
  "selectedRangeDescription": (args) => `Intervallo selezionato: da ${args.startDate} a ${args.endDate}`,
  "selectedTimeDescription": (args) => `Ora selezionata: ${args.time}`,
  "startDate": `Data iniziale`,
  "timeZoneName": `fuso orario`,
  "weekday": `giorno della settimana`,
  "year": `anno`
};

// node_modules/@react-aria/datepicker/dist/ja-JP.mjs
var $a82ee9af063ee069$exports = {};
$a82ee9af063ee069$exports = {
  "calendar": `カレンダー`,
  "day": `日`,
  "dayPeriod": `午前/午後`,
  "endDate": `終了日`,
  "era": `時代`,
  "hour": `時`,
  "minute": `分`,
  "month": `月`,
  "second": `秒`,
  "selectedDateDescription": (args) => `選択した日付 : ${args.date}`,
  "selectedRangeDescription": (args) => `選択範囲 : ${args.startDate} から ${args.endDate}`,
  "selectedTimeDescription": (args) => `選択した時間 : ${args.time}`,
  "startDate": `開始日`,
  "timeZoneName": `タイムゾーン`,
  "weekday": `曜日`,
  "year": `年`
};

// node_modules/@react-aria/datepicker/dist/ko-KR.mjs
var $67e9091dbf37d4eb$exports = {};
$67e9091dbf37d4eb$exports = {
  "calendar": `달력`,
  "day": `일`,
  "dayPeriod": `오전/오후`,
  "endDate": `종료일`,
  "era": `연호`,
  "hour": `시`,
  "minute": `분`,
  "month": `월`,
  "second": `초`,
  "selectedDateDescription": (args) => `선택 일자: ${args.date}`,
  "selectedRangeDescription": (args) => `선택 범위: ${args.startDate} ~ ${args.endDate}`,
  "selectedTimeDescription": (args) => `선택 시간: ${args.time}`,
  "startDate": `시작일`,
  "timeZoneName": `시간대`,
  "weekday": `요일`,
  "year": `년`
};

// node_modules/@react-aria/datepicker/dist/lt-LT.mjs
var $75834f9729f653d1$exports = {};
$75834f9729f653d1$exports = {
  "calendar": `Kalendorius`,
  "day": `diena`,
  "dayPeriod": `iki pietų / po pietų`,
  "endDate": `Pabaigos data`,
  "era": `era`,
  "hour": `valanda`,
  "minute": `minutė`,
  "month": `mėnuo`,
  "second": `sekundė`,
  "selectedDateDescription": (args) => `Pasirinkta data: ${args.date}`,
  "selectedRangeDescription": (args) => `Pasirinktas intervalas: nuo ${args.startDate} iki ${args.endDate}`,
  "selectedTimeDescription": (args) => `Pasirinktas laikas: ${args.time}`,
  "startDate": `Pradžios data`,
  "timeZoneName": `laiko juosta`,
  "weekday": `savaitės diena`,
  "year": `metai`
};

// node_modules/@react-aria/datepicker/dist/lv-LV.mjs
var $a2df2c2520b4a7f0$exports = {};
$a2df2c2520b4a7f0$exports = {
  "calendar": `Kalendārs`,
  "day": `diena`,
  "dayPeriod": `priekšpusdienā/pēcpusdienā`,
  "endDate": `Beigu datums`,
  "era": `ēra`,
  "hour": `stundas`,
  "minute": `minūtes`,
  "month": `mēnesis`,
  "second": `sekundes`,
  "selectedDateDescription": (args) => `Atlasītais datums: ${args.date}`,
  "selectedRangeDescription": (args) => `Atlasītais diapazons: no ${args.startDate} līdz ${args.endDate}`,
  "selectedTimeDescription": (args) => `Atlasītais laiks: ${args.time}`,
  "startDate": `Sākuma datums`,
  "timeZoneName": `laika josla`,
  "weekday": `nedēļas diena`,
  "year": `gads`
};

// node_modules/@react-aria/datepicker/dist/nb-NO.mjs
var $aedcd71db4933ed5$exports = {};
$aedcd71db4933ed5$exports = {
  "calendar": `Kalender`,
  "day": `dag`,
  "dayPeriod": `a.m./p.m.`,
  "endDate": `Sluttdato`,
  "era": `tidsalder`,
  "hour": `time`,
  "minute": `minutt`,
  "month": `måned`,
  "second": `sekund`,
  "selectedDateDescription": (args) => `Valgt dato: ${args.date}`,
  "selectedRangeDescription": (args) => `Valgt område: ${args.startDate} til ${args.endDate}`,
  "selectedTimeDescription": (args) => `Valgt tid: ${args.time}`,
  "startDate": `Startdato`,
  "timeZoneName": `tidssone`,
  "weekday": `ukedag`,
  "year": `år`
};

// node_modules/@react-aria/datepicker/dist/nl-NL.mjs
var $3b2df9e54353046c$exports = {};
$3b2df9e54353046c$exports = {
  "calendar": `Kalender`,
  "day": `dag`,
  "dayPeriod": `a.m./p.m.`,
  "endDate": `Einddatum`,
  "era": `tijdperk`,
  "hour": `uur`,
  "minute": `minuut`,
  "month": `maand`,
  "second": `seconde`,
  "selectedDateDescription": (args) => `Geselecteerde datum: ${args.date}`,
  "selectedRangeDescription": (args) => `Geselecteerd bereik: ${args.startDate} tot ${args.endDate}`,
  "selectedTimeDescription": (args) => `Geselecteerde tijd: ${args.time}`,
  "startDate": `Startdatum`,
  "timeZoneName": `tijdzone`,
  "weekday": `dag van de week`,
  "year": `jaar`
};

// node_modules/@react-aria/datepicker/dist/pl-PL.mjs
var $c03fe977fcfafe93$exports = {};
$c03fe977fcfafe93$exports = {
  "calendar": `Kalendarz`,
  "day": `dzień`,
  "dayPeriod": `rano / po południu / wieczorem`,
  "endDate": `Data końcowa`,
  "era": `era`,
  "hour": `godzina`,
  "minute": `minuta`,
  "month": `miesiąc`,
  "second": `sekunda`,
  "selectedDateDescription": (args) => `Wybrana data: ${args.date}`,
  "selectedRangeDescription": (args) => `Wybrany zakres: ${args.startDate} do ${args.endDate}`,
  "selectedTimeDescription": (args) => `Wybrany czas: ${args.time}`,
  "startDate": `Data początkowa`,
  "timeZoneName": `strefa czasowa`,
  "weekday": `dzień tygodnia`,
  "year": `rok`
};

// node_modules/@react-aria/datepicker/dist/pt-BR.mjs
var $569f006fc292345f$exports = {};
$569f006fc292345f$exports = {
  "calendar": `Calendário`,
  "day": `dia`,
  "dayPeriod": `AM/PM`,
  "endDate": `Data final`,
  "era": `era`,
  "hour": `hora`,
  "minute": `minuto`,
  "month": `mês`,
  "second": `segundo`,
  "selectedDateDescription": (args) => `Data selecionada: ${args.date}`,
  "selectedRangeDescription": (args) => `Intervalo selecionado: ${args.startDate} a ${args.endDate}`,
  "selectedTimeDescription": (args) => `Hora selecionada: ${args.time}`,
  "startDate": `Data inicial`,
  "timeZoneName": `fuso horário`,
  "weekday": `dia da semana`,
  "year": `ano`
};

// node_modules/@react-aria/datepicker/dist/pt-PT.mjs
var $7c2494e14452f2dd$exports = {};
$7c2494e14452f2dd$exports = {
  "calendar": `Calendário`,
  "day": `dia`,
  "dayPeriod": `am/pm`,
  "endDate": `Data de Término`,
  "era": `era`,
  "hour": `hora`,
  "minute": `minuto`,
  "month": `mês`,
  "second": `segundo`,
  "selectedDateDescription": (args) => `Data selecionada: ${args.date}`,
  "selectedRangeDescription": (args) => `Intervalo selecionado: ${args.startDate} a ${args.endDate}`,
  "selectedTimeDescription": (args) => `Hora selecionada: ${args.time}`,
  "startDate": `Data de Início`,
  "timeZoneName": `fuso horário`,
  "weekday": `dia da semana`,
  "year": `ano`
};

// node_modules/@react-aria/datepicker/dist/ro-RO.mjs
var $eb82ef981b5592bf$exports = {};
$eb82ef981b5592bf$exports = {
  "calendar": `Calendar`,
  "day": `zi`,
  "dayPeriod": `a.m/p.m.`,
  "endDate": `Dată final`,
  "era": `eră`,
  "hour": `oră`,
  "minute": `minut`,
  "month": `lună`,
  "second": `secundă`,
  "selectedDateDescription": (args) => `Dată selectată: ${args.date}`,
  "selectedRangeDescription": (args) => `Interval selectat: de la ${args.startDate} până la ${args.endDate}`,
  "selectedTimeDescription": (args) => `Ora selectată: ${args.time}`,
  "startDate": `Dată început`,
  "timeZoneName": `fus orar`,
  "weekday": `ziua din săptămână`,
  "year": `an`
};

// node_modules/@react-aria/datepicker/dist/ru-RU.mjs
var $6efa0e119f396950$exports = {};
$6efa0e119f396950$exports = {
  "calendar": `Календарь`,
  "day": `день`,
  "dayPeriod": `AM/PM`,
  "endDate": `Дата окончания`,
  "era": `эра`,
  "hour": `час`,
  "minute": `минута`,
  "month": `месяц`,
  "second": `секунда`,
  "selectedDateDescription": (args) => `Выбранная дата: ${args.date}`,
  "selectedRangeDescription": (args) => `Выбранный диапазон: с ${args.startDate} по ${args.endDate}`,
  "selectedTimeDescription": (args) => `Выбранное время: ${args.time}`,
  "startDate": `Дата начала`,
  "timeZoneName": `часовой пояс`,
  "weekday": `день недели`,
  "year": `год`
};

// node_modules/@react-aria/datepicker/dist/sk-SK.mjs
var $7f5e57085d7f5049$exports = {};
$7f5e57085d7f5049$exports = {
  "calendar": `Kalendár`,
  "day": `deň`,
  "dayPeriod": `AM/PM`,
  "endDate": `Dátum ukončenia`,
  "era": `letopočet`,
  "hour": `hodina`,
  "minute": `minúta`,
  "month": `mesiac`,
  "second": `sekunda`,
  "selectedDateDescription": (args) => `Vybratý dátum: ${args.date}`,
  "selectedRangeDescription": (args) => `Vybratý rozsah: od ${args.startDate} do ${args.endDate}`,
  "selectedTimeDescription": (args) => `Vybratý čas: ${args.time}`,
  "startDate": `Dátum začatia`,
  "timeZoneName": `časové pásmo`,
  "weekday": `deň týždňa`,
  "year": `rok`
};

// node_modules/@react-aria/datepicker/dist/sl-SI.mjs
var $578ee7c11dcdde7a$exports = {};
$578ee7c11dcdde7a$exports = {
  "calendar": `Koledar`,
  "day": `dan`,
  "dayPeriod": `dop/pop`,
  "endDate": `Datum konca`,
  "era": `doba`,
  "hour": `ura`,
  "minute": `minuta`,
  "month": `mesec`,
  "second": `sekunda`,
  "selectedDateDescription": (args) => `Izbrani datum: ${args.date}`,
  "selectedRangeDescription": (args) => `Izbrano območje: ${args.startDate} do ${args.endDate}`,
  "selectedTimeDescription": (args) => `Izbrani čas: ${args.time}`,
  "startDate": `Datum začetka`,
  "timeZoneName": `časovni pas`,
  "weekday": `dan v tednu`,
  "year": `leto`
};

// node_modules/@react-aria/datepicker/dist/sr-SP.mjs
var $bbc3fd6cd0bc9d50$exports = {};
$bbc3fd6cd0bc9d50$exports = {
  "calendar": `Kalendar`,
  "day": `дан`,
  "dayPeriod": `пре подне/по подне`,
  "endDate": `Datum završetka`,
  "era": `ера`,
  "hour": `сат`,
  "minute": `минут`,
  "month": `месец`,
  "second": `секунд`,
  "selectedDateDescription": (args) => `Izabrani datum: ${args.date}`,
  "selectedRangeDescription": (args) => `Izabrani opseg: od ${args.startDate} do ${args.endDate}`,
  "selectedTimeDescription": (args) => `Izabrano vreme: ${args.time}`,
  "startDate": `Datum početka`,
  "timeZoneName": `временска зона`,
  "weekday": `дан у недељи`,
  "year": `година`
};

// node_modules/@react-aria/datepicker/dist/sv-SE.mjs
var $0b04512118591d2a$exports = {};
$0b04512118591d2a$exports = {
  "calendar": `Kalender`,
  "day": `dag`,
  "dayPeriod": `fm/em`,
  "endDate": `Slutdatum`,
  "era": `era`,
  "hour": `timme`,
  "minute": `minut`,
  "month": `månad`,
  "second": `sekund`,
  "selectedDateDescription": (args) => `Valt datum: ${args.date}`,
  "selectedRangeDescription": (args) => `Valt intervall: ${args.startDate} till ${args.endDate}`,
  "selectedTimeDescription": (args) => `Vald tid: ${args.time}`,
  "startDate": `Startdatum`,
  "timeZoneName": `tidszon`,
  "weekday": `veckodag`,
  "year": `år`
};

// node_modules/@react-aria/datepicker/dist/tr-TR.mjs
var $3a49d121fe4c9e1d$exports = {};
$3a49d121fe4c9e1d$exports = {
  "calendar": `Takvim`,
  "day": `gün`,
  "dayPeriod": `ÖÖ/ÖS`,
  "endDate": `Bitiş Tarihi`,
  "era": `çağ`,
  "hour": `saat`,
  "minute": `dakika`,
  "month": `ay`,
  "second": `saniye`,
  "selectedDateDescription": (args) => `Seçilen Tarih: ${args.date}`,
  "selectedRangeDescription": (args) => `Seçilen Aralık: ${args.startDate} - ${args.endDate}`,
  "selectedTimeDescription": (args) => `Seçilen Zaman: ${args.time}`,
  "startDate": `Başlangıç Tarihi`,
  "timeZoneName": `saat dilimi`,
  "weekday": `haftanın günü`,
  "year": `yıl`
};

// node_modules/@react-aria/datepicker/dist/uk-UA.mjs
var $5ba21dbb8914919d$exports = {};
$5ba21dbb8914919d$exports = {
  "calendar": `Календар`,
  "day": `день`,
  "dayPeriod": `дп/пп`,
  "endDate": `Дата завершення`,
  "era": `ера`,
  "hour": `година`,
  "minute": `хвилина`,
  "month": `місяць`,
  "second": `секунда`,
  "selectedDateDescription": (args) => `Вибрана дата: ${args.date}`,
  "selectedRangeDescription": (args) => `Вибраний діапазон: ${args.startDate} — ${args.endDate}`,
  "selectedTimeDescription": (args) => `Вибраний час: ${args.time}`,
  "startDate": `Дата початку`,
  "timeZoneName": `часовий пояс`,
  "weekday": `день тижня`,
  "year": `рік`
};

// node_modules/@react-aria/datepicker/dist/zh-CN.mjs
var $51078838e1b16cd7$exports = {};
$51078838e1b16cd7$exports = {
  "calendar": `日历`,
  "day": `日`,
  "dayPeriod": `上午/下午`,
  "endDate": `结束日期`,
  "era": `纪元`,
  "hour": `小时`,
  "minute": `分钟`,
  "month": `月`,
  "second": `秒`,
  "selectedDateDescription": (args) => `选定的日期：${args.date}`,
  "selectedRangeDescription": (args) => `选定的范围：${args.startDate} 至 ${args.endDate}`,
  "selectedTimeDescription": (args) => `选定的时间：${args.time}`,
  "startDate": `开始日期`,
  "timeZoneName": `时区`,
  "weekday": `工作日`,
  "year": `年`
};

// node_modules/@react-aria/datepicker/dist/zh-TW.mjs
var $33fab8219207655a$exports = {};
$33fab8219207655a$exports = {
  "calendar": `日曆`,
  "day": `日`,
  "dayPeriod": `上午/下午`,
  "endDate": `結束日期`,
  "era": `纪元`,
  "hour": `小时`,
  "minute": `分钟`,
  "month": `月`,
  "second": `秒`,
  "selectedDateDescription": (args) => `選定的日期：${args.date}`,
  "selectedRangeDescription": (args) => `選定的範圍：${args.startDate} 至 ${args.endDate}`,
  "selectedTimeDescription": (args) => `選定的時間：${args.time}`,
  "startDate": `開始日期`,
  "timeZoneName": `时区`,
  "weekday": `工作日`,
  "year": `年`
};

// node_modules/@react-aria/datepicker/dist/intlStrings.mjs
var $dfb4eba373ed9493$exports = {};
$dfb4eba373ed9493$exports = {
  "ar-AE": $f23889fffbde9058$exports,
  "bg-BG": $09d9badaa8903929$exports,
  "cs-CZ": $151b77e0fd711730$exports,
  "da-DK": $61915aa8630b90a2$exports,
  "de-DE": $35cea00159787840$exports,
  "el-GR": $518b4e82b9eacafd$exports,
  "en-US": $1c2b297f7e2cf474$exports,
  "es-ES": $07f628a707cf9b18$exports,
  "et-EE": $db553ffe17c7f4db$exports,
  "fi-FI": $4afcfe00cd703f83$exports,
  "fr-FR": $1d2645d18d4c5be0$exports,
  "he-IL": $64cb6a9be1f6fa48$exports,
  "hr-HR": $2a1ef2e8050be27a$exports,
  "hu-HU": $ad429dca102acd0e$exports,
  "it-IT": $6e68cb5d1cb97bd2$exports,
  "ja-JP": $a82ee9af063ee069$exports,
  "ko-KR": $67e9091dbf37d4eb$exports,
  "lt-LT": $75834f9729f653d1$exports,
  "lv-LV": $a2df2c2520b4a7f0$exports,
  "nb-NO": $aedcd71db4933ed5$exports,
  "nl-NL": $3b2df9e54353046c$exports,
  "pl-PL": $c03fe977fcfafe93$exports,
  "pt-BR": $569f006fc292345f$exports,
  "pt-PT": $7c2494e14452f2dd$exports,
  "ro-RO": $eb82ef981b5592bf$exports,
  "ru-RU": $6efa0e119f396950$exports,
  "sk-SK": $7f5e57085d7f5049$exports,
  "sl-SI": $578ee7c11dcdde7a$exports,
  "sr-SP": $bbc3fd6cd0bc9d50$exports,
  "sv-SE": $0b04512118591d2a$exports,
  "tr-TR": $3a49d121fe4c9e1d$exports,
  "uk-UA": $5ba21dbb8914919d$exports,
  "zh-CN": $51078838e1b16cd7$exports,
  "zh-TW": $33fab8219207655a$exports
};

// node_modules/@react-aria/datepicker/dist/useDatePickerGroup.mjs
var import_react105 = __toESM(require_react(), 1);
function $3dfb0f96be0d6a08$export$4a931266a3838b86(state, ref, disableArrowNavigation) {
  let { direction } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let focusManager = (0, import_react105.useMemo)(() => (0, $9bf71ea28793e738$export$c5251b9e124bf29)(ref), [
    ref
  ]);
  let onKeyDown = (e) => {
    if (!e.currentTarget.contains(e.target)) return;
    if (e.altKey && (e.key === "ArrowDown" || e.key === "ArrowUp") && "setOpen" in state) {
      e.preventDefault();
      e.stopPropagation();
      state.setOpen(true);
    }
    if (disableArrowNavigation) return;
    switch (e.key) {
      case "ArrowLeft":
        e.preventDefault();
        e.stopPropagation();
        if (direction === "rtl") {
          if (ref.current) {
            let target = e.target;
            let prev = $3dfb0f96be0d6a08$var$findNextSegment(ref.current, target.getBoundingClientRect().left, -1);
            if (prev) prev.focus();
          }
        } else focusManager.focusPrevious();
        break;
      case "ArrowRight":
        e.preventDefault();
        e.stopPropagation();
        if (direction === "rtl") {
          if (ref.current) {
            let target = e.target;
            let next = $3dfb0f96be0d6a08$var$findNextSegment(ref.current, target.getBoundingClientRect().left, 1);
            if (next) next.focus();
          }
        } else focusManager.focusNext();
        break;
    }
  };
  let focusLast = () => {
    var _window_event;
    if (!ref.current) return;
    let target = (_window_event = window.event) === null || _window_event === void 0 ? void 0 : _window_event.target;
    let walker = (0, $9bf71ea28793e738$export$2d6ec8fc375ceafa)(ref.current, {
      tabbable: true
    });
    if (target) {
      walker.currentNode = target;
      target = walker.previousNode();
    }
    if (!target) {
      let last;
      do {
        last = walker.lastChild();
        if (last) target = last;
      } while (last);
    }
    while (target === null || target === void 0 ? void 0 : target.hasAttribute("data-placeholder")) {
      let prev = walker.previousNode();
      if (prev && prev.hasAttribute("data-placeholder")) target = prev;
      else break;
    }
    if (target) target.focus();
  };
  let { pressProps } = (0, $f6c31cce2adf654f$export$45712eceda6fad21)({
    preventFocusOnPress: true,
    allowTextSelectionOnPress: true,
    onPressStart(e) {
      if (e.pointerType === "mouse") focusLast();
    },
    onPress(e) {
      if (e.pointerType === "touch" || e.pointerType === "pen") focusLast();
    }
  });
  return (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(pressProps, {
    onKeyDown
  });
}
function $3dfb0f96be0d6a08$var$findNextSegment(group, fromX, direction) {
  let walker = (0, $9bf71ea28793e738$export$2d6ec8fc375ceafa)(group, {
    tabbable: true
  });
  let node = walker.nextNode();
  let closest = null;
  let closestDistance = Infinity;
  while (node) {
    let x = node.getBoundingClientRect().left;
    let distance = x - fromX;
    let absoluteDistance = Math.abs(distance);
    if (Math.sign(distance) === direction && absoluteDistance < closestDistance) {
      closest = node;
      closestDistance = absoluteDistance;
    }
    node = walker.nextNode();
  }
  return closest;
}

// node_modules/@react-aria/datepicker/dist/useDateField.mjs
var import_react106 = __toESM(require_react(), 1);
function $parcel$interopDefault13(a) {
  return a && a.__esModule ? a.default : a;
}
var $16f0b7bb276bc17e$export$653eddfc964b0f8a = /* @__PURE__ */ new WeakMap();
var $16f0b7bb276bc17e$export$300019f83c56d282 = "__role_" + Date.now();
var $16f0b7bb276bc17e$export$7b3062cd49e80452 = "__focusManager_" + Date.now();
function $16f0b7bb276bc17e$export$5591b0b878c1a989(props, state, ref) {
  var _state_value;
  let { isInvalid, validationErrors, validationDetails } = state.displayValidation;
  let { labelProps, fieldProps, descriptionProps, errorMessageProps } = (0, $2baaea4c71418dea$export$294aa081a6c6f55d)({
    ...props,
    labelElementType: "span",
    isInvalid,
    errorMessage: props.errorMessage || validationErrors
  });
  let valueOnFocus = (0, import_react106.useRef)(null);
  let { focusWithinProps } = (0, $9ab94262bd0047c7$export$420e68273165f4ec)({
    ...props,
    onFocusWithin(e) {
      var _props_onFocus;
      valueOnFocus.current = state.value;
      (_props_onFocus = props.onFocus) === null || _props_onFocus === void 0 ? void 0 : _props_onFocus.call(props, e);
    },
    onBlurWithin: (e) => {
      var _props_onBlur;
      state.confirmPlaceholder();
      if (state.value !== valueOnFocus.current) state.commitValidation();
      (_props_onBlur = props.onBlur) === null || _props_onBlur === void 0 ? void 0 : _props_onBlur.call(props, e);
    },
    onFocusWithinChange: props.onFocusChange
  });
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault13($dfb4eba373ed9493$exports)), "@react-aria/datepicker");
  let message = state.maxGranularity === "hour" ? "selectedTimeDescription" : "selectedDateDescription";
  let field = state.maxGranularity === "hour" ? "time" : "date";
  let description = state.value ? stringFormatter.format(message, {
    [field]: state.formatValue({
      month: "long"
    })
  }) : "";
  let descProps = (0, $ef06256079686ba0$export$f8aeda7b10753fa1)(description);
  let describedBy = props[$16f0b7bb276bc17e$export$300019f83c56d282] === "presentation" ? fieldProps["aria-describedby"] : [
    descProps["aria-describedby"],
    fieldProps["aria-describedby"]
  ].filter(Boolean).join(" ") || void 0;
  let propsFocusManager = props[$16f0b7bb276bc17e$export$7b3062cd49e80452];
  let focusManager = (0, import_react106.useMemo)(() => propsFocusManager || (0, $9bf71ea28793e738$export$c5251b9e124bf29)(ref), [
    propsFocusManager,
    ref
  ]);
  let groupProps = (0, $3dfb0f96be0d6a08$export$4a931266a3838b86)(state, ref, props[$16f0b7bb276bc17e$export$300019f83c56d282] === "presentation");
  $16f0b7bb276bc17e$export$653eddfc964b0f8a.set(state, {
    ariaLabel: props["aria-label"],
    ariaLabelledBy: [
      labelProps.id,
      props["aria-labelledby"]
    ].filter(Boolean).join(" ") || void 0,
    ariaDescribedBy: describedBy,
    focusManager
  });
  let autoFocusRef = (0, import_react106.useRef)(props.autoFocus);
  let fieldDOMProps;
  if (props[$16f0b7bb276bc17e$export$300019f83c56d282] === "presentation") fieldDOMProps = {
    role: "presentation"
  };
  else fieldDOMProps = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(fieldProps, {
    role: "group",
    "aria-disabled": props.isDisabled || void 0,
    "aria-describedby": describedBy
  });
  (0, import_react106.useEffect)(() => {
    if (autoFocusRef.current) focusManager.focusFirst();
    autoFocusRef.current = false;
  }, [
    focusManager
  ]);
  (0, $99facab73266f662$export$5add1d006293d136)(props.inputRef, state.value, state.setValue);
  (0, $e93e671b31057976$export$b8473d3665f3a75a)({
    ...props,
    focus() {
      focusManager.focusFirst();
    }
  }, state, props.inputRef);
  let inputProps = {
    type: "hidden",
    name: props.name,
    value: ((_state_value = state.value) === null || _state_value === void 0 ? void 0 : _state_value.toString()) || "",
    disabled: props.isDisabled
  };
  if (props.validationBehavior === "native") {
    inputProps.type = "text";
    inputProps.hidden = true;
    inputProps.required = props.isRequired;
    inputProps.onChange = () => {
    };
  }
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  return {
    labelProps: {
      ...labelProps,
      onClick: () => {
        focusManager.focusFirst();
      }
    },
    fieldProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(domProps, fieldDOMProps, groupProps, focusWithinProps, {
      onKeyDown(e) {
        if (props.onKeyDown) props.onKeyDown(e);
      },
      onKeyUp(e) {
        if (props.onKeyUp) props.onKeyUp(e);
      },
      style: {
        unicodeBidi: "isolate"
      }
    }),
    inputProps,
    descriptionProps,
    errorMessageProps,
    isInvalid,
    validationErrors,
    validationDetails
  };
}
function $16f0b7bb276bc17e$export$4c842f6a241dc825(props, state, ref) {
  var _state_timeValue;
  let res = $16f0b7bb276bc17e$export$5591b0b878c1a989(props, state, ref);
  res.inputProps.value = ((_state_timeValue = state.timeValue) === null || _state_timeValue === void 0 ? void 0 : _state_timeValue.toString()) || "";
  return res;
}

// node_modules/@react-aria/datepicker/dist/useDatePicker.mjs
var import_react107 = __toESM(require_react(), 1);
function $parcel$interopDefault14(a) {
  return a && a.__esModule ? a.default : a;
}
function $6057a3d2a53a12fd$export$42df105a73306d51(props, state, ref) {
  let buttonId = (0, $bdb11010cef70236$export$f680877a34711e37)();
  let dialogId = (0, $bdb11010cef70236$export$f680877a34711e37)();
  let fieldId = (0, $bdb11010cef70236$export$f680877a34711e37)();
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault14($dfb4eba373ed9493$exports)), "@react-aria/datepicker");
  let { isInvalid, validationErrors, validationDetails } = state.displayValidation;
  let { labelProps, fieldProps, descriptionProps, errorMessageProps } = (0, $2baaea4c71418dea$export$294aa081a6c6f55d)({
    ...props,
    labelElementType: "span",
    isInvalid,
    errorMessage: props.errorMessage || validationErrors
  });
  let groupProps = (0, $3dfb0f96be0d6a08$export$4a931266a3838b86)(state, ref);
  let labelledBy = fieldProps["aria-labelledby"] || fieldProps.id;
  let { locale } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let date = state.formatValue(locale, {
    month: "long"
  });
  let description = date ? stringFormatter.format("selectedDateDescription", {
    date
  }) : "";
  let descProps = (0, $ef06256079686ba0$export$f8aeda7b10753fa1)(description);
  let ariaDescribedBy = [
    descProps["aria-describedby"],
    fieldProps["aria-describedby"]
  ].filter(Boolean).join(" ") || void 0;
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  let focusManager = (0, import_react107.useMemo)(() => (0, $9bf71ea28793e738$export$c5251b9e124bf29)(ref), [
    ref
  ]);
  let isFocused = (0, import_react107.useRef)(false);
  let { focusWithinProps } = (0, $9ab94262bd0047c7$export$420e68273165f4ec)({
    ...props,
    isDisabled: state.isOpen,
    onBlurWithin: (e) => {
      let dialog = document.getElementById(dialogId);
      if (!(dialog === null || dialog === void 0 ? void 0 : dialog.contains(e.relatedTarget))) {
        var _props_onBlur, _props_onFocusChange;
        isFocused.current = false;
        (_props_onBlur = props.onBlur) === null || _props_onBlur === void 0 ? void 0 : _props_onBlur.call(props, e);
        (_props_onFocusChange = props.onFocusChange) === null || _props_onFocusChange === void 0 ? void 0 : _props_onFocusChange.call(props, false);
      }
    },
    onFocusWithin: (e) => {
      if (!isFocused.current) {
        var _props_onFocus, _props_onFocusChange;
        isFocused.current = true;
        (_props_onFocus = props.onFocus) === null || _props_onFocus === void 0 ? void 0 : _props_onFocus.call(props, e);
        (_props_onFocusChange = props.onFocusChange) === null || _props_onFocusChange === void 0 ? void 0 : _props_onFocusChange.call(props, true);
      }
    }
  });
  return {
    groupProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(domProps, groupProps, fieldProps, descProps, focusWithinProps, {
      role: "group",
      "aria-disabled": props.isDisabled || null,
      "aria-labelledby": labelledBy,
      "aria-describedby": ariaDescribedBy,
      onKeyDown(e) {
        if (state.isOpen) return;
        if (props.onKeyDown) props.onKeyDown(e);
      },
      onKeyUp(e) {
        if (state.isOpen) return;
        if (props.onKeyUp) props.onKeyUp(e);
      }
    }),
    labelProps: {
      ...labelProps,
      onClick: () => {
        focusManager.focusFirst();
      }
    },
    fieldProps: {
      ...fieldProps,
      id: fieldId,
      [(0, $16f0b7bb276bc17e$export$300019f83c56d282)]: "presentation",
      "aria-describedby": ariaDescribedBy,
      value: state.value,
      onChange: state.setValue,
      placeholderValue: props.placeholderValue,
      hideTimeZone: props.hideTimeZone,
      hourCycle: props.hourCycle,
      shouldForceLeadingZeros: props.shouldForceLeadingZeros,
      granularity: props.granularity,
      isDisabled: props.isDisabled,
      isReadOnly: props.isReadOnly,
      isRequired: props.isRequired,
      validationBehavior: props.validationBehavior,
      // DatePicker owns the validation state for the date field.
      [(0, $e5be200c675c3b3a$export$a763b9476acd3eb)]: state,
      autoFocus: props.autoFocus,
      name: props.name
    },
    descriptionProps,
    errorMessageProps,
    buttonProps: {
      ...descProps,
      id: buttonId,
      "aria-haspopup": "dialog",
      "aria-label": stringFormatter.format("calendar"),
      "aria-labelledby": `${buttonId} ${labelledBy}`,
      "aria-describedby": ariaDescribedBy,
      "aria-expanded": state.isOpen,
      isDisabled: props.isDisabled || props.isReadOnly,
      onPress: () => state.setOpen(true)
    },
    dialogProps: {
      id: dialogId,
      "aria-labelledby": `${buttonId} ${labelledBy}`
    },
    calendarProps: {
      autoFocus: true,
      value: state.dateValue,
      onChange: state.setDateValue,
      minValue: props.minValue,
      maxValue: props.maxValue,
      isDisabled: props.isDisabled,
      isReadOnly: props.isReadOnly,
      isDateUnavailable: props.isDateUnavailable,
      defaultFocusedValue: state.dateValue ? void 0 : props.placeholderValue,
      isInvalid: state.isInvalid,
      errorMessage: typeof props.errorMessage === "function" ? props.errorMessage(state.displayValidation) : props.errorMessage || state.displayValidation.validationErrors.join(" ")
    },
    isInvalid,
    validationErrors,
    validationDetails
  };
}

// node_modules/@react-aria/datepicker/dist/useDisplayNames.mjs
var import_react108 = __toESM(require_react(), 1);
function $parcel$interopDefault15(a) {
  return a && a.__esModule ? a.default : a;
}
function $3aeceb3a64eb8358$export$d42c60378c8168f8() {
  let { locale } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let dictionary = (0, $fca6afa0e843324b$export$87b761675e8eaa10)((0, $parcel$interopDefault15($dfb4eba373ed9493$exports)), "@react-aria/datepicker");
  return (0, import_react108.useMemo)(() => {
    try {
      return new Intl.DisplayNames(locale, {
        type: "dateTimeField"
      });
    } catch {
      return new $3aeceb3a64eb8358$var$DisplayNamesPolyfill(locale, dictionary);
    }
  }, [
    locale,
    dictionary
  ]);
}
var $3aeceb3a64eb8358$var$DisplayNamesPolyfill = class {
  of(field) {
    return this.dictionary.getStringForLocale(field, this.locale);
  }
  constructor(locale, dictionary) {
    this.locale = locale;
    this.dictionary = dictionary;
  }
};

// node_modules/@react-aria/datepicker/dist/useDateSegment.mjs
var import_react109 = __toESM(require_react(), 1);
function $32489daedd52963e$export$1315d136e6f7581(segment, state, ref) {
  let enteredKeys = (0, import_react109.useRef)("");
  let { locale, direction } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let displayNames = (0, $3aeceb3a64eb8358$export$d42c60378c8168f8)();
  let { ariaLabel, ariaLabelledBy, ariaDescribedBy, focusManager } = (0, $16f0b7bb276bc17e$export$653eddfc964b0f8a).get(state);
  let textValue = segment.isPlaceholder ? "" : segment.text;
  let options = (0, import_react109.useMemo)(() => state.dateFormatter.resolvedOptions(), [
    state.dateFormatter
  ]);
  let monthDateFormatter = (0, $896ba0a80a8f4d36$export$85fd5fdf27bacc79)({
    month: "long",
    timeZone: options.timeZone
  });
  let hourDateFormatter = (0, $896ba0a80a8f4d36$export$85fd5fdf27bacc79)({
    hour: "numeric",
    hour12: options.hour12,
    timeZone: options.timeZone
  });
  if (segment.type === "month" && !segment.isPlaceholder) {
    let monthTextValue = monthDateFormatter.format(state.dateValue);
    textValue = monthTextValue !== textValue ? `${textValue} – ${monthTextValue}` : monthTextValue;
  } else if (segment.type === "hour" && !segment.isPlaceholder) textValue = hourDateFormatter.format(state.dateValue);
  let { spinButtonProps } = (0, $d2e8511e6f209edf$export$e908e06f4b8e3402)({
    // The ARIA spec says aria-valuenow is optional if there's no value, but aXe seems to require it.
    // This doesn't seem to have any negative effects with real AT since we also use aria-valuetext.
    // https://github.com/dequelabs/axe-core/issues/3505
    value: segment.value,
    textValue,
    minValue: segment.minValue,
    maxValue: segment.maxValue,
    isDisabled: state.isDisabled,
    isReadOnly: state.isReadOnly || !segment.isEditable,
    isRequired: state.isRequired,
    onIncrement: () => {
      enteredKeys.current = "";
      state.increment(segment.type);
    },
    onDecrement: () => {
      enteredKeys.current = "";
      state.decrement(segment.type);
    },
    onIncrementPage: () => {
      enteredKeys.current = "";
      state.incrementPage(segment.type);
    },
    onDecrementPage: () => {
      enteredKeys.current = "";
      state.decrementPage(segment.type);
    },
    onIncrementToMax: () => {
      enteredKeys.current = "";
      if (segment.maxValue !== void 0) state.setSegment(segment.type, segment.maxValue);
    },
    onDecrementToMin: () => {
      enteredKeys.current = "";
      if (segment.minValue !== void 0) state.setSegment(segment.type, segment.minValue);
    }
  });
  let parser = (0, import_react109.useMemo)(() => new (0, $6c7bd7858deea686$export$cd11ab140839f11d)(locale, {
    maximumFractionDigits: 0
  }), [
    locale
  ]);
  let backspace = () => {
    if (segment.text === segment.placeholder) focusManager.focusPrevious();
    if (parser.isValidPartialNumber(segment.text) && !state.isReadOnly && !segment.isPlaceholder) {
      let newValue = segment.text.slice(0, -1);
      let parsed = parser.parse(newValue);
      newValue = parsed === 0 ? "" : newValue;
      if (newValue.length === 0 || parsed === 0) state.clearSegment(segment.type);
      else state.setSegment(segment.type, parsed);
      enteredKeys.current = newValue;
    } else if (segment.type === "dayPeriod") state.clearSegment(segment.type);
  };
  let onKeyDown = (e) => {
    if (e.key === "a" && ((0, $c87311424ea30a05$export$9ac100e40613ea10)() ? e.metaKey : e.ctrlKey)) e.preventDefault();
    if (e.ctrlKey || e.metaKey || e.shiftKey || e.altKey) return;
    switch (e.key) {
      case "Backspace":
      case "Delete":
        e.preventDefault();
        e.stopPropagation();
        backspace();
        break;
    }
  };
  let { startsWith: startsWith4 } = (0, $bb77f239b46e8c72$export$3274cf84b703fff)({
    sensitivity: "base"
  });
  let amPmFormatter = (0, $896ba0a80a8f4d36$export$85fd5fdf27bacc79)({
    hour: "numeric",
    hour12: true
  });
  let am = (0, import_react109.useMemo)(() => {
    let date = /* @__PURE__ */ new Date();
    date.setHours(0);
    return amPmFormatter.formatToParts(date).find((part) => part.type === "dayPeriod").value;
  }, [
    amPmFormatter
  ]);
  let pm = (0, import_react109.useMemo)(() => {
    let date = /* @__PURE__ */ new Date();
    date.setHours(12);
    return amPmFormatter.formatToParts(date).find((part) => part.type === "dayPeriod").value;
  }, [
    amPmFormatter
  ]);
  let eraFormatter = (0, $896ba0a80a8f4d36$export$85fd5fdf27bacc79)({
    year: "numeric",
    era: "narrow",
    timeZone: "UTC"
  });
  let eras = (0, import_react109.useMemo)(() => {
    if (segment.type !== "era") return [];
    let date = (0, $11d87f3f76e88657$export$b4a036af3fc0b032)(new (0, $35ea8db9cb2ccb90$export$99faa760c7908e4f)(1, 1, 1), state.calendar);
    let eras2 = state.calendar.getEras().map((era) => {
      let eraDate = date.set({
        year: 1,
        month: 1,
        day: 1,
        era
      }).toDate("UTC");
      let parts = eraFormatter.formatToParts(eraDate);
      let formatted = parts.find((p) => p.type === "era").value;
      return {
        era,
        formatted
      };
    });
    let prefixLength = $32489daedd52963e$var$commonPrefixLength(eras2.map((era) => era.formatted));
    if (prefixLength) for (let era of eras2) era.formatted = era.formatted.slice(prefixLength);
    return eras2;
  }, [
    eraFormatter,
    state.calendar,
    segment.type
  ]);
  let onInput = (key) => {
    if (state.isDisabled || state.isReadOnly) return;
    let newValue = enteredKeys.current + key;
    switch (segment.type) {
      case "dayPeriod":
        if (startsWith4(am, key)) state.setSegment("dayPeriod", 0);
        else if (startsWith4(pm, key)) state.setSegment("dayPeriod", 12);
        else break;
        focusManager.focusNext();
        break;
      case "era": {
        let matched = eras.find((e) => startsWith4(e.formatted, key));
        if (matched) {
          state.setSegment("era", matched.era);
          focusManager.focusNext();
        }
        break;
      }
      case "day":
      case "hour":
      case "minute":
      case "second":
      case "month":
      case "year": {
        if (!parser.isValidPartialNumber(newValue)) return;
        let numberValue = parser.parse(newValue);
        let segmentValue = numberValue;
        let allowsZero = segment.minValue === 0;
        if (segment.type === "hour" && state.dateFormatter.resolvedOptions().hour12) {
          switch (state.dateFormatter.resolvedOptions().hourCycle) {
            case "h11":
              if (numberValue > 11) segmentValue = parser.parse(key);
              break;
            case "h12":
              allowsZero = false;
              if (numberValue > 12) segmentValue = parser.parse(key);
              break;
          }
          if (segment.value !== void 0 && segment.value >= 12 && numberValue > 1) numberValue += 12;
        } else if (segment.maxValue !== void 0 && numberValue > segment.maxValue) segmentValue = parser.parse(key);
        if (isNaN(numberValue)) return;
        let shouldSetValue = segmentValue !== 0 || allowsZero;
        if (shouldSetValue) state.setSegment(segment.type, segmentValue);
        if (segment.maxValue !== void 0 && (Number(numberValue + "0") > segment.maxValue || newValue.length >= String(segment.maxValue).length)) {
          enteredKeys.current = "";
          if (shouldSetValue) focusManager.focusNext();
        } else enteredKeys.current = newValue;
        break;
      }
    }
  };
  let onFocus = () => {
    enteredKeys.current = "";
    if (ref.current) (0, $2f04cbc44ee30ce0$export$c826860796309d1b)(ref.current, {
      containingElement: (0, $62d8ded9296f3872$export$cfa2225e87938781)(ref.current)
    });
    let selection = window.getSelection();
    selection === null || selection === void 0 ? void 0 : selection.collapse(ref.current);
  };
  let documentRef = (0, import_react109.useRef)(typeof document !== "undefined" ? document : null);
  (0, $e9faafb641e167db$export$90fc3a17d93f704c)(documentRef, "selectionchange", () => {
    var _ref_current;
    let selection = window.getSelection();
    if ((selection === null || selection === void 0 ? void 0 : selection.anchorNode) && ((_ref_current = ref.current) === null || _ref_current === void 0 ? void 0 : _ref_current.contains(selection === null || selection === void 0 ? void 0 : selection.anchorNode))) selection.collapse(ref.current);
  });
  let compositionRef = (0, import_react109.useRef)("");
  (0, $e9faafb641e167db$export$90fc3a17d93f704c)(ref, "beforeinput", (e) => {
    if (!ref.current) return;
    e.preventDefault();
    switch (e.inputType) {
      case "deleteContentBackward":
      case "deleteContentForward":
        if (parser.isValidPartialNumber(segment.text) && !state.isReadOnly) backspace();
        break;
      case "insertCompositionText":
        compositionRef.current = ref.current.textContent;
        ref.current.textContent = ref.current.textContent;
        break;
      default:
        if (e.data != null) onInput(e.data);
        break;
    }
  });
  (0, $e9faafb641e167db$export$90fc3a17d93f704c)(ref, "input", (e) => {
    let { inputType, data } = e;
    switch (inputType) {
      case "insertCompositionText":
        if (ref.current) ref.current.textContent = compositionRef.current;
        if (data != null && (startsWith4(am, data) || startsWith4(pm, data))) onInput(data);
        break;
    }
  });
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    let element = ref.current;
    return () => {
      if (document.activeElement === element) {
        let prev = focusManager.focusPrevious();
        if (!prev) focusManager.focusNext();
      }
    };
  }, [
    ref,
    focusManager
  ]);
  let touchPropOverrides = (0, $c87311424ea30a05$export$fedb369cb70207f1)() || segment.type === "timeZoneName" ? {
    role: "textbox",
    "aria-valuemax": null,
    "aria-valuemin": null,
    "aria-valuetext": null,
    "aria-valuenow": null
  } : {};
  let firstSegment = (0, import_react109.useMemo)(() => state.segments.find((s) => s.isEditable), [
    state.segments
  ]);
  if (segment !== firstSegment && !state.isInvalid) ariaDescribedBy = void 0;
  let id = (0, $bdb11010cef70236$export$f680877a34711e37)();
  let isEditable = !state.isDisabled && !state.isReadOnly && segment.isEditable;
  let name = segment.type === "literal" ? "" : displayNames.of(segment.type);
  let labelProps = (0, $313b98861ee5dd6c$export$d6875122194c7b44)({
    "aria-label": `${name}${ariaLabel ? `, ${ariaLabel}` : ""}${ariaLabelledBy ? ", " : ""}`,
    "aria-labelledby": ariaLabelledBy
  });
  if (segment.type === "literal") return {
    segmentProps: {
      "aria-hidden": true
    }
  };
  let segmentStyle = {
    caretColor: "transparent"
  };
  if (direction === "rtl") {
    segmentStyle.unicodeBidi = "embed";
    let format = options[segment.type];
    if (format === "numeric" || format === "2-digit") segmentStyle.direction = "ltr";
  }
  return {
    segmentProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(spinButtonProps, labelProps, {
      id,
      ...touchPropOverrides,
      "aria-invalid": state.isInvalid ? "true" : void 0,
      "aria-describedby": ariaDescribedBy,
      "aria-readonly": state.isReadOnly || !segment.isEditable ? "true" : void 0,
      "data-placeholder": segment.isPlaceholder || void 0,
      contentEditable: isEditable,
      suppressContentEditableWarning: isEditable,
      spellCheck: isEditable ? "false" : void 0,
      autoCorrect: isEditable ? "off" : void 0,
      // Capitalization was changed in React 17...
      [parseInt((0, import_react109.default).version, 10) >= 17 ? "enterKeyHint" : "enterkeyhint"]: isEditable ? "next" : void 0,
      inputMode: state.isDisabled || segment.type === "dayPeriod" || segment.type === "era" || !isEditable ? void 0 : "numeric",
      tabIndex: state.isDisabled ? void 0 : 0,
      onKeyDown,
      onFocus,
      style: segmentStyle,
      // Prevent pointer events from reaching useDatePickerGroup, and allow native browser behavior to focus the segment.
      onPointerDown(e) {
        e.stopPropagation();
      },
      onMouseDown(e) {
        e.stopPropagation();
      }
    })
  };
}
function $32489daedd52963e$var$commonPrefixLength(strings) {
  strings.sort();
  let first = strings[0];
  let last = strings[strings.length - 1];
  for (let i = 0; i < first.length; i++) {
    if (first[i] !== last[i]) return i;
  }
  return 0;
}

// node_modules/@react-aria/datepicker/dist/useDateRangePicker.mjs
var import_react110 = __toESM(require_react(), 1);
function $parcel$interopDefault16(a) {
  return a && a.__esModule ? a.default : a;
}
function $887cac91b7cc8801$export$12fd5f0e9f4bb192(props, state, ref) {
  var _state_value, _state_value1, _state_dateRange;
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault16($dfb4eba373ed9493$exports)), "@react-aria/datepicker");
  let { isInvalid, validationErrors, validationDetails } = state.displayValidation;
  let { labelProps, fieldProps, descriptionProps, errorMessageProps } = (0, $2baaea4c71418dea$export$294aa081a6c6f55d)({
    ...props,
    labelElementType: "span",
    isInvalid,
    errorMessage: props.errorMessage || validationErrors
  });
  let labelledBy = fieldProps["aria-labelledby"] || fieldProps.id;
  let { locale } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let range = state.formatValue(locale, {
    month: "long"
  });
  let description = range ? stringFormatter.format("selectedRangeDescription", {
    startDate: range.start,
    endDate: range.end
  }) : "";
  let descProps = (0, $ef06256079686ba0$export$f8aeda7b10753fa1)(description);
  let startFieldProps = {
    "aria-label": stringFormatter.format("startDate"),
    "aria-labelledby": labelledBy
  };
  let endFieldProps = {
    "aria-label": stringFormatter.format("endDate"),
    "aria-labelledby": labelledBy
  };
  let buttonId = (0, $bdb11010cef70236$export$f680877a34711e37)();
  let dialogId = (0, $bdb11010cef70236$export$f680877a34711e37)();
  let groupProps = (0, $3dfb0f96be0d6a08$export$4a931266a3838b86)(state, ref);
  let ariaDescribedBy = [
    descProps["aria-describedby"],
    fieldProps["aria-describedby"]
  ].filter(Boolean).join(" ") || void 0;
  let focusManager = (0, import_react110.useMemo)(() => (0, $9bf71ea28793e738$export$c5251b9e124bf29)(ref, {
    // Exclude the button from the focus manager.
    accept: (element) => element.id !== buttonId
  }), [
    ref,
    buttonId
  ]);
  let commonFieldProps = {
    [(0, $16f0b7bb276bc17e$export$7b3062cd49e80452)]: focusManager,
    [(0, $16f0b7bb276bc17e$export$300019f83c56d282)]: "presentation",
    "aria-describedby": ariaDescribedBy,
    placeholderValue: props.placeholderValue,
    hideTimeZone: props.hideTimeZone,
    hourCycle: props.hourCycle,
    granularity: props.granularity,
    shouldForceLeadingZeros: props.shouldForceLeadingZeros,
    isDisabled: props.isDisabled,
    isReadOnly: props.isReadOnly,
    isRequired: props.isRequired,
    validationBehavior: props.validationBehavior
  };
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  let isFocused = (0, import_react110.useRef)(false);
  let { focusWithinProps } = (0, $9ab94262bd0047c7$export$420e68273165f4ec)({
    ...props,
    isDisabled: state.isOpen,
    onBlurWithin: (e) => {
      let dialog = document.getElementById(dialogId);
      if (!(dialog === null || dialog === void 0 ? void 0 : dialog.contains(e.relatedTarget))) {
        var _props_onBlur, _props_onFocusChange;
        isFocused.current = false;
        (_props_onBlur = props.onBlur) === null || _props_onBlur === void 0 ? void 0 : _props_onBlur.call(props, e);
        (_props_onFocusChange = props.onFocusChange) === null || _props_onFocusChange === void 0 ? void 0 : _props_onFocusChange.call(props, false);
      }
    },
    onFocusWithin: (e) => {
      if (!isFocused.current) {
        var _props_onFocus, _props_onFocusChange;
        isFocused.current = true;
        (_props_onFocus = props.onFocus) === null || _props_onFocus === void 0 ? void 0 : _props_onFocus.call(props, e);
        (_props_onFocusChange = props.onFocusChange) === null || _props_onFocusChange === void 0 ? void 0 : _props_onFocusChange.call(props, true);
      }
    }
  });
  let startFieldValidation = (0, import_react110.useRef)((0, $e5be200c675c3b3a$export$dad6ae84456c676a));
  let endFieldValidation = (0, import_react110.useRef)((0, $e5be200c675c3b3a$export$dad6ae84456c676a));
  var _state_value_start, _state_value_end;
  return {
    groupProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(domProps, groupProps, fieldProps, descProps, focusWithinProps, {
      role: "group",
      "aria-disabled": props.isDisabled || null,
      "aria-describedby": ariaDescribedBy,
      onKeyDown(e) {
        if (state.isOpen) return;
        if (props.onKeyDown) props.onKeyDown(e);
      },
      onKeyUp(e) {
        if (state.isOpen) return;
        if (props.onKeyUp) props.onKeyUp(e);
      }
    }),
    labelProps: {
      ...labelProps,
      onClick: () => {
        focusManager.focusFirst();
      }
    },
    buttonProps: {
      ...descProps,
      id: buttonId,
      "aria-haspopup": "dialog",
      "aria-label": stringFormatter.format("calendar"),
      "aria-labelledby": `${buttonId} ${labelledBy}`,
      "aria-describedby": ariaDescribedBy,
      "aria-expanded": state.isOpen,
      isDisabled: props.isDisabled || props.isReadOnly,
      onPress: () => state.setOpen(true)
    },
    dialogProps: {
      id: dialogId,
      "aria-labelledby": `${buttonId} ${labelledBy}`
    },
    startFieldProps: {
      ...startFieldProps,
      ...commonFieldProps,
      value: (_state_value_start = (_state_value = state.value) === null || _state_value === void 0 ? void 0 : _state_value.start) !== null && _state_value_start !== void 0 ? _state_value_start : null,
      onChange: (start) => state.setDateTime("start", start),
      autoFocus: props.autoFocus,
      name: props.startName,
      [(0, $e5be200c675c3b3a$export$a763b9476acd3eb)]: {
        realtimeValidation: state.realtimeValidation,
        displayValidation: state.displayValidation,
        updateValidation(e) {
          startFieldValidation.current = e;
          state.updateValidation((0, $e5be200c675c3b3a$export$75ee7c75d68f5b0e)(e, endFieldValidation.current));
        },
        resetValidation: state.resetValidation,
        commitValidation: state.commitValidation
      }
    },
    endFieldProps: {
      ...endFieldProps,
      ...commonFieldProps,
      value: (_state_value_end = (_state_value1 = state.value) === null || _state_value1 === void 0 ? void 0 : _state_value1.end) !== null && _state_value_end !== void 0 ? _state_value_end : null,
      onChange: (end) => state.setDateTime("end", end),
      name: props.endName,
      [(0, $e5be200c675c3b3a$export$a763b9476acd3eb)]: {
        realtimeValidation: state.realtimeValidation,
        displayValidation: state.displayValidation,
        updateValidation(e) {
          endFieldValidation.current = e;
          state.updateValidation((0, $e5be200c675c3b3a$export$75ee7c75d68f5b0e)(startFieldValidation.current, e));
        },
        resetValidation: state.resetValidation,
        commitValidation: state.commitValidation
      }
    },
    descriptionProps,
    errorMessageProps,
    calendarProps: {
      autoFocus: true,
      value: ((_state_dateRange = state.dateRange) === null || _state_dateRange === void 0 ? void 0 : _state_dateRange.start) && state.dateRange.end ? state.dateRange : null,
      onChange: state.setDateRange,
      minValue: props.minValue,
      maxValue: props.maxValue,
      isDisabled: props.isDisabled,
      isReadOnly: props.isReadOnly,
      isDateUnavailable: props.isDateUnavailable,
      allowsNonContiguousRanges: props.allowsNonContiguousRanges,
      defaultFocusedValue: state.dateRange ? void 0 : props.placeholderValue,
      isInvalid: state.isInvalid,
      errorMessage: typeof props.errorMessage === "function" ? props.errorMessage(state.displayValidation) : props.errorMessage || state.displayValidation.validationErrors.join(" ")
    },
    isInvalid,
    validationErrors,
    validationDetails
  };
}

// node_modules/@react-aria/dialog/dist/useDialog.mjs
var import_react111 = __toESM(require_react(), 1);
function $40df3f8667284809$export$d55e7ee900f34e93(props, ref) {
  let { role = "dialog" } = props;
  let titleId = (0, $bdb11010cef70236$export$b4cc09c592e8fdb8)();
  titleId = props["aria-label"] ? void 0 : titleId;
  let isRefocusing = (0, import_react111.useRef)(false);
  (0, import_react111.useEffect)(() => {
    if (ref.current && !ref.current.contains(document.activeElement)) {
      (0, $3ad3f6e1647bc98d$export$80f3e147d781571c)(ref.current);
      let timeout = setTimeout(() => {
        if (document.activeElement === ref.current) {
          isRefocusing.current = true;
          if (ref.current) {
            ref.current.blur();
            (0, $3ad3f6e1647bc98d$export$80f3e147d781571c)(ref.current);
          }
          isRefocusing.current = false;
        }
      }, 500);
      return () => {
        clearTimeout(timeout);
      };
    }
  }, [
    ref
  ]);
  (0, $337b884510726a0d$export$14c98a7594375490)();
  return {
    dialogProps: {
      ...(0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props, {
        labelable: true
      }),
      role,
      tabIndex: -1,
      "aria-labelledby": props["aria-labelledby"] || titleId,
      // Prevent blur events from reaching useOverlay, which may cause
      // popovers to close. Since focus is contained within the dialog,
      // we don't want this to occur due to the above useEffect.
      onBlur: (e) => {
        if (isRefocusing.current) e.stopPropagation();
      }
    },
    titleProps: {
      id: titleId
    }
  };
}

// node_modules/@react-aria/disclosure/dist/useDisclosure.mjs
var import_react_dom7 = __toESM(require_react_dom(), 1);
var import_react112 = __toESM(require_react(), 1);
function $5e910fae8e128ead$export$6e3e27031a30522f(props, state, ref) {
  let { isDisabled } = props;
  let triggerId = (0, $bdb11010cef70236$export$f680877a34711e37)();
  let panelId = (0, $bdb11010cef70236$export$f680877a34711e37)();
  let isSSR = (0, $b5e257d569688ac6$export$535bd6ca7f90a273)();
  let supportsBeforeMatch = !isSSR && "onbeforematch" in document.body;
  let raf = (0, import_react112.useRef)(null);
  let handleBeforeMatch = (0, import_react112.useCallback)(() => {
    raf.current = requestAnimationFrame(() => {
      if (ref.current) ref.current.setAttribute("hidden", "until-found");
    });
    (0, import_react_dom7.flushSync)(() => {
      state.toggle();
    });
  }, [
    ref,
    state
  ]);
  (0, $e9faafb641e167db$export$90fc3a17d93f704c)(ref, "beforematch", supportsBeforeMatch ? handleBeforeMatch : null);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    if (raf.current) cancelAnimationFrame(raf.current);
    if (supportsBeforeMatch && ref.current && !isDisabled) {
      if (state.isExpanded) ref.current.removeAttribute("hidden");
      else ref.current.setAttribute("hidden", "until-found");
    }
  }, [
    isDisabled,
    ref,
    state.isExpanded,
    supportsBeforeMatch
  ]);
  (0, import_react112.useEffect)(() => {
    return () => {
      if (raf.current) cancelAnimationFrame(raf.current);
    };
  }, []);
  return {
    buttonProps: {
      id: triggerId,
      "aria-expanded": state.isExpanded,
      "aria-controls": panelId,
      onPress: (e) => {
        if (!isDisabled && e.pointerType !== "keyboard") state.toggle();
      },
      isDisabled,
      onPressStart(e) {
        if (e.pointerType === "keyboard" && !isDisabled) state.toggle();
      }
    },
    panelProps: {
      id: panelId,
      // This can be overridden at the panel element level.
      role: "group",
      "aria-labelledby": triggerId,
      "aria-hidden": !state.isExpanded,
      hidden: supportsBeforeMatch ? true : !state.isExpanded
    }
  };
}

// node_modules/@react-aria/dnd/dist/constants.mjs
var $103790afe9474d1c$export$60b7b4bcf3903d8e = function(DROP_OPERATION) {
  DROP_OPERATION[DROP_OPERATION["none"] = 0] = "none";
  DROP_OPERATION[DROP_OPERATION["cancel"] = 0] = "cancel";
  DROP_OPERATION[DROP_OPERATION["move"] = 1] = "move";
  DROP_OPERATION[DROP_OPERATION["copy"] = 2] = "copy";
  DROP_OPERATION[DROP_OPERATION["link"] = 4] = "link";
  DROP_OPERATION[DROP_OPERATION["all"] = 7] = "all";
  return DROP_OPERATION;
}({});
var $103790afe9474d1c$export$9bbdfc78cf083e16 = {
  ...$103790afe9474d1c$export$60b7b4bcf3903d8e,
  copyMove: 3,
  copyLink: 6,
  linkMove: 5,
  all: 7,
  uninitialized: 7
};
var $103790afe9474d1c$export$dd0165308d8bff45 = $103790afe9474d1c$var$invert($103790afe9474d1c$export$9bbdfc78cf083e16);
$103790afe9474d1c$export$dd0165308d8bff45[7] = "all";
var $103790afe9474d1c$export$d7ebf00f36b7a95e = $103790afe9474d1c$var$invert($103790afe9474d1c$export$60b7b4bcf3903d8e);
var $103790afe9474d1c$export$608ecc6f1b23c35d = {
  none: "cancel",
  link: "link",
  copy: "copy",
  move: "move"
};
var $103790afe9474d1c$export$5eacb0769d26d3b2 = $103790afe9474d1c$var$invert($103790afe9474d1c$export$608ecc6f1b23c35d);
function $103790afe9474d1c$var$invert(object) {
  let res = {};
  for (let key in object) res[object[key]] = key;
  return res;
}
var $103790afe9474d1c$export$4a7729b856e9a690 = /* @__PURE__ */ new Set([
  "text/plain",
  "text/uri-list",
  "text/html"
]);
var $103790afe9474d1c$export$fd9f9fc120c5402d = "application/vnd.react-aria.items+json";
var $103790afe9474d1c$export$f8fc6581787339b3 = "application/octet-stream";

// node_modules/@react-aria/dnd/dist/utils.mjs
var $7252cd45fc48c07c$export$dfdf5deeaf27473f = /* @__PURE__ */ new WeakMap();
var $7252cd45fc48c07c$export$990fced5dfac2637 = Symbol();
function $7252cd45fc48c07c$export$3093291712f09a77(state) {
  let { id } = $7252cd45fc48c07c$export$dfdf5deeaf27473f.get(state) || {};
  if (!id) throw new Error("Droppable item outside a droppable collection");
  return id;
}
function $7252cd45fc48c07c$export$7e397efd01d3db27(state) {
  let { ref } = $7252cd45fc48c07c$export$dfdf5deeaf27473f.get(state) || {};
  if (!ref) throw new Error("Droppable item outside a droppable collection");
  return ref;
}
function $7252cd45fc48c07c$export$e1d41611756c6326(items) {
  let types = /* @__PURE__ */ new Set();
  for (let item of items) for (let type of Object.keys(item)) types.add(type);
  return types;
}
function $7252cd45fc48c07c$var$mapModality(modality) {
  if (!modality) modality = "virtual";
  if (modality === "pointer") modality = "virtual";
  if (modality === "virtual" && typeof window !== "undefined" && "ontouchstart" in window) modality = "touch";
  return modality;
}
function $7252cd45fc48c07c$export$49bac5d6d4b352ea() {
  return $7252cd45fc48c07c$var$mapModality((0, $507fabe10e71c6fb$export$98e20ec92f614cfe)());
}
function $7252cd45fc48c07c$export$1fb2158d224b542c() {
  return $7252cd45fc48c07c$var$mapModality((0, $507fabe10e71c6fb$export$630ff653c5ada6a9)());
}
function $7252cd45fc48c07c$export$f9c1490890ddd063(dataTransfer, items) {
  let groupedByType = /* @__PURE__ */ new Map();
  let needsCustomData = false;
  let customData = [];
  for (let item of items) {
    let types = Object.keys(item);
    if (types.length > 1) needsCustomData = true;
    let dataByType = {};
    for (let type of types) {
      let typeItems = groupedByType.get(type);
      if (!typeItems) {
        typeItems = [];
        groupedByType.set(type, typeItems);
      } else needsCustomData = true;
      let data = item[type];
      dataByType[type] = data;
      typeItems.push(data);
    }
    customData.push(dataByType);
  }
  for (let [type, items2] of groupedByType) if ((0, $103790afe9474d1c$export$4a7729b856e9a690).has(type)) {
    let data = items2.join("\n");
    dataTransfer.items.add(data, type);
  } else
    dataTransfer.items.add(items2[0], type);
  if (needsCustomData) {
    let data = JSON.stringify(customData);
    dataTransfer.items.add(data, (0, $103790afe9474d1c$export$fd9f9fc120c5402d));
  }
}
var $7252cd45fc48c07c$export$7f04ce188c91447c = class {
  has(type) {
    if (this.includesUnknownTypes || type === $7252cd45fc48c07c$export$990fced5dfac2637 && this.types.has((0, $103790afe9474d1c$export$f8fc6581787339b3))) return true;
    return typeof type === "string" && this.types.has(type);
  }
  constructor(dataTransfer) {
    this.types = /* @__PURE__ */ new Set();
    let hasFiles = false;
    for (let item of dataTransfer.items) if (item.type !== (0, $103790afe9474d1c$export$fd9f9fc120c5402d)) {
      if (item.kind === "file") hasFiles = true;
      if (item.type) this.types.add(item.type);
      else
        this.types.add((0, $103790afe9474d1c$export$f8fc6581787339b3));
    }
    this.includesUnknownTypes = !hasFiles && dataTransfer.types.includes("Files");
  }
};
function $7252cd45fc48c07c$export$d9e760437831f8b3(dataTransfer) {
  let items = [];
  if (!dataTransfer) return items;
  let hasCustomType = false;
  if (dataTransfer.types.includes((0, $103790afe9474d1c$export$fd9f9fc120c5402d))) try {
    let data = dataTransfer.getData((0, $103790afe9474d1c$export$fd9f9fc120c5402d));
    let parsed = JSON.parse(data);
    for (let item of parsed) items.push({
      kind: "text",
      types: new Set(Object.keys(item)),
      getText: (type) => Promise.resolve(item[type])
    });
    hasCustomType = true;
  } catch {
  }
  if (!hasCustomType) {
    let stringItems = /* @__PURE__ */ new Map();
    for (let item of dataTransfer.items) {
      if (item.kind === "string")
        stringItems.set(item.type || (0, $103790afe9474d1c$export$f8fc6581787339b3), dataTransfer.getData(item.type));
      else if (item.kind === "file") {
        if (typeof item.webkitGetAsEntry === "function") {
          let entry = item.webkitGetAsEntry();
          if (!entry) continue;
          if (entry.isFile) items.push($7252cd45fc48c07c$var$createFileItem(item.getAsFile()));
          else if (entry.isDirectory) items.push($7252cd45fc48c07c$var$createDirectoryItem(entry));
        } else
          items.push($7252cd45fc48c07c$var$createFileItem(item.getAsFile()));
      }
    }
    if (stringItems.size > 0) items.push({
      kind: "text",
      types: new Set(stringItems.keys()),
      getText: (type) => Promise.resolve(stringItems.get(type))
    });
  }
  return items;
}
function $7252cd45fc48c07c$var$blobToString(blob) {
  if (typeof blob.text === "function") return blob.text();
  return new Promise((resolve, reject) => {
    let reader = new FileReader();
    reader.onload = () => {
      resolve(reader.result);
    };
    reader.onerror = reject;
    reader.readAsText(blob);
  });
}
function $7252cd45fc48c07c$var$createFileItem(file) {
  if (!file) throw new Error("No file provided");
  return {
    kind: "file",
    type: file.type || (0, $103790afe9474d1c$export$f8fc6581787339b3),
    name: file.name,
    getText: () => $7252cd45fc48c07c$var$blobToString(file),
    getFile: () => Promise.resolve(file)
  };
}
function $7252cd45fc48c07c$var$createDirectoryItem(entry) {
  return {
    kind: "directory",
    name: entry.name,
    getEntries: () => $7252cd45fc48c07c$var$getEntries(entry)
  };
}
async function* $7252cd45fc48c07c$var$getEntries(item) {
  let reader = item.createReader();
  let entries;
  do {
    entries = await new Promise((resolve, reject) => {
      reader.readEntries(resolve, reject);
    });
    for (let entry of entries) {
      if (entry.isFile) {
        let file = await $7252cd45fc48c07c$var$getEntryFile(entry);
        yield $7252cd45fc48c07c$var$createFileItem(file);
      } else if (entry.isDirectory) yield $7252cd45fc48c07c$var$createDirectoryItem(entry);
    }
  } while (entries.length > 0);
}
function $7252cd45fc48c07c$var$getEntryFile(entry) {
  return new Promise((resolve, reject) => entry.file(resolve, reject));
}
function $7252cd45fc48c07c$export$97fd558bdc44bea1(dropItem) {
  return dropItem.kind === "text";
}
function $7252cd45fc48c07c$export$a144e1752ebe0aa(dropItem) {
  return dropItem.kind === "file";
}
function $7252cd45fc48c07c$export$2b40a62bdbe6b2b0(dropItem) {
  return dropItem.kind === "directory";
}
var $7252cd45fc48c07c$export$6ca6700462636d0b = {
  draggingKeys: /* @__PURE__ */ new Set()
};
function $7252cd45fc48c07c$export$f2be18a910c0caa6(ref) {
  $7252cd45fc48c07c$export$6ca6700462636d0b.draggingCollectionRef = ref;
}
function $7252cd45fc48c07c$export$72cb63bdda528276(keys) {
  $7252cd45fc48c07c$export$6ca6700462636d0b.draggingKeys = keys;
}
function $7252cd45fc48c07c$export$dac8db29d42db9a1(ref) {
  $7252cd45fc48c07c$export$6ca6700462636d0b.dropCollectionRef = ref;
}
function $7252cd45fc48c07c$export$70936501603e6c57() {
  $7252cd45fc48c07c$export$6ca6700462636d0b = {
    draggingKeys: /* @__PURE__ */ new Set()
  };
}
function $7252cd45fc48c07c$export$6c10d32b362bfa5f(state) {
  $7252cd45fc48c07c$export$6ca6700462636d0b = state;
}
function $7252cd45fc48c07c$export$78bf638634500fa5(ref) {
  let { draggingCollectionRef, dropCollectionRef } = $7252cd45fc48c07c$export$6ca6700462636d0b;
  return (draggingCollectionRef === null || draggingCollectionRef === void 0 ? void 0 : draggingCollectionRef.current) != null && draggingCollectionRef.current === ((ref === null || ref === void 0 ? void 0 : ref.current) || (dropCollectionRef === null || dropCollectionRef === void 0 ? void 0 : dropCollectionRef.current));
}
var $7252cd45fc48c07c$export$8e6636520ac15722;
function $7252cd45fc48c07c$export$64f52ed7349ddb84(dropEffect) {
  $7252cd45fc48c07c$export$8e6636520ac15722 = dropEffect;
}
var $7252cd45fc48c07c$export$f0130eb70b6347b8 = (0, $103790afe9474d1c$export$60b7b4bcf3903d8e).none;
function $7252cd45fc48c07c$export$6539bc8c3a0a2d67(o) {
  $7252cd45fc48c07c$export$f0130eb70b6347b8 = o;
}

// node_modules/@react-aria/dnd/dist/DragManager.mjs
var import_react113 = __toESM(require_react(), 1);
var $67560de7c78cb232$var$dropTargets = /* @__PURE__ */ new Map();
var $67560de7c78cb232$var$dropItems = /* @__PURE__ */ new Map();
var $67560de7c78cb232$var$dragSession = null;
var $67560de7c78cb232$var$subscriptions = /* @__PURE__ */ new Set();
function $67560de7c78cb232$export$c28d9fb4a54e471a(target) {
  $67560de7c78cb232$var$dropTargets.set(target.element, target);
  $67560de7c78cb232$var$dragSession === null || $67560de7c78cb232$var$dragSession === void 0 ? void 0 : $67560de7c78cb232$var$dragSession.updateValidDropTargets();
  return () => {
    $67560de7c78cb232$var$dropTargets.delete(target.element);
    $67560de7c78cb232$var$dragSession === null || $67560de7c78cb232$var$dragSession === void 0 ? void 0 : $67560de7c78cb232$var$dragSession.updateValidDropTargets();
  };
}
function $67560de7c78cb232$export$aef80212ac99c003(item) {
  $67560de7c78cb232$var$dropItems.set(item.element, item);
  return () => {
    $67560de7c78cb232$var$dropItems.delete(item.element);
  };
}
function $67560de7c78cb232$export$549dbcf8649bf3b2(target, stringFormatter) {
  if ($67560de7c78cb232$var$dragSession) throw new Error("Cannot begin dragging while already dragging");
  $67560de7c78cb232$var$dragSession = new $67560de7c78cb232$var$DragSession(target, stringFormatter);
  requestAnimationFrame(() => {
    if ($67560de7c78cb232$var$dragSession) {
      $67560de7c78cb232$var$dragSession.setup();
      if ((0, $7252cd45fc48c07c$export$1fb2158d224b542c)() === "keyboard") $67560de7c78cb232$var$dragSession.next();
    }
  });
  for (let cb of $67560de7c78cb232$var$subscriptions) cb();
}
function $67560de7c78cb232$export$418e185dd3f1b968() {
  let [session, setSession] = (0, import_react113.useState)($67560de7c78cb232$var$dragSession);
  (0, import_react113.useEffect)(() => {
    let cb = () => setSession($67560de7c78cb232$var$dragSession);
    $67560de7c78cb232$var$subscriptions.add(cb);
    return () => {
      $67560de7c78cb232$var$subscriptions.delete(cb);
    };
  }, []);
  return session;
}
function $67560de7c78cb232$export$403bc76cbf68cf60() {
  return !!$67560de7c78cb232$var$dragSession;
}
function $67560de7c78cb232$var$endDragging() {
  $67560de7c78cb232$var$dragSession = null;
  for (let cb of $67560de7c78cb232$var$subscriptions) cb();
}
var $67560de7c78cb232$var$CANCELED_EVENTS = [
  "pointerdown",
  "pointermove",
  "pointerenter",
  "pointerleave",
  "pointerover",
  "pointerout",
  "pointerup",
  "mousedown",
  "mousemove",
  "mouseenter",
  "mouseleave",
  "mouseover",
  "mouseout",
  "mouseup",
  "touchstart",
  "touchmove",
  "touchend",
  "focusin",
  "focusout"
];
var $67560de7c78cb232$var$CLICK_EVENTS = [
  "pointerup",
  "mouseup",
  "touchend"
];
var $67560de7c78cb232$var$MESSAGES = {
  keyboard: "dragStartedKeyboard",
  touch: "dragStartedTouch",
  virtual: "dragStartedVirtual"
};
var $67560de7c78cb232$var$DragSession = class {
  setup() {
    document.addEventListener("keydown", this.onKeyDown, true);
    document.addEventListener("keyup", this.onKeyUp, true);
    window.addEventListener("focus", this.onFocus, true);
    window.addEventListener("blur", this.onBlur, true);
    document.addEventListener("click", this.onClick, true);
    document.addEventListener("pointerdown", this.onPointerDown, true);
    for (let event of $67560de7c78cb232$var$CANCELED_EVENTS) document.addEventListener(event, this.cancelEvent, true);
    this.mutationObserver = new MutationObserver(() => this.updateValidDropTargets());
    this.updateValidDropTargets();
    (0, $319e236875307eab$export$a9b970dcc4ae71a9)(this.stringFormatter.format($67560de7c78cb232$var$MESSAGES[(0, $7252cd45fc48c07c$export$1fb2158d224b542c)()]));
  }
  teardown() {
    var _this_mutationObserver, _this_restoreAriaHidden, _this;
    document.removeEventListener("keydown", this.onKeyDown, true);
    document.removeEventListener("keyup", this.onKeyUp, true);
    window.removeEventListener("focus", this.onFocus, true);
    window.removeEventListener("blur", this.onBlur, true);
    document.removeEventListener("click", this.onClick, true);
    document.removeEventListener("pointerdown", this.onPointerDown, true);
    for (let event of $67560de7c78cb232$var$CANCELED_EVENTS) document.removeEventListener(event, this.cancelEvent, true);
    (_this_mutationObserver = this.mutationObserver) === null || _this_mutationObserver === void 0 ? void 0 : _this_mutationObserver.disconnect();
    (_this_restoreAriaHidden = (_this = this).restoreAriaHidden) === null || _this_restoreAriaHidden === void 0 ? void 0 : _this_restoreAriaHidden.call(_this);
  }
  onKeyDown(e) {
    var _this_currentDropTarget;
    this.cancelEvent(e);
    if (e.key === "Escape") {
      this.cancel();
      return;
    }
    if (e.key === "Tab" && !(e.metaKey || e.altKey || e.ctrlKey)) {
      if (e.shiftKey) this.previous();
      else this.next();
    }
    if (typeof ((_this_currentDropTarget = this.currentDropTarget) === null || _this_currentDropTarget === void 0 ? void 0 : _this_currentDropTarget.onKeyDown) === "function") this.currentDropTarget.onKeyDown(e, this.dragTarget);
  }
  onKeyUp(e) {
    this.cancelEvent(e);
    if (e.key === "Enter") {
      var _this_getCurrentActivateButton;
      if (e.altKey || ((_this_getCurrentActivateButton = this.getCurrentActivateButton()) === null || _this_getCurrentActivateButton === void 0 ? void 0 : _this_getCurrentActivateButton.contains(e.target))) this.activate(this.currentDropTarget, this.currentDropItem);
      else this.drop();
    }
  }
  getCurrentActivateButton() {
    var _this_currentDropItem_activateButtonRef, _this_currentDropItem, _this_currentDropTarget_activateButtonRef, _this_currentDropTarget;
    var _this_currentDropItem_activateButtonRef_current, _ref;
    return (_ref = (_this_currentDropItem_activateButtonRef_current = (_this_currentDropItem = this.currentDropItem) === null || _this_currentDropItem === void 0 ? void 0 : (_this_currentDropItem_activateButtonRef = _this_currentDropItem.activateButtonRef) === null || _this_currentDropItem_activateButtonRef === void 0 ? void 0 : _this_currentDropItem_activateButtonRef.current) !== null && _this_currentDropItem_activateButtonRef_current !== void 0 ? _this_currentDropItem_activateButtonRef_current : (_this_currentDropTarget = this.currentDropTarget) === null || _this_currentDropTarget === void 0 ? void 0 : (_this_currentDropTarget_activateButtonRef = _this_currentDropTarget.activateButtonRef) === null || _this_currentDropTarget_activateButtonRef === void 0 ? void 0 : _this_currentDropTarget_activateButtonRef.current) !== null && _ref !== void 0 ? _ref : null;
  }
  onFocus(e) {
    let activateButton = this.getCurrentActivateButton();
    if (e.target === activateButton) {
      this.cancelEvent(e);
      return;
    }
    if (e.target !== this.dragTarget.element) this.cancelEvent(e);
    if (!(e.target instanceof HTMLElement) || e.target === this.dragTarget.element) return;
    let dropTarget = this.validDropTargets.find((target) => target.element === e.target) || this.validDropTargets.find((target) => target.element.contains(e.target));
    if (!dropTarget) {
      if (this.currentDropTarget) this.currentDropTarget.element.focus();
      else this.dragTarget.element.focus();
      return;
    }
    let item = $67560de7c78cb232$var$dropItems.get(e.target);
    if (dropTarget) this.setCurrentDropTarget(dropTarget, item);
  }
  onBlur(e) {
    let activateButton = this.getCurrentActivateButton();
    if (e.relatedTarget === activateButton) {
      this.cancelEvent(e);
      return;
    }
    if (e.target !== this.dragTarget.element) this.cancelEvent(e);
    if (!e.relatedTarget || !(e.relatedTarget instanceof HTMLElement)) {
      if (this.currentDropTarget) this.currentDropTarget.element.focus();
      else this.dragTarget.element.focus();
    }
  }
  onClick(e) {
    this.cancelEvent(e);
    if ((0, $6a7db85432448f7f$export$60278871457622de)(e) || this.isVirtualClick) {
      var _item_activateButtonRef, _dropTarget_activateButtonRef;
      let dropElements = $67560de7c78cb232$var$dropItems.values();
      let item = [
        ...dropElements
      ].find((item2) => {
        var _item_activateButtonRef_current2, _item_activateButtonRef2;
        return item2.element === e.target || ((_item_activateButtonRef2 = item2.activateButtonRef) === null || _item_activateButtonRef2 === void 0 ? void 0 : (_item_activateButtonRef_current2 = _item_activateButtonRef2.current) === null || _item_activateButtonRef_current2 === void 0 ? void 0 : _item_activateButtonRef_current2.contains(e.target));
      });
      let dropTarget = this.validDropTargets.find((target) => target.element.contains(e.target));
      var _item_activateButtonRef_current;
      let activateButton = (_item_activateButtonRef_current = item === null || item === void 0 ? void 0 : (_item_activateButtonRef = item.activateButtonRef) === null || _item_activateButtonRef === void 0 ? void 0 : _item_activateButtonRef.current) !== null && _item_activateButtonRef_current !== void 0 ? _item_activateButtonRef_current : dropTarget === null || dropTarget === void 0 ? void 0 : (_dropTarget_activateButtonRef = dropTarget.activateButtonRef) === null || _dropTarget_activateButtonRef === void 0 ? void 0 : _dropTarget_activateButtonRef.current;
      if ((activateButton === null || activateButton === void 0 ? void 0 : activateButton.contains(e.target)) && dropTarget) {
        this.activate(dropTarget, item);
        return;
      }
      if (e.target === this.dragTarget.element) {
        this.cancel();
        return;
      }
      if (dropTarget) {
        this.setCurrentDropTarget(dropTarget, item);
        this.drop(item);
      }
    }
  }
  onPointerDown(e) {
    this.cancelEvent(e);
    this.isVirtualClick = (0, $6a7db85432448f7f$export$29bf1b5f2c56cf63)(e);
  }
  cancelEvent(e) {
    var _this_dragTarget;
    if ((e.type === "focusin" || e.type === "focusout") && (e.target === ((_this_dragTarget = this.dragTarget) === null || _this_dragTarget === void 0 ? void 0 : _this_dragTarget.element) || e.target === this.getCurrentActivateButton())) return;
    if (!$67560de7c78cb232$var$CLICK_EVENTS.includes(e.type)) e.preventDefault();
    e.stopPropagation();
    e.stopImmediatePropagation();
  }
  updateValidDropTargets() {
    if (!this.mutationObserver) return;
    this.mutationObserver.disconnect();
    if (this.restoreAriaHidden) this.restoreAriaHidden();
    this.validDropTargets = $67560de7c78cb232$var$findValidDropTargets(this.dragTarget);
    if (this.validDropTargets.length > 0) {
      let nearestIndex = this.findNearestDropTarget();
      this.validDropTargets = [
        ...this.validDropTargets.slice(nearestIndex),
        ...this.validDropTargets.slice(0, nearestIndex)
      ];
    }
    if (this.currentDropTarget && !this.validDropTargets.includes(this.currentDropTarget)) this.setCurrentDropTarget(this.validDropTargets[0]);
    let types = (0, $7252cd45fc48c07c$export$e1d41611756c6326)(this.dragTarget.items);
    let validDropItems = [
      ...$67560de7c78cb232$var$dropItems.values()
    ].filter((item) => {
      if (typeof item.getDropOperation === "function") return item.getDropOperation(types, this.dragTarget.allowedDropOperations) !== "cancel";
      return true;
    });
    let visibleDropTargets = this.validDropTargets.filter((target) => !validDropItems.some((item) => target.element.contains(item.element)));
    this.restoreAriaHidden = (0, $5e3802645cc19319$export$1c3ebcada18427bf)([
      this.dragTarget.element,
      ...validDropItems.flatMap((item) => {
        var _item_activateButtonRef, _item_activateButtonRef1;
        return ((_item_activateButtonRef = item.activateButtonRef) === null || _item_activateButtonRef === void 0 ? void 0 : _item_activateButtonRef.current) ? [
          item.element,
          (_item_activateButtonRef1 = item.activateButtonRef) === null || _item_activateButtonRef1 === void 0 ? void 0 : _item_activateButtonRef1.current
        ] : [
          item.element
        ];
      }),
      ...visibleDropTargets.flatMap((target) => {
        var _target_activateButtonRef, _target_activateButtonRef1;
        return ((_target_activateButtonRef = target.activateButtonRef) === null || _target_activateButtonRef === void 0 ? void 0 : _target_activateButtonRef.current) ? [
          target.element,
          (_target_activateButtonRef1 = target.activateButtonRef) === null || _target_activateButtonRef1 === void 0 ? void 0 : _target_activateButtonRef1.current
        ] : [
          target.element
        ];
      })
    ]);
    this.mutationObserver.observe(document.body, {
      subtree: true,
      attributes: true,
      attributeFilter: [
        "aria-hidden"
      ]
    });
  }
  next() {
    if (!this.currentDropTarget) {
      this.setCurrentDropTarget(this.validDropTargets[0]);
      return;
    }
    let index = this.validDropTargets.indexOf(this.currentDropTarget);
    if (index < 0) {
      this.setCurrentDropTarget(this.validDropTargets[0]);
      return;
    }
    if (index === this.validDropTargets.length - 1) {
      if (!this.dragTarget.element.closest('[aria-hidden="true"]')) {
        this.setCurrentDropTarget(null);
        this.dragTarget.element.focus();
      } else this.setCurrentDropTarget(this.validDropTargets[0]);
    } else this.setCurrentDropTarget(this.validDropTargets[index + 1]);
  }
  previous() {
    if (!this.currentDropTarget) {
      this.setCurrentDropTarget(this.validDropTargets[this.validDropTargets.length - 1]);
      return;
    }
    let index = this.validDropTargets.indexOf(this.currentDropTarget);
    if (index < 0) {
      this.setCurrentDropTarget(this.validDropTargets[this.validDropTargets.length - 1]);
      return;
    }
    if (index === 0) {
      if (!this.dragTarget.element.closest('[aria-hidden="true"]')) {
        this.setCurrentDropTarget(null);
        this.dragTarget.element.focus();
      } else this.setCurrentDropTarget(this.validDropTargets[this.validDropTargets.length - 1]);
    } else this.setCurrentDropTarget(this.validDropTargets[index - 1]);
  }
  findNearestDropTarget() {
    let dragTargetRect = this.dragTarget.element.getBoundingClientRect();
    let minDistance = Infinity;
    let nearest = -1;
    for (let i = 0; i < this.validDropTargets.length; i++) {
      let dropTarget = this.validDropTargets[i];
      let rect = dropTarget.element.getBoundingClientRect();
      let dx = rect.left - dragTargetRect.left;
      let dy = rect.top - dragTargetRect.top;
      let dist = dx * dx + dy * dy;
      if (dist < minDistance) {
        minDistance = dist;
        nearest = i;
      }
    }
    return nearest;
  }
  setCurrentDropTarget(dropTarget, item) {
    if (dropTarget !== this.currentDropTarget) {
      if (this.currentDropTarget && typeof this.currentDropTarget.onDropExit === "function") {
        let rect = this.currentDropTarget.element.getBoundingClientRect();
        this.currentDropTarget.onDropExit({
          type: "dropexit",
          x: rect.left + rect.width / 2,
          y: rect.top + rect.height / 2
        });
      }
      this.currentDropTarget = dropTarget;
      if (dropTarget) {
        if (typeof dropTarget.onDropEnter === "function") {
          let rect = dropTarget.element.getBoundingClientRect();
          dropTarget.onDropEnter({
            type: "dropenter",
            x: rect.left + rect.width / 2,
            y: rect.top + rect.height / 2
          }, this.dragTarget);
        }
        if (!item) dropTarget === null || dropTarget === void 0 ? void 0 : dropTarget.element.focus();
      }
    }
    if (item != null && item !== this.currentDropItem) {
      if (this.currentDropTarget && typeof this.currentDropTarget.onDropTargetEnter === "function") this.currentDropTarget.onDropTargetEnter(item.target);
      item.element.focus();
      this.currentDropItem = item;
      if (!this.initialFocused) {
        let label = item === null || item === void 0 ? void 0 : item.element.getAttribute("aria-label");
        if (label) (0, $319e236875307eab$export$a9b970dcc4ae71a9)(label, "polite");
        this.initialFocused = true;
      }
    }
  }
  end() {
    var _document_activeElement;
    this.teardown();
    $67560de7c78cb232$var$endDragging();
    if (typeof this.dragTarget.onDragEnd === "function") {
      let target = this.currentDropTarget && this.dropOperation !== "cancel" ? this.currentDropTarget : this.dragTarget;
      let rect = target.element.getBoundingClientRect();
      this.dragTarget.onDragEnd({
        type: "dragend",
        x: rect.x + rect.width / 2,
        y: rect.y + rect.height / 2,
        dropOperation: this.dropOperation || "cancel"
      });
    }
    if (this.currentDropTarget && !this.currentDropTarget.preventFocusOnDrop) (_document_activeElement = document.activeElement) === null || _document_activeElement === void 0 ? void 0 : _document_activeElement.dispatchEvent(new FocusEvent("focusin", {
      bubbles: true
    }));
    this.setCurrentDropTarget(null);
  }
  cancel() {
    this.setCurrentDropTarget(null);
    this.end();
    if (!this.dragTarget.element.closest('[aria-hidden="true"]')) this.dragTarget.element.focus();
    (0, $319e236875307eab$export$a9b970dcc4ae71a9)(this.stringFormatter.format("dropCanceled"));
  }
  drop(item) {
    if (!this.currentDropTarget) {
      this.cancel();
      return;
    }
    if (typeof (item === null || item === void 0 ? void 0 : item.getDropOperation) === "function") {
      let types = (0, $7252cd45fc48c07c$export$e1d41611756c6326)(this.dragTarget.items);
      this.dropOperation = item.getDropOperation(types, this.dragTarget.allowedDropOperations);
    } else if (typeof this.currentDropTarget.getDropOperation === "function") {
      let types = (0, $7252cd45fc48c07c$export$e1d41611756c6326)(this.dragTarget.items);
      this.dropOperation = this.currentDropTarget.getDropOperation(types, this.dragTarget.allowedDropOperations);
    } else
      this.dropOperation = this.dragTarget.allowedDropOperations[0];
    if (typeof this.currentDropTarget.onDrop === "function") {
      let items = this.dragTarget.items.map((item2) => ({
        kind: "text",
        types: new Set(Object.keys(item2)),
        getText: (type) => Promise.resolve(item2[type])
      }));
      let rect = this.currentDropTarget.element.getBoundingClientRect();
      var _item_target;
      this.currentDropTarget.onDrop({
        type: "drop",
        x: rect.left + rect.width / 2,
        y: rect.top + rect.height / 2,
        items,
        dropOperation: this.dropOperation
      }, (_item_target = item === null || item === void 0 ? void 0 : item.target) !== null && _item_target !== void 0 ? _item_target : null);
    }
    this.end();
    (0, $319e236875307eab$export$a9b970dcc4ae71a9)(this.stringFormatter.format("dropComplete"));
  }
  activate(dropTarget, dropItem) {
    if (dropTarget && typeof dropTarget.onDropActivate === "function") {
      var _dropItem_target;
      let target = (_dropItem_target = dropItem === null || dropItem === void 0 ? void 0 : dropItem.target) !== null && _dropItem_target !== void 0 ? _dropItem_target : null;
      let rect = dropTarget.element.getBoundingClientRect();
      dropTarget.onDropActivate({
        type: "dropactivate",
        x: rect.left + rect.width / 2,
        y: rect.top + rect.height / 2
      }, target);
    }
  }
  constructor(target, stringFormatter) {
    this.validDropTargets = [];
    this.currentDropTarget = null;
    this.currentDropItem = null;
    this.dropOperation = null;
    this.mutationObserver = null;
    this.restoreAriaHidden = null;
    this.isVirtualClick = false;
    this.dragTarget = target;
    this.stringFormatter = stringFormatter;
    this.onKeyDown = this.onKeyDown.bind(this);
    this.onKeyUp = this.onKeyUp.bind(this);
    this.onFocus = this.onFocus.bind(this);
    this.onBlur = this.onBlur.bind(this);
    this.onClick = this.onClick.bind(this);
    this.onPointerDown = this.onPointerDown.bind(this);
    this.cancelEvent = this.cancelEvent.bind(this);
    this.initialFocused = false;
  }
};
function $67560de7c78cb232$var$findValidDropTargets(options) {
  let types = (0, $7252cd45fc48c07c$export$e1d41611756c6326)(options.items);
  return [
    ...$67560de7c78cb232$var$dropTargets.values()
  ].filter((target) => {
    if (target.element.closest('[aria-hidden="true"]')) return false;
    if (typeof target.getDropOperation === "function") return target.getDropOperation(types, options.allowedDropOperations) !== "cancel";
    return true;
  });
}

// node_modules/@react-aria/dnd/dist/ar-AE.mjs
var $7dfcac1a0c98c789$exports = {};
$7dfcac1a0c98c789$exports = {
  "dragDescriptionKeyboard": `اضغط Enter لبدء السحب.`,
  "dragDescriptionKeyboardAlt": `اضغط على Alt + Enter لبدء السحب.`,
  "dragDescriptionLongPress": `اضغط باستمرار لبدء السحب.`,
  "dragDescriptionTouch": `اضغط مرتين لبدء السحب.`,
  "dragDescriptionVirtual": `انقر لبدء السحب.`,
  "dragItem": (args) => `اسحب ${args.itemText}`,
  "dragSelectedItems": (args, formatter) => `اسحب ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} عنصر محدد`,
    other: () => `${formatter.number(args.count)} عناصر محددة`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `اضغط على Enter للسحب ${formatter.plural(args.count, {
    one: `عدد العناصر المختارة`,
    other: `عدد العناصر المختارة`
  })}.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `اضغط على مفتاحي Alt + Enter للسحب ${formatter.plural(args.count, {
    one: `عدد العناصر المختارة`,
    other: `عدد العناصر المختارة`
  })}.`,
  "dragSelectedLongPress": (args, formatter) => `اضغط باستمرار للسحب ${formatter.plural(args.count, {
    one: `عدد العناصر المختارة`,
    other: `عدد العناصر المختارة`
  })}.`,
  "dragStartedKeyboard": `بدأ السحب. اضغط Tab للانتقال إلى موضع الإفلات، ثم اضغط Enter للإفلات، أو اضغط Escape للإلغاء.`,
  "dragStartedTouch": `بدأ السحب. انتقل إلى موضع الإفلات، ثم اضغط مرتين للإفلات.`,
  "dragStartedVirtual": `بدأ السحب. انتقل إلى مكان الإفلات، ثم انقر أو اضغط Enter للإفلات.`,
  "dropCanceled": `تم إلغاء الإفلات.`,
  "dropComplete": `اكتمل الإفلات.`,
  "dropDescriptionKeyboard": `اضغط Enter للإفلات. اضغط Escape لإلغاء السحب.`,
  "dropDescriptionTouch": `اضغط مرتين للإفلات.`,
  "dropDescriptionVirtual": `انقر للإفلات.`,
  "dropIndicator": `مؤشر الإفلات`,
  "dropOnItem": (args) => `إفلات ${args.itemText}`,
  "dropOnRoot": `الإفلات`,
  "endDragKeyboard": `السحب. اضغط Enter لإلغاء السحب.`,
  "endDragTouch": `السحب. اضغط مرتين لإلغاء السحب.`,
  "endDragVirtual": `السحب. انقر لإلغاء السحب.`,
  "insertAfter": (args) => `أدخل بعد ${args.itemText}`,
  "insertBefore": (args) => `أدخل قبل ${args.itemText}`,
  "insertBetween": (args) => `أدخل بين ${args.beforeItemText} و ${args.afterItemText}`
};

// node_modules/@react-aria/dnd/dist/bg-BG.mjs
var $f311c26671219eca$exports = {};
$f311c26671219eca$exports = {
  "dragDescriptionKeyboard": `Натиснете „Enter“, за да започнете да плъзгате.`,
  "dragDescriptionKeyboardAlt": `Натиснете Alt + Enter, за да започнете да плъзгате.`,
  "dragDescriptionLongPress": `Натиснете продължително, за да започнете да плъзгате.`,
  "dragDescriptionTouch": `Натиснете двукратно, за да започнете да плъзгате.`,
  "dragDescriptionVirtual": `Щракнете, за да започнете да плъзгате.`,
  "dragItem": (args) => `Плъзни ${args.itemText}`,
  "dragSelectedItems": (args, formatter) => `Плъзни ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} избран елемент`,
    other: () => `${formatter.number(args.count)} избрани елемента`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `Натиснете Enter, за да плъзнете ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} избран елемент`,
    other: () => `${formatter.number(args.count)} избрани елементи`
  })}.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Натиснете Alt и Enter, за да плъзнете ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} избран елемент`,
    other: () => `${formatter.number(args.count)} избрани елементи`
  })}.`,
  "dragSelectedLongPress": (args, formatter) => `Натиснете продължително, за да плъзнете ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} избран елемент`,
    other: () => `${formatter.number(args.count)} избрани елементи`
  })}.`,
  "dragStartedKeyboard": `Започна плъзгане. Натиснете „Tab“, за да се придвижите до целта, след което натиснете „Enter“ за пускане или натиснете „Escape“ за отмяна.`,
  "dragStartedTouch": `Започна плъзгане. Придвижете се до целта, след което натиснете двукратно, за да пуснете.`,
  "dragStartedVirtual": `Започна плъзгане. Придвижете се до целта, след което щракнете или натиснете „Enter“ за пускане.`,
  "dropCanceled": `Пускането е отменено.`,
  "dropComplete": `Пускането е завършено.`,
  "dropDescriptionKeyboard": `Натиснете „Enter“ за пускане. Натиснете „Escape“ за отмяна на плъзгането.`,
  "dropDescriptionTouch": `Натиснете двукратно за пускане.`,
  "dropDescriptionVirtual": `Щракнете за пускане.`,
  "dropIndicator": `индикатор за пускане`,
  "dropOnItem": (args) => `Пусни върху ${args.itemText}`,
  "dropOnRoot": `Пусни върху`,
  "endDragKeyboard": `Плъзгане. Натиснете „Enter“ за отмяна на плъзгането.`,
  "endDragTouch": `Плъзгане. Натиснете двукратно за отмяна на плъзгането.`,
  "endDragVirtual": `Плъзгане. Щракнете за отмяна.`,
  "insertAfter": (args) => `Вмъкни след ${args.itemText}`,
  "insertBefore": (args) => `Вмъкни преди ${args.itemText}`,
  "insertBetween": (args) => `Вмъкни между ${args.beforeItemText} и ${args.afterItemText}`
};

// node_modules/@react-aria/dnd/dist/cs-CZ.mjs
var $1aa4ade186550f72$exports = {};
$1aa4ade186550f72$exports = {
  "dragDescriptionKeyboard": `Stisknutím klávesy Enter začnete s přetahováním.`,
  "dragDescriptionKeyboardAlt": `Stisknutím Alt + Enter zahájíte přetahování.`,
  "dragDescriptionLongPress": `Dlouhým stisknutím zahájíte přetahování.`,
  "dragDescriptionTouch": `Poklepáním začnete s přetahováním.`,
  "dragDescriptionVirtual": `Kliknutím začnete s přetahováním.`,
  "dragItem": (args) => `Přetáhnout ${args.itemText}`,
  "dragSelectedItems": (args, formatter) => `Přetáhnout ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} vybranou položku`,
    few: () => `${formatter.number(args.count)} vybrané položky`,
    other: () => `${formatter.number(args.count)} vybraných položek`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `Stisknutím klávesy Enter přetáhněte ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} vybranou položku`,
    other: () => `${formatter.number(args.count)} vybrané položky`
  })}.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Stisknutím Alt + Enter přetáhněte ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} vybranou položku`,
    other: () => `${formatter.number(args.count)} vybrané položky`
  })}.`,
  "dragSelectedLongPress": (args, formatter) => `Dlouhým stisknutím přetáhnete ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} vybranou položku`,
    other: () => `${formatter.number(args.count)} vybrané položky`
  })}.`,
  "dragStartedKeyboard": `Začněte s přetahováním. Po stisknutí klávesy Tab najděte požadovaný cíl a stisknutím klávesy Enter přetažení dokončete nebo stisknutím klávesy Esc akci zrušte.`,
  "dragStartedTouch": `Začněte s přetahováním. Najděte požadovaný cíl a poklepáním přetažení dokončete.`,
  "dragStartedVirtual": `Začněte s přetahováním. Najděte požadovaný cíl a kliknutím nebo stisknutím klávesy Enter přetažení dokončete.`,
  "dropCanceled": `Přetažení bylo zrušeno.`,
  "dropComplete": `Přetažení bylo dokončeno.`,
  "dropDescriptionKeyboard": `Stisknutím klávesy Enter přetažení dokončete nebo stisknutím klávesy Esc akci zrušte.`,
  "dropDescriptionTouch": `Poklepáním přetažení dokončete.`,
  "dropDescriptionVirtual": `Kliknutím objekt přetáhněte.`,
  "dropIndicator": `indikátor přetažení`,
  "dropOnItem": (args) => `Přetáhnout na ${args.itemText}`,
  "dropOnRoot": `Přetáhnout na`,
  "endDragKeyboard": `Probíhá přetahování. Stisknutím klávesy Enter přetažení zrušíte.`,
  "endDragTouch": `Probíhá přetahování. Poklepáním přetažení zrušíte.`,
  "endDragVirtual": `Probíhá přetahování. Kliknutím přetažení zrušíte.`,
  "insertAfter": (args) => `Vložit za ${args.itemText}`,
  "insertBefore": (args) => `Vložit před ${args.itemText}`,
  "insertBetween": (args) => `Vložit mezi ${args.beforeItemText} a ${args.afterItemText}`
};

// node_modules/@react-aria/dnd/dist/da-DK.mjs
var $b6b0ea1b94a7633c$exports = {};
$b6b0ea1b94a7633c$exports = {
  "dragDescriptionKeyboard": `Tryk på Enter for at starte med at trække.`,
  "dragDescriptionKeyboardAlt": `Tryk på Alt + Enter for at starte med at trække.`,
  "dragDescriptionLongPress": `Tryk længe for at starte med at trække.`,
  "dragDescriptionTouch": `Dobbelttryk for at starte med at trække.`,
  "dragDescriptionVirtual": `Klik for at starte med at trække.`,
  "dragItem": (args) => `Træk ${args.itemText}`,
  "dragSelectedItems": (args, formatter) => `Træk ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} valgt element`,
    other: () => `${formatter.number(args.count)} valgte elementer`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `Tryk på Enter for at trække ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} valgte element`,
    other: () => `${formatter.number(args.count)} valgte elementer`
  })}.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Tryk på Alt + Enter for at trække ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} valgte element`,
    other: () => `${formatter.number(args.count)} valgte elementer`
  })}.`,
  "dragSelectedLongPress": (args, formatter) => `Tryk længe for at trække ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} valgte element`,
    other: () => `${formatter.number(args.count)} valgte elementer`
  })}.`,
  "dragStartedKeyboard": `Startet med at trække. Tryk på Tab for at gå til et slip-mål, tryk derefter på Enter for at slippe, eller tryk på Escape for at annullere.`,
  "dragStartedTouch": `Startet med at trække. Gå til et slip-mål, og dobbelttryk derefter for at slippe.`,
  "dragStartedVirtual": `Startet med at trække. Gå til et slip-mål, og klik eller tryk derefter på enter for at slippe.`,
  "dropCanceled": `Slip annulleret.`,
  "dropComplete": `Slip fuldført.`,
  "dropDescriptionKeyboard": `Tryk på Enter for at slippe. Tryk på Escape for at annullere trækning.`,
  "dropDescriptionTouch": `Dobbelttryk for at slippe.`,
  "dropDescriptionVirtual": `Klik for at slippe.`,
  "dropIndicator": `slip-indikator`,
  "dropOnItem": (args) => `Slip på ${args.itemText}`,
  "dropOnRoot": `Slip på`,
  "endDragKeyboard": `Trækning. Tryk på enter for at annullere træk.`,
  "endDragTouch": `Trækning. Dobbelttryk for at annullere træk.`,
  "endDragVirtual": `Trækning. Klik for at annullere trækning.`,
  "insertAfter": (args) => `Indsæt efter ${args.itemText}`,
  "insertBefore": (args) => `Indsæt før ${args.itemText}`,
  "insertBetween": (args) => `Indsæt mellem ${args.beforeItemText} og ${args.afterItemText}`
};

// node_modules/@react-aria/dnd/dist/de-DE.mjs
var $d10e4f47c744ad52$exports = {};
$d10e4f47c744ad52$exports = {
  "dragDescriptionKeyboard": `Drücken Sie die Eingabetaste, um den Ziehvorgang zu starten.`,
  "dragDescriptionKeyboardAlt": `Alt + Eingabe drücken, um den Ziehvorgang zu starten.`,
  "dragDescriptionLongPress": `Lang drücken, um mit dem Ziehen zu beginnen.`,
  "dragDescriptionTouch": `Tippen Sie doppelt, um den Ziehvorgang zu starten.`,
  "dragDescriptionVirtual": `Zum Starten des Ziehvorgangs klicken.`,
  "dragItem": (args) => `${args.itemText} ziehen`,
  "dragSelectedItems": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} ausgewähltes Objekt`,
    other: () => `${formatter.number(args.count)} ausgewählte Objekte`
  })} ziehen`,
  "dragSelectedKeyboard": (args, formatter) => `Eingabetaste drücken, um ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} ausgewähltes Element`,
    other: () => `${formatter.number(args.count)} ausgewählte Elemente`
  })} zu ziehen.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Alt + Eingabetaste drücken, um ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} ausgewähltes Element`,
    other: () => `${formatter.number(args.count)} ausgewählte Elemente`
  })} zu ziehen.`,
  "dragSelectedLongPress": (args, formatter) => `Lang drücken, um ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} ausgewähltes Element`,
    other: () => `${formatter.number(args.count)} ausgewählte Elemente`
  })} zu ziehen.`,
  "dragStartedKeyboard": `Ziehvorgang gestartet. Drücken Sie die Tabulatortaste, um zu einem Ablegeziel zu navigieren und drücken Sie dann die Eingabetaste, um das Objekt abzulegen, oder Escape, um den Vorgang abzubrechen.`,
  "dragStartedTouch": `Ziehvorgang gestartet. Navigieren Sie zu einem Ablegeziel und tippen Sie doppelt, um das Objekt abzulegen.`,
  "dragStartedVirtual": `Ziehvorgang gestartet. Navigieren Sie zu einem Ablegeziel und klicken Sie oder drücken Sie die Eingabetaste, um das Objekt abzulegen.`,
  "dropCanceled": `Ablegen abgebrochen.`,
  "dropComplete": `Ablegen abgeschlossen.`,
  "dropDescriptionKeyboard": `Drücken Sie die Eingabetaste, um das Objekt abzulegen. Drücken Sie Escape, um den Vorgang abzubrechen.`,
  "dropDescriptionTouch": `Tippen Sie doppelt, um das Objekt abzulegen.`,
  "dropDescriptionVirtual": `Zum Ablegen klicken.`,
  "dropIndicator": `Ablegeanzeiger`,
  "dropOnItem": (args) => `Auf ${args.itemText} ablegen`,
  "dropOnRoot": `Ablegen auf`,
  "endDragKeyboard": `Ziehvorgang läuft. Drücken Sie die Eingabetaste, um den Vorgang abzubrechen.`,
  "endDragTouch": `Ziehvorgang läuft. Tippen Sie doppelt, um den Vorgang abzubrechen.`,
  "endDragVirtual": `Ziehvorgang läuft. Klicken Sie, um den Vorgang abzubrechen.`,
  "insertAfter": (args) => `Nach ${args.itemText} einfügen`,
  "insertBefore": (args) => `Vor ${args.itemText} einfügen`,
  "insertBetween": (args) => `Zwischen ${args.beforeItemText} und ${args.afterItemText} einfügen`
};

// node_modules/@react-aria/dnd/dist/el-GR.mjs
var $b3d2bb9abce688ab$exports = {};
$b3d2bb9abce688ab$exports = {
  "dragDescriptionKeyboard": `Πατήστε Enter για έναρξη της μεταφοράς.`,
  "dragDescriptionKeyboardAlt": `Πατήστε Alt + Enter για έναρξη της μεταφοράς.`,
  "dragDescriptionLongPress": `Πατήστε παρατεταμένα για να ξεκινήσετε τη μεταφορά.`,
  "dragDescriptionTouch": `Πατήστε δύο φορές για έναρξη της μεταφοράς.`,
  "dragDescriptionVirtual": `Κάντε κλικ για να ξεκινήσετε τη μεταφορά.`,
  "dragItem": (args) => `Μεταφορά ${args.itemText}`,
  "dragSelectedItems": (args, formatter) => `Μεταφορά σε ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} επιλεγμένο στοιχείο`,
    other: () => `${formatter.number(args.count)} επιλεγμένα στοιχεία`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `Πατήστε Enter για να σύρετε ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} επιλεγμένο στοιχείο`,
    other: () => `${formatter.number(args.count)} επιλεγμένα στοιχεία`
  })}.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Πατήστε Alt + Enter για να σύρετε ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} επιλεγμένο στοιχείο`,
    other: () => `${formatter.number(args.count)} επιλεγμένα στοιχεία`
  })}.`,
  "dragSelectedLongPress": (args, formatter) => `Πατήστε παρατεταμένα για να σύρετε ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} επιλεγμένο στοιχείο`,
    other: () => `${formatter.number(args.count)} επιλεγμένα στοιχεία`
  })}.`,
  "dragStartedKeyboard": `Η μεταφορά ξεκίνησε. Πατήστε το πλήκτρο Tab για να μεταβείτε σε έναν προορισμό απόθεσης και, στη συνέχεια, πατήστε Enter για απόθεση ή πατήστε Escape για ακύρωση.`,
  "dragStartedTouch": `Η μεταφορά ξεκίνησε. Μεταβείτε σε έναν προορισμό απόθεσης και, στη συνέχεια, πατήστε δύο φορές για απόθεση.`,
  "dragStartedVirtual": `Η μεταφορά ξεκίνησε. Μεταβείτε σε έναν προορισμό απόθεσης και, στη συνέχεια, κάντε κλικ ή πατήστε Enter για απόθεση.`,
  "dropCanceled": `Η απόθεση ακυρώθηκε.`,
  "dropComplete": `Η απόθεση ολοκληρώθηκε.`,
  "dropDescriptionKeyboard": `Πατήστε Enter για απόθεση. Πατήστε Escape για ακύρωση της μεταφοράς.`,
  "dropDescriptionTouch": `Πατήστε δύο φορές για απόθεση.`,
  "dropDescriptionVirtual": `Κάντε κλικ για απόθεση.`,
  "dropIndicator": `δείκτης απόθεσης`,
  "dropOnItem": (args) => `Απόθεση σε ${args.itemText}`,
  "dropOnRoot": `Απόθεση σε`,
  "endDragKeyboard": `Μεταφορά σε εξέλιξη. Πατήστε Enter για ακύρωση της μεταφοράς.`,
  "endDragTouch": `Μεταφορά σε εξέλιξη. Πατήστε δύο φορές για ακύρωση της μεταφοράς.`,
  "endDragVirtual": `Μεταφορά σε εξέλιξη. Κάντε κλικ για ακύρωση της μεταφοράς.`,
  "insertAfter": (args) => `Εισαγωγή μετά από ${args.itemText}`,
  "insertBefore": (args) => `Εισαγωγή πριν από ${args.itemText}`,
  "insertBetween": (args) => `Εισαγωγή μεταξύ ${args.beforeItemText} και ${args.afterItemText}`
};

// node_modules/@react-aria/dnd/dist/en-US.mjs
var $f9b46437e610cca1$exports = {};
$f9b46437e610cca1$exports = {
  "dragItem": (args) => `Drag ${args.itemText}`,
  "dragSelectedItems": (args, formatter) => `Drag ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} selected item`,
    other: () => `${formatter.number(args.count)} selected items`
  })}`,
  "dragDescriptionKeyboard": `Press Enter to start dragging.`,
  "dragDescriptionKeyboardAlt": `Press Alt + Enter to start dragging.`,
  "dragDescriptionTouch": `Double tap to start dragging.`,
  "dragDescriptionVirtual": `Click to start dragging.`,
  "dragDescriptionLongPress": `Long press to start dragging.`,
  "dragSelectedKeyboard": (args, formatter) => `Press Enter to drag ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} selected item`,
    other: () => `${formatter.number(args.count)} selected items`
  })}.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Press Alt + Enter to drag ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} selected item`,
    other: () => `${formatter.number(args.count)} selected items`
  })}.`,
  "dragSelectedLongPress": (args, formatter) => `Long press to drag ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} selected item`,
    other: () => `${formatter.number(args.count)} selected items`
  })}.`,
  "dragStartedKeyboard": `Started dragging. Press Tab to navigate to a drop target, then press Enter to drop, or press Escape to cancel.`,
  "dragStartedTouch": `Started dragging. Navigate to a drop target, then double tap to drop.`,
  "dragStartedVirtual": `Started dragging. Navigate to a drop target, then click or press Enter to drop.`,
  "endDragKeyboard": `Dragging. Press Enter to cancel drag.`,
  "endDragTouch": `Dragging. Double tap to cancel drag.`,
  "endDragVirtual": `Dragging. Click to cancel drag.`,
  "dropDescriptionKeyboard": `Press Enter to drop. Press Escape to cancel drag.`,
  "dropDescriptionTouch": `Double tap to drop.`,
  "dropDescriptionVirtual": `Click to drop.`,
  "dropCanceled": `Drop canceled.`,
  "dropComplete": `Drop complete.`,
  "dropIndicator": `drop indicator`,
  "dropOnRoot": `Drop on`,
  "dropOnItem": (args) => `Drop on ${args.itemText}`,
  "insertBefore": (args) => `Insert before ${args.itemText}`,
  "insertBetween": (args) => `Insert between ${args.beforeItemText} and ${args.afterItemText}`,
  "insertAfter": (args) => `Insert after ${args.itemText}`
};

// node_modules/@react-aria/dnd/dist/es-ES.mjs
var $204b5c01bd3acf26$exports = {};
$204b5c01bd3acf26$exports = {
  "dragDescriptionKeyboard": `Pulse Intro para empezar a arrastrar.`,
  "dragDescriptionKeyboardAlt": `Pulse Intro para empezar a arrastrar.`,
  "dragDescriptionLongPress": `Mantenga pulsado para comenzar a arrastrar.`,
  "dragDescriptionTouch": `Pulse dos veces para iniciar el arrastre.`,
  "dragDescriptionVirtual": `Haga clic para iniciar el arrastre.`,
  "dragItem": (args) => `Arrastrar ${args.itemText}`,
  "dragSelectedItems": (args, formatter) => `Arrastrar ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} elemento seleccionado`,
    other: () => `${formatter.number(args.count)} elementos seleccionados`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `Pulse Intro para arrastrar ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} elemento seleccionado`,
    other: () => `${formatter.number(args.count)} elementos seleccionados`
  })}.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Pulse Alt + Intro para arrastrar ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} elemento seleccionado`,
    other: () => `${formatter.number(args.count)} elementos seleccionados`
  })}.`,
  "dragSelectedLongPress": (args, formatter) => `Mantenga pulsado para arrastrar ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} elemento seleccionado`,
    other: () => `${formatter.number(args.count)} elementos seleccionados`
  })}.`,
  "dragStartedKeyboard": `Se ha empezado a arrastrar. Pulse el tabulador para ir al público destinatario donde se vaya a colocar y, a continuación, pulse Intro para soltar, o pulse Escape para cancelar.`,
  "dragStartedTouch": `Se ha empezado a arrastrar. Vaya al público destinatario donde se vaya a colocar y, a continuación, pulse dos veces para soltar.`,
  "dragStartedVirtual": `Se ha empezado a arrastrar. Vaya al público destinatario donde se vaya a colocar y, a continuación, haga clic o pulse Intro para soltar.`,
  "dropCanceled": `Se ha cancelado la colocación.`,
  "dropComplete": `Colocación finalizada.`,
  "dropDescriptionKeyboard": `Pulse Intro para soltar. Pulse Escape para cancelar el arrastre.`,
  "dropDescriptionTouch": `Pulse dos veces para soltar.`,
  "dropDescriptionVirtual": `Haga clic para soltar.`,
  "dropIndicator": `indicador de colocación`,
  "dropOnItem": (args) => `Soltar en ${args.itemText}`,
  "dropOnRoot": `Soltar en`,
  "endDragKeyboard": `Arrastrando. Pulse Intro para cancelar el arrastre.`,
  "endDragTouch": `Arrastrando. Pulse dos veces para cancelar el arrastre.`,
  "endDragVirtual": `Arrastrando. Haga clic para cancelar el arrastre.`,
  "insertAfter": (args) => `Insertar después de ${args.itemText}`,
  "insertBefore": (args) => `Insertar antes de ${args.itemText}`,
  "insertBetween": (args) => `Insertar entre ${args.beforeItemText} y ${args.afterItemText}`
};

// node_modules/@react-aria/dnd/dist/et-EE.mjs
var $110bdd83348ecbc0$exports = {};
$110bdd83348ecbc0$exports = {
  "dragDescriptionKeyboard": `Lohistamise alustamiseks vajutage klahvi Enter.`,
  "dragDescriptionKeyboardAlt": `Lohistamise alustamiseks vajutage klahvikombinatsiooni Alt + Enter.`,
  "dragDescriptionLongPress": `Vajutage pikalt lohistamise alustamiseks.`,
  "dragDescriptionTouch": `Topeltpuudutage lohistamise alustamiseks.`,
  "dragDescriptionVirtual": `Klõpsake lohistamise alustamiseks.`,
  "dragItem": (args) => `Lohista ${args.itemText}`,
  "dragSelectedItems": (args, formatter) => `Lohista ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} valitud üksust`,
    other: () => `${formatter.number(args.count)} valitud üksust`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} valitud üksuse`,
    other: () => `${formatter.number(args.count)} valitud üksuse`
  })} lohistamiseks vajutage sisestusklahvi Enter.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Lohistamiseks vajutage klahvikombinatsiooni Alt + Enter ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} valitud üksuse`,
    other: () => `${formatter.number(args.count)} valitud üksuse`
  })} jaoks.`,
  "dragSelectedLongPress": (args, formatter) => `Pikk vajutus ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} valitud üksuse`,
    other: () => `${formatter.number(args.count)} valitud üksuse`
  })} lohistamiseks.`,
  "dragStartedKeyboard": `Alustati lohistamist. Kukutamise sihtmärgi juurde navigeerimiseks vajutage klahvi Tab, seejärel vajutage kukutamiseks klahvi Enter või loobumiseks klahvi Escape.`,
  "dragStartedTouch": `Alustati lohistamist. Navigeerige kukutamise sihtmärgi juurde ja topeltpuudutage kukutamiseks.`,
  "dragStartedVirtual": `Alustati lohistamist. Navigeerige kukutamise sihtmärgi juurde ja kukutamiseks klõpsake või vajutage klahvi Enter.`,
  "dropCanceled": `Lohistamisest loobuti.`,
  "dropComplete": `Lohistamine on tehtud.`,
  "dropDescriptionKeyboard": `Kukutamiseks vajutage klahvi Enter. Lohistamisest loobumiseks vajutage klahvi Escape.`,
  "dropDescriptionTouch": `Kukutamiseks topeltpuudutage.`,
  "dropDescriptionVirtual": `Kukutamiseks klõpsake.`,
  "dropIndicator": `lohistamise indikaator`,
  "dropOnItem": (args) => `Kukuta asukohta ${args.itemText}`,
  "dropOnRoot": `Kukuta asukohta`,
  "endDragKeyboard": `Lohistamine. Lohistamisest loobumiseks vajutage klahvi Enter.`,
  "endDragTouch": `Lohistamine. Lohistamisest loobumiseks topeltpuudutage.`,
  "endDragVirtual": `Lohistamine. Lohistamisest loobumiseks klõpsake.`,
  "insertAfter": (args) => `Sisesta ${args.itemText} järele`,
  "insertBefore": (args) => `Sisesta ${args.itemText} ette`,
  "insertBetween": (args) => `Sisesta ${args.beforeItemText} ja ${args.afterItemText} vahele`
};

// node_modules/@react-aria/dnd/dist/fi-FI.mjs
var $87d3ccd5e347c7cc$exports = {};
$87d3ccd5e347c7cc$exports = {
  "dragDescriptionKeyboard": `Aloita vetäminen painamalla Enter-näppäintä.`,
  "dragDescriptionKeyboardAlt": `Aloita vetäminen painamalla Alt + Enter -näppäinyhdistelmää.`,
  "dragDescriptionLongPress": `Aloita vetäminen pitämällä painettuna.`,
  "dragDescriptionTouch": `Aloita vetäminen kaksoisnapauttamalla.`,
  "dragDescriptionVirtual": `Aloita vetäminen napsauttamalla.`,
  "dragItem": (args) => `Vedä kohdetta ${args.itemText}`,
  "dragSelectedItems": (args, formatter) => `Vedä ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} valittua kohdetta`,
    other: () => `${formatter.number(args.count)} valittua kohdetta`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `Vedä painamalla Enter ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} valittu kohde`,
    other: () => `${formatter.number(args.count)} valittua kohdetta`
  })}.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Vedä painamalla Alt + Enter ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} valittu kohde`,
    other: () => `${formatter.number(args.count)} valittua kohdetta`
  })}.`,
  "dragSelectedLongPress": (args, formatter) => `Vedä pitämällä painettuna ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} valittu kohde`,
    other: () => `${formatter.number(args.count)} valittua kohdetta`
  })}.`,
  "dragStartedKeyboard": `Vetäminen aloitettu. Siirry pudotuskohteeseen painamalla sarkainnäppäintä ja sitten pudota painamalla Enter-näppäintä tai peruuta painamalla Escape-näppäintä.`,
  "dragStartedTouch": `Vetäminen aloitettu. Siirry pudotuskohteeseen ja pudota kaksoisnapauttamalla.`,
  "dragStartedVirtual": `Vetäminen aloitettu. Siirry pudotuskohteeseen ja pudota napsauttamalla tai painamalla Enter-näppäintä.`,
  "dropCanceled": `Pudotus peruutettu.`,
  "dropComplete": `Pudotus suoritettu.`,
  "dropDescriptionKeyboard": `Pudota painamalla Enter-näppäintä. Peruuta vetäminen painamalla Escape-näppäintä.`,
  "dropDescriptionTouch": `Pudota kaksoisnapauttamalla.`,
  "dropDescriptionVirtual": `Pudota napsauttamalla.`,
  "dropIndicator": `pudotuksen ilmaisin`,
  "dropOnItem": (args) => `Pudota kohteeseen ${args.itemText}`,
  "dropOnRoot": `Pudota kohteeseen`,
  "endDragKeyboard": `Vedetään. Peruuta vetäminen painamalla Enter-näppäintä.`,
  "endDragTouch": `Vedetään. Peruuta vetäminen kaksoisnapauttamalla.`,
  "endDragVirtual": `Vedetään. Peruuta vetäminen napsauttamalla.`,
  "insertAfter": (args) => `Lisää kohteen ${args.itemText} jälkeen`,
  "insertBefore": (args) => `Lisää ennen kohdetta ${args.itemText}`,
  "insertBetween": (args) => `Lisää kohteiden ${args.beforeItemText} ja ${args.afterItemText} väliin`
};

// node_modules/@react-aria/dnd/dist/fr-FR.mjs
var $a5de891427686596$exports = {};
$a5de891427686596$exports = {
  "dragDescriptionKeyboard": `Appuyez sur Entrée pour commencer le déplacement.`,
  "dragDescriptionKeyboardAlt": `Appuyez sur Alt + Entrée pour commencer à faire glisser.`,
  "dragDescriptionLongPress": `Appuyez de manière prolongée pour commencer à faire glisser.`,
  "dragDescriptionTouch": `Touchez deux fois pour commencer le déplacement.`,
  "dragDescriptionVirtual": `Cliquez pour commencer le déplacement.`,
  "dragItem": (args) => `Déplacer ${args.itemText}`,
  "dragSelectedItems": (args, formatter) => `Déplacer ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} élément sélectionné`,
    other: () => `${formatter.number(args.count)} éléments sélectionnés`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `Appuyez sur Entrée pour faire glisser ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} élément sélectionné`,
    other: () => `${formatter.number(args.count)} éléments sélectionnés`
  })}.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Appuyez sur Alt + Entrée pour faire glisser ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} élément sélectionné`,
    other: () => `${formatter.number(args.count)} éléments sélectionnés`
  })}.`,
  "dragSelectedLongPress": (args, formatter) => `Appuyez de manière prolongée pour faire glisser ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} élément sélectionné`,
    other: () => `${formatter.number(args.count)} éléments sélectionnés`
  })}.`,
  "dragStartedKeyboard": `Déplacement commencé. Appuyez sur Tabulation pour accéder à une cible de dépôt, puis appuyez sur Entrée pour déposer, ou appuyez sur Échap pour annuler.`,
  "dragStartedTouch": `Déplacement commencé. Accédez à une cible de dépôt, puis touchez deux fois pour déposer.`,
  "dragStartedVirtual": `Déplacement commencé. Accédez à une cible de dépôt, puis cliquez ou appuyez sur Entrée pour déposer.`,
  "dropCanceled": `Dépôt annulé.`,
  "dropComplete": `Dépôt terminé.`,
  "dropDescriptionKeyboard": `Appuyez sur Entrée pour déposer. Appuyez sur Échap pour annuler le déplacement.`,
  "dropDescriptionTouch": `Touchez deux fois pour déposer.`,
  "dropDescriptionVirtual": `Cliquez pour déposer.`,
  "dropIndicator": `indicateur de dépôt`,
  "dropOnItem": (args) => `Déposer sur ${args.itemText}`,
  "dropOnRoot": `Déposer sur`,
  "endDragKeyboard": `Déplacement. Appuyez sur Entrée pour annuler le déplacement.`,
  "endDragTouch": `Déplacement. Touchez deux fois pour annuler le déplacement.`,
  "endDragVirtual": `Déplacement. Cliquez pour annuler le déplacement.`,
  "insertAfter": (args) => `Insérer après ${args.itemText}`,
  "insertBefore": (args) => `Insérer avant ${args.itemText}`,
  "insertBetween": (args) => `Insérer entre ${args.beforeItemText} et ${args.afterItemText}`
};

// node_modules/@react-aria/dnd/dist/he-IL.mjs
var $ad7f4c66d85b4494$exports = {};
$ad7f4c66d85b4494$exports = {
  "dragDescriptionKeyboard": `הקש על Enter כדי להתחיל לגרור.`,
  "dragDescriptionKeyboardAlt": `הקש Alt + Enter כדי להתחיל לגרור.`,
  "dragDescriptionLongPress": `לחץ לחיצה ארוכה כדי להתחיל לגרור.`,
  "dragDescriptionTouch": `הקש פעמיים כדי להתחיל בגרירה.`,
  "dragDescriptionVirtual": `לחץ כדי להתחיל לגרור.`,
  "dragItem": (args) => `גרור את ${args.itemText}`,
  "dragSelectedItems": (args, formatter) => `גרור ${formatter.plural(args.count, {
    one: () => `פריט נבחר ${formatter.number(args.count)}`,
    other: () => `${formatter.number(args.count)} פריטים שנבחרו`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `הקש על Enter כדי לגרור ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} פריט שנבחר`,
    other: () => `${formatter.number(args.count)} פריטים שנבחרו`
  })}.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `הקש Alt + Enter כדי לגרור ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} פריט שנבחר`,
    other: () => `${formatter.number(args.count)} פריטים שנבחרו`
  })}.`,
  "dragSelectedLongPress": (args, formatter) => `לחץ לחיצה ארוכה כדי לגרור ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} פריט שנבחר`,
    other: () => `${formatter.number(args.count)} פריטים שנבחרו`
  })}.`,
  "dragStartedKeyboard": `התחלת לגרור. הקש על Tab כדי לנווט לנקודת הגרירה ולאחר מכן הקש על Enter כדי לשחרר או על Escape כדי לבטל.`,
  "dragStartedTouch": `התחלת לגרור. נווט לנקודת השחרור ולאחר מכן הקש פעמיים כדי לשחרר.`,
  "dragStartedVirtual": `התחלת לגרור. נווט לנקודת השחרור ולאחר מכן לחץ או הקש על Enter כדי לשחרר.`,
  "dropCanceled": `השחרור בוטל.`,
  "dropComplete": `השחרור הושלם.`,
  "dropDescriptionKeyboard": `הקש על Enter כדי לשחרר. הקש על Escape כדי לבטל את הגרירה.`,
  "dropDescriptionTouch": `הקש פעמיים כדי לשחרר.`,
  "dropDescriptionVirtual": `לחץ כדי לשחרר.`,
  "dropIndicator": `מחוון שחרור`,
  "dropOnItem": (args) => `שחרר על ${args.itemText}`,
  "dropOnRoot": `שחרר על`,
  "endDragKeyboard": `גורר. הקש על Enter כדי לבטל את הגרירה.`,
  "endDragTouch": `גורר. הקש פעמיים כדי לבטל את הגרירה.`,
  "endDragVirtual": `גורר. לחץ כדי לבטל את הגרירה.`,
  "insertAfter": (args) => `הוסף אחרי ${args.itemText}`,
  "insertBefore": (args) => `הוסף לפני ${args.itemText}`,
  "insertBetween": (args) => `הוסף בין ${args.beforeItemText} לבין ${args.afterItemText}`
};

// node_modules/@react-aria/dnd/dist/hr-HR.mjs
var $4aa59f3c6a796cae$exports = {};
$4aa59f3c6a796cae$exports = {
  "dragDescriptionKeyboard": `Pritisnite Enter da biste počeli povlačiti.`,
  "dragDescriptionKeyboardAlt": `Pritisnite Alt + Enter za početak povlačenja.`,
  "dragDescriptionLongPress": `Dugo pritisnite za početak povlačenja.`,
  "dragDescriptionTouch": `Dvaput dodirnite da biste počeli povlačiti.`,
  "dragDescriptionVirtual": `Kliknite da biste počeli povlačiti.`,
  "dragItem": (args) => `Povucite stavku ${args.itemText}`,
  "dragSelectedItems": (args, formatter) => `Povucite ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} odabranu stavku`,
    other: () => `ovoliko odabranih stavki: ${formatter.number(args.count)}`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `Pritisnite Enter za povlačenje ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} odabrana stavka`,
    other: () => `${formatter.number(args.count)} odabrane stavke`
  })}.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Pritisnite Alt + Enter za povlačenje ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} odabrana stavka`,
    other: () => `${formatter.number(args.count)} odabrane stavke`
  })}.`,
  "dragSelectedLongPress": (args, formatter) => `Dugo pritisnite za povlačenje ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} odabrana stavka`,
    other: () => `${formatter.number(args.count)} odabrane stavke`
  })}.`,
  "dragStartedKeyboard": `Počeli ste povlačiti. Pritisnite tipku tabulatora da biste došli do cilja ispuštanja, a zatim Enter da biste ispustili stavku ili Escape da biste prekinuli povlačenje.`,
  "dragStartedTouch": `Počeli ste povlačiti. Dođite do cilja ispuštanja, a zatim dvaput dodirnite da biste ispustili stavku.`,
  "dragStartedVirtual": `Počeli ste povlačiti. Dođite do cilja ispuštanja, a zatim kliknite ili pritisnite Enter da biste ispustili stavku.`,
  "dropCanceled": `Povlačenje je prekinuto.`,
  "dropComplete": `Ispuštanje je dovršeno.`,
  "dropDescriptionKeyboard": `Pritisnite Enter da biste ispustili stavku. Pritisnite Escape da biste prekinuli povlačenje.`,
  "dropDescriptionTouch": `Dvaput dodirnite da biste ispustili stavku.`,
  "dropDescriptionVirtual": `Kliknite da biste ispustili stavku.`,
  "dropIndicator": `pokazatelj ispuštanja`,
  "dropOnItem": (args) => `Ispustite na stavku ${args.itemText}`,
  "dropOnRoot": `Ispustite na`,
  "endDragKeyboard": `Povlačenje. Pritisnite Enter da biste prekinuli povlačenje.`,
  "endDragTouch": `Povlačenje. Dvaput dodirnite da biste prekinuli povlačenje.`,
  "endDragVirtual": `Povlačenje. Kliknite da biste prekinuli povlačenje.`,
  "insertAfter": (args) => `Umetnite iza stavke ${args.itemText}`,
  "insertBefore": (args) => `Ispustite ispred stavke ${args.itemText}`,
  "insertBetween": (args) => `Umetnite između stavki ${args.beforeItemText} i ${args.afterItemText}`
};

// node_modules/@react-aria/dnd/dist/hu-HU.mjs
var $d8d3646556c40586$exports = {};
$d8d3646556c40586$exports = {
  "dragDescriptionKeyboard": `Nyomja le az Enter billentyűt a húzás megkezdéséhez.`,
  "dragDescriptionKeyboardAlt": `Nyomja le az Alt + Enter billentyűket a húzás megkezdéséhez.`,
  "dragDescriptionLongPress": `Hosszan nyomja meg a húzás elindításához.`,
  "dragDescriptionTouch": `Koppintson duplán a húzás megkezdéséhez.`,
  "dragDescriptionVirtual": `Kattintson a húzás megkezdéséhez.`,
  "dragItem": (args) => `${args.itemText} húzása`,
  "dragSelectedItems": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} kijelölt elem`,
    other: () => `${formatter.number(args.count)} kijelölt elem`
  })} húzása`,
  "dragSelectedKeyboard": (args, formatter) => `Nyomja meg az Entert ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} kijelölt elem`,
    other: () => `${formatter.number(args.count)} kijelölt elem`
  })} húzásához.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Nyomja meg az Alt + Enter billentyűket ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} kijelölt elem`,
    other: () => `${formatter.number(args.count)} kijelölt elem`
  })} húzásához.`,
  "dragSelectedLongPress": (args, formatter) => `Tartsa lenyomva hosszan ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} kijelölt elem`,
    other: () => `${formatter.number(args.count)} kijelölt elem`
  })} húzásához.`,
  "dragStartedKeyboard": `Húzás megkezdve. Nyomja le a Tab billentyűt az elengedési célhoz navigálásához, majd nyomja le az Enter billentyűt az elengedéshez, vagy nyomja le az Escape billentyűt a megszakításhoz.`,
  "dragStartedTouch": `Húzás megkezdve. Navigáljon egy elengedési célhoz, majd koppintson duplán az elengedéshez.`,
  "dragStartedVirtual": `Húzás megkezdve. Navigáljon egy elengedési célhoz, majd kattintson vagy nyomja le az Enter billentyűt az elengedéshez.`,
  "dropCanceled": `Elengedés megszakítva.`,
  "dropComplete": `Elengedés teljesítve.`,
  "dropDescriptionKeyboard": `Nyomja le az Enter billentyűt az elengedéshez. Nyomja le az Escape billentyűt a húzás megszakításához.`,
  "dropDescriptionTouch": `Koppintson duplán az elengedéshez.`,
  "dropDescriptionVirtual": `Kattintson az elengedéshez.`,
  "dropIndicator": `elengedésjelző`,
  "dropOnItem": (args) => `Elengedés erre: ${args.itemText}`,
  "dropOnRoot": `Elengedés erre:`,
  "endDragKeyboard": `Húzás folyamatban. Nyomja le az Enter billentyűt a húzás megszakításához.`,
  "endDragTouch": `Húzás folyamatban. Koppintson duplán a húzás megszakításához.`,
  "endDragVirtual": `Húzás folyamatban. Kattintson a húzás megszakításához.`,
  "insertAfter": (args) => `Beszúrás ${args.itemText} után`,
  "insertBefore": (args) => `Beszúrás ${args.itemText} elé`,
  "insertBetween": (args) => `Beszúrás ${args.beforeItemText} és ${args.afterItemText} közé`
};

// node_modules/@react-aria/dnd/dist/it-IT.mjs
var $982d558b45395246$exports = {};
$982d558b45395246$exports = {
  "dragDescriptionKeyboard": `Premi Invio per iniziare a trascinare.`,
  "dragDescriptionKeyboardAlt": `Premi Alt + Invio per iniziare a trascinare.`,
  "dragDescriptionLongPress": `Premi a lungo per iniziare a trascinare.`,
  "dragDescriptionTouch": `Tocca due volte per iniziare a trascinare.`,
  "dragDescriptionVirtual": `Fai clic per iniziare a trascinare.`,
  "dragItem": (args) => `Trascina ${args.itemText}`,
  "dragSelectedItems": (args, formatter) => `Trascina ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} altro elemento selezionato`,
    other: () => `${formatter.number(args.count)} altri elementi selezionati`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `Premi Invio per trascinare ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} elemento selezionato`,
    other: () => `${formatter.number(args.count)} elementi selezionati`
  })}.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Premi Alt + Invio per trascinare ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} elemento selezionato`,
    other: () => `${formatter.number(args.count)} elementi selezionati`
  })}.`,
  "dragSelectedLongPress": (args, formatter) => `Premi a lungo per trascinare ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} elemento selezionato`,
    other: () => `${formatter.number(args.count)} elementi selezionati`
  })}.`,
  "dragStartedKeyboard": `Hai iniziato a trascinare. Premi Tab per arrivare sull’area di destinazione, quindi premi Invio per rilasciare o Esc per annullare.`,
  "dragStartedTouch": `Hai iniziato a trascinare. Arriva sull’area di destinazione, quindi tocca due volte per rilasciare.`,
  "dragStartedVirtual": `Hai iniziato a trascinare. Arriva sull’area di destinazione, quindi fai clic o premi Invio per rilasciare.`,
  "dropCanceled": `Rilascio annullato.`,
  "dropComplete": `Rilascio completato.`,
  "dropDescriptionKeyboard": `Premi Invio per rilasciare. Premi Esc per annullare.`,
  "dropDescriptionTouch": `Tocca due volte per rilasciare.`,
  "dropDescriptionVirtual": `Fai clic per rilasciare.`,
  "dropIndicator": `indicatore di rilascio`,
  "dropOnItem": (args) => `Rilascia su ${args.itemText}`,
  "dropOnRoot": `Rilascia su`,
  "endDragKeyboard": `Trascinamento. Premi Invio per annullare.`,
  "endDragTouch": `Trascinamento. Tocca due volte per annullare.`,
  "endDragVirtual": `Trascinamento. Fai clic per annullare.`,
  "insertAfter": (args) => `Inserisci dopo ${args.itemText}`,
  "insertBefore": (args) => `Inserisci prima di ${args.itemText}`,
  "insertBetween": (args) => `Inserisci tra ${args.beforeItemText} e ${args.afterItemText}`
};

// node_modules/@react-aria/dnd/dist/ja-JP.mjs
var $6a0cf387b9de036c$exports = {};
$6a0cf387b9de036c$exports = {
  "dragDescriptionKeyboard": `Enter キーを押してドラッグを開始してください。`,
  "dragDescriptionKeyboardAlt": `Alt+Enter キーを押してドラッグを開始します。`,
  "dragDescriptionLongPress": `長押ししてドラッグを開始します。`,
  "dragDescriptionTouch": `ダブルタップしてドラッグを開始します。`,
  "dragDescriptionVirtual": `クリックしてドラッグを開始します。`,
  "dragItem": (args) => `${args.itemText} をドラッグ`,
  "dragSelectedItems": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} 個の選択項目`,
    other: () => `${formatter.number(args.count)} 個の選択項目`
  })} をドラッグ`,
  "dragSelectedKeyboard": (args, formatter) => `Enter キーを押して、${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} 選択した項目`,
    other: () => `${formatter.number(args.count)} 選択した項目`
  })}をドラッグします。`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Alt+Enter キーを押して、${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} 選択した項目`,
    other: () => `${formatter.number(args.count)} 選択した項目`
  })}をドラッグします。`,
  "dragSelectedLongPress": (args, formatter) => `長押しして、${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} 選択した項目`,
    other: () => `${formatter.number(args.count)} 選択した項目`
  })}をドラッグします。`,
  "dragStartedKeyboard": `ドラッグを開始します。Tab キーを押してドロップターゲットにいどうし、Enter キーを押してドロップするか、Esc キーを押してキャンセルします。`,
  "dragStartedTouch": `ドラッグを開始しました。ドロップのターゲットに移動し、ダブルタップしてドロップします。`,
  "dragStartedVirtual": `ドラッグを開始しました。ドロップのターゲットに移動し、クリックまたは Enter キーを押してドロップします。`,
  "dropCanceled": `ドロップがキャンセルされました。`,
  "dropComplete": `ドロップが完了しました。`,
  "dropDescriptionKeyboard": `Enter キーを押してドロップします。Esc キーを押してドラッグをキャンセルします。`,
  "dropDescriptionTouch": `ダブルタップしてドロップします。`,
  "dropDescriptionVirtual": `クリックしてドロップします。`,
  "dropIndicator": `ドロップインジケーター`,
  "dropOnItem": (args) => `${args.itemText} にドロップ`,
  "dropOnRoot": `ドロップ場所`,
  "endDragKeyboard": `ドラッグしています。Enter キーを押してドラッグをキャンセルします。`,
  "endDragTouch": `ドラッグしています。ダブルタップしてドラッグをキャンセルします。`,
  "endDragVirtual": `ドラッグしています。クリックしてドラッグをキャンセルします。`,
  "insertAfter": (args) => `${args.itemText} の後に挿入`,
  "insertBefore": (args) => `${args.itemText} の前に挿入`,
  "insertBetween": (args) => `${args.beforeItemText} と ${args.afterItemText} の間に挿入`
};

// node_modules/@react-aria/dnd/dist/ko-KR.mjs
var $a97fefa2956f4bcb$exports = {};
$a97fefa2956f4bcb$exports = {
  "dragDescriptionKeyboard": `드래그를 시작하려면 Enter를 누르세요.`,
  "dragDescriptionKeyboardAlt": `드래그를 시작하려면 Alt + Enter를 누르십시오.`,
  "dragDescriptionLongPress": `드래그를 시작하려면 길게 누르십시오.`,
  "dragDescriptionTouch": `드래그를 시작하려면 더블 탭하세요.`,
  "dragDescriptionVirtual": `드래그를 시작하려면 클릭하세요.`,
  "dragItem": (args) => `${args.itemText} 드래그`,
  "dragSelectedItems": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)}개 선택 항목`,
    other: () => `${formatter.number(args.count)}개 선택 항목`
  })} 드래그`,
  "dragSelectedKeyboard": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)}개 선택 항목`,
    other: () => `${formatter.number(args.count)}개 선택 항목`
  })}을 드래그하려면 Enter를 누르십시오.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)}개 선택 항목`,
    other: () => `${formatter.number(args.count)}개 선택 항목`
  })}을 드래그하려면 Alt + Enter를 누르십시오.`,
  "dragSelectedLongPress": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)}개 선택 항목`,
    other: () => `${formatter.number(args.count)}개 선택 항목`
  })}을 드래그하려면 길게 누르십시오.`,
  "dragStartedKeyboard": `드래그가 시작되었습니다. Tab을 눌러 드롭 대상으로 이동한 다음 Enter를 눌러 드롭하거나 Esc를 눌러 취소하세요.`,
  "dragStartedTouch": `드래그가 시작되었습니다. 드롭 대상으로 이동한 다음 더블 탭하여 드롭하세요.`,
  "dragStartedVirtual": `드래그가 시작되었습니다. 드롭 대상으로 이동한 다음 클릭하거나 Enter를 눌러 드롭하세요.`,
  "dropCanceled": `드롭이 취소되었습니다.`,
  "dropComplete": `드롭이 완료되었습니다.`,
  "dropDescriptionKeyboard": `드롭하려면 Enter를 누르세요. 드래그를 취소하려면 Esc를 누르세요.`,
  "dropDescriptionTouch": `더블 탭하여 드롭하세요.`,
  "dropDescriptionVirtual": `드롭하려면 클릭하세요.`,
  "dropIndicator": `드롭 표시기`,
  "dropOnItem": (args) => `${args.itemText}에 드롭`,
  "dropOnRoot": `드롭 대상`,
  "endDragKeyboard": `드래그 중입니다. 드래그를 취소하려면 Enter를 누르세요.`,
  "endDragTouch": `드래그 중입니다. 드래그를 취소하려면 더블 탭하세요.`,
  "endDragVirtual": `드래그 중입니다. 드래그를 취소하려면 클릭하세요.`,
  "insertAfter": (args) => `${args.itemText} 이후에 삽입`,
  "insertBefore": (args) => `${args.itemText} 이전에 삽입`,
  "insertBetween": (args) => `${args.beforeItemText} 및 ${args.afterItemText} 사이에 삽입`
};

// node_modules/@react-aria/dnd/dist/lt-LT.mjs
var $5fb5837f94e1c150$exports = {};
$5fb5837f94e1c150$exports = {
  "dragDescriptionKeyboard": `Paspauskite „Enter“, kad pradėtumėte vilkti.`,
  "dragDescriptionKeyboardAlt": `Paspauskite „Alt + Enter“, kad pradėtumėte vilkti.`,
  "dragDescriptionLongPress": `Palaikykite nuspaudę, kad pradėtumėte vilkti.`,
  "dragDescriptionTouch": `Palieskite dukart, kad pradėtumėte vilkti.`,
  "dragDescriptionVirtual": `Spustelėkite, kad pradėtumėte vilkti.`,
  "dragItem": (args) => `Vilkti ${args.itemText}`,
  "dragSelectedItems": (args, formatter) => `Vilkti ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} pasirinktą elementą`,
    other: () => `${formatter.number(args.count)} pasirinktus elementus`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `Paspauskite „Enter“, jei norite nuvilkti ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} pasirinktą elementą`,
    other: () => `${formatter.number(args.count)} pasirinktus elementus`
  })}.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Paspauskite „Alt + Enter“, kad nuvilktumėte ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} pasirinktą elementą`,
    other: () => `${formatter.number(args.count)} pasirinktus elementus`
  })}.`,
  "dragSelectedLongPress": (args, formatter) => `Nuspaudę palaikykite, kad nuvilktumėte ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} pasirinktą elementą`,
    other: () => `${formatter.number(args.count)} pasirinktus elementus`
  })}.`,
  "dragStartedKeyboard": `Pradėta vilkti. Paspauskite „Tab“, kad pereitumėte į tiesioginę paskirties vietą, tada paspauskite „Enter“, kad numestumėte, arba „Escape“, kad atšauktumėte.`,
  "dragStartedTouch": `Pradėta vilkti. Eikite į tiesioginę paskirties vietą, tada palieskite dukart, kad numestumėte.`,
  "dragStartedVirtual": `Pradėta vilkti. Eikite į tiesioginę paskirties vietą ir spustelėkite arba paspauskite „Enter“, kad numestumėte.`,
  "dropCanceled": `Numetimas atšauktas.`,
  "dropComplete": `Numesta.`,
  "dropDescriptionKeyboard": `Paspauskite „Enter“, kad numestumėte. Paspauskite „Escape“, kad atšauktumėte vilkimą.`,
  "dropDescriptionTouch": `Palieskite dukart, kad numestumėte.`,
  "dropDescriptionVirtual": `Spustelėkite, kad numestumėte.`,
  "dropIndicator": `numetimo indikatorius`,
  "dropOnItem": (args) => `Numesti ant ${args.itemText}`,
  "dropOnRoot": `Numesti ant`,
  "endDragKeyboard": `Velkama. Paspauskite „Enter“, kad atšauktumėte vilkimą.`,
  "endDragTouch": `Velkama. Spustelėkite dukart, kad atšauktumėte vilkimą.`,
  "endDragVirtual": `Velkama. Spustelėkite, kad atšauktumėte vilkimą.`,
  "insertAfter": (args) => `Įterpti po ${args.itemText}`,
  "insertBefore": (args) => `Įterpti prieš ${args.itemText}`,
  "insertBetween": (args) => `Įterpti tarp ${args.beforeItemText} ir ${args.afterItemText}`
};

// node_modules/@react-aria/dnd/dist/lv-LV.mjs
var $5b2e5709864cc922$exports = {};
$5b2e5709864cc922$exports = {
  "dragDescriptionKeyboard": `Nospiediet Enter, lai sāktu vilkšanu.`,
  "dragDescriptionKeyboardAlt": `Nospiediet taustiņu kombināciju Alt+Enter, lai sāktu vilkšanu.`,
  "dragDescriptionLongPress": `Turiet nospiestu, lai sāktu vilkšanu.`,
  "dragDescriptionTouch": `Veiciet dubultskārienu, lai sāktu vilkšanu.`,
  "dragDescriptionVirtual": `Noklikšķiniet, lai sāktu vilkšanu.`,
  "dragItem": (args) => `Velciet ${args.itemText}`,
  "dragSelectedItems": (args, formatter) => `Velciet ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} atlasīto vienumu`,
    other: () => `${formatter.number(args.count)} atlasītos vienumus`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `Nospiediet taustiņu Enter, lai vilktu ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} atlasīto vienumu`,
    other: () => `${formatter.number(args.count)} atlasītos vienumus`
  })}.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Nospiediet taustiņu kombināciju Alt+Enter, lai vilktu ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} atlasīto vienumu`,
    other: () => `${formatter.number(args.count)} atlasītos vienumus`
  })}.`,
  "dragSelectedLongPress": (args, formatter) => `Turiet nospiestu, lai vilktu ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} atlasīto vienumu`,
    other: () => `${formatter.number(args.count)} atlasītos vienumus`
  })}.`,
  "dragStartedKeyboard": `Uzsākta vilkšana. Nospiediet taustiņu Tab, lai pārietu uz nomešanas mērķi, pēc tam nospiediet Enter, lai nomestu, vai nospiediet Escape, lai atceltu.`,
  "dragStartedTouch": `Uzsākta vilkšana. Pārejiet uz nomešanas mērķi, pēc tam veiciet dubultskārienu, lai nomestu.`,
  "dragStartedVirtual": `Uzsākta vilkšana. Pārejiet uz nomešanas mērķi, pēc tam nospiediet Enter, lai nomestu.`,
  "dropCanceled": `Nomešana atcelta.`,
  "dropComplete": `Nomešana pabeigta.`,
  "dropDescriptionKeyboard": `Nospiediet Enter, lai nomestu. Nospiediet Escape, lai atceltu vilkšanu.`,
  "dropDescriptionTouch": `Veiciet dubultskārienu, lai nomestu.`,
  "dropDescriptionVirtual": `Noklikšķiniet, lai nomestu.`,
  "dropIndicator": `nomešanas indikators`,
  "dropOnItem": (args) => `Nometiet uz ${args.itemText}`,
  "dropOnRoot": `Nometiet uz`,
  "endDragKeyboard": `Notiek vilkšana. Nospiediet Enter, lai atceltu vilkšanu.`,
  "endDragTouch": `Notiek vilkšana. Veiciet dubultskārienu, lai atceltu vilkšanu.`,
  "endDragVirtual": `Notiek vilkšana. Noklikšķiniet, lai atceltu vilkšanu.`,
  "insertAfter": (args) => `Ievietojiet pēc ${args.itemText}`,
  "insertBefore": (args) => `Ievietojiet pirms ${args.itemText}`,
  "insertBetween": (args) => `Ievietojiet starp ${args.beforeItemText} un ${args.afterItemText}`
};

// node_modules/@react-aria/dnd/dist/nb-NO.mjs
var $ee15bb8efb18cc69$exports = {};
$ee15bb8efb18cc69$exports = {
  "dragDescriptionKeyboard": `Trykk på Enter for å begynne å dra.`,
  "dragDescriptionKeyboardAlt": `Trykk på Alt + Enter for å begynne å dra.`,
  "dragDescriptionLongPress": `Trykk lenge for å begynne å dra.`,
  "dragDescriptionTouch": `Dobbelttrykk for å begynne å dra.`,
  "dragDescriptionVirtual": `Klikk for å begynne å dra.`,
  "dragItem": (args) => `Dra ${args.itemText}`,
  "dragSelectedItems": (args, formatter) => `Dra ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} merket element`,
    other: () => `${formatter.number(args.count)} merkede elementer`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `Trykk Enter for å dra ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} valgt element`,
    other: () => `${formatter.number(args.count)} valgte elementer`
  })}.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Trykk på Alt + Enter for å dra ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} valgt element`,
    other: () => `${formatter.number(args.count)} valgte elementer`
  })}.`,
  "dragSelectedLongPress": (args, formatter) => `Trykk lenge for å dra ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} valgt element`,
    other: () => `${formatter.number(args.count)} valgte elementer`
  })}.`,
  "dragStartedKeyboard": `Begynte å dra. Trykk på Tab for å navigere til et mål, og trykk deretter på Enter for å slippe eller på Esc for å avbryte.`,
  "dragStartedTouch": `Begynte å dra. Naviger til et mål, og dobbelttrykk for å slippe.`,
  "dragStartedVirtual": `Begynte å dra. Naviger til et mål, og klikk eller trykk på Enter for å slippe.`,
  "dropCanceled": `Avbrøt slipping.`,
  "dropComplete": `Slippingen er fullført.`,
  "dropDescriptionKeyboard": `Trykk på Enter for å slippe. Trykk på Esc hvis du vil avbryte draingen.`,
  "dropDescriptionTouch": `Dobbelttrykk for å slippe.`,
  "dropDescriptionVirtual": `Klikk for å slippe.`,
  "dropIndicator": `slippeindikator`,
  "dropOnItem": (args) => `Slipp på ${args.itemText}`,
  "dropOnRoot": `Slipp på`,
  "endDragKeyboard": `Drar. Trykk på Enter hvis du vil avbryte.`,
  "endDragTouch": `Drar. Dobbelttrykk hvis du vil avbryte.`,
  "endDragVirtual": `Drar. Klikk hvis du vil avbryte.`,
  "insertAfter": (args) => `Sett inn etter ${args.itemText}`,
  "insertBefore": (args) => `Sett inn før ${args.itemText}`,
  "insertBetween": (args) => `Sett inn mellom ${args.beforeItemText} og ${args.afterItemText}`
};

// node_modules/@react-aria/dnd/dist/nl-NL.mjs
var $1daf2d4602e26ac4$exports = {};
$1daf2d4602e26ac4$exports = {
  "dragDescriptionKeyboard": `Druk op Enter om te slepen.`,
  "dragDescriptionKeyboardAlt": `Druk op Alt + Enter om te slepen.`,
  "dragDescriptionLongPress": `Houd lang ingedrukt om te slepen.`,
  "dragDescriptionTouch": `Dubbeltik om te slepen.`,
  "dragDescriptionVirtual": `Klik om met slepen te starten.`,
  "dragItem": (args) => `${args.itemText} slepen`,
  "dragSelectedItems": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} geselecteerd item`,
    other: () => `${formatter.number(args.count)} geselecteerde items`
  })} slepen`,
  "dragSelectedKeyboard": (args, formatter) => `Druk op Enter om ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} geselecteerd item`,
    other: () => `${formatter.number(args.count)} geselecteerde items`
  })} te slepen.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Druk op Alt + Enter om ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} geselecteerd item`,
    other: () => `${formatter.number(args.count)} geselecteerde items`
  })} te slepen.`,
  "dragSelectedLongPress": (args, formatter) => `Houd lang ingedrukt om ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} geselecteerd item`,
    other: () => `${formatter.number(args.count)} geselecteerde items`
  })} te slepen.`,
  "dragStartedKeyboard": `Begonnen met slepen. Druk op Tab om naar een locatie te gaan. Druk dan op Enter om neer te zetten, of op Esc om te annuleren.`,
  "dragStartedTouch": `Begonnen met slepen. Ga naar de gewenste locatie en dubbeltik om neer te zetten.`,
  "dragStartedVirtual": `Begonnen met slepen. Ga naar de gewenste locatie en klik of druk op Enter om neer te zetten.`,
  "dropCanceled": `Neerzetten geannuleerd.`,
  "dropComplete": `Neerzetten voltooid.`,
  "dropDescriptionKeyboard": `Druk op Enter om neer te zetten. Druk op Esc om het slepen te annuleren.`,
  "dropDescriptionTouch": `Dubbeltik om neer te zetten.`,
  "dropDescriptionVirtual": `Klik om neer te zetten.`,
  "dropIndicator": `aanwijzer voor neerzetten`,
  "dropOnItem": (args) => `Neerzetten op ${args.itemText}`,
  "dropOnRoot": `Neerzetten op`,
  "endDragKeyboard": `Bezig met slepen. Druk op Enter om te annuleren.`,
  "endDragTouch": `Bezig met slepen. Dubbeltik om te annuleren.`,
  "endDragVirtual": `Bezig met slepen. Klik om te annuleren.`,
  "insertAfter": (args) => `Plaatsen na ${args.itemText}`,
  "insertBefore": (args) => `Plaatsen vóór ${args.itemText}`,
  "insertBetween": (args) => `Plaatsen tussen ${args.beforeItemText} en ${args.afterItemText}`
};

// node_modules/@react-aria/dnd/dist/pl-PL.mjs
var $7115429b0f60511f$exports = {};
$7115429b0f60511f$exports = {
  "dragDescriptionKeyboard": `Naciśnij Enter, aby rozpocząć przeciąganie.`,
  "dragDescriptionKeyboardAlt": `Naciśnij Alt + Enter, aby rozpocząć przeciąganie.`,
  "dragDescriptionLongPress": `Naciśnij i przytrzymaj, aby rozpocząć przeciąganie.`,
  "dragDescriptionTouch": `Dotknij dwukrotnie, aby rozpocząć przeciąganie.`,
  "dragDescriptionVirtual": `Kliknij, aby rozpocząć przeciąganie.`,
  "dragItem": (args) => `Przeciągnij ${args.itemText}`,
  "dragSelectedItems": (args, formatter) => `Przeciągnij ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} wybrany element`,
    other: () => `${formatter.number(args.count)} wybranych elementów`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `Naciśnij Enter, aby przeciągnąć ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} wybrany element`,
    other: () => `${formatter.number(args.count)} wybrane(-ych) elementy(-ów)`
  })}.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Naciśnij Alt + Enter, aby przeciągnąć ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} wybrany element`,
    other: () => `${formatter.number(args.count)} wybrane(-ych) elementy(-ów)`
  })}.`,
  "dragSelectedLongPress": (args, formatter) => `Naciśnij i przytrzymaj, aby przeciągnąć ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} wybrany element`,
    other: () => `${formatter.number(args.count)} wybrane(-ych) elementy(-ów)`
  })}.`,
  "dragStartedKeyboard": `Rozpoczęto przeciąganie. Naciśnij Tab, aby wybrać miejsce docelowe, a następnie naciśnij Enter, aby upuścić, lub Escape, aby anulować.`,
  "dragStartedTouch": `Rozpoczęto przeciąganie. Wybierz miejsce, w którym chcesz upuścić element, a następnie dotknij dwukrotnie, aby upuścić.F`,
  "dragStartedVirtual": `Rozpoczęto przeciąganie. Wybierz miejsce, w którym chcesz upuścić element, a następnie kliknij lub naciśnij Enter, aby upuścić.`,
  "dropCanceled": `Anulowano upuszczenie.`,
  "dropComplete": `Zakończono upuszczanie.`,
  "dropDescriptionKeyboard": `Naciśnij Enter, aby upuścić. Naciśnij Escape, aby anulować przeciągnięcie.`,
  "dropDescriptionTouch": `Dotknij dwukrotnie, aby upuścić.`,
  "dropDescriptionVirtual": `Kliknij, aby upuścić.`,
  "dropIndicator": `wskaźnik upuszczenia`,
  "dropOnItem": (args) => `Upuść na ${args.itemText}`,
  "dropOnRoot": `Upuść`,
  "endDragKeyboard": `Przeciąganie. Naciśnij Enter, aby anulować przeciągnięcie.`,
  "endDragTouch": `Przeciąganie. Kliknij dwukrotnie, aby anulować przeciągnięcie.`,
  "endDragVirtual": `Przeciąganie. Kliknij, aby anulować przeciąganie.`,
  "insertAfter": (args) => `Umieść za ${args.itemText}`,
  "insertBefore": (args) => `Umieść przed ${args.itemText}`,
  "insertBetween": (args) => `Umieść między ${args.beforeItemText} i ${args.afterItemText}`
};

// node_modules/@react-aria/dnd/dist/pt-BR.mjs
var $5edd453ae5d4a8bc$exports = {};
$5edd453ae5d4a8bc$exports = {
  "dragDescriptionKeyboard": `Pressione Enter para começar a arrastar.`,
  "dragDescriptionKeyboardAlt": `Pressione Alt + Enter para começar a arrastar.`,
  "dragDescriptionLongPress": `Pressione e segure para começar a arrastar.`,
  "dragDescriptionTouch": `Toque duas vezes para começar a arrastar.`,
  "dragDescriptionVirtual": `Clique para começar a arrastar.`,
  "dragItem": (args) => `Arrastar ${args.itemText}`,
  "dragSelectedItems": (args, formatter) => `Arrastar ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} item selecionado`,
    other: () => `${formatter.number(args.count)} itens selecionados`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `Pressione Enter para arrastar ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} o item selecionado`,
    other: () => `${formatter.number(args.count)} os itens selecionados`
  })}.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Pressione Alt + Enter para arrastar ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} o item selecionado`,
    other: () => `${formatter.number(args.count)} os itens selecionados`
  })}.`,
  "dragSelectedLongPress": (args, formatter) => `Pressione e segure para arrastar ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} o item selecionado`,
    other: () => `${formatter.number(args.count)} os itens selecionados`
  })}.`,
  "dragStartedKeyboard": `Comece a arrastar. Pressione Tab para navegar até um alvo e, em seguida, pressione Enter para soltar ou pressione Escape para cancelar.`,
  "dragStartedTouch": `Comece a arrastar. Navegue até um alvo e toque duas vezes para soltar.`,
  "dragStartedVirtual": `Comece a arrastar. Navegue até um alvo e clique ou pressione Enter para soltar.`,
  "dropCanceled": `Liberação cancelada.`,
  "dropComplete": `Liberação concluída.`,
  "dropDescriptionKeyboard": `Pressione Enter para soltar. Pressione Escape para cancelar.`,
  "dropDescriptionTouch": `Toque duas vezes para soltar.`,
  "dropDescriptionVirtual": `Clique para soltar.`,
  "dropIndicator": `indicador de liberação`,
  "dropOnItem": (args) => `Soltar em ${args.itemText}`,
  "dropOnRoot": `Soltar`,
  "endDragKeyboard": `Arrastando. Pressione Enter para cancelar.`,
  "endDragTouch": `Arrastando. Toque duas vezes para cancelar.`,
  "endDragVirtual": `Arrastando. Clique para cancelar.`,
  "insertAfter": (args) => `Inserir após ${args.itemText}`,
  "insertBefore": (args) => `Inserir antes de ${args.itemText}`,
  "insertBetween": (args) => `Inserir entre ${args.beforeItemText} e ${args.afterItemText}`
};

// node_modules/@react-aria/dnd/dist/pt-PT.mjs
var $5f431994f708535e$exports = {};
$5f431994f708535e$exports = {
  "dragDescriptionKeyboard": `Prima Enter para iniciar o arrasto.`,
  "dragDescriptionKeyboardAlt": `Prima Alt + Enter para iniciar o arrasto.`,
  "dragDescriptionLongPress": `Prima longamente para começar a arrastar.`,
  "dragDescriptionTouch": `Faça duplo toque para começar a arrastar.`,
  "dragDescriptionVirtual": `Clique para iniciar o arrasto.`,
  "dragItem": (args) => `Arrastar ${args.itemText}`,
  "dragSelectedItems": (args, formatter) => `Arrastar ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} item selecionado`,
    other: () => `${formatter.number(args.count)} itens selecionados`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `Prima Enter para arrastar ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} o item selecionado`,
    other: () => `${formatter.number(args.count)} os itens selecionados`
  })}.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Prima Alt + Enter para arrastar ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} o item selecionado`,
    other: () => `${formatter.number(args.count)} os itens selecionados`
  })}.`,
  "dragSelectedLongPress": (args, formatter) => `Prima longamente para arrastar ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} o item selecionado`,
    other: () => `${formatter.number(args.count)} os itens selecionados`
  })}.`,
  "dragStartedKeyboard": `Arrasto iniciado. Prima a tecla de tabulação para navegar para um destino para largar, e em seguida prima Enter para largar ou prima Escape para cancelar.`,
  "dragStartedTouch": `Arrasto iniciado. Navegue para um destino para largar, e em seguida faça duplo toque para largar.`,
  "dragStartedVirtual": `Arrasto iniciado. Navegue para um destino para largar, e em seguida clique ou prima Enter para largar.`,
  "dropCanceled": `Largar cancelado.`,
  "dropComplete": `Largar completo.`,
  "dropDescriptionKeyboard": `Prima Enter para largar. Prima Escape para cancelar o arrasto.`,
  "dropDescriptionTouch": `Faça duplo toque para largar.`,
  "dropDescriptionVirtual": `Clique para largar.`,
  "dropIndicator": `Indicador de largar`,
  "dropOnItem": (args) => `Largar em ${args.itemText}`,
  "dropOnRoot": `Largar em`,
  "endDragKeyboard": `A arrastar. Prima Enter para cancelar o arrasto.`,
  "endDragTouch": `A arrastar. Faça duplo toque para cancelar o arrasto.`,
  "endDragVirtual": `A arrastar. Clique para cancelar o arrasto.`,
  "insertAfter": (args) => `Inserir depois de ${args.itemText}`,
  "insertBefore": (args) => `Inserir antes de ${args.itemText}`,
  "insertBetween": (args) => `Inserir entre ${args.beforeItemText} e ${args.afterItemText}`
};

// node_modules/@react-aria/dnd/dist/ro-RO.mjs
var $107b5e2e45e971f1$exports = {};
$107b5e2e45e971f1$exports = {
  "dragDescriptionKeyboard": `Apăsați pe Enter pentru a începe glisarea.`,
  "dragDescriptionKeyboardAlt": `Apăsați pe Alt + Enter pentru a începe glisarea.`,
  "dragDescriptionLongPress": `Apăsați lung pentru a începe glisarea.`,
  "dragDescriptionTouch": `Atingeți de două ori pentru a începe să glisați.`,
  "dragDescriptionVirtual": `Faceți clic pentru a începe glisarea.`,
  "dragItem": (args) => `Glisați ${args.itemText}`,
  "dragSelectedItems": (args, formatter) => `Glisați ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} element selectat`,
    other: () => `${formatter.number(args.count)} elemente selectate`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `Apăsați pe Enter pentru a glisa ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} element selectat`,
    other: () => `${formatter.number(args.count)} elemente selectate`
  })}.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Apăsați pe Alt + Enter pentru a glisa ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} element selectat`,
    other: () => `${formatter.number(args.count)} elemente selectate`
  })}.`,
  "dragSelectedLongPress": (args, formatter) => `Apăsați lung pentru a glisa ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} element selectat`,
    other: () => `${formatter.number(args.count)} elemente selectate`
  })}.`,
  "dragStartedKeyboard": `A început glisarea. Apăsați pe Tab pentru a naviga la o țintă de fixare, apoi apăsați pe Enter pentru a fixa sau apăsați pe Escape pentru a anula glisarea.`,
  "dragStartedTouch": `A început glisarea. Navigați la o țintă de fixare, apoi atingeți de două ori pentru a fixa.`,
  "dragStartedVirtual": `A început glisarea. Navigați la o țintă de fixare, apoi faceți clic sau apăsați pe Enter pentru a fixa.`,
  "dropCanceled": `Fixare anulată.`,
  "dropComplete": `Fixare finalizată.`,
  "dropDescriptionKeyboard": `Apăsați pe Enter pentru a fixa. Apăsați pe Escape pentru a anula glisarea.`,
  "dropDescriptionTouch": `Atingeți de două ori pentru a fixa.`,
  "dropDescriptionVirtual": `Faceți clic pentru a fixa.`,
  "dropIndicator": `indicator de fixare`,
  "dropOnItem": (args) => `Fixați pe ${args.itemText}`,
  "dropOnRoot": `Fixare pe`,
  "endDragKeyboard": `Se glisează. Apăsați pe Enter pentru a anula glisarea.`,
  "endDragTouch": `Se glisează. Atingeți de două ori pentru a anula glisarea.`,
  "endDragVirtual": `Se glisează. Faceți clic pentru a anula glisarea.`,
  "insertAfter": (args) => `Inserați după ${args.itemText}`,
  "insertBefore": (args) => `Inserați înainte de ${args.itemText}`,
  "insertBetween": (args) => `Inserați între ${args.beforeItemText} și ${args.afterItemText}`
};

// node_modules/@react-aria/dnd/dist/ru-RU.mjs
var $d4b9c2f01c1892f7$exports = {};
$d4b9c2f01c1892f7$exports = {
  "dragDescriptionKeyboard": `Нажмите клавишу Enter для начала перетаскивания.`,
  "dragDescriptionKeyboardAlt": `Нажмите Alt + Enter, чтобы начать перетаскивать.`,
  "dragDescriptionLongPress": `Нажмите и удерживайте, чтобы начать перетаскивать.`,
  "dragDescriptionTouch": `Дважды нажмите для начала перетаскивания.`,
  "dragDescriptionVirtual": `Щелкните для начала перетаскивания.`,
  "dragItem": (args) => `Перетащить ${args.itemText}`,
  "dragSelectedItems": (args, formatter) => `Перетащить ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} выбранный элемент`,
    other: () => `${formatter.number(args.count)} выбранных элем`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `Нажмите Enter для перетаскивания ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} выбранного элемента`,
    other: () => `${formatter.number(args.count)} выбранных элементов`
  })}.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Нажмите Alt + Enter для перетаскивания ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} выбранного элемента`,
    other: () => `${formatter.number(args.count)} выбранных элементов`
  })}.`,
  "dragSelectedLongPress": (args, formatter) => `Нажмите и удерживайте для перетаскивания ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} выбранного элемента`,
    other: () => `${formatter.number(args.count)} выбранных элементов`
  })}.`,
  "dragStartedKeyboard": `Начато перетаскивание. Нажмите клавишу Tab для выбора цели, затем нажмите клавишу Enter, чтобы применить перетаскивание, или клавишу Escape для отмены действия.`,
  "dragStartedTouch": `Начато перетаскивание. Выберите цель, затем дважды нажмите, чтобы применить перетаскивание.`,
  "dragStartedVirtual": `Начато перетаскивание. Нажмите клавишу Tab для выбора цели, затем нажмите клавишу Enter, чтобы применить перетаскивание.`,
  "dropCanceled": `Перетаскивание отменено.`,
  "dropComplete": `Перетаскивание завершено.`,
  "dropDescriptionKeyboard": `Нажмите клавишу Enter, чтобы применить перетаскивание. Нажмите клавишу Escape для отмены.`,
  "dropDescriptionTouch": `Дважды нажмите, чтобы применить перетаскивание.`,
  "dropDescriptionVirtual": `Щелкните, чтобы применить перетаскивание.`,
  "dropIndicator": `индикатор перетаскивания`,
  "dropOnItem": (args) => `Перетащить на ${args.itemText}`,
  "dropOnRoot": `Перетащить на`,
  "endDragKeyboard": `Перетаскивание. Нажмите клавишу Enter для отмены.`,
  "endDragTouch": `Перетаскивание. Дважды нажмите для отмены.`,
  "endDragVirtual": `Перетаскивание. Щелкните для отмены.`,
  "insertAfter": (args) => `Вставить после ${args.itemText}`,
  "insertBefore": (args) => `Вставить перед ${args.itemText}`,
  "insertBetween": (args) => `Вставить между ${args.beforeItemText} и ${args.afterItemText}`
};

// node_modules/@react-aria/dnd/dist/sk-SK.mjs
var $dbdc1942894e83e4$exports = {};
$dbdc1942894e83e4$exports = {
  "dragDescriptionKeyboard": `Stlačením klávesu Enter začnete presúvanie.`,
  "dragDescriptionKeyboardAlt": `Stlačením klávesov Alt + Enter začnete presúvanie.`,
  "dragDescriptionLongPress": `Dlhým stlačením začnete presúvanie.`,
  "dragDescriptionTouch": `Dvojitým kliknutím začnete presúvanie.`,
  "dragDescriptionVirtual": `Kliknutím začnete presúvanie.`,
  "dragItem": (args) => `Presunúť položku ${args.itemText}`,
  "dragSelectedItems": (args, formatter) => `Presunúť ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} vybratú položku`,
    other: () => `${formatter.number(args.count)} vybraté položky`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `Stlačením klávesu Enter presuniete ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} vybratú položku`,
    other: () => `${formatter.number(args.count)} vybratých položiek`
  })}.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Stlačením klávesov Alt + Enter presuniete ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} vybratú položku`,
    other: () => `${formatter.number(args.count)} vybratých položiek`
  })}.`,
  "dragSelectedLongPress": (args, formatter) => `Dlhým stlačením presuniete ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} vybratú položku`,
    other: () => `${formatter.number(args.count)} vybratých položiek`
  })}.`,
  "dragStartedKeyboard": `Presúvanie sa začalo. Do cieľového umiestnenia prejdete stlačením klávesu Tab. Ak chcete položku umiestniť, stlačte kláves Enter alebo stlačte kláves Esc, ak chcete presúvanie zrušiť.`,
  "dragStartedTouch": `Presúvanie sa začalo. Prejdite na cieľové umiestnenie a dvojitým kliknutím umiestnite položku.`,
  "dragStartedVirtual": `Presúvanie sa začalo. Prejdite na cieľové umiestnenie a kliknutím alebo stlačením klávesu Enter umiestnite položku.`,
  "dropCanceled": `Umiestnenie zrušené.`,
  "dropComplete": `Umiestnenie dokončené.`,
  "dropDescriptionKeyboard": `Stlačením klávesu Enter umiestnite položku. Stlačením klávesu Esc zrušíte presúvanie.`,
  "dropDescriptionTouch": `Dvojitým kliknutím umiestnite položku.`,
  "dropDescriptionVirtual": `Kliknutím umiestnite položku.`,
  "dropIndicator": `indikátor umiestnenia`,
  "dropOnItem": (args) => `Umiestniť na položku ${args.itemText}`,
  "dropOnRoot": `Umiestniť na`,
  "endDragKeyboard": `Prebieha presúvanie. Ak ho chcete zrušiť, stlačte kláves Enter.`,
  "endDragTouch": `Prebieha presúvanie. Dvojitým kliknutím ho môžete zrušiť.`,
  "endDragVirtual": `Prebieha presúvanie.`,
  "insertAfter": (args) => `Vložiť za položku ${args.itemText}`,
  "insertBefore": (args) => `Vložiť pred položku ${args.itemText}`,
  "insertBetween": (args) => `Vložiť medzi položky ${args.beforeItemText} a ${args.afterItemText}`
};

// node_modules/@react-aria/dnd/dist/sl-SI.mjs
var $fbaaaaebd547d998$exports = {};
$fbaaaaebd547d998$exports = {
  "dragDescriptionKeyboard": `Pritisnite tipko Enter za začetek vlečenja.`,
  "dragDescriptionKeyboardAlt": `Pritisnite tipki Alt + Enter za začetek vlečenja.`,
  "dragDescriptionLongPress": `Pritisnite in zadržite za začetek vlečenja.`,
  "dragDescriptionTouch": `Dvotapnite za začetek vlečenja.`,
  "dragDescriptionVirtual": `Kliknite za začetek vlečenja.`,
  "dragItem": (args) => `Povleci ${args.itemText}`,
  "dragSelectedItems": (args, formatter) => `Povlecite ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} izbran element`,
    other: () => `izbrane elemente (${formatter.number(args.count)})`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `Pritisnite tipko Enter, da povlečete ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} izbrani element`,
    other: () => `${formatter.number(args.count)} izbranih elementov`
  })}.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Pritisnite tipki Alt + Enter, da povlečete ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} izbrani element`,
    other: () => `${formatter.number(args.count)} izbranih elementov`
  })}.`,
  "dragSelectedLongPress": (args, formatter) => `Pritisnite in zadržite, da povlečete ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} izbrani element`,
    other: () => `${formatter.number(args.count)} izbranih elementov`
  })}.`,
  "dragStartedKeyboard": `Vlečenje se je začelo. Pritisnite tipko Tab za pomik na mesto, kamor želite spustiti elemente, in pritisnite tipko Enter, da jih spustite, ali tipko Escape, da prekličete postopek.`,
  "dragStartedTouch": `Vlečenje se je začelo. Pomaknite se na mesto, kamor želite spustiti elemente, in dvotapnite, da jih spustite.`,
  "dragStartedVirtual": `Vlečenje se je začelo. Pomaknite se na mesto, kamor želite spustiti elemente, in kliknite ali pritisnite tipko Enter, da jih spustite.`,
  "dropCanceled": `Spust je preklican.`,
  "dropComplete": `Spust je končan.`,
  "dropDescriptionKeyboard": `Pritisnite tipko Enter, da spustite. Pritisnite tipko Escape, da prekličete vlečenje.`,
  "dropDescriptionTouch": `Dvotapnite, da spustite.`,
  "dropDescriptionVirtual": `Kliknite, da spustite.`,
  "dropIndicator": `indikator spusta`,
  "dropOnItem": (args) => `Spusti na mesto ${args.itemText}`,
  "dropOnRoot": `Spusti na mesto`,
  "endDragKeyboard": `Vlečenje. Pritisnite tipko Enter za preklic vlečenja.`,
  "endDragTouch": `Vlečenje. Dvotapnite za preklic vlečenja.`,
  "endDragVirtual": `Vlečenje. Kliknite, da prekličete vlečenje.`,
  "insertAfter": (args) => `Vstavi za ${args.itemText}`,
  "insertBefore": (args) => `Vstavi pred ${args.itemText}`,
  "insertBetween": (args) => `Vstavi med ${args.beforeItemText} in ${args.afterItemText}`
};

// node_modules/@react-aria/dnd/dist/sr-SP.mjs
var $a0caa33f1e264489$exports = {};
$a0caa33f1e264489$exports = {
  "dragDescriptionKeyboard": `Pritisnite Enter da biste započeli prevlačenje.`,
  "dragDescriptionKeyboardAlt": `Pritisnite Alt + Enter da biste započeli prevlačenje.`,
  "dragDescriptionLongPress": `Pritisnite dugo da biste započeli prevlačenje.`,
  "dragDescriptionTouch": `Dvaput dodirnite da biste započeli prevlačenje.`,
  "dragDescriptionVirtual": `Kliknite da biste započeli prevlačenje.`,
  "dragItem": (args) => `Prevucite ${args.itemText}`,
  "dragSelectedItems": (args, formatter) => `Prevucite ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} izabranu stavku`,
    other: () => `${formatter.number(args.count)} izabrane stavke`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `Pritisnite Enter da biste prevukli ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} izabranu stavku`,
    other: () => `${formatter.number(args.count)} izabranih stavki`
  })}.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Pritisnite Alt + Enter da biste prevukli ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} izabranu stavku`,
    other: () => `${formatter.number(args.count)} izabranih stavki`
  })}.`,
  "dragSelectedLongPress": (args, formatter) => `Pritisnite dugo da biste prevukli ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} izabranu stavku`,
    other: () => `${formatter.number(args.count)} izabranih stavki`
  })}.`,
  "dragStartedKeyboard": `Prevlačenje je započeto. Pritisnite Tab da biste otišli do cilja za otpuštanje, zatim pritisnite Enter za ispuštanje ili pritisnite Escape za otkazivanje.`,
  "dragStartedTouch": `Prevlačenje je započeto. Idite do cilja za otpuštanje, a zatim dvaput dodirnite za otpuštanje.`,
  "dragStartedVirtual": `Prevlačenje je započeto. Idite do cilja za otpuštanje, a zatim kliknite ili pritinite Enter za otpuštanje.`,
  "dropCanceled": `Otpuštanje je otkazano.`,
  "dropComplete": `Prevlačenje je završeno.`,
  "dropDescriptionKeyboard": `Pritisnite Enter da biste otpustili. Pritisnite Escape da biste otkazali prevlačenje.`,
  "dropDescriptionTouch": `Dvaput dodirnite za otpuštanje.`,
  "dropDescriptionVirtual": `Kliknite za otpuštanje.`,
  "dropIndicator": `Indikator otpuštanja`,
  "dropOnItem": (args) => `Otpusti na ${args.itemText}`,
  "dropOnRoot": `Otpusti na`,
  "endDragKeyboard": `Prevlačenje u toku. Pritisnite Enter da biste otkazali prevlačenje.`,
  "endDragTouch": `Prevlačenje u toku. Dvaput dodirnite da biste otkazali prevlačenje.`,
  "endDragVirtual": `Prevlačenje u toku. Kliknite da biste otkazali prevlačenje.`,
  "insertAfter": (args) => `Umetnite posle ${args.itemText}`,
  "insertBefore": (args) => `Umetnite ispred ${args.itemText}`,
  "insertBetween": (args) => `Umetnite između ${args.beforeItemText} i ${args.afterItemText}`
};

// node_modules/@react-aria/dnd/dist/sv-SE.mjs
var $d576b66176f5c0ff$exports = {};
$d576b66176f5c0ff$exports = {
  "dragDescriptionKeyboard": `Tryck på enter för att börja dra.`,
  "dragDescriptionKeyboardAlt": `Tryck på Alt + Retur för att börja dra.`,
  "dragDescriptionLongPress": `Tryck länge för att börja dra.`,
  "dragDescriptionTouch": `Dubbeltryck för att börja dra.`,
  "dragDescriptionVirtual": `Klicka för att börja dra.`,
  "dragItem": (args) => `Dra ${args.itemText}`,
  "dragSelectedItems": (args, formatter) => `Dra ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} valt objekt`,
    other: () => `${formatter.number(args.count)} valda objekt`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `Tryck på Retur för att dra ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} markerat objekt`,
    other: () => `${formatter.number(args.count)} markerade objekt`
  })}.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Tryck på Alt + Retur för att dra ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} markerat objekt`,
    other: () => `${formatter.number(args.count)} markerade objekt`
  })}.`,
  "dragSelectedLongPress": (args, formatter) => `Tryck länge för att dra ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} markerat objekt`,
    other: () => `${formatter.number(args.count)} markerade objekt`
  })}.`,
  "dragStartedKeyboard": `Börja dra. Tryck på tabb för att navigera till målet, tryck på enter för att släppa eller på escape för att avbryta.`,
  "dragStartedTouch": `Börja dra. Navigera till ett mål och dubbeltryck för att släppa.`,
  "dragStartedVirtual": `Börja dra. Navigera till ett mål och klicka eller tryck på enter för att släppa.`,
  "dropCanceled": `Släppåtgärd avbröts.`,
  "dropComplete": `Släppåtgärd klar.`,
  "dropDescriptionKeyboard": `Tryck på enter för att släppa. Tryck på escape för att avbryta dragåtgärd.`,
  "dropDescriptionTouch": `Dubbeltryck för att släppa.`,
  "dropDescriptionVirtual": `Klicka för att släppa.`,
  "dropIndicator": `släppindikator`,
  "dropOnItem": (args) => `Släpp på ${args.itemText}`,
  "dropOnRoot": `Släpp på`,
  "endDragKeyboard": `Drar. Tryck på enter för att avbryta dragåtgärd.`,
  "endDragTouch": `Drar. Dubbeltryck för att avbryta dragåtgärd.`,
  "endDragVirtual": `Drar. Klicka för att avbryta dragåtgärd.`,
  "insertAfter": (args) => `Infoga efter ${args.itemText}`,
  "insertBefore": (args) => `Infoga före ${args.itemText}`,
  "insertBetween": (args) => `Infoga mellan ${args.beforeItemText} och ${args.afterItemText}`
};

// node_modules/@react-aria/dnd/dist/tr-TR.mjs
var $0681f168c13d8f2a$exports = {};
$0681f168c13d8f2a$exports = {
  "dragDescriptionKeyboard": `Sürüklemeyi başlatmak için Enter'a basın.`,
  "dragDescriptionKeyboardAlt": `Sürüklemeyi başlatmak için Alt + Enter'a basın.`,
  "dragDescriptionLongPress": `Sürüklemeye başlamak için uzun basın.`,
  "dragDescriptionTouch": `Sürüklemeyi başlatmak için çift tıklayın.`,
  "dragDescriptionVirtual": `Sürüklemeyi başlatmak için tıklayın.`,
  "dragItem": (args) => `${args.itemText}’i sürükle`,
  "dragSelectedItems": (args, formatter) => `Sürükle ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} seçili öge`,
    other: () => `${formatter.number(args.count)} seçili öge`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} seçilmiş öğe`,
    other: () => `${formatter.number(args.count)} seçilmiş öğe`
  })} öğesini sürüklemek için Enter'a basın.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} seçilmiş öğe`,
    other: () => `${formatter.number(args.count)} seçilmiş öğe`
  })} öğesini sürüklemek için Alt + Enter tuşuna basın.`,
  "dragSelectedLongPress": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} seçilmiş öğe`,
    other: () => `${formatter.number(args.count)} seçilmiş öğe`
  })} öğesini sürüklemek için uzun basın.`,
  "dragStartedKeyboard": `Sürükleme başlatıldı. Bir bırakma hedefine gitmek için Tab’a basın, ardından bırakmak için Enter’a basın veya iptal etmek için Escape’e basın.`,
  "dragStartedTouch": `Sürükleme başlatıldı. Bir bırakma hedefine gidin, ardından bırakmak için çift tıklayın.`,
  "dragStartedVirtual": `Sürükleme başlatıldı. Bir bırakma hedefine gidin, ardından bırakmak için Enter’a tıklayın veya basın.`,
  "dropCanceled": `Bırakma iptal edildi.`,
  "dropComplete": `Bırakma tamamlandı.`,
  "dropDescriptionKeyboard": `Bırakmak için Enter'a basın. Sürüklemeyi iptal etmek için Escape'e basın.`,
  "dropDescriptionTouch": `Bırakmak için çift tıklayın.`,
  "dropDescriptionVirtual": `Bırakmak için tıklayın.`,
  "dropIndicator": `bırakma göstergesi`,
  "dropOnItem": (args) => `${args.itemText} üzerine bırak`,
  "dropOnRoot": `Bırakın`,
  "endDragKeyboard": `Sürükleme. Sürüklemeyi iptal etmek için Enter'a basın.`,
  "endDragTouch": `Sürükleme. Sürüklemeyi iptal etmek için çift tıklayın.`,
  "endDragVirtual": `Sürükleme. Sürüklemeyi iptal etmek için tıklayın.`,
  "insertAfter": (args) => `${args.itemText}’den sonra gir`,
  "insertBefore": (args) => `${args.itemText}’den önce gir`,
  "insertBetween": (args) => `${args.beforeItemText} ve ${args.afterItemText} arasına gir`
};

// node_modules/@react-aria/dnd/dist/uk-UA.mjs
var $2bfbc1f42c1cf5a7$exports = {};
$2bfbc1f42c1cf5a7$exports = {
  "dragDescriptionKeyboard": `Натисніть Enter, щоб почати перетягування.`,
  "dragDescriptionKeyboardAlt": `Натисніть Alt + Enter, щоб почати перетягування.`,
  "dragDescriptionLongPress": `Натисніть і утримуйте, щоб почати перетягування.`,
  "dragDescriptionTouch": `Натисніть двічі, щоб почати перетягування.`,
  "dragDescriptionVirtual": `Натисніть, щоб почати перетягування.`,
  "dragItem": (args) => `Перетягнути ${args.itemText}`,
  "dragSelectedItems": (args, formatter) => `Перетягніть ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} вибраний елемент`,
    other: () => `${formatter.number(args.count)} вибраних елем`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `Натисніть Enter, щоб перетягнути ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} вибраний елемент`,
    other: () => `${formatter.number(args.count)} вибраних елементи(-ів)`
  })}.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Натисніть Alt + Enter, щоб перетягнути ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} вибраний елемент`,
    other: () => `${formatter.number(args.count)} вибраних елементи(-ів)`
  })}.`,
  "dragSelectedLongPress": (args, formatter) => `Утримуйте, щоб перетягнути ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} вибраний елемент`,
    other: () => `${formatter.number(args.count)} вибраних елементи(-ів)`
  })}.`,
  "dragStartedKeyboard": `Перетягування почалося. Натисніть Tab, щоб перейти до цілі перетягування, потім натисніть Enter, щоб перетягнути, або Escape, щоб скасувати.`,
  "dragStartedTouch": `Перетягування почалося. Перейдіть до цілі перетягування, потім натисніть двічі, щоб перетягнути.`,
  "dragStartedVirtual": `Перетягування почалося. Перейдіть до цілі перетягування, потім натисніть Enter, щоб перетягнути.`,
  "dropCanceled": `Перетягування скасовано.`,
  "dropComplete": `Перетягування завершено.`,
  "dropDescriptionKeyboard": `Натисніть Enter, щоб перетягнути. Натисніть Escape, щоб скасувати перетягування.`,
  "dropDescriptionTouch": `Натисніть двічі, щоб перетягнути.`,
  "dropDescriptionVirtual": `Натисніть, щоб перетягнути.`,
  "dropIndicator": `індикатор перетягування`,
  "dropOnItem": (args) => `Перетягнути на ${args.itemText}`,
  "dropOnRoot": `Перетягнути на`,
  "endDragKeyboard": `Триває перетягування. Натисніть Enter, щоб скасувати перетягування.`,
  "endDragTouch": `Триває перетягування. Натисніть двічі, щоб скасувати перетягування.`,
  "endDragVirtual": `Триває перетягування. Натисніть, щоб скасувати перетягування.`,
  "insertAfter": (args) => `Вставити після ${args.itemText}`,
  "insertBefore": (args) => `Вставити перед ${args.itemText}`,
  "insertBetween": (args) => `Вставити між ${args.beforeItemText} і ${args.afterItemText}`
};

// node_modules/@react-aria/dnd/dist/zh-CN.mjs
var $d0f488d433b55b8a$exports = {};
$d0f488d433b55b8a$exports = {
  "dragDescriptionKeyboard": `按 Enter 开始拖动。`,
  "dragDescriptionKeyboardAlt": `按 Alt + Enter 开始拖动。`,
  "dragDescriptionLongPress": `长按以开始拖动。`,
  "dragDescriptionTouch": `双击开始拖动。`,
  "dragDescriptionVirtual": `单击开始拖动。`,
  "dragItem": (args) => `拖动 ${args.itemText}`,
  "dragSelectedItems": (args, formatter) => `拖动 ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} 选中项目`,
    other: () => `${formatter.number(args.count)} 选中项目`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `按 Enter 以拖动 ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} 个选定项`,
    other: () => `${formatter.number(args.count)} 个选定项`
  })}。`,
  "dragSelectedKeyboardAlt": (args, formatter) => `按 Alt + Enter 以拖动 ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} 个选定项`,
    other: () => `${formatter.number(args.count)} 个选定项`
  })}。`,
  "dragSelectedLongPress": (args, formatter) => `长按以拖动 ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} 个选定项`,
    other: () => `${formatter.number(args.count)} 个选定项`
  })}。`,
  "dragStartedKeyboard": `已开始拖动。按 Tab 导航到放置目标，然后按 Enter 放置或按 Escape 取消。`,
  "dragStartedTouch": `已开始拖动。导航到放置目标，然后双击放置。`,
  "dragStartedVirtual": `已开始拖动。导航到放置目标，然后单击或按 Enter 放置。`,
  "dropCanceled": `放置已取消。`,
  "dropComplete": `放置已完成。`,
  "dropDescriptionKeyboard": `按 Enter 放置。按 Escape 取消拖动。`,
  "dropDescriptionTouch": `双击放置。`,
  "dropDescriptionVirtual": `单击放置。`,
  "dropIndicator": `放置标记`,
  "dropOnItem": (args) => `放置于 ${args.itemText}`,
  "dropOnRoot": `放置于`,
  "endDragKeyboard": `正在拖动。按 Enter 取消拖动。`,
  "endDragTouch": `正在拖动。双击取消拖动。`,
  "endDragVirtual": `正在拖动。单击取消拖动。`,
  "insertAfter": (args) => `插入到 ${args.itemText} 之后`,
  "insertBefore": (args) => `插入到 ${args.itemText} 之前`,
  "insertBetween": (args) => `插入到 ${args.beforeItemText} 和 ${args.afterItemText} 之间`
};

// node_modules/@react-aria/dnd/dist/zh-TW.mjs
var $46168b0dce85301e$exports = {};
$46168b0dce85301e$exports = {
  "dragDescriptionKeyboard": `按 Enter 鍵以開始拖曳。`,
  "dragDescriptionKeyboardAlt": `按 Alt+Enter 鍵以開始拖曳。`,
  "dragDescriptionLongPress": `長按以開始拖曳。`,
  "dragDescriptionTouch": `輕點兩下以開始拖曳。`,
  "dragDescriptionVirtual": `按一下滑鼠以開始拖曳。`,
  "dragItem": (args) => `拖曳「${args.itemText}」`,
  "dragSelectedItems": (args, formatter) => `拖曳 ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} 個選定項目`,
    other: () => `${formatter.number(args.count)} 個選定項目`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `按 Enter 鍵以拖曳 ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} 個選定項目`,
    other: () => `${formatter.number(args.count)} 個選定項目`
  })}。`,
  "dragSelectedKeyboardAlt": (args, formatter) => `按 Alt+Enter 鍵以拖曳 ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} 個選定項目`,
    other: () => `${formatter.number(args.count)} 個選定項目`
  })}。`,
  "dragSelectedLongPress": (args, formatter) => `長按以拖曳 ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} 個選定項目`,
    other: () => `${formatter.number(args.count)} 個選定項目`
  })}。`,
  "dragStartedKeyboard": `已開始拖曳。按 Tab 鍵以瀏覽至放置目標，然後按 Enter 鍵以放置，或按 Escape 鍵以取消。`,
  "dragStartedTouch": `已開始拖曳。瀏覽至放置目標，然後輕點兩下以放置。`,
  "dragStartedVirtual": `已開始拖曳。瀏覽至放置目標，然後按一下滑鼠或按 Enter 鍵以放置。`,
  "dropCanceled": `放置已取消。`,
  "dropComplete": `放置已完成。`,
  "dropDescriptionKeyboard": `按 Enter 鍵以放置。按 Escape 鍵以取消拖曳。`,
  "dropDescriptionTouch": `輕點兩下以放置。`,
  "dropDescriptionVirtual": `按一下滑鼠以放置。`,
  "dropIndicator": `放置指示器`,
  "dropOnItem": (args) => `放置在「${args.itemText}」上`,
  "dropOnRoot": `放置在`,
  "endDragKeyboard": `拖曳中。按 Enter 鍵以取消拖曳。`,
  "endDragTouch": `拖曳中。輕點兩下以取消拖曳。`,
  "endDragVirtual": `拖曳中。按一下滑鼠以取消拖曳。`,
  "insertAfter": (args) => `插入至「${args.itemText}」之後`,
  "insertBefore": (args) => `插入至「${args.itemText}」之前`,
  "insertBetween": (args) => `插入至「${args.beforeItemText}」和「${args.afterItemText}」之間`
};

// node_modules/@react-aria/dnd/dist/intlStrings.mjs
var $865c2eb7c00a83f1$exports = {};
$865c2eb7c00a83f1$exports = {
  "ar-AE": $7dfcac1a0c98c789$exports,
  "bg-BG": $f311c26671219eca$exports,
  "cs-CZ": $1aa4ade186550f72$exports,
  "da-DK": $b6b0ea1b94a7633c$exports,
  "de-DE": $d10e4f47c744ad52$exports,
  "el-GR": $b3d2bb9abce688ab$exports,
  "en-US": $f9b46437e610cca1$exports,
  "es-ES": $204b5c01bd3acf26$exports,
  "et-EE": $110bdd83348ecbc0$exports,
  "fi-FI": $87d3ccd5e347c7cc$exports,
  "fr-FR": $a5de891427686596$exports,
  "he-IL": $ad7f4c66d85b4494$exports,
  "hr-HR": $4aa59f3c6a796cae$exports,
  "hu-HU": $d8d3646556c40586$exports,
  "it-IT": $982d558b45395246$exports,
  "ja-JP": $6a0cf387b9de036c$exports,
  "ko-KR": $a97fefa2956f4bcb$exports,
  "lt-LT": $5fb5837f94e1c150$exports,
  "lv-LV": $5b2e5709864cc922$exports,
  "nb-NO": $ee15bb8efb18cc69$exports,
  "nl-NL": $1daf2d4602e26ac4$exports,
  "pl-PL": $7115429b0f60511f$exports,
  "pt-BR": $5edd453ae5d4a8bc$exports,
  "pt-PT": $5f431994f708535e$exports,
  "ro-RO": $107b5e2e45e971f1$exports,
  "ru-RU": $d4b9c2f01c1892f7$exports,
  "sk-SK": $dbdc1942894e83e4$exports,
  "sl-SI": $fbaaaaebd547d998$exports,
  "sr-SP": $a0caa33f1e264489$exports,
  "sv-SE": $d576b66176f5c0ff$exports,
  "tr-TR": $0681f168c13d8f2a$exports,
  "uk-UA": $2bfbc1f42c1cf5a7$exports,
  "zh-CN": $d0f488d433b55b8a$exports,
  "zh-TW": $46168b0dce85301e$exports
};

// node_modules/@react-aria/dnd/dist/useDrag.mjs
var import_react114 = __toESM(require_react(), 1);
function $parcel$interopDefault17(a) {
  return a && a.__esModule ? a.default : a;
}
var $8253ed7ece74b463$var$MESSAGES = {
  keyboard: {
    start: "dragDescriptionKeyboard",
    end: "endDragKeyboard"
  },
  touch: {
    start: "dragDescriptionTouch",
    end: "endDragTouch"
  },
  virtual: {
    start: "dragDescriptionVirtual",
    end: "endDragVirtual"
  }
};
function $8253ed7ece74b463$export$7941f8aafa4b6021(options) {
  let { hasDragButton, isDisabled } = options;
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault17($865c2eb7c00a83f1$exports)), "@react-aria/dnd");
  let state = (0, import_react114.useRef)({
    options,
    x: 0,
    y: 0
  }).current;
  state.options = options;
  let isDraggingRef = (0, import_react114.useRef)(false);
  let [isDragging, setDraggingState] = (0, import_react114.useState)(false);
  let setDragging = (isDragging2) => {
    isDraggingRef.current = isDragging2;
    setDraggingState(isDragging2);
  };
  let { addGlobalListener, removeAllGlobalListeners } = (0, $03deb23ff14920c4$export$4eaf04e54aa8eed6)();
  let modalityOnPointerDown = (0, import_react114.useRef)(null);
  let onDragStart = (e) => {
    var _options_preview;
    if (e.defaultPrevented) return;
    e.stopPropagation();
    if (modalityOnPointerDown.current === "virtual") {
      e.preventDefault();
      startDragging(e.target);
      modalityOnPointerDown.current = null;
      return;
    }
    if (typeof options.onDragStart === "function") options.onDragStart({
      type: "dragstart",
      x: e.clientX,
      y: e.clientY
    });
    let items = options.getItems();
    (0, $7252cd45fc48c07c$export$f9c1490890ddd063)(e.dataTransfer, items);
    let allowed = (0, $103790afe9474d1c$export$60b7b4bcf3903d8e).all;
    if (typeof options.getAllowedDropOperations === "function") {
      let allowedOperations = options.getAllowedDropOperations();
      allowed = (0, $103790afe9474d1c$export$60b7b4bcf3903d8e).none;
      for (let operation of allowedOperations) allowed |= (0, $103790afe9474d1c$export$60b7b4bcf3903d8e)[operation] || (0, $103790afe9474d1c$export$60b7b4bcf3903d8e).none;
    }
    (0, $7252cd45fc48c07c$export$6539bc8c3a0a2d67)(allowed);
    e.dataTransfer.effectAllowed = (0, $103790afe9474d1c$export$dd0165308d8bff45)[allowed] || "none";
    if (typeof ((_options_preview = options.preview) === null || _options_preview === void 0 ? void 0 : _options_preview.current) === "function") options.preview.current(items, (node) => {
      if (!node) return;
      let size = node.getBoundingClientRect();
      let rect = e.currentTarget.getBoundingClientRect();
      let x = e.clientX - rect.x;
      let y = e.clientY - rect.y;
      if (x > size.width || y > size.height) {
        x = size.width / 2;
        y = size.height / 2;
      }
      let height = 2 * Math.round(size.height / 2);
      node.style.height = `${height}px`;
      e.dataTransfer.setDragImage(node, x, y);
    });
    addGlobalListener(window, "drop", (e2) => {
      e2.preventDefault();
      e2.stopPropagation();
      console.warn("Drags initiated from the React Aria useDrag hook may only be dropped on a target created with useDrop. This ensures that a keyboard and screen reader accessible alternative is available.");
    }, {
      once: true
    });
    state.x = e.clientX;
    state.y = e.clientY;
    requestAnimationFrame(() => {
      setDragging(true);
    });
  };
  let onDrag = (e) => {
    e.stopPropagation();
    if (e.clientX === state.x && e.clientY === state.y) return;
    if (typeof options.onDragMove === "function") options.onDragMove({
      type: "dragmove",
      x: e.clientX,
      y: e.clientY
    });
    state.x = e.clientX;
    state.y = e.clientY;
  };
  let onDragEnd = (e) => {
    e.stopPropagation();
    if (typeof options.onDragEnd === "function") {
      let event = {
        type: "dragend",
        x: e.clientX,
        y: e.clientY,
        dropOperation: (0, $103790afe9474d1c$export$608ecc6f1b23c35d)[e.dataTransfer.dropEffect]
      };
      if (0, $7252cd45fc48c07c$export$8e6636520ac15722) event.dropOperation = (0, $103790afe9474d1c$export$608ecc6f1b23c35d)[0, $7252cd45fc48c07c$export$8e6636520ac15722];
      options.onDragEnd(event);
    }
    setDragging(false);
    removeAllGlobalListeners();
    (0, $7252cd45fc48c07c$export$6539bc8c3a0a2d67)((0, $103790afe9474d1c$export$60b7b4bcf3903d8e).none);
    (0, $7252cd45fc48c07c$export$64f52ed7349ddb84)(void 0);
  };
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    return () => {
      if (isDraggingRef.current) {
        if (typeof state.options.onDragEnd === "function") {
          let event = {
            type: "dragend",
            x: 0,
            y: 0,
            dropOperation: (0, $103790afe9474d1c$export$608ecc6f1b23c35d)[(0, $7252cd45fc48c07c$export$8e6636520ac15722) || "none"]
          };
          state.options.onDragEnd(event);
        }
        setDragging(false);
        (0, $7252cd45fc48c07c$export$6539bc8c3a0a2d67)((0, $103790afe9474d1c$export$60b7b4bcf3903d8e).none);
        (0, $7252cd45fc48c07c$export$64f52ed7349ddb84)(void 0);
      }
    };
  }, [
    state
  ]);
  let onPress = (e) => {
    if (e.pointerType !== "keyboard" && e.pointerType !== "virtual") return;
    startDragging(e.target);
  };
  let startDragging = (target) => {
    if (typeof state.options.onDragStart === "function") {
      let rect = target.getBoundingClientRect();
      state.options.onDragStart({
        type: "dragstart",
        x: rect.x + rect.width / 2,
        y: rect.y + rect.height / 2
      });
    }
    $67560de7c78cb232$export$549dbcf8649bf3b2({
      element: target,
      items: state.options.getItems(),
      allowedDropOperations: typeof state.options.getAllowedDropOperations === "function" ? state.options.getAllowedDropOperations() : [
        "move",
        "copy",
        "link"
      ],
      onDragEnd(e) {
        setDragging(false);
        if (typeof state.options.onDragEnd === "function") state.options.onDragEnd(e);
      }
    }, stringFormatter);
    setDragging(true);
  };
  let modality = (0, $7252cd45fc48c07c$export$49bac5d6d4b352ea)();
  let message = !isDragging ? $8253ed7ece74b463$var$MESSAGES[modality].start : $8253ed7ece74b463$var$MESSAGES[modality].end;
  let descriptionProps = (0, $ef06256079686ba0$export$f8aeda7b10753fa1)(stringFormatter.format(message));
  let interactions = {};
  if (!hasDragButton)
    interactions = {
      ...descriptionProps,
      onPointerDown(e) {
        modalityOnPointerDown.current = (0, $6a7db85432448f7f$export$29bf1b5f2c56cf63)(e.nativeEvent) ? "virtual" : e.pointerType;
        if (e.width < 1 && e.height < 1)
          modalityOnPointerDown.current = "virtual";
        else {
          let rect = e.currentTarget.getBoundingClientRect();
          let offsetX = e.clientX - rect.x;
          let offsetY = e.clientY - rect.y;
          let centerX = rect.width / 2;
          let centerY = rect.height / 2;
          if (Math.abs(offsetX - centerX) <= 0.5 && Math.abs(offsetY - centerY) <= 0.5)
            modalityOnPointerDown.current = "virtual";
          else modalityOnPointerDown.current = e.pointerType;
        }
      },
      onKeyDownCapture(e) {
        if (e.target === e.currentTarget && e.key === "Enter") {
          e.preventDefault();
          e.stopPropagation();
        }
      },
      onKeyUpCapture(e) {
        if (e.target === e.currentTarget && e.key === "Enter") {
          e.preventDefault();
          e.stopPropagation();
          startDragging(e.target);
        }
      },
      onClick(e) {
        if ((0, $6a7db85432448f7f$export$60278871457622de)(e.nativeEvent) || modalityOnPointerDown.current === "virtual") {
          e.preventDefault();
          e.stopPropagation();
          startDragging(e.target);
        }
      }
    };
  if (isDisabled) return {
    dragProps: {
      draggable: "false"
    },
    dragButtonProps: {},
    isDragging: false
  };
  return {
    dragProps: {
      ...interactions,
      draggable: "true",
      onDragStart,
      onDrag,
      onDragEnd
    },
    dragButtonProps: {
      ...descriptionProps,
      onPress
    },
    isDragging
  };
}

// node_modules/@react-aria/dnd/dist/useVirtualDrop.mjs
function $parcel$interopDefault18(a) {
  return a && a.__esModule ? a.default : a;
}
var $224594fe3e57ff1e$var$MESSAGES = {
  keyboard: "dropDescriptionKeyboard",
  touch: "dropDescriptionTouch",
  virtual: "dropDescriptionVirtual"
};
function $224594fe3e57ff1e$export$62447ad3d2ec7da6() {
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault18($865c2eb7c00a83f1$exports)), "@react-aria/dnd");
  let modality = (0, $7252cd45fc48c07c$export$49bac5d6d4b352ea)();
  let dragSession = $67560de7c78cb232$export$418e185dd3f1b968();
  let descriptionProps = (0, $ef06256079686ba0$export$f8aeda7b10753fa1)(dragSession ? stringFormatter.format($224594fe3e57ff1e$var$MESSAGES[modality]) : "");
  return {
    dropProps: {
      ...descriptionProps,
      // Mobile Safari does not properly bubble click events on elements except links or inputs
      // unless there is an onclick handler bound directly to the element itself. By adding this
      // handler, React will take care of adding that for us, and we are able to handle document
      // level click events in the DragManager.
      // See https://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
      onClick: () => {
      }
    }
  };
}

// node_modules/@react-aria/dnd/dist/useDrop.mjs
var import_react115 = __toESM(require_react(), 1);
var $5c06e4929e123553$var$DROP_ACTIVATE_TIMEOUT = 800;
function $5c06e4929e123553$export$ccdee5eaf73cf661(options) {
  let { hasDropButton, isDisabled } = options;
  let [isDropTarget, setDropTarget] = (0, import_react115.useState)(false);
  let state = (0, import_react115.useRef)({
    x: 0,
    y: 0,
    dragOverElements: /* @__PURE__ */ new Set(),
    dropEffect: "none",
    allowedOperations: (0, $103790afe9474d1c$export$60b7b4bcf3903d8e).all,
    dropActivateTimer: void 0
  }).current;
  let fireDropEnter = (e) => {
    setDropTarget(true);
    if (typeof options.onDropEnter === "function") {
      let rect = e.currentTarget.getBoundingClientRect();
      options.onDropEnter({
        type: "dropenter",
        x: e.clientX - rect.x,
        y: e.clientY - rect.y
      });
    }
  };
  let fireDropExit = (e) => {
    setDropTarget(false);
    if (typeof options.onDropExit === "function") {
      let rect = e.currentTarget.getBoundingClientRect();
      options.onDropExit({
        type: "dropexit",
        x: e.clientX - rect.x,
        y: e.clientY - rect.y
      });
    }
  };
  let onDragOver = (e) => {
    e.preventDefault();
    e.stopPropagation();
    let allowedOperations = $5c06e4929e123553$var$getAllowedOperations(e);
    if (e.clientX === state.x && e.clientY === state.y && allowedOperations === state.allowedOperations) {
      e.dataTransfer.dropEffect = state.dropEffect;
      return;
    }
    state.x = e.clientX;
    state.y = e.clientY;
    let prevDropEffect = state.dropEffect;
    if (allowedOperations !== state.allowedOperations) {
      let allowedOps = $5c06e4929e123553$var$allowedOperationsToArray(allowedOperations);
      let dropOperation = allowedOps[0];
      if (typeof options.getDropOperation === "function") {
        let types = new (0, $7252cd45fc48c07c$export$7f04ce188c91447c)(e.dataTransfer);
        dropOperation = $5c06e4929e123553$var$getDropOperation(allowedOperations, options.getDropOperation(types, allowedOps));
      }
      state.dropEffect = (0, $103790afe9474d1c$export$5eacb0769d26d3b2)[dropOperation] || "none";
    }
    if (typeof options.getDropOperationForPoint === "function") {
      let types = new (0, $7252cd45fc48c07c$export$7f04ce188c91447c)(e.dataTransfer);
      let rect = e.currentTarget.getBoundingClientRect();
      let dropOperation = $5c06e4929e123553$var$getDropOperation(allowedOperations, options.getDropOperationForPoint(types, $5c06e4929e123553$var$allowedOperationsToArray(allowedOperations), state.x - rect.x, state.y - rect.y));
      state.dropEffect = (0, $103790afe9474d1c$export$5eacb0769d26d3b2)[dropOperation] || "none";
    }
    state.allowedOperations = allowedOperations;
    e.dataTransfer.dropEffect = state.dropEffect;
    if (state.dropEffect === "none" && prevDropEffect !== "none") fireDropExit(e);
    else if (state.dropEffect !== "none" && prevDropEffect === "none") fireDropEnter(e);
    if (typeof options.onDropMove === "function" && state.dropEffect !== "none") {
      let rect = e.currentTarget.getBoundingClientRect();
      options.onDropMove({
        type: "dropmove",
        x: state.x - rect.x,
        y: state.y - rect.y
      });
    }
    clearTimeout(state.dropActivateTimer);
    if (options.onDropActivate && typeof options.onDropActivate === "function" && state.dropEffect !== "none") {
      let onDropActivateOptions = options.onDropActivate;
      let rect = e.currentTarget.getBoundingClientRect();
      state.dropActivateTimer = setTimeout(() => {
        onDropActivateOptions({
          type: "dropactivate",
          x: state.x - rect.x,
          y: state.y - rect.y
        });
      }, $5c06e4929e123553$var$DROP_ACTIVATE_TIMEOUT);
    }
  };
  let onDragEnter = (e) => {
    e.preventDefault();
    e.stopPropagation();
    state.dragOverElements.add(e.target);
    if (state.dragOverElements.size > 1) return;
    let allowedOperationsBits = $5c06e4929e123553$var$getAllowedOperations(e);
    let allowedOperations = $5c06e4929e123553$var$allowedOperationsToArray(allowedOperationsBits);
    let dropOperation = allowedOperations[0];
    if (typeof options.getDropOperation === "function") {
      let types = new (0, $7252cd45fc48c07c$export$7f04ce188c91447c)(e.dataTransfer);
      dropOperation = $5c06e4929e123553$var$getDropOperation(allowedOperationsBits, options.getDropOperation(types, allowedOperations));
    }
    if (typeof options.getDropOperationForPoint === "function") {
      let types = new (0, $7252cd45fc48c07c$export$7f04ce188c91447c)(e.dataTransfer);
      let rect = e.currentTarget.getBoundingClientRect();
      dropOperation = $5c06e4929e123553$var$getDropOperation(allowedOperationsBits, options.getDropOperationForPoint(types, allowedOperations, e.clientX - rect.x, e.clientY - rect.y));
    }
    state.x = e.clientX;
    state.y = e.clientY;
    state.allowedOperations = allowedOperationsBits;
    state.dropEffect = (0, $103790afe9474d1c$export$5eacb0769d26d3b2)[dropOperation] || "none";
    e.dataTransfer.dropEffect = state.dropEffect;
    if (dropOperation !== "cancel") fireDropEnter(e);
  };
  let onDragLeave = (e) => {
    e.preventDefault();
    e.stopPropagation();
    state.dragOverElements.delete(e.target);
    for (let element of state.dragOverElements) if (!e.currentTarget.contains(element)) state.dragOverElements.delete(element);
    if (state.dragOverElements.size > 0) return;
    if (state.dropEffect !== "none") fireDropExit(e);
    clearTimeout(state.dropActivateTimer);
  };
  let onDrop = (e) => {
    e.preventDefault();
    e.stopPropagation();
    (0, $7252cd45fc48c07c$export$64f52ed7349ddb84)(state.dropEffect);
    if (typeof options.onDrop === "function") {
      let dropOperation = (0, $103790afe9474d1c$export$608ecc6f1b23c35d)[state.dropEffect];
      let items = (0, $7252cd45fc48c07c$export$d9e760437831f8b3)(e.dataTransfer);
      let rect = e.currentTarget.getBoundingClientRect();
      let event = {
        type: "drop",
        x: e.clientX - rect.x,
        y: e.clientY - rect.y,
        items,
        dropOperation
      };
      options.onDrop(event);
    }
    let dndStateSnapshot = {
      ...(0, $7252cd45fc48c07c$export$6ca6700462636d0b)
    };
    state.dragOverElements.clear();
    fireDropExit(e);
    clearTimeout(state.dropActivateTimer);
    if (dndStateSnapshot.draggingCollectionRef == null) (0, $7252cd45fc48c07c$export$64f52ed7349ddb84)(void 0);
    else
      (0, $7252cd45fc48c07c$export$6c10d32b362bfa5f)(dndStateSnapshot);
  };
  let onDropEnter = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e) => {
    if (typeof options.onDropEnter === "function") options.onDropEnter(e);
  });
  let onDropExit = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e) => {
    if (typeof options.onDropExit === "function") options.onDropExit(e);
  });
  let onDropActivate = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e) => {
    if (typeof options.onDropActivate === "function") options.onDropActivate(e);
  });
  let onKeyboardDrop = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e) => {
    if (typeof options.onDrop === "function") options.onDrop(e);
  });
  let getDropOperationKeyboard = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((types, allowedOperations) => {
    if (options.getDropOperation) return options.getDropOperation(types, allowedOperations);
    return allowedOperations[0];
  });
  let { ref } = options;
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    if (isDisabled || !ref.current) return;
    return $67560de7c78cb232$export$c28d9fb4a54e471a({
      element: ref.current,
      getDropOperation: getDropOperationKeyboard,
      onDropEnter(e) {
        setDropTarget(true);
        onDropEnter(e);
      },
      onDropExit(e) {
        setDropTarget(false);
        onDropExit(e);
      },
      onDrop: onKeyboardDrop,
      onDropActivate
    });
  }, [
    isDisabled,
    ref,
    getDropOperationKeyboard,
    onDropEnter,
    onDropExit,
    onKeyboardDrop,
    onDropActivate
  ]);
  let { dropProps } = (0, $224594fe3e57ff1e$export$62447ad3d2ec7da6)();
  if (isDisabled) return {
    dropProps: {},
    dropButtonProps: {
      isDisabled: true
    },
    isDropTarget: false
  };
  return {
    dropProps: {
      ...!hasDropButton && dropProps,
      onDragEnter,
      onDragOver,
      onDragLeave,
      onDrop
    },
    dropButtonProps: {
      ...hasDropButton && dropProps
    },
    isDropTarget
  };
}
function $5c06e4929e123553$var$getAllowedOperations(e) {
  let allowedOperations = (0, $103790afe9474d1c$export$9bbdfc78cf083e16)[e.dataTransfer.effectAllowed];
  if (0, $7252cd45fc48c07c$export$f0130eb70b6347b8) allowedOperations &= (0, $7252cd45fc48c07c$export$f0130eb70b6347b8);
  let allowedModifiers = (0, $103790afe9474d1c$export$60b7b4bcf3903d8e).none;
  if ((0, $c87311424ea30a05$export$9ac100e40613ea10)()) {
    if (e.altKey) allowedModifiers |= (0, $103790afe9474d1c$export$60b7b4bcf3903d8e).copy;
    if (e.ctrlKey && !(0, $c87311424ea30a05$export$7bef049ce92e4224)()) allowedModifiers |= (0, $103790afe9474d1c$export$60b7b4bcf3903d8e).link;
    if (e.metaKey) allowedModifiers |= (0, $103790afe9474d1c$export$60b7b4bcf3903d8e).move;
  } else {
    if (e.altKey) allowedModifiers |= (0, $103790afe9474d1c$export$60b7b4bcf3903d8e).link;
    if (e.shiftKey) allowedModifiers |= (0, $103790afe9474d1c$export$60b7b4bcf3903d8e).move;
    if (e.ctrlKey) allowedModifiers |= (0, $103790afe9474d1c$export$60b7b4bcf3903d8e).copy;
  }
  if (allowedModifiers) return allowedOperations & allowedModifiers;
  return allowedOperations;
}
function $5c06e4929e123553$var$allowedOperationsToArray(allowedOperationsBits) {
  let allowedOperations = [];
  if (allowedOperationsBits & (0, $103790afe9474d1c$export$60b7b4bcf3903d8e).move) allowedOperations.push("move");
  if (allowedOperationsBits & (0, $103790afe9474d1c$export$60b7b4bcf3903d8e).copy) allowedOperations.push("copy");
  if (allowedOperationsBits & (0, $103790afe9474d1c$export$60b7b4bcf3903d8e).link) allowedOperations.push("link");
  return allowedOperations;
}
function $5c06e4929e123553$var$getDropOperation(allowedOperations, operation) {
  let op = (0, $103790afe9474d1c$export$60b7b4bcf3903d8e)[operation];
  return allowedOperations & op ? operation : "cancel";
}

// node_modules/@react-aria/dnd/dist/DropTargetKeyboardNavigation.mjs
function $e154566cef11553b$export$ff7962acd6052c28(keyboardDelegate, collection, target, direction, rtl = false, wrap = false) {
  switch (direction) {
    case "left":
      return rtl ? $e154566cef11553b$var$nextDropTarget(keyboardDelegate, collection, target, wrap, "left") : $e154566cef11553b$var$previousDropTarget(keyboardDelegate, collection, target, wrap, "left");
    case "right":
      return rtl ? $e154566cef11553b$var$previousDropTarget(keyboardDelegate, collection, target, wrap, "right") : $e154566cef11553b$var$nextDropTarget(keyboardDelegate, collection, target, wrap, "right");
    case "up":
      return $e154566cef11553b$var$previousDropTarget(keyboardDelegate, collection, target, wrap);
    case "down":
      return $e154566cef11553b$var$nextDropTarget(keyboardDelegate, collection, target, wrap);
  }
}
function $e154566cef11553b$var$nextDropTarget(keyboardDelegate, collection, target, wrap = false, horizontal = null) {
  if (!target) return {
    type: "root"
  };
  if (target.type === "root") {
    var _keyboardDelegate_getFirstKey;
    var _keyboardDelegate_getFirstKey1;
    let nextKey = (_keyboardDelegate_getFirstKey1 = (_keyboardDelegate_getFirstKey = keyboardDelegate.getFirstKey) === null || _keyboardDelegate_getFirstKey === void 0 ? void 0 : _keyboardDelegate_getFirstKey.call(keyboardDelegate)) !== null && _keyboardDelegate_getFirstKey1 !== void 0 ? _keyboardDelegate_getFirstKey1 : null;
    if (nextKey != null) return {
      type: "item",
      key: nextKey,
      dropPosition: "before"
    };
    return null;
  }
  if (target.type === "item") {
    var _keyboardDelegate_getKeyRightOf, _keyboardDelegate_getKeyLeftOf, _keyboardDelegate_getKeyBelow;
    let nextKey = null;
    if (horizontal) nextKey = horizontal === "right" ? (_keyboardDelegate_getKeyRightOf = keyboardDelegate.getKeyRightOf) === null || _keyboardDelegate_getKeyRightOf === void 0 ? void 0 : _keyboardDelegate_getKeyRightOf.call(keyboardDelegate, target.key) : (_keyboardDelegate_getKeyLeftOf = keyboardDelegate.getKeyLeftOf) === null || _keyboardDelegate_getKeyLeftOf === void 0 ? void 0 : _keyboardDelegate_getKeyLeftOf.call(keyboardDelegate, target.key);
    else nextKey = (_keyboardDelegate_getKeyBelow = keyboardDelegate.getKeyBelow) === null || _keyboardDelegate_getKeyBelow === void 0 ? void 0 : _keyboardDelegate_getKeyBelow.call(keyboardDelegate, target.key);
    let nextCollectionKey = collection.getKeyAfter(target.key);
    if (nextKey != null && nextKey !== nextCollectionKey) return {
      type: "item",
      key: nextKey,
      dropPosition: target.dropPosition
    };
    switch (target.dropPosition) {
      case "before":
        return {
          type: "item",
          key: target.key,
          dropPosition: "on"
        };
      case "on": {
        let targetNode = collection.getItem(target.key);
        let nextNode = nextKey != null ? collection.getItem(nextKey) : null;
        if (targetNode && nextNode && nextNode.level >= targetNode.level) return {
          type: "item",
          key: nextNode.key,
          dropPosition: "before"
        };
        return {
          type: "item",
          key: target.key,
          dropPosition: "after"
        };
      }
      case "after": {
        let targetNode = collection.getItem(target.key);
        if (targetNode && targetNode.nextKey == null && targetNode.parentKey != null) {
          let parentNode = collection.getItem(targetNode.parentKey);
          if ((parentNode === null || parentNode === void 0 ? void 0 : parentNode.nextKey) != null) return {
            type: "item",
            key: parentNode.nextKey,
            dropPosition: "before"
          };
          if (parentNode) return {
            type: "item",
            key: parentNode.key,
            dropPosition: "after"
          };
        }
        if ((targetNode === null || targetNode === void 0 ? void 0 : targetNode.nextKey) != null) return {
          type: "item",
          key: targetNode.nextKey,
          dropPosition: "on"
        };
      }
    }
  }
  if (wrap) return {
    type: "root"
  };
  return null;
}
function $e154566cef11553b$var$previousDropTarget(keyboardDelegate, collection, target, wrap = false, horizontal = null) {
  if (!target || wrap && target.type === "root") {
    var _keyboardDelegate_getLastKey;
    let prevKey = null;
    let lastKey = (_keyboardDelegate_getLastKey = keyboardDelegate.getLastKey) === null || _keyboardDelegate_getLastKey === void 0 ? void 0 : _keyboardDelegate_getLastKey.call(keyboardDelegate);
    while (lastKey != null) {
      prevKey = lastKey;
      let node = collection.getItem(lastKey);
      lastKey = node === null || node === void 0 ? void 0 : node.parentKey;
    }
    if (prevKey != null) return {
      type: "item",
      key: prevKey,
      dropPosition: "after"
    };
    return null;
  }
  if (target.type === "item") {
    var _keyboardDelegate_getKeyLeftOf, _keyboardDelegate_getKeyRightOf, _keyboardDelegate_getKeyAbove;
    let prevKey = null;
    if (horizontal) prevKey = horizontal === "left" ? (_keyboardDelegate_getKeyLeftOf = keyboardDelegate.getKeyLeftOf) === null || _keyboardDelegate_getKeyLeftOf === void 0 ? void 0 : _keyboardDelegate_getKeyLeftOf.call(keyboardDelegate, target.key) : (_keyboardDelegate_getKeyRightOf = keyboardDelegate.getKeyRightOf) === null || _keyboardDelegate_getKeyRightOf === void 0 ? void 0 : _keyboardDelegate_getKeyRightOf.call(keyboardDelegate, target.key);
    else prevKey = (_keyboardDelegate_getKeyAbove = keyboardDelegate.getKeyAbove) === null || _keyboardDelegate_getKeyAbove === void 0 ? void 0 : _keyboardDelegate_getKeyAbove.call(keyboardDelegate, target.key);
    let prevCollectionKey = collection.getKeyBefore(target.key);
    if (prevKey != null && prevKey !== prevCollectionKey) return {
      type: "item",
      key: prevKey,
      dropPosition: target.dropPosition
    };
    switch (target.dropPosition) {
      case "before": {
        let targetNode = collection.getItem(target.key);
        if (targetNode && targetNode.prevKey != null) {
          let lastChild = $e154566cef11553b$var$getLastChild(collection, targetNode.prevKey);
          if (lastChild) return lastChild;
        }
        if (prevKey != null) return {
          type: "item",
          key: prevKey,
          dropPosition: "on"
        };
        return {
          type: "root"
        };
      }
      case "on":
        return {
          type: "item",
          key: target.key,
          dropPosition: "before"
        };
      case "after": {
        let lastChild = $e154566cef11553b$var$getLastChild(collection, target.key);
        if (lastChild) return lastChild;
        return {
          type: "item",
          key: target.key,
          dropPosition: "on"
        };
      }
    }
  }
  if (target.type !== "root") return {
    type: "root"
  };
  return null;
}
function $e154566cef11553b$var$getLastChild(collection, key) {
  let targetNode = collection.getItem(key);
  let nextKey = collection.getKeyAfter(key);
  let nextNode = nextKey != null ? collection.getItem(nextKey) : null;
  if (targetNode && nextNode && nextNode.level > targetNode.level) {
    let children = (0, $c5a24bc478652b5f$export$1005530eda016c13)(targetNode, collection);
    let lastChild = null;
    for (let child of children) if (child.type === "item") lastChild = child;
    if (lastChild) return {
      type: "item",
      key: lastChild.key,
      dropPosition: "after"
    };
  }
  return null;
}

// node_modules/@react-aria/dnd/dist/useAutoScroll.mjs
var import_react116 = __toESM(require_react(), 1);
var $80d9daea3067eff3$var$AUTOSCROLL_AREA_SIZE = 20;
function $80d9daea3067eff3$export$6323452ca4533ed8(ref) {
  let scrollableRef = (0, import_react116.useRef)(null);
  let scrollableX = (0, import_react116.useRef)(true);
  let scrollableY = (0, import_react116.useRef)(true);
  (0, import_react116.useEffect)(() => {
    if (ref.current) {
      scrollableRef.current = (0, $cc38e7bd3fc7b213$export$2bb74740c4e19def)(ref.current) ? ref.current : (0, $62d8ded9296f3872$export$cfa2225e87938781)(ref.current);
      let style = window.getComputedStyle(scrollableRef.current);
      scrollableX.current = /(auto|scroll)/.test(style.overflowX);
      scrollableY.current = /(auto|scroll)/.test(style.overflowY);
    }
  }, [
    ref
  ]);
  let state = (0, import_react116.useRef)({
    timer: void 0,
    dx: 0,
    dy: 0
  }).current;
  (0, import_react116.useEffect)(() => {
    return () => {
      if (state.timer) {
        cancelAnimationFrame(state.timer);
        state.timer = void 0;
      }
    };
  }, [
    state
  ]);
  let scroll = (0, import_react116.useCallback)(() => {
    if (scrollableX.current && scrollableRef.current) scrollableRef.current.scrollLeft += state.dx;
    if (scrollableY.current && scrollableRef.current) scrollableRef.current.scrollTop += state.dy;
    if (state.timer) state.timer = requestAnimationFrame(scroll);
  }, [
    scrollableRef,
    state
  ]);
  return {
    move(x, y) {
      if (!(0, $c87311424ea30a05$export$78551043582a6a98)() || (0, $c87311424ea30a05$export$fedb369cb70207f1)() || !scrollableRef.current) return;
      let box = scrollableRef.current.getBoundingClientRect();
      let left = $80d9daea3067eff3$var$AUTOSCROLL_AREA_SIZE;
      let top = $80d9daea3067eff3$var$AUTOSCROLL_AREA_SIZE;
      let bottom = box.height - $80d9daea3067eff3$var$AUTOSCROLL_AREA_SIZE;
      let right = box.width - $80d9daea3067eff3$var$AUTOSCROLL_AREA_SIZE;
      if (x < left || x > right || y < top || y > bottom) {
        if (x < left) state.dx = x - left;
        else if (x > right) state.dx = x - right;
        if (y < top) state.dy = y - top;
        else if (y > bottom) state.dy = y - bottom;
        if (!state.timer) state.timer = requestAnimationFrame(scroll);
      } else this.stop();
    },
    stop() {
      if (state.timer) {
        cancelAnimationFrame(state.timer);
        state.timer = void 0;
      }
    }
  };
}

// node_modules/@react-aria/dnd/dist/useDroppableCollection.mjs
var import_react117 = __toESM(require_react(), 1);
function $4b52e4eff84e5217$export$f4e2f423c21f7b04(props, state, ref) {
  let localState = (0, import_react117.useRef)({
    props,
    state,
    nextTarget: null,
    dropOperation: null
  }).current;
  localState.props = props;
  localState.state = state;
  let defaultOnDrop = (0, import_react117.useCallback)(async (e) => {
    let { onInsert, onRootDrop, onItemDrop, onReorder, onMove, acceptedDragTypes = "all", shouldAcceptItemDrop } = localState.props;
    let { draggingKeys } = (0, $7252cd45fc48c07c$export$6ca6700462636d0b);
    let isInternal = (0, $7252cd45fc48c07c$export$78bf638634500fa5)(ref);
    let { target, dropOperation, items } = e;
    let filteredItems = items;
    if (acceptedDragTypes !== "all" || shouldAcceptItemDrop) filteredItems = items.filter((item) => {
      let itemTypes;
      if (item.kind === "directory") itemTypes = /* @__PURE__ */ new Set([
        (0, $7252cd45fc48c07c$export$990fced5dfac2637)
      ]);
      else itemTypes = item.kind === "file" ? /* @__PURE__ */ new Set([
        item.type
      ]) : item.types;
      if (acceptedDragTypes === "all" || acceptedDragTypes.some((type) => itemTypes.has(type))) {
        if (target.type === "item" && target.dropPosition === "on" && shouldAcceptItemDrop) return shouldAcceptItemDrop(target, itemTypes);
        return true;
      }
      return false;
    });
    if (filteredItems.length > 0) {
      if (target.type === "root" && onRootDrop) await onRootDrop({
        items: filteredItems,
        dropOperation
      });
      if (target.type === "item") {
        if (target.dropPosition === "on" && onItemDrop) await onItemDrop({
          items: filteredItems,
          dropOperation,
          isInternal,
          target
        });
        if (onMove && isInternal) await onMove({
          keys: draggingKeys,
          dropOperation,
          target
        });
        if (target.dropPosition !== "on") {
          if (!isInternal && onInsert) await onInsert({
            items: filteredItems,
            dropOperation,
            target
          });
          if (isInternal && onReorder) await onReorder({
            keys: draggingKeys,
            dropOperation,
            target
          });
        }
      }
    }
  }, [
    localState,
    ref
  ]);
  let autoScroll = (0, $80d9daea3067eff3$export$6323452ca4533ed8)(ref);
  let { dropProps } = (0, $5c06e4929e123553$export$ccdee5eaf73cf661)({
    ref,
    onDropEnter() {
      if (localState.nextTarget != null) state.setTarget(localState.nextTarget);
    },
    onDropMove(e) {
      if (localState.nextTarget != null) state.setTarget(localState.nextTarget);
      autoScroll.move(e.x, e.y);
    },
    getDropOperationForPoint(types, allowedOperations, x, y) {
      let { draggingKeys, dropCollectionRef } = (0, $7252cd45fc48c07c$export$6ca6700462636d0b);
      let isInternal = (0, $7252cd45fc48c07c$export$78bf638634500fa5)(ref);
      let isValidDropTarget = (target2) => state.getDropOperation({
        target: target2,
        types,
        allowedOperations,
        isInternal,
        draggingKeys
      }) !== "cancel";
      let target = props.dropTargetDelegate.getDropTargetFromPoint(x, y, isValidDropTarget);
      if (!target) {
        localState.dropOperation = "cancel";
        localState.nextTarget = null;
        return "cancel";
      }
      localState.dropOperation = state.getDropOperation({
        target,
        types,
        allowedOperations,
        isInternal,
        draggingKeys
      });
      if (localState.dropOperation === "cancel") {
        let rootTarget = {
          type: "root"
        };
        let dropOperation = state.getDropOperation({
          target: rootTarget,
          types,
          allowedOperations,
          isInternal,
          draggingKeys
        });
        if (dropOperation !== "cancel") {
          target = rootTarget;
          localState.dropOperation = dropOperation;
        }
      }
      if (target && localState.dropOperation !== "cancel" && (ref === null || ref === void 0 ? void 0 : ref.current) !== (dropCollectionRef === null || dropCollectionRef === void 0 ? void 0 : dropCollectionRef.current)) (0, $7252cd45fc48c07c$export$dac8db29d42db9a1)(ref);
      localState.nextTarget = localState.dropOperation === "cancel" ? null : target;
      return localState.dropOperation;
    },
    onDropExit() {
      (0, $7252cd45fc48c07c$export$dac8db29d42db9a1)(void 0);
      state.setTarget(null);
      autoScroll.stop();
    },
    onDropActivate(e) {
      var _state_target;
      if (((_state_target = state.target) === null || _state_target === void 0 ? void 0 : _state_target.type) === "item" && typeof props.onDropActivate === "function") props.onDropActivate({
        type: "dropactivate",
        x: e.x,
        y: e.y,
        target: state.target
      });
    },
    onDrop(e) {
      (0, $7252cd45fc48c07c$export$dac8db29d42db9a1)(ref);
      if (state.target) onDrop(e, state.target);
      let { draggingCollectionRef } = (0, $7252cd45fc48c07c$export$6ca6700462636d0b);
      if (draggingCollectionRef == null) (0, $7252cd45fc48c07c$export$70936501603e6c57)();
    }
  });
  let droppingState = (0, import_react117.useRef)(null);
  let updateFocusAfterDrop = (0, import_react117.useCallback)(() => {
    let { state: state2 } = localState;
    if (droppingState.current) {
      var _state_collection_getItem;
      let { target, collection: prevCollection, selectedKeys: prevSelectedKeys, focusedKey: prevFocusedKey, isInternal, draggingKeys } = droppingState.current;
      if (state2.collection.size > prevCollection.size && state2.selectionManager.isSelectionEqual(prevSelectedKeys)) {
        let newKeys = /* @__PURE__ */ new Set();
        for (let key of state2.collection.getKeys()) if (!prevCollection.getItem(key)) newKeys.add(key);
        state2.selectionManager.setSelectedKeys(newKeys);
        if (state2.selectionManager.focusedKey === prevFocusedKey) {
          let first = newKeys.keys().next().value;
          if (first != null) {
            let item = state2.collection.getItem(first);
            if ((item === null || item === void 0 ? void 0 : item.type) === "cell") first = item.parentKey;
            if (first != null) state2.selectionManager.setFocusedKey(first);
            if (state2.selectionManager.selectionMode === "none") (0, $507fabe10e71c6fb$export$8397ddfc504fdb9a)("keyboard");
          }
        }
      } else if (prevFocusedKey != null && state2.selectionManager.focusedKey === prevFocusedKey && isInternal && target.type === "item" && target.dropPosition !== "on" && draggingKeys.has((_state_collection_getItem = state2.collection.getItem(prevFocusedKey)) === null || _state_collection_getItem === void 0 ? void 0 : _state_collection_getItem.parentKey)) {
        var _state_collection_getItem1;
        var _state_collection_getItem_parentKey;
        state2.selectionManager.setFocusedKey((_state_collection_getItem_parentKey = (_state_collection_getItem1 = state2.collection.getItem(prevFocusedKey)) === null || _state_collection_getItem1 === void 0 ? void 0 : _state_collection_getItem1.parentKey) !== null && _state_collection_getItem_parentKey !== void 0 ? _state_collection_getItem_parentKey : null);
        (0, $507fabe10e71c6fb$export$8397ddfc504fdb9a)("keyboard");
      } else if (state2.selectionManager.focusedKey === prevFocusedKey && target.type === "item" && target.dropPosition === "on" && state2.collection.getItem(target.key) != null) {
        state2.selectionManager.setFocusedKey(target.key);
        (0, $507fabe10e71c6fb$export$8397ddfc504fdb9a)("keyboard");
      } else if (state2.selectionManager.focusedKey != null && !state2.selectionManager.isSelected(state2.selectionManager.focusedKey)) (0, $507fabe10e71c6fb$export$8397ddfc504fdb9a)("keyboard");
      state2.selectionManager.setFocused(true);
    }
  }, [
    localState
  ]);
  let onDrop = (0, import_react117.useCallback)((e, target) => {
    let { state: state2 } = localState;
    droppingState.current = {
      timeout: void 0,
      focusedKey: state2.selectionManager.focusedKey,
      collection: state2.collection,
      selectedKeys: state2.selectionManager.selectedKeys,
      draggingKeys: (0, $7252cd45fc48c07c$export$6ca6700462636d0b).draggingKeys,
      isInternal: (0, $7252cd45fc48c07c$export$78bf638634500fa5)(ref),
      target
    };
    let onDropFn = localState.props.onDrop || defaultOnDrop;
    onDropFn({
      type: "drop",
      x: e.x,
      y: e.y,
      target,
      items: e.items,
      dropOperation: e.dropOperation
    });
    droppingState.current.timeout = setTimeout(() => {
      updateFocusAfterDrop();
      droppingState.current = null;
    }, 50);
  }, [
    localState,
    defaultOnDrop,
    ref,
    updateFocusAfterDrop
  ]);
  (0, import_react117.useEffect)(() => {
    return () => {
      if (droppingState.current) clearTimeout(droppingState.current.timeout);
    };
  }, []);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    if (droppingState.current && state.collection !== droppingState.current.collection) updateFocusAfterDrop();
  });
  let { direction } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  (0, import_react117.useEffect)(() => {
    if (!ref.current) return;
    let getNextTarget = (target, wrap = true, key = "down") => {
      return (0, $e154566cef11553b$export$ff7962acd6052c28)(localState.props.keyboardDelegate, localState.state.collection, target, key, direction === "rtl", wrap);
    };
    let getPreviousTarget = (target, wrap = true) => {
      return getNextTarget(target, wrap, "up");
    };
    let nextValidTarget = (target, types, allowedDropOperations, getNextTarget2, wrap = true) => {
      let seenRoot = 0;
      let operation;
      let { draggingKeys } = (0, $7252cd45fc48c07c$export$6ca6700462636d0b);
      let isInternal = (0, $7252cd45fc48c07c$export$78bf638634500fa5)(ref);
      do {
        let nextTarget = getNextTarget2(target, wrap);
        if (!nextTarget) return null;
        target = nextTarget;
        operation = localState.state.getDropOperation({
          target: nextTarget,
          types,
          allowedOperations: allowedDropOperations,
          isInternal,
          draggingKeys
        });
        if (target.type === "root") seenRoot++;
      } while (operation === "cancel" && !localState.state.isDropTarget(target) && seenRoot < 2);
      if (operation === "cancel") return null;
      return target;
    };
    return $67560de7c78cb232$export$c28d9fb4a54e471a({
      element: ref.current,
      preventFocusOnDrop: true,
      getDropOperation(types, allowedOperations) {
        if (localState.state.target) {
          let { draggingKeys } = (0, $7252cd45fc48c07c$export$6ca6700462636d0b);
          let isInternal = (0, $7252cd45fc48c07c$export$78bf638634500fa5)(ref);
          return localState.state.getDropOperation({
            target: localState.state.target,
            types,
            allowedOperations,
            isInternal,
            draggingKeys
          });
        }
        let target = nextValidTarget(null, types, allowedOperations, getNextTarget);
        return target ? "move" : "cancel";
      },
      onDropEnter(e, drag) {
        let types = (0, $7252cd45fc48c07c$export$e1d41611756c6326)(drag.items);
        let selectionManager = localState.state.selectionManager;
        let target = null;
        (0, $7252cd45fc48c07c$export$dac8db29d42db9a1)(ref);
        let key = selectionManager.focusedKey;
        let dropPosition = "after";
        let item = key != null ? localState.state.collection.getItem(key) : null;
        if ((item === null || item === void 0 ? void 0 : item.type) === "cell") key = item.parentKey;
        if (key != null && selectionManager.isSelected(key)) {
          if (selectionManager.selectedKeys.size > 1 && selectionManager.firstSelectedKey === key) dropPosition = "before";
          else key = selectionManager.lastSelectedKey;
        }
        if (key != null) {
          target = {
            type: "item",
            key,
            dropPosition
          };
          let { draggingKeys } = (0, $7252cd45fc48c07c$export$6ca6700462636d0b);
          let isInternal = (0, $7252cd45fc48c07c$export$78bf638634500fa5)(ref);
          var _nextValidTarget;
          if (localState.state.getDropOperation({
            target,
            types,
            allowedOperations: drag.allowedDropOperations,
            isInternal,
            draggingKeys
          }) === "cancel") target = (_nextValidTarget = nextValidTarget(target, types, drag.allowedDropOperations, getNextTarget, false)) !== null && _nextValidTarget !== void 0 ? _nextValidTarget : nextValidTarget(target, types, drag.allowedDropOperations, getPreviousTarget, false);
        }
        if (!target) target = nextValidTarget(null, types, drag.allowedDropOperations, getNextTarget);
        localState.state.setTarget(target);
      },
      onDropExit() {
        (0, $7252cd45fc48c07c$export$dac8db29d42db9a1)(void 0);
        localState.state.setTarget(null);
      },
      onDropTargetEnter(target) {
        localState.state.setTarget(target);
      },
      onDropActivate(e, target) {
        if ((target === null || target === void 0 ? void 0 : target.type) === "item" && (target === null || target === void 0 ? void 0 : target.dropPosition) === "on" && typeof localState.props.onDropActivate === "function") localState.props.onDropActivate({
          type: "dropactivate",
          x: e.x,
          y: e.y,
          target
        });
      },
      onDrop(e, target) {
        (0, $7252cd45fc48c07c$export$dac8db29d42db9a1)(ref);
        if (localState.state.target) onDrop(e, target || localState.state.target);
      },
      onKeyDown(e, drag) {
        var _localState_props_onKeyDown, _localState_props;
        let { keyboardDelegate } = localState.props;
        let types = (0, $7252cd45fc48c07c$export$e1d41611756c6326)(drag.items);
        switch (e.key) {
          case "ArrowDown":
            if (keyboardDelegate.getKeyBelow) {
              let target = nextValidTarget(localState.state.target, types, drag.allowedDropOperations, (target2, wrap) => getNextTarget(target2, wrap, "down"));
              localState.state.setTarget(target);
            }
            break;
          case "ArrowUp":
            if (keyboardDelegate.getKeyAbove) {
              let target = nextValidTarget(localState.state.target, types, drag.allowedDropOperations, (target2, wrap) => getNextTarget(target2, wrap, "up"));
              localState.state.setTarget(target);
            }
            break;
          case "ArrowLeft":
            if (keyboardDelegate.getKeyLeftOf) {
              let target = nextValidTarget(localState.state.target, types, drag.allowedDropOperations, (target2, wrap) => getNextTarget(target2, wrap, "left"));
              localState.state.setTarget(target);
            }
            break;
          case "ArrowRight":
            if (keyboardDelegate.getKeyRightOf) {
              let target = nextValidTarget(localState.state.target, types, drag.allowedDropOperations, (target2, wrap) => getNextTarget(target2, wrap, "right"));
              localState.state.setTarget(target);
            }
            break;
          case "Home":
            if (keyboardDelegate.getFirstKey) {
              let target = nextValidTarget(null, types, drag.allowedDropOperations, getNextTarget);
              localState.state.setTarget(target);
            }
            break;
          case "End":
            if (keyboardDelegate.getLastKey) {
              let target = nextValidTarget(null, types, drag.allowedDropOperations, getPreviousTarget);
              localState.state.setTarget(target);
            }
            break;
          case "PageDown":
            if (keyboardDelegate.getKeyPageBelow) {
              let target = localState.state.target;
              if (!target) target = nextValidTarget(null, types, drag.allowedDropOperations, getNextTarget);
              else {
                var _keyboardDelegate_getFirstKey, _keyboardDelegate_getLastKey;
                let targetKey = (_keyboardDelegate_getFirstKey = keyboardDelegate.getFirstKey) === null || _keyboardDelegate_getFirstKey === void 0 ? void 0 : _keyboardDelegate_getFirstKey.call(keyboardDelegate);
                if (target.type === "item") targetKey = target.key;
                let nextKey = null;
                if (targetKey != null) nextKey = keyboardDelegate.getKeyPageBelow(targetKey);
                let dropPosition = target.type === "item" ? target.dropPosition : "after";
                if (nextKey == null || target.type === "item" && target.key === ((_keyboardDelegate_getLastKey = keyboardDelegate.getLastKey) === null || _keyboardDelegate_getLastKey === void 0 ? void 0 : _keyboardDelegate_getLastKey.call(keyboardDelegate))) {
                  var _keyboardDelegate_getLastKey1;
                  var _keyboardDelegate_getLastKey2;
                  nextKey = (_keyboardDelegate_getLastKey2 = (_keyboardDelegate_getLastKey1 = keyboardDelegate.getLastKey) === null || _keyboardDelegate_getLastKey1 === void 0 ? void 0 : _keyboardDelegate_getLastKey1.call(keyboardDelegate)) !== null && _keyboardDelegate_getLastKey2 !== void 0 ? _keyboardDelegate_getLastKey2 : null;
                  dropPosition = "after";
                }
                if (nextKey == null) break;
                target = {
                  type: "item",
                  key: nextKey,
                  dropPosition
                };
                let { draggingCollectionRef, draggingKeys } = (0, $7252cd45fc48c07c$export$6ca6700462636d0b);
                let isInternal = (draggingCollectionRef === null || draggingCollectionRef === void 0 ? void 0 : draggingCollectionRef.current) === (ref === null || ref === void 0 ? void 0 : ref.current);
                let operation = localState.state.getDropOperation({
                  target,
                  types,
                  allowedOperations: drag.allowedDropOperations,
                  isInternal,
                  draggingKeys
                });
                var _nextValidTarget;
                if (operation === "cancel") target = (_nextValidTarget = nextValidTarget(target, types, drag.allowedDropOperations, getNextTarget, false)) !== null && _nextValidTarget !== void 0 ? _nextValidTarget : nextValidTarget(target, types, drag.allowedDropOperations, getPreviousTarget, false);
              }
              localState.state.setTarget(target !== null && target !== void 0 ? target : localState.state.target);
            }
            break;
          case "PageUp": {
            if (!keyboardDelegate.getKeyPageAbove) break;
            let target = localState.state.target;
            if (!target) target = nextValidTarget(null, types, drag.allowedDropOperations, getPreviousTarget);
            else if (target.type === "item") {
              var _keyboardDelegate_getFirstKey1;
              if (target.key === ((_keyboardDelegate_getFirstKey1 = keyboardDelegate.getFirstKey) === null || _keyboardDelegate_getFirstKey1 === void 0 ? void 0 : _keyboardDelegate_getFirstKey1.call(keyboardDelegate))) target = {
                type: "root"
              };
              else {
                let nextKey = keyboardDelegate.getKeyPageAbove(target.key);
                let dropPosition = target.dropPosition;
                if (nextKey == null) {
                  var _keyboardDelegate_getFirstKey2;
                  nextKey = (_keyboardDelegate_getFirstKey2 = keyboardDelegate.getFirstKey) === null || _keyboardDelegate_getFirstKey2 === void 0 ? void 0 : _keyboardDelegate_getFirstKey2.call(keyboardDelegate);
                  dropPosition = "before";
                }
                if (nextKey == null) break;
                target = {
                  type: "item",
                  key: nextKey,
                  dropPosition
                };
              }
              let { draggingKeys } = (0, $7252cd45fc48c07c$export$6ca6700462636d0b);
              let isInternal = (0, $7252cd45fc48c07c$export$78bf638634500fa5)(ref);
              let operation = localState.state.getDropOperation({
                target,
                types,
                allowedOperations: drag.allowedDropOperations,
                isInternal,
                draggingKeys
              });
              var _nextValidTarget1;
              if (operation === "cancel") target = (_nextValidTarget1 = nextValidTarget(target, types, drag.allowedDropOperations, getPreviousTarget, false)) !== null && _nextValidTarget1 !== void 0 ? _nextValidTarget1 : nextValidTarget(target, types, drag.allowedDropOperations, getNextTarget, false);
            }
            localState.state.setTarget(target !== null && target !== void 0 ? target : localState.state.target);
            break;
          }
        }
        (_localState_props_onKeyDown = (_localState_props = localState.props).onKeyDown) === null || _localState_props_onKeyDown === void 0 ? void 0 : _localState_props_onKeyDown.call(_localState_props, e);
      }
    });
  }, [
    localState,
    ref,
    onDrop,
    direction
  ]);
  let id = (0, $bdb11010cef70236$export$f680877a34711e37)();
  (0, $7252cd45fc48c07c$export$dfdf5deeaf27473f).set(state, {
    id,
    ref
  });
  return {
    collectionProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(dropProps, {
      id,
      // Remove description from collection element. If dropping on the entire collection,
      // there should be a drop indicator that has this description, so no need to double announce.
      "aria-describedby": null
    })
  };
}

// node_modules/@react-aria/dnd/dist/useDroppableItem.mjs
var import_react118 = __toESM(require_react(), 1);
function $bfaab576ce1c580e$export$f7b0c5d28b66b6a5(options, state, ref) {
  let { dropProps } = (0, $224594fe3e57ff1e$export$62447ad3d2ec7da6)();
  let droppableCollectionRef = (0, $7252cd45fc48c07c$export$7e397efd01d3db27)(state);
  (0, import_react118.useEffect)(() => {
    if (ref.current) return $67560de7c78cb232$export$aef80212ac99c003({
      element: ref.current,
      target: options.target,
      getDropOperation(types, allowedOperations) {
        let { draggingKeys: draggingKeys2 } = (0, $7252cd45fc48c07c$export$6ca6700462636d0b);
        let isInternal2 = (0, $7252cd45fc48c07c$export$78bf638634500fa5)(droppableCollectionRef);
        return state.getDropOperation({
          target: options.target,
          types,
          allowedOperations,
          isInternal: isInternal2,
          draggingKeys: draggingKeys2
        });
      },
      activateButtonRef: options.activateButtonRef
    });
  }, [
    ref,
    options.target,
    state,
    droppableCollectionRef,
    options.activateButtonRef
  ]);
  let dragSession = $67560de7c78cb232$export$418e185dd3f1b968();
  let { draggingKeys } = (0, $7252cd45fc48c07c$export$6ca6700462636d0b);
  let isInternal = (0, $7252cd45fc48c07c$export$78bf638634500fa5)(droppableCollectionRef);
  let isValidDropTarget = dragSession && state.getDropOperation({
    target: options.target,
    types: (0, $7252cd45fc48c07c$export$e1d41611756c6326)(dragSession.dragTarget.items),
    allowedOperations: dragSession.dragTarget.allowedDropOperations,
    isInternal,
    draggingKeys
  }) !== "cancel";
  let isDropTarget = state.isDropTarget(options.target);
  (0, import_react118.useEffect)(() => {
    if (dragSession && isDropTarget && ref.current) ref.current.focus();
  }, [
    isDropTarget,
    dragSession,
    ref
  ]);
  return {
    dropProps: {
      ...dropProps,
      "aria-hidden": !dragSession || isValidDropTarget ? void 0 : "true"
    },
    isDropTarget
  };
}

// node_modules/@react-aria/dnd/dist/useDropIndicator.mjs
function $parcel$interopDefault19(a) {
  return a && a.__esModule ? a.default : a;
}
function $ddf25448c71fc93a$export$8d0e41d2815afac5(props, state, ref) {
  let { target } = props;
  let { collection } = state;
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault19($865c2eb7c00a83f1$exports)), "@react-aria/dnd");
  let dragSession = $67560de7c78cb232$export$418e185dd3f1b968();
  let { dropProps } = (0, $bfaab576ce1c580e$export$f7b0c5d28b66b6a5)(props, state, ref);
  let id = (0, $bdb11010cef70236$export$f680877a34711e37)();
  let getText = (key) => {
    var _collection_getTextValue, _collection_getItem2;
    var _collection_getTextValue1, _ref;
    if (key == null) return "";
    else return (_ref = (_collection_getTextValue1 = (_collection_getTextValue = collection.getTextValue) === null || _collection_getTextValue === void 0 ? void 0 : _collection_getTextValue.call(collection, key)) !== null && _collection_getTextValue1 !== void 0 ? _collection_getTextValue1 : (_collection_getItem2 = collection.getItem(key)) === null || _collection_getItem2 === void 0 ? void 0 : _collection_getItem2.textValue) !== null && _ref !== void 0 ? _ref : "";
  };
  let label = "";
  let labelledBy;
  if (target.type === "root") {
    label = stringFormatter.format("dropOnRoot");
    labelledBy = `${id} ${(0, $7252cd45fc48c07c$export$3093291712f09a77)(state)}`;
  } else if (target.dropPosition === "on") label = stringFormatter.format("dropOnItem", {
    itemText: getText(target.key)
  });
  else {
    let before;
    let after;
    if (target.dropPosition === "before") {
      var _collection_getItem;
      let prevKey = (_collection_getItem = collection.getItem(target.key)) === null || _collection_getItem === void 0 ? void 0 : _collection_getItem.prevKey;
      let prevNode = prevKey != null ? collection.getItem(prevKey) : null;
      before = (prevNode === null || prevNode === void 0 ? void 0 : prevNode.type) === "item" ? prevNode.key : null;
    } else before = target.key;
    if (target.dropPosition === "after") {
      var _collection_getItem1;
      let nextKey = (_collection_getItem1 = collection.getItem(target.key)) === null || _collection_getItem1 === void 0 ? void 0 : _collection_getItem1.nextKey;
      let nextNode = nextKey != null ? collection.getItem(nextKey) : null;
      after = (nextNode === null || nextNode === void 0 ? void 0 : nextNode.type) === "item" ? nextNode.key : null;
    } else after = target.key;
    if (before != null && after != null) label = stringFormatter.format("insertBetween", {
      beforeItemText: getText(before),
      afterItemText: getText(after)
    });
    else if (before != null) label = stringFormatter.format("insertAfter", {
      itemText: getText(before)
    });
    else if (after != null) label = stringFormatter.format("insertBefore", {
      itemText: getText(after)
    });
  }
  let isDropTarget = state.isDropTarget(target);
  let ariaHidden = !dragSession ? "true" : dropProps["aria-hidden"];
  return {
    dropIndicatorProps: {
      ...dropProps,
      id,
      "aria-roledescription": stringFormatter.format("dropIndicator"),
      "aria-label": label,
      "aria-labelledby": labelledBy,
      "aria-hidden": ariaHidden,
      tabIndex: -1
    },
    isDropTarget,
    // If aria-hidden, we are either not in a drag session or the drop target is invalid.
    // In that case, there's no need to render anything at all unless we need to show the indicator visually.
    // This can happen when dragging using the native DnD API as opposed to keyboard dragging.
    isHidden: !isDropTarget && !!ariaHidden
  };
}

// node_modules/@react-aria/dnd/dist/useDraggableItem.mjs
function $parcel$interopDefault20(a) {
  return a && a.__esModule ? a.default : a;
}
var $fd98cf7cbf233429$var$MESSAGES = {
  keyboard: {
    selected: "dragSelectedKeyboard",
    notSelected: "dragDescriptionKeyboard"
  },
  touch: {
    selected: "dragSelectedLongPress",
    notSelected: "dragDescriptionLongPress"
  },
  virtual: {
    selected: "dragDescriptionVirtual",
    notSelected: "dragDescriptionVirtual"
  }
};
function $fd98cf7cbf233429$export$b35afafff42da2d9(props, state) {
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault20($865c2eb7c00a83f1$exports)), "@react-aria/dnd");
  let isDisabled = state.isDisabled || state.selectionManager.isDisabled(props.key);
  let { dragProps, dragButtonProps } = (0, $8253ed7ece74b463$export$7941f8aafa4b6021)({
    getItems() {
      return state.getItems(props.key);
    },
    preview: state.preview,
    getAllowedDropOperations: state.getAllowedDropOperations,
    hasDragButton: props.hasDragButton,
    onDragStart(e) {
      state.startDrag(props.key, e);
      (0, $7252cd45fc48c07c$export$72cb63bdda528276)(state.draggingKeys);
    },
    onDragMove(e) {
      state.moveDrag(e);
    },
    onDragEnd(e) {
      let { dropOperation } = e;
      let isInternal = dropOperation === "cancel" ? false : (0, $7252cd45fc48c07c$export$78bf638634500fa5)();
      state.endDrag({
        ...e,
        keys: state.draggingKeys,
        isInternal
      });
      (0, $7252cd45fc48c07c$export$70936501603e6c57)();
    }
  });
  let item = state.collection.getItem(props.key);
  let numKeysForDrag = state.getKeysForDrag(props.key).size;
  let isSelected = numKeysForDrag > 1 && state.selectionManager.isSelected(props.key);
  let dragButtonLabel;
  let description;
  let modality = (0, $7252cd45fc48c07c$export$49bac5d6d4b352ea)();
  if (!props.hasDragButton && state.selectionManager.selectionMode !== "none") {
    let msg = $fd98cf7cbf233429$var$MESSAGES[modality][isSelected ? "selected" : "notSelected"];
    if (props.hasAction && modality === "keyboard") msg += "Alt";
    if (isSelected) description = stringFormatter.format(msg, {
      count: numKeysForDrag
    });
    else description = stringFormatter.format(msg);
    delete dragProps.onClick;
  } else if (isSelected) dragButtonLabel = stringFormatter.format("dragSelectedItems", {
    count: numKeysForDrag
  });
  else {
    var _state_collection_getTextValue, _state_collection;
    var _state_collection_getTextValue1, _ref;
    let itemText = (_ref = (_state_collection_getTextValue1 = (_state_collection_getTextValue = (_state_collection = state.collection).getTextValue) === null || _state_collection_getTextValue === void 0 ? void 0 : _state_collection_getTextValue.call(_state_collection, props.key)) !== null && _state_collection_getTextValue1 !== void 0 ? _state_collection_getTextValue1 : item === null || item === void 0 ? void 0 : item.textValue) !== null && _ref !== void 0 ? _ref : "";
    dragButtonLabel = stringFormatter.format("dragItem", {
      itemText
    });
  }
  let descriptionProps = (0, $ef06256079686ba0$export$f8aeda7b10753fa1)(description);
  if (description) Object.assign(dragProps, descriptionProps);
  if (!props.hasDragButton && props.hasAction) {
    let { onKeyDownCapture, onKeyUpCapture } = dragProps;
    if (modality === "touch")
      delete dragProps["aria-describedby"];
    dragProps.onKeyDownCapture = (e) => {
      if (e.altKey) onKeyDownCapture === null || onKeyDownCapture === void 0 ? void 0 : onKeyDownCapture(e);
    };
    dragProps.onKeyUpCapture = (e) => {
      if (e.altKey) onKeyUpCapture === null || onKeyUpCapture === void 0 ? void 0 : onKeyUpCapture(e);
    };
  }
  return {
    dragProps: isDisabled ? {} : dragProps,
    dragButtonProps: {
      ...dragButtonProps,
      isDisabled,
      "aria-label": dragButtonLabel
    }
  };
}

// node_modules/@react-aria/dnd/dist/useDraggableCollection.mjs
function $4ac1fdc3a0fcd564$export$2962a7984b2f0a80(props, state, ref) {
  let { draggingCollectionRef } = (0, $7252cd45fc48c07c$export$6ca6700462636d0b);
  if (state.draggingKeys.size > 0 && (draggingCollectionRef === null || draggingCollectionRef === void 0 ? void 0 : draggingCollectionRef.current) !== ref.current) (0, $7252cd45fc48c07c$export$f2be18a910c0caa6)(ref);
}

// node_modules/@react-aria/dnd/dist/useClipboard.mjs
var import_react119 = __toESM(require_react(), 1);
var $9fcc7f0d70d084ee$var$globalEvents = /* @__PURE__ */ new Map();
function $9fcc7f0d70d084ee$var$addGlobalEventListener(event, fn) {
  let eventData = $9fcc7f0d70d084ee$var$globalEvents.get(event);
  if (!eventData) {
    let handlers = /* @__PURE__ */ new Set();
    let listener = (e) => {
      for (let handler of handlers) handler(e);
    };
    eventData = {
      listener,
      handlers
    };
    $9fcc7f0d70d084ee$var$globalEvents.set(event, eventData);
    document.addEventListener(event, listener);
  }
  eventData.handlers.add(fn);
  return () => {
    eventData.handlers.delete(fn);
    if (eventData.handlers.size === 0) {
      document.removeEventListener(event, eventData.listener);
      $9fcc7f0d70d084ee$var$globalEvents.delete(event);
    }
  };
}
function $9fcc7f0d70d084ee$export$2314ca2a3e892862(options) {
  let { isDisabled } = options;
  let isFocusedRef = (0, import_react119.useRef)(false);
  let { focusProps } = (0, $a1ea59d68270f0dd$export$f8168d8dd8fd66e6)({
    onFocusChange: (isFocused) => {
      isFocusedRef.current = isFocused;
    }
  });
  let onBeforeCopy = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e) => {
    if (isFocusedRef.current && options.getItems) e.preventDefault();
  });
  let onCopy = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e) => {
    if (!isFocusedRef.current || !options.getItems) return;
    e.preventDefault();
    if (e.clipboardData) {
      var _options_onCopy;
      (0, $7252cd45fc48c07c$export$f9c1490890ddd063)(e.clipboardData, options.getItems({
        action: "copy"
      }));
      (_options_onCopy = options.onCopy) === null || _options_onCopy === void 0 ? void 0 : _options_onCopy.call(options);
    }
  });
  let onBeforeCut = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e) => {
    if (isFocusedRef.current && options.onCut && options.getItems) e.preventDefault();
  });
  let onCut = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e) => {
    if (!isFocusedRef.current || !options.onCut || !options.getItems) return;
    e.preventDefault();
    if (e.clipboardData) {
      (0, $7252cd45fc48c07c$export$f9c1490890ddd063)(e.clipboardData, options.getItems({
        action: "cut"
      }));
      options.onCut();
    }
  });
  let onBeforePaste = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e) => {
    if (isFocusedRef.current && options.onPaste) e.preventDefault();
  });
  let onPaste = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e) => {
    if (!isFocusedRef.current || !options.onPaste) return;
    e.preventDefault();
    if (e.clipboardData) {
      let items = (0, $7252cd45fc48c07c$export$d9e760437831f8b3)(e.clipboardData);
      options.onPaste(items);
    }
  });
  (0, import_react119.useEffect)(() => {
    if (isDisabled) return;
    return (0, $ff5963eb1fccf552$export$e08e3b67e392101e)($9fcc7f0d70d084ee$var$addGlobalEventListener("beforecopy", onBeforeCopy), $9fcc7f0d70d084ee$var$addGlobalEventListener("copy", onCopy), $9fcc7f0d70d084ee$var$addGlobalEventListener("beforecut", onBeforeCut), $9fcc7f0d70d084ee$var$addGlobalEventListener("cut", onCut), $9fcc7f0d70d084ee$var$addGlobalEventListener("beforepaste", onBeforePaste), $9fcc7f0d70d084ee$var$addGlobalEventListener("paste", onPaste));
  }, [
    isDisabled,
    onBeforeCopy,
    onCopy,
    onBeforeCut,
    onCut,
    onBeforePaste,
    onPaste
  ]);
  return {
    clipboardProps: focusProps
  };
}

// node_modules/@react-aria/dnd/dist/DragPreview.mjs
var import_react_dom8 = __toESM(require_react_dom(), 1);
var import_react120 = __toESM(require_react(), 1);
var $ad0e3f3d9c50e4ba$export$905ab40ac2179daa = (0, import_react120.default).forwardRef(function DragPreview(props, ref) {
  let render = props.children;
  let [children, setChildren] = (0, import_react120.useState)(null);
  let domRef = (0, import_react120.useRef)(null);
  let raf = (0, import_react120.useRef)(void 0);
  (0, import_react120.useImperativeHandle)(ref, () => (items, callback) => {
    (0, import_react_dom8.flushSync)(() => {
      setChildren(render(items));
    });
    callback(domRef.current);
    raf.current = requestAnimationFrame(() => {
      setChildren(null);
    });
  }, [
    render
  ]);
  (0, import_react120.useEffect)(() => {
    return () => {
      if (raf.current) cancelAnimationFrame(raf.current);
    };
  }, []);
  if (!children) return null;
  return (0, import_react120.default).createElement("div", {
    style: {
      zIndex: -100,
      position: "absolute",
      top: 0,
      left: -1e5
    },
    ref: domRef
  }, children);
});

// node_modules/@react-aria/dnd/dist/ListDropTargetDelegate.mjs
var $3ca85212bf8898e4$export$fbd65d14c79e28cc = class {
  getPrimaryStart(rect) {
    return this.orientation === "horizontal" ? rect.left : rect.top;
  }
  getPrimaryEnd(rect) {
    return this.orientation === "horizontal" ? rect.right : rect.bottom;
  }
  getSecondaryStart(rect) {
    return this.orientation === "horizontal" ? rect.top : rect.left;
  }
  getSecondaryEnd(rect) {
    return this.orientation === "horizontal" ? rect.bottom : rect.right;
  }
  getFlowStart(rect) {
    return this.layout === "stack" ? this.getPrimaryStart(rect) : this.getSecondaryStart(rect);
  }
  getFlowEnd(rect) {
    return this.layout === "stack" ? this.getPrimaryEnd(rect) : this.getSecondaryEnd(rect);
  }
  getFlowSize(rect) {
    return this.getFlowEnd(rect) - this.getFlowStart(rect);
  }
  getDropTargetFromPoint(x, y, isValidDropTarget) {
    var _this_ref_current;
    if (this.collection[Symbol.iterator]().next().done || !this.ref.current) return {
      type: "root"
    };
    let rect = this.ref.current.getBoundingClientRect();
    let primary = this.orientation === "horizontal" ? x : y;
    let secondary = this.orientation === "horizontal" ? y : x;
    primary += this.getPrimaryStart(rect);
    secondary += this.getSecondaryStart(rect);
    let flow = this.layout === "stack" ? primary : secondary;
    let isPrimaryRTL = this.orientation === "horizontal" && this.direction === "rtl";
    let isSecondaryRTL = this.layout === "grid" && this.orientation === "vertical" && this.direction === "rtl";
    let isFlowRTL = this.layout === "stack" ? isPrimaryRTL : isSecondaryRTL;
    let collection = (_this_ref_current = this.ref.current) === null || _this_ref_current === void 0 ? void 0 : _this_ref_current.dataset.collection;
    let elements = this.ref.current.querySelectorAll(collection ? `[data-collection="${CSS.escape(collection)}"]` : "[data-key]");
    let elementMap = /* @__PURE__ */ new Map();
    for (let item2 of elements) if (item2 instanceof HTMLElement && item2.dataset.key != null) elementMap.set(item2.dataset.key, item2);
    let items = [
      ...this.collection
    ].filter((item2) => item2.type === "item");
    let low = 0;
    let high = items.length;
    while (low < high) {
      let mid = Math.floor((low + high) / 2);
      let item2 = items[mid];
      let element2 = elementMap.get(String(item2.key));
      if (!element2) break;
      let rect2 = element2.getBoundingClientRect();
      let update = (isGreater) => {
        if (isGreater) low = mid + 1;
        else high = mid;
      };
      if (primary < this.getPrimaryStart(rect2)) update(isPrimaryRTL);
      else if (primary > this.getPrimaryEnd(rect2)) update(!isPrimaryRTL);
      else if (secondary < this.getSecondaryStart(rect2)) update(isSecondaryRTL);
      else if (secondary > this.getSecondaryEnd(rect2)) update(!isSecondaryRTL);
      else {
        let target = {
          type: "item",
          key: item2.key,
          dropPosition: "on"
        };
        if (isValidDropTarget(target)) {
          if (flow <= this.getFlowStart(rect2) + 5 && isValidDropTarget({
            ...target,
            dropPosition: "before"
          })) target.dropPosition = isFlowRTL ? "after" : "before";
          else if (flow >= this.getFlowEnd(rect2) - 5 && isValidDropTarget({
            ...target,
            dropPosition: "after"
          })) target.dropPosition = isFlowRTL ? "before" : "after";
        } else {
          let mid2 = this.getFlowStart(rect2) + this.getFlowSize(rect2) / 2;
          if (flow <= mid2 && isValidDropTarget({
            ...target,
            dropPosition: "before"
          })) target.dropPosition = isFlowRTL ? "after" : "before";
          else if (flow >= mid2 && isValidDropTarget({
            ...target,
            dropPosition: "after"
          })) target.dropPosition = isFlowRTL ? "before" : "after";
        }
        return target;
      }
    }
    let item = items[Math.min(low, items.length - 1)];
    let element = elementMap.get(String(item.key));
    rect = element === null || element === void 0 ? void 0 : element.getBoundingClientRect();
    if (rect && (primary < this.getPrimaryStart(rect) || Math.abs(flow - this.getFlowStart(rect)) < Math.abs(flow - this.getFlowEnd(rect)))) return {
      type: "item",
      key: item.key,
      dropPosition: isFlowRTL ? "after" : "before"
    };
    return {
      type: "item",
      key: item.key,
      dropPosition: isFlowRTL ? "before" : "after"
    };
  }
  constructor(collection, ref, options) {
    this.collection = collection;
    this.ref = ref;
    this.layout = (options === null || options === void 0 ? void 0 : options.layout) || "stack";
    this.orientation = (options === null || options === void 0 ? void 0 : options.orientation) || "vertical";
    this.direction = (options === null || options === void 0 ? void 0 : options.direction) || "ltr";
  }
};

// node_modules/@react-aria/gridlist/dist/utils.mjs
var $ce9b18daab526bbd$export$5b9bb410392e3991 = /* @__PURE__ */ new WeakMap();
function $ce9b18daab526bbd$export$f45c25170b9a99c2(state, key) {
  var _listMap_get;
  let { id } = (_listMap_get = $ce9b18daab526bbd$export$5b9bb410392e3991.get(state)) !== null && _listMap_get !== void 0 ? _listMap_get : {};
  if (!id) throw new Error("Unknown list");
  return `${id}-${$ce9b18daab526bbd$export$e0c709538cb8ae18(key)}`;
}
function $ce9b18daab526bbd$export$e0c709538cb8ae18(key) {
  if (typeof key === "string") return key.replace(/\s*/g, "");
  return "" + key;
}

// node_modules/@react-aria/grid/dist/GridKeyboardDelegate.mjs
var $d1c300d9c497e402$export$de9feff04fda126e = class {
  isCell(node) {
    return node.type === "cell";
  }
  isRow(node) {
    return node.type === "row" || node.type === "item";
  }
  isDisabled(item) {
    var _item_props;
    return this.disabledBehavior === "all" && (((_item_props = item.props) === null || _item_props === void 0 ? void 0 : _item_props.isDisabled) || this.disabledKeys.has(item.key));
  }
  findPreviousKey(fromKey, pred) {
    let key = fromKey != null ? this.collection.getKeyBefore(fromKey) : this.collection.getLastKey();
    while (key != null) {
      let item = this.collection.getItem(key);
      if (!item) return null;
      if (!this.isDisabled(item) && (!pred || pred(item))) return key;
      key = this.collection.getKeyBefore(key);
    }
    return null;
  }
  findNextKey(fromKey, pred) {
    let key = fromKey != null ? this.collection.getKeyAfter(fromKey) : this.collection.getFirstKey();
    while (key != null) {
      let item = this.collection.getItem(key);
      if (!item) return null;
      if (!this.isDisabled(item) && (!pred || pred(item))) return key;
      key = this.collection.getKeyAfter(key);
      if (key == null) return null;
    }
    return null;
  }
  getKeyForItemInRowByIndex(key, index = 0) {
    if (index < 0) return null;
    let item = this.collection.getItem(key);
    if (!item) return null;
    let i = 0;
    for (let child of (0, $c5a24bc478652b5f$export$1005530eda016c13)(item, this.collection)) {
      var _child_key;
      if (child.colSpan && child.colSpan + i > index) return (_child_key = child.key) !== null && _child_key !== void 0 ? _child_key : null;
      if (child.colSpan) i = i + child.colSpan - 1;
      var _child_key1;
      if (i === index) return (_child_key1 = child.key) !== null && _child_key1 !== void 0 ? _child_key1 : null;
      i++;
    }
    return null;
  }
  getKeyBelow(fromKey) {
    let key = fromKey;
    let startItem = this.collection.getItem(key);
    if (!startItem) return null;
    var _startItem_parentKey;
    if (this.isCell(startItem)) key = (_startItem_parentKey = startItem.parentKey) !== null && _startItem_parentKey !== void 0 ? _startItem_parentKey : null;
    if (key == null) return null;
    key = this.findNextKey(key, (item) => item.type === "item");
    if (key != null) {
      if (this.isCell(startItem)) {
        let startIndex = startItem.colIndex ? startItem.colIndex : startItem.index;
        return this.getKeyForItemInRowByIndex(key, startIndex);
      }
      if (this.focusMode === "row") return key;
    }
    return null;
  }
  getKeyAbove(fromKey) {
    let key = fromKey;
    let startItem = this.collection.getItem(key);
    if (!startItem) return null;
    var _startItem_parentKey;
    if (this.isCell(startItem)) key = (_startItem_parentKey = startItem.parentKey) !== null && _startItem_parentKey !== void 0 ? _startItem_parentKey : null;
    if (key == null) return null;
    key = this.findPreviousKey(key, (item) => item.type === "item");
    if (key != null) {
      if (this.isCell(startItem)) {
        let startIndex = startItem.colIndex ? startItem.colIndex : startItem.index;
        return this.getKeyForItemInRowByIndex(key, startIndex);
      }
      if (this.focusMode === "row") return key;
    }
    return null;
  }
  getKeyRightOf(key) {
    let item = this.collection.getItem(key);
    if (!item) return null;
    if (this.isRow(item)) {
      var _getLastItem, _getFirstItem;
      let children = (0, $c5a24bc478652b5f$export$1005530eda016c13)(item, this.collection);
      var _ref;
      return (_ref = this.direction === "rtl" ? (_getLastItem = (0, $c5a24bc478652b5f$export$7475b2c64539e4cf)(children)) === null || _getLastItem === void 0 ? void 0 : _getLastItem.key : (_getFirstItem = (0, $c5a24bc478652b5f$export$fbdeaa6a76694f71)(children)) === null || _getFirstItem === void 0 ? void 0 : _getFirstItem.key) !== null && _ref !== void 0 ? _ref : null;
    }
    if (this.isCell(item) && item.parentKey != null) {
      let parent = this.collection.getItem(item.parentKey);
      if (!parent) return null;
      let children = (0, $c5a24bc478652b5f$export$1005530eda016c13)(parent, this.collection);
      var _ref1;
      let next = (_ref1 = this.direction === "rtl" ? (0, $c5a24bc478652b5f$export$5f3398f8733f90e2)(children, item.index - 1) : (0, $c5a24bc478652b5f$export$5f3398f8733f90e2)(children, item.index + 1)) !== null && _ref1 !== void 0 ? _ref1 : null;
      var _next_key;
      if (next) return (_next_key = next.key) !== null && _next_key !== void 0 ? _next_key : null;
      var _item_parentKey;
      if (this.focusMode === "row") return (_item_parentKey = item.parentKey) !== null && _item_parentKey !== void 0 ? _item_parentKey : null;
      var _ref2;
      return (_ref2 = this.direction === "rtl" ? this.getFirstKey(key) : this.getLastKey(key)) !== null && _ref2 !== void 0 ? _ref2 : null;
    }
    return null;
  }
  getKeyLeftOf(key) {
    let item = this.collection.getItem(key);
    if (!item) return null;
    if (this.isRow(item)) {
      var _getFirstItem, _getLastItem;
      let children = (0, $c5a24bc478652b5f$export$1005530eda016c13)(item, this.collection);
      var _ref;
      return (_ref = this.direction === "rtl" ? (_getFirstItem = (0, $c5a24bc478652b5f$export$fbdeaa6a76694f71)(children)) === null || _getFirstItem === void 0 ? void 0 : _getFirstItem.key : (_getLastItem = (0, $c5a24bc478652b5f$export$7475b2c64539e4cf)(children)) === null || _getLastItem === void 0 ? void 0 : _getLastItem.key) !== null && _ref !== void 0 ? _ref : null;
    }
    if (this.isCell(item) && item.parentKey != null) {
      let parent = this.collection.getItem(item.parentKey);
      if (!parent) return null;
      let children = (0, $c5a24bc478652b5f$export$1005530eda016c13)(parent, this.collection);
      var _ref1;
      let prev = (_ref1 = this.direction === "rtl" ? (0, $c5a24bc478652b5f$export$5f3398f8733f90e2)(children, item.index + 1) : (0, $c5a24bc478652b5f$export$5f3398f8733f90e2)(children, item.index - 1)) !== null && _ref1 !== void 0 ? _ref1 : null;
      var _prev_key;
      if (prev) return (_prev_key = prev.key) !== null && _prev_key !== void 0 ? _prev_key : null;
      var _item_parentKey;
      if (this.focusMode === "row") return (_item_parentKey = item.parentKey) !== null && _item_parentKey !== void 0 ? _item_parentKey : null;
      var _ref2;
      return (_ref2 = this.direction === "rtl" ? this.getLastKey(key) : this.getFirstKey(key)) !== null && _ref2 !== void 0 ? _ref2 : null;
    }
    return null;
  }
  getFirstKey(fromKey, global) {
    let key = fromKey !== null && fromKey !== void 0 ? fromKey : null;
    let item;
    if (key != null) {
      item = this.collection.getItem(key);
      if (!item) return null;
      if (this.isCell(item) && !global && item.parentKey != null) {
        var _getFirstItem;
        let parent = this.collection.getItem(item.parentKey);
        if (!parent) return null;
        var _getFirstItem_key;
        return (_getFirstItem_key = (_getFirstItem = (0, $c5a24bc478652b5f$export$fbdeaa6a76694f71)((0, $c5a24bc478652b5f$export$1005530eda016c13)(parent, this.collection))) === null || _getFirstItem === void 0 ? void 0 : _getFirstItem.key) !== null && _getFirstItem_key !== void 0 ? _getFirstItem_key : null;
      }
    }
    key = this.findNextKey(void 0, (item2) => item2.type === "item");
    if (key != null && (item && this.isCell(item) && global || this.focusMode === "cell")) {
      var _getFirstItem1;
      let item2 = this.collection.getItem(key);
      if (!item2) return null;
      var _getFirstItem_key1;
      key = (_getFirstItem_key1 = (_getFirstItem1 = (0, $c5a24bc478652b5f$export$fbdeaa6a76694f71)((0, $c5a24bc478652b5f$export$1005530eda016c13)(item2, this.collection))) === null || _getFirstItem1 === void 0 ? void 0 : _getFirstItem1.key) !== null && _getFirstItem_key1 !== void 0 ? _getFirstItem_key1 : null;
    }
    return key;
  }
  getLastKey(fromKey, global) {
    let key = fromKey !== null && fromKey !== void 0 ? fromKey : null;
    let item;
    if (key != null) {
      item = this.collection.getItem(key);
      if (!item) return null;
      if (this.isCell(item) && !global && item.parentKey != null) {
        var _getLastItem;
        let parent = this.collection.getItem(item.parentKey);
        if (!parent) return null;
        let children = (0, $c5a24bc478652b5f$export$1005530eda016c13)(parent, this.collection);
        var _getLastItem_key;
        return (_getLastItem_key = (_getLastItem = (0, $c5a24bc478652b5f$export$7475b2c64539e4cf)(children)) === null || _getLastItem === void 0 ? void 0 : _getLastItem.key) !== null && _getLastItem_key !== void 0 ? _getLastItem_key : null;
      }
    }
    key = this.findPreviousKey(void 0, (item2) => item2.type === "item");
    if (key != null && (item && this.isCell(item) && global || this.focusMode === "cell")) {
      var _getLastItem1;
      let item2 = this.collection.getItem(key);
      if (!item2) return null;
      let children = (0, $c5a24bc478652b5f$export$1005530eda016c13)(item2, this.collection);
      var _getLastItem_key1;
      key = (_getLastItem_key1 = (_getLastItem1 = (0, $c5a24bc478652b5f$export$7475b2c64539e4cf)(children)) === null || _getLastItem1 === void 0 ? void 0 : _getLastItem1.key) !== null && _getLastItem_key1 !== void 0 ? _getLastItem_key1 : null;
    }
    return key;
  }
  getKeyPageAbove(fromKey) {
    let key = fromKey;
    let itemRect = this.layoutDelegate.getItemRect(key);
    if (!itemRect) return null;
    let pageY = Math.max(0, itemRect.y + itemRect.height - this.layoutDelegate.getVisibleRect().height);
    while (itemRect && itemRect.y > pageY && key != null) {
      var _this_getKeyAbove;
      key = (_this_getKeyAbove = this.getKeyAbove(key)) !== null && _this_getKeyAbove !== void 0 ? _this_getKeyAbove : null;
      if (key == null) break;
      itemRect = this.layoutDelegate.getItemRect(key);
    }
    return key;
  }
  getKeyPageBelow(fromKey) {
    let key = fromKey;
    let itemRect = this.layoutDelegate.getItemRect(key);
    if (!itemRect) return null;
    let pageHeight = this.layoutDelegate.getVisibleRect().height;
    let pageY = Math.min(this.layoutDelegate.getContentSize().height, itemRect.y + pageHeight);
    while (itemRect && itemRect.y + itemRect.height < pageY) {
      let nextKey = this.getKeyBelow(key);
      if (nextKey == null) break;
      itemRect = this.layoutDelegate.getItemRect(nextKey);
      key = nextKey;
    }
    return key;
  }
  getKeyForSearch(search, fromKey) {
    let key = fromKey !== null && fromKey !== void 0 ? fromKey : null;
    if (!this.collator) return null;
    let collection = this.collection;
    key = fromKey !== null && fromKey !== void 0 ? fromKey : this.getFirstKey();
    if (key == null) return null;
    let startItem = collection.getItem(key);
    if (!startItem) return null;
    var _startItem_parentKey;
    if (startItem.type === "cell") key = (_startItem_parentKey = startItem.parentKey) !== null && _startItem_parentKey !== void 0 ? _startItem_parentKey : null;
    let hasWrapped = false;
    while (key != null) {
      let item = collection.getItem(key);
      if (!item) return null;
      if (item.textValue) {
        let substring = item.textValue.slice(0, search.length);
        if (this.collator.compare(substring, search) === 0) {
          var _getFirstItem;
          var _getFirstItem_key;
          if (this.isRow(item) && this.focusMode === "cell") return (_getFirstItem_key = (_getFirstItem = (0, $c5a24bc478652b5f$export$fbdeaa6a76694f71)((0, $c5a24bc478652b5f$export$1005530eda016c13)(item, this.collection))) === null || _getFirstItem === void 0 ? void 0 : _getFirstItem.key) !== null && _getFirstItem_key !== void 0 ? _getFirstItem_key : null;
          return item.key;
        }
      }
      key = this.findNextKey(key, (item2) => item2.type === "item");
      if (key == null && !hasWrapped) {
        key = this.getFirstKey();
        hasWrapped = true;
      }
    }
    return null;
  }
  constructor(options) {
    this.collection = options.collection;
    this.disabledKeys = options.disabledKeys;
    this.disabledBehavior = options.disabledBehavior || "all";
    this.direction = options.direction;
    this.collator = options.collator;
    if (!options.layout && !options.ref) throw new Error("Either a layout or a ref must be specified.");
    this.layoutDelegate = options.layoutDelegate || (options.layout ? new $d1c300d9c497e402$var$DeprecatedLayoutDelegate(options.layout) : new (0, $657e4dc4a6e88df0$export$8f5ed9ff9f511381)(options.ref));
    this.focusMode = options.focusMode || "row";
  }
};
var $d1c300d9c497e402$var$DeprecatedLayoutDelegate = class {
  getContentSize() {
    return this.layout.getContentSize();
  }
  getItemRect(key) {
    var _this_layout_getLayoutInfo;
    return ((_this_layout_getLayoutInfo = this.layout.getLayoutInfo(key)) === null || _this_layout_getLayoutInfo === void 0 ? void 0 : _this_layout_getLayoutInfo.rect) || null;
  }
  getVisibleRect() {
    return this.layout.virtualizer.visibleRect;
  }
  constructor(layout) {
    this.layout = layout;
  }
};

// node_modules/@react-aria/grid/dist/utils.mjs
var $1af922eb41e03c8f$export$e6235c0d09b995d0 = /* @__PURE__ */ new WeakMap();

// node_modules/@react-aria/grid/dist/ar-AE.mjs
var $682989befd4f478d$exports = {};
$682989befd4f478d$exports = {
  "deselectedItem": (args) => `${args.item} غير المحدد`,
  "longPressToSelect": `اضغط مطولًا للدخول إلى وضع التحديد.`,
  "select": `تحديد`,
  "selectedAll": `جميع العناصر المحددة.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `لم يتم تحديد عناصر`,
    one: () => `${formatter.number(args.count)} عنصر محدد`,
    other: () => `${formatter.number(args.count)} عنصر محدد`
  })}.`,
  "selectedItem": (args) => `${args.item} المحدد`
};

// node_modules/@react-aria/grid/dist/bg-BG.mjs
var $f7fca02019afd941$exports = {};
$f7fca02019afd941$exports = {
  "deselectedItem": (args) => `${args.item} не е избран.`,
  "longPressToSelect": `Натиснете и задръжте за да влезете в избирателен режим.`,
  "select": `Изберете`,
  "selectedAll": `Всички елементи са избрани.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Няма избрани елементи`,
    one: () => `${formatter.number(args.count)} избран елемент`,
    other: () => `${formatter.number(args.count)} избрани елементи`
  })}.`,
  "selectedItem": (args) => `${args.item} избран.`
};

// node_modules/@react-aria/grid/dist/cs-CZ.mjs
var $8f86f40be75387f1$exports = {};
$8f86f40be75387f1$exports = {
  "deselectedItem": (args) => `Položka ${args.item} není vybrána.`,
  "longPressToSelect": `Dlouhým stisknutím přejdete do režimu výběru.`,
  "select": `Vybrat`,
  "selectedAll": `Vybrány všechny položky.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Nevybrány žádné položky`,
    one: () => `Vybrána ${formatter.number(args.count)} položka`,
    other: () => `Vybráno ${formatter.number(args.count)} položek`
  })}.`,
  "selectedItem": (args) => `Vybrána položka ${args.item}.`
};

// node_modules/@react-aria/grid/dist/da-DK.mjs
var $db24ba43c8d652ee$exports = {};
$db24ba43c8d652ee$exports = {
  "deselectedItem": (args) => `${args.item} ikke valgt.`,
  "longPressToSelect": `Lav et langt tryk for at aktivere valgtilstand.`,
  "select": `Vælg`,
  "selectedAll": `Alle elementer valgt.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Ingen elementer valgt`,
    one: () => `${formatter.number(args.count)} element valgt`,
    other: () => `${formatter.number(args.count)} elementer valgt`
  })}.`,
  "selectedItem": (args) => `${args.item} valgt.`
};

// node_modules/@react-aria/grid/dist/de-DE.mjs
var $f8f1e72c8b5447d6$exports = {};
$f8f1e72c8b5447d6$exports = {
  "deselectedItem": (args) => `${args.item} nicht ausgewählt.`,
  "longPressToSelect": `Gedrückt halten, um Auswahlmodus zu öffnen.`,
  "select": `Auswählen`,
  "selectedAll": `Alle Elemente ausgewählt.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Keine Elemente ausgewählt`,
    one: () => `${formatter.number(args.count)} Element ausgewählt`,
    other: () => `${formatter.number(args.count)} Elemente ausgewählt`
  })}.`,
  "selectedItem": (args) => `${args.item} ausgewählt.`
};

// node_modules/@react-aria/grid/dist/el-GR.mjs
var $9a73ed2983c3ab0b$exports = {};
$9a73ed2983c3ab0b$exports = {
  "deselectedItem": (args) => `Δεν επιλέχθηκε το στοιχείο ${args.item}.`,
  "longPressToSelect": `Πατήστε παρατεταμένα για να μπείτε σε λειτουργία επιλογής.`,
  "select": `Επιλογή`,
  "selectedAll": `Επιλέχθηκαν όλα τα στοιχεία.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Δεν επιλέχθηκαν στοιχεία`,
    one: () => `Επιλέχθηκε ${formatter.number(args.count)} στοιχείο`,
    other: () => `Επιλέχθηκαν ${formatter.number(args.count)} στοιχεία`
  })}.`,
  "selectedItem": (args) => `Επιλέχθηκε το στοιχείο ${args.item}.`
};

// node_modules/@react-aria/grid/dist/en-US.mjs
var $583de0b3587601b9$exports = {};
$583de0b3587601b9$exports = {
  "deselectedItem": (args) => `${args.item} not selected.`,
  "select": `Select`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `No items selected`,
    one: () => `${formatter.number(args.count)} item selected`,
    other: () => `${formatter.number(args.count)} items selected`
  })}.`,
  "selectedAll": `All items selected.`,
  "selectedItem": (args) => `${args.item} selected.`,
  "longPressToSelect": `Long press to enter selection mode.`
};

// node_modules/@react-aria/grid/dist/es-ES.mjs
var $147159c978043442$exports = {};
$147159c978043442$exports = {
  "deselectedItem": (args) => `${args.item} no seleccionado.`,
  "longPressToSelect": `Mantenga pulsado para abrir el modo de selección.`,
  "select": `Seleccionar`,
  "selectedAll": `Todos los elementos seleccionados.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Ningún elemento seleccionado`,
    one: () => `${formatter.number(args.count)} elemento seleccionado`,
    other: () => `${formatter.number(args.count)} elementos seleccionados`
  })}.`,
  "selectedItem": (args) => `${args.item} seleccionado.`
};

// node_modules/@react-aria/grid/dist/et-EE.mjs
var $5cbb62c8a19173ac$exports = {};
$5cbb62c8a19173ac$exports = {
  "deselectedItem": (args) => `${args.item} pole valitud.`,
  "longPressToSelect": `Valikurežiimi sisenemiseks vajutage pikalt.`,
  "select": `Vali`,
  "selectedAll": `Kõik üksused valitud.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Üksusi pole valitud`,
    one: () => `${formatter.number(args.count)} üksus valitud`,
    other: () => `${formatter.number(args.count)} üksust valitud`
  })}.`,
  "selectedItem": (args) => `${args.item} valitud.`
};

// node_modules/@react-aria/grid/dist/fi-FI.mjs
var $a33d71dc804cc59e$exports = {};
$a33d71dc804cc59e$exports = {
  "deselectedItem": (args) => `Kohdetta ${args.item} ei valittu.`,
  "longPressToSelect": `Siirry valintatilaan painamalla pitkään.`,
  "select": `Valitse`,
  "selectedAll": `Kaikki kohteet valittu.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Ei yhtään kohdetta valittu`,
    one: () => `${formatter.number(args.count)} kohde valittu`,
    other: () => `${formatter.number(args.count)} kohdetta valittu`
  })}.`,
  "selectedItem": (args) => `${args.item} valittu.`
};

// node_modules/@react-aria/grid/dist/fr-FR.mjs
var $92d800447793d084$exports = {};
$92d800447793d084$exports = {
  "deselectedItem": (args) => `${args.item} non sélectionné.`,
  "longPressToSelect": `Appuyez de manière prolongée pour passer en mode de sélection.`,
  "select": `Sélectionner`,
  "selectedAll": `Tous les éléments sélectionnés.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Aucun élément sélectionné`,
    one: () => `${formatter.number(args.count)} élément sélectionné`,
    other: () => `${formatter.number(args.count)} éléments sélectionnés`
  })}.`,
  "selectedItem": (args) => `${args.item} sélectionné.`
};

// node_modules/@react-aria/grid/dist/he-IL.mjs
var $fe732cdb32124ea8$exports = {};
$fe732cdb32124ea8$exports = {
  "deselectedItem": (args) => `${args.item} לא נבחר.`,
  "longPressToSelect": `הקשה ארוכה לכניסה למצב בחירה.`,
  "select": `בחר`,
  "selectedAll": `כל הפריטים נבחרו.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `לא נבחרו פריטים`,
    one: () => `פריט ${formatter.number(args.count)} נבחר`,
    other: () => `${formatter.number(args.count)} פריטים נבחרו`
  })}.`,
  "selectedItem": (args) => `${args.item} נבחר.`
};

// node_modules/@react-aria/grid/dist/hr-HR.mjs
var $e41234e934efb4f5$exports = {};
$e41234e934efb4f5$exports = {
  "deselectedItem": (args) => `Stavka ${args.item} nije odabrana.`,
  "longPressToSelect": `Dugo pritisnite za ulazak u način odabira.`,
  "select": `Odaberite`,
  "selectedAll": `Odabrane su sve stavke.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Nije odabrana nijedna stavka`,
    one: () => `Odabrana je ${formatter.number(args.count)} stavka`,
    other: () => `Odabrano je ${formatter.number(args.count)} stavki`
  })}.`,
  "selectedItem": (args) => `Stavka ${args.item} je odabrana.`
};

// node_modules/@react-aria/grid/dist/hu-HU.mjs
var $1b0393182473bf9e$exports = {};
$1b0393182473bf9e$exports = {
  "deselectedItem": (args) => `${args.item} nincs kijelölve.`,
  "longPressToSelect": `Nyomja hosszan a kijelöléshez.`,
  "select": `Kijelölés`,
  "selectedAll": `Az összes elem kijelölve.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Egy elem sincs kijelölve`,
    one: () => `${formatter.number(args.count)} elem kijelölve`,
    other: () => `${formatter.number(args.count)} elem kijelölve`
  })}.`,
  "selectedItem": (args) => `${args.item} kijelölve.`
};

// node_modules/@react-aria/grid/dist/it-IT.mjs
var $2eed782c1c110ce7$exports = {};
$2eed782c1c110ce7$exports = {
  "deselectedItem": (args) => `${args.item} non selezionato.`,
  "longPressToSelect": `Premi a lungo per passare alla modalità di selezione.`,
  "select": `Seleziona`,
  "selectedAll": `Tutti gli elementi selezionati.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Nessun elemento selezionato`,
    one: () => `${formatter.number(args.count)} elemento selezionato`,
    other: () => `${formatter.number(args.count)} elementi selezionati`
  })}.`,
  "selectedItem": (args) => `${args.item} selezionato.`
};

// node_modules/@react-aria/grid/dist/ja-JP.mjs
var $8b5d459f86e9b23c$exports = {};
$8b5d459f86e9b23c$exports = {
  "deselectedItem": (args) => `${args.item} が選択されていません。`,
  "longPressToSelect": `長押しして選択モードを開きます。`,
  "select": `選択`,
  "selectedAll": `すべての項目を選択しました。`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `項目が選択されていません`,
    one: () => `${formatter.number(args.count)} 項目を選択しました`,
    other: () => `${formatter.number(args.count)} 項目を選択しました`
  })}。`,
  "selectedItem": (args) => `${args.item} を選択しました。`
};

// node_modules/@react-aria/grid/dist/ko-KR.mjs
var $1949c3ad17295fd4$exports = {};
$1949c3ad17295fd4$exports = {
  "deselectedItem": (args) => `${args.item}이(가) 선택되지 않았습니다.`,
  "longPressToSelect": `선택 모드로 들어가려면 길게 누르십시오.`,
  "select": `선택`,
  "selectedAll": `모든 항목이 선택되었습니다.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `선택된 항목이 없습니다`,
    one: () => `${formatter.number(args.count)}개 항목이 선택되었습니다`,
    other: () => `${formatter.number(args.count)}개 항목이 선택되었습니다`
  })}.`,
  "selectedItem": (args) => `${args.item}이(가) 선택되었습니다.`
};

// node_modules/@react-aria/grid/dist/lt-LT.mjs
var $f5e3df4dc8aa7b54$exports = {};
$f5e3df4dc8aa7b54$exports = {
  "deselectedItem": (args) => `${args.item} nepasirinkta.`,
  "longPressToSelect": `Norėdami įjungti pasirinkimo režimą, paspauskite ir palaikykite.`,
  "select": `Pasirinkti`,
  "selectedAll": `Pasirinkti visi elementai.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Nepasirinktas nė vienas elementas`,
    one: () => `Pasirinktas ${formatter.number(args.count)} elementas`,
    other: () => `Pasirinkta elementų: ${formatter.number(args.count)}`
  })}.`,
  "selectedItem": (args) => `Pasirinkta: ${args.item}.`
};

// node_modules/@react-aria/grid/dist/lv-LV.mjs
var $9dd86690a5c2b2c5$exports = {};
$9dd86690a5c2b2c5$exports = {
  "deselectedItem": (args) => `Vienums ${args.item} nav atlasīts.`,
  "longPressToSelect": `Ilgi turiet nospiestu. lai ieslēgtu atlases režīmu.`,
  "select": `Atlasīt`,
  "selectedAll": `Atlasīti visi vienumi.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Nav atlasīts neviens vienums`,
    one: () => `Atlasīto vienumu skaits: ${formatter.number(args.count)}`,
    other: () => `Atlasīto vienumu skaits: ${formatter.number(args.count)}`
  })}.`,
  "selectedItem": (args) => `Atlasīts vienums ${args.item}.`
};

// node_modules/@react-aria/grid/dist/nb-NO.mjs
var $843964c3bf9a7d24$exports = {};
$843964c3bf9a7d24$exports = {
  "deselectedItem": (args) => `${args.item} er ikke valgt.`,
  "longPressToSelect": `Bruk et langt trykk for å gå inn i valgmodus.`,
  "select": `Velg`,
  "selectedAll": `Alle elementer er valgt.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Ingen elementer er valgt`,
    one: () => `${formatter.number(args.count)} element er valgt`,
    other: () => `${formatter.number(args.count)} elementer er valgt`
  })}.`,
  "selectedItem": (args) => `${args.item} er valgt.`
};

// node_modules/@react-aria/grid/dist/nl-NL.mjs
var $73f50e845f9ef3b4$exports = {};
$73f50e845f9ef3b4$exports = {
  "deselectedItem": (args) => `${args.item} niet geselecteerd.`,
  "longPressToSelect": `Druk lang om de selectiemodus te openen.`,
  "select": `Selecteren`,
  "selectedAll": `Alle items geselecteerd.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Geen items geselecteerd`,
    one: () => `${formatter.number(args.count)} item geselecteerd`,
    other: () => `${formatter.number(args.count)} items geselecteerd`
  })}.`,
  "selectedItem": (args) => `${args.item} geselecteerd.`
};

// node_modules/@react-aria/grid/dist/pl-PL.mjs
var $87f92a7e077514b2$exports = {};
$87f92a7e077514b2$exports = {
  "deselectedItem": (args) => `Nie zaznaczono ${args.item}.`,
  "longPressToSelect": `Naciśnij i przytrzymaj, aby wejść do trybu wyboru.`,
  "select": `Zaznacz`,
  "selectedAll": `Wszystkie zaznaczone elementy.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Nie zaznaczono żadnych elementów`,
    one: () => `${formatter.number(args.count)} zaznaczony element`,
    other: () => `${formatter.number(args.count)} zaznaczonych elementów`
  })}.`,
  "selectedItem": (args) => `Zaznaczono ${args.item}.`
};

// node_modules/@react-aria/grid/dist/pt-BR.mjs
var $c28c98d58ee9ff6f$exports = {};
$c28c98d58ee9ff6f$exports = {
  "deselectedItem": (args) => `${args.item} não selecionado.`,
  "longPressToSelect": `Mantenha pressionado para entrar no modo de seleção.`,
  "select": `Selecionar`,
  "selectedAll": `Todos os itens selecionados.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Nenhum item selecionado`,
    one: () => `${formatter.number(args.count)} item selecionado`,
    other: () => `${formatter.number(args.count)} itens selecionados`
  })}.`,
  "selectedItem": (args) => `${args.item} selecionado.`
};

// node_modules/@react-aria/grid/dist/pt-PT.mjs
var $b6b1503b17b2254d$exports = {};
$b6b1503b17b2254d$exports = {
  "deselectedItem": (args) => `${args.item} não selecionado.`,
  "longPressToSelect": `Prima continuamente para entrar no modo de seleção.`,
  "select": `Selecionar`,
  "selectedAll": `Todos os itens selecionados.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Nenhum item selecionado`,
    one: () => `${formatter.number(args.count)} item selecionado`,
    other: () => `${formatter.number(args.count)} itens selecionados`
  })}.`,
  "selectedItem": (args) => `${args.item} selecionado.`
};

// node_modules/@react-aria/grid/dist/ro-RO.mjs
var $8bdaeb71e50c3e1a$exports = {};
$8bdaeb71e50c3e1a$exports = {
  "deselectedItem": (args) => `${args.item} neselectat.`,
  "longPressToSelect": `Apăsați lung pentru a intra în modul de selectare.`,
  "select": `Selectare`,
  "selectedAll": `Toate elementele selectate.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Niciun element selectat`,
    one: () => `${formatter.number(args.count)} element selectat`,
    other: () => `${formatter.number(args.count)} elemente selectate`
  })}.`,
  "selectedItem": (args) => `${args.item} selectat.`
};

// node_modules/@react-aria/grid/dist/ru-RU.mjs
var $ec2b852dd7c3d1f2$exports = {};
$ec2b852dd7c3d1f2$exports = {
  "deselectedItem": (args) => `${args.item} не выбрано.`,
  "longPressToSelect": `Нажмите и удерживайте для входа в режим выбора.`,
  "select": `Выбрать`,
  "selectedAll": `Выбраны все элементы.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Нет выбранных элементов`,
    one: () => `${formatter.number(args.count)} элемент выбран`,
    other: () => `${formatter.number(args.count)} элементов выбрано`
  })}.`,
  "selectedItem": (args) => `${args.item} выбрано.`
};

// node_modules/@react-aria/grid/dist/sk-SK.mjs
var $79e6d900d6a4f82d$exports = {};
$79e6d900d6a4f82d$exports = {
  "deselectedItem": (args) => `Nevybraté položky: ${args.item}.`,
  "longPressToSelect": `Dlhším stlačením prejdite do režimu výberu.`,
  "select": `Vybrať`,
  "selectedAll": `Všetky vybraté položky.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Žiadne vybraté položky`,
    one: () => `${formatter.number(args.count)} vybratá položka`,
    other: () => `Počet vybratých položiek:${formatter.number(args.count)}`
  })}.`,
  "selectedItem": (args) => `Vybraté položky: ${args.item}.`
};

// node_modules/@react-aria/grid/dist/sl-SI.mjs
var $f4c1f0d5d4d03d80$exports = {};
$f4c1f0d5d4d03d80$exports = {
  "deselectedItem": (args) => `Element ${args.item} ni izbran.`,
  "longPressToSelect": `Za izbirni način pritisnite in dlje časa držite.`,
  "select": `Izberite`,
  "selectedAll": `Vsi elementi so izbrani.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Noben element ni izbran`,
    one: () => `${formatter.number(args.count)} element je izbran`,
    other: () => `${formatter.number(args.count)} elementov je izbranih`
  })}.`,
  "selectedItem": (args) => `Element ${args.item} je izbran.`
};

// node_modules/@react-aria/grid/dist/sr-SP.mjs
var $46252cd87269b10b$exports = {};
$46252cd87269b10b$exports = {
  "deselectedItem": (args) => `${args.item} nije izabrano.`,
  "longPressToSelect": `Dugo pritisnite za ulazak u režim biranja.`,
  "select": `Izaberite`,
  "selectedAll": `Izabrane su sve stavke.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Nije izabrana nijedna stavka`,
    one: () => `Izabrana je ${formatter.number(args.count)} stavka`,
    other: () => `Izabrano je ${formatter.number(args.count)} stavki`
  })}.`,
  "selectedItem": (args) => `${args.item} je izabrano.`
};

// node_modules/@react-aria/grid/dist/sv-SE.mjs
var $d4d5d8dab362555c$exports = {};
$d4d5d8dab362555c$exports = {
  "deselectedItem": (args) => `${args.item} ej markerat.`,
  "longPressToSelect": `Tryck länge när du vill öppna väljarläge.`,
  "select": `Markera`,
  "selectedAll": `Alla markerade objekt.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Inga markerade objekt`,
    one: () => `${formatter.number(args.count)} markerat objekt`,
    other: () => `${formatter.number(args.count)} markerade objekt`
  })}.`,
  "selectedItem": (args) => `${args.item} markerat.`
};

// node_modules/@react-aria/grid/dist/tr-TR.mjs
var $3d55d1f97c377e83$exports = {};
$3d55d1f97c377e83$exports = {
  "deselectedItem": (args) => `${args.item} seçilmedi.`,
  "longPressToSelect": `Seçim moduna girmek için uzun basın.`,
  "select": `Seç`,
  "selectedAll": `Tüm ögeler seçildi.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Hiçbir öge seçilmedi`,
    one: () => `${formatter.number(args.count)} öge seçildi`,
    other: () => `${formatter.number(args.count)} öge seçildi`
  })}.`,
  "selectedItem": (args) => `${args.item} seçildi.`
};

// node_modules/@react-aria/grid/dist/uk-UA.mjs
var $5368512f1c703a3f$exports = {};
$5368512f1c703a3f$exports = {
  "deselectedItem": (args) => `${args.item} не вибрано.`,
  "longPressToSelect": `Виконайте довге натиснення, щоб перейти в режим вибору.`,
  "select": `Вибрати`,
  "selectedAll": `Усі елементи вибрано.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Жодних елементів не вибрано`,
    one: () => `${formatter.number(args.count)} елемент вибрано`,
    other: () => `Вибрано елементів: ${formatter.number(args.count)}`
  })}.`,
  "selectedItem": (args) => `${args.item} вибрано.`
};

// node_modules/@react-aria/grid/dist/zh-CN.mjs
var $f1316b1074463583$exports = {};
$f1316b1074463583$exports = {
  "deselectedItem": (args) => `未选择 ${args.item}。`,
  "longPressToSelect": `长按以进入选择模式。`,
  "select": `选择`,
  "selectedAll": `已选择所有项目。`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `未选择项目`,
    one: () => `已选择 ${formatter.number(args.count)} 个项目`,
    other: () => `已选择 ${formatter.number(args.count)} 个项目`
  })}。`,
  "selectedItem": (args) => `已选择 ${args.item}。`
};

// node_modules/@react-aria/grid/dist/zh-TW.mjs
var $7e60654723031b6f$exports = {};
$7e60654723031b6f$exports = {
  "deselectedItem": (args) => `未選取「${args.item}」。`,
  "longPressToSelect": `長按以進入選擇模式。`,
  "select": `選取`,
  "selectedAll": `已選取所有項目。`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `未選取任何項目`,
    one: () => `已選取 ${formatter.number(args.count)} 個項目`,
    other: () => `已選取 ${formatter.number(args.count)} 個項目`
  })}。`,
  "selectedItem": (args) => `已選取「${args.item}」。`
};

// node_modules/@react-aria/grid/dist/intlStrings.mjs
var $835c96616a7cb4f9$exports = {};
$835c96616a7cb4f9$exports = {
  "ar-AE": $682989befd4f478d$exports,
  "bg-BG": $f7fca02019afd941$exports,
  "cs-CZ": $8f86f40be75387f1$exports,
  "da-DK": $db24ba43c8d652ee$exports,
  "de-DE": $f8f1e72c8b5447d6$exports,
  "el-GR": $9a73ed2983c3ab0b$exports,
  "en-US": $583de0b3587601b9$exports,
  "es-ES": $147159c978043442$exports,
  "et-EE": $5cbb62c8a19173ac$exports,
  "fi-FI": $a33d71dc804cc59e$exports,
  "fr-FR": $92d800447793d084$exports,
  "he-IL": $fe732cdb32124ea8$exports,
  "hr-HR": $e41234e934efb4f5$exports,
  "hu-HU": $1b0393182473bf9e$exports,
  "it-IT": $2eed782c1c110ce7$exports,
  "ja-JP": $8b5d459f86e9b23c$exports,
  "ko-KR": $1949c3ad17295fd4$exports,
  "lt-LT": $f5e3df4dc8aa7b54$exports,
  "lv-LV": $9dd86690a5c2b2c5$exports,
  "nb-NO": $843964c3bf9a7d24$exports,
  "nl-NL": $73f50e845f9ef3b4$exports,
  "pl-PL": $87f92a7e077514b2$exports,
  "pt-BR": $c28c98d58ee9ff6f$exports,
  "pt-PT": $b6b1503b17b2254d$exports,
  "ro-RO": $8bdaeb71e50c3e1a$exports,
  "ru-RU": $ec2b852dd7c3d1f2$exports,
  "sk-SK": $79e6d900d6a4f82d$exports,
  "sl-SI": $f4c1f0d5d4d03d80$exports,
  "sr-SP": $46252cd87269b10b$exports,
  "sv-SE": $d4d5d8dab362555c$exports,
  "tr-TR": $3d55d1f97c377e83$exports,
  "uk-UA": $5368512f1c703a3f$exports,
  "zh-CN": $f1316b1074463583$exports,
  "zh-TW": $7e60654723031b6f$exports
};

// node_modules/@react-aria/grid/dist/useGridSelectionAnnouncement.mjs
var import_react121 = __toESM(require_react(), 1);
function $parcel$interopDefault21(a) {
  return a && a.__esModule ? a.default : a;
}
function $92599c3fd427b763$export$137e594ef3218a10(props, state) {
  let { getRowText = (key) => {
    var _state_collection_getTextValue, _state_collection, _state_collection_getItem;
    var _state_collection_getTextValue1;
    return (_state_collection_getTextValue1 = (_state_collection_getTextValue = (_state_collection = state.collection).getTextValue) === null || _state_collection_getTextValue === void 0 ? void 0 : _state_collection_getTextValue.call(_state_collection, key)) !== null && _state_collection_getTextValue1 !== void 0 ? _state_collection_getTextValue1 : (_state_collection_getItem = state.collection.getItem(key)) === null || _state_collection_getItem === void 0 ? void 0 : _state_collection_getItem.textValue;
  } } = props;
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault21($835c96616a7cb4f9$exports)), "@react-aria/grid");
  let selection = state.selectionManager.rawSelection;
  let lastSelection = (0, import_react121.useRef)(selection);
  let announceSelectionChange = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)(() => {
    var _lastSelection_current;
    if (!state.selectionManager.isFocused || selection === lastSelection.current) {
      lastSelection.current = selection;
      return;
    }
    let addedKeys = $92599c3fd427b763$var$diffSelection(selection, lastSelection.current);
    let removedKeys = $92599c3fd427b763$var$diffSelection(lastSelection.current, selection);
    let isReplace = state.selectionManager.selectionBehavior === "replace";
    let messages = [];
    if (state.selectionManager.selectedKeys.size === 1 && isReplace) {
      let firstKey = state.selectionManager.selectedKeys.keys().next().value;
      if (firstKey != null && state.collection.getItem(firstKey)) {
        let currentSelectionText = getRowText(firstKey);
        if (currentSelectionText) messages.push(stringFormatter.format("selectedItem", {
          item: currentSelectionText
        }));
      }
    } else if (addedKeys.size === 1 && removedKeys.size === 0) {
      let firstKey = addedKeys.keys().next().value;
      if (firstKey != null) {
        let addedText = getRowText(firstKey);
        if (addedText) messages.push(stringFormatter.format("selectedItem", {
          item: addedText
        }));
      }
    } else if (removedKeys.size === 1 && addedKeys.size === 0) {
      let firstKey = removedKeys.keys().next().value;
      if (firstKey != null && state.collection.getItem(firstKey)) {
        let removedText = getRowText(firstKey);
        if (removedText) messages.push(stringFormatter.format("deselectedItem", {
          item: removedText
        }));
      }
    }
    if (state.selectionManager.selectionMode === "multiple") {
      if (messages.length === 0 || selection === "all" || selection.size > 1 || lastSelection.current === "all" || ((_lastSelection_current = lastSelection.current) === null || _lastSelection_current === void 0 ? void 0 : _lastSelection_current.size) > 1) messages.push(selection === "all" ? stringFormatter.format("selectedAll") : stringFormatter.format("selectedCount", {
        count: selection.size
      }));
    }
    if (messages.length > 0) (0, $319e236875307eab$export$a9b970dcc4ae71a9)(messages.join(" "));
    lastSelection.current = selection;
  });
  (0, $4f58c5f72bcf79f7$export$496315a1608d9602)(() => {
    if (state.selectionManager.isFocused) announceSelectionChange();
    else {
      let raf = requestAnimationFrame(announceSelectionChange);
      return () => cancelAnimationFrame(raf);
    }
  }, [
    selection,
    state.selectionManager.isFocused
  ]);
}
function $92599c3fd427b763$var$diffSelection(a, b) {
  let res = /* @__PURE__ */ new Set();
  if (a === "all" || b === "all") return res;
  for (let key of a.keys()) if (!b.has(key)) res.add(key);
  return res;
}

// node_modules/@react-aria/grid/dist/useHighlightSelectionDescription.mjs
var import_react122 = __toESM(require_react(), 1);
function $parcel$interopDefault22(a) {
  return a && a.__esModule ? a.default : a;
}
function $5b9b5b5723db6ae1$export$be42ebdab07ae4c2(props) {
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault22($835c96616a7cb4f9$exports)), "@react-aria/grid");
  let modality = (0, $507fabe10e71c6fb$export$98e20ec92f614cfe)();
  let shouldLongPress = (modality === "pointer" || modality === "virtual" || modality == null) && typeof window !== "undefined" && "ontouchstart" in window;
  let interactionDescription = (0, import_react122.useMemo)(() => {
    let selectionMode = props.selectionManager.selectionMode;
    let selectionBehavior = props.selectionManager.selectionBehavior;
    let message;
    if (shouldLongPress) message = stringFormatter.format("longPressToSelect");
    return selectionBehavior === "replace" && selectionMode !== "none" && props.hasItemActions ? message : void 0;
  }, [
    props.selectionManager.selectionMode,
    props.selectionManager.selectionBehavior,
    props.hasItemActions,
    stringFormatter,
    shouldLongPress
  ]);
  let descriptionProps = (0, $ef06256079686ba0$export$f8aeda7b10753fa1)(interactionDescription);
  return descriptionProps;
}

// node_modules/@react-aria/grid/dist/useGrid.mjs
var import_react123 = __toESM(require_react(), 1);
function $83c6e2eafa584c67$export$f6b86a04e5d66d90(props, state, ref) {
  let { isVirtualized, disallowTypeAhead, keyboardDelegate, focusMode, scrollRef, getRowText, onRowAction, onCellAction, escapeKeyBehavior = "clearSelection", shouldSelectOnPressUp } = props;
  let { selectionManager: manager } = state;
  if (!props["aria-label"] && !props["aria-labelledby"]) console.warn("An aria-label or aria-labelledby prop is required for accessibility.");
  let collator = (0, $325a3faab7a68acd$export$a16aca283550c30d)({
    usage: "search",
    sensitivity: "base"
  });
  let { direction } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let disabledBehavior = state.selectionManager.disabledBehavior;
  let delegate = (0, import_react123.useMemo)(() => keyboardDelegate || new (0, $d1c300d9c497e402$export$de9feff04fda126e)({
    collection: state.collection,
    disabledKeys: state.disabledKeys,
    disabledBehavior,
    ref,
    direction,
    collator,
    focusMode
  }), [
    keyboardDelegate,
    state.collection,
    state.disabledKeys,
    disabledBehavior,
    ref,
    direction,
    collator,
    focusMode
  ]);
  let { collectionProps } = (0, $ae20dd8cbca75726$export$d6daf82dcd84e87c)({
    ref,
    selectionManager: manager,
    keyboardDelegate: delegate,
    isVirtualized,
    scrollRef,
    disallowTypeAhead,
    escapeKeyBehavior
  });
  let id = (0, $bdb11010cef70236$export$f680877a34711e37)(props.id);
  (0, $1af922eb41e03c8f$export$e6235c0d09b995d0).set(state, {
    keyboardDelegate: delegate,
    actions: {
      onRowAction,
      onCellAction
    },
    shouldSelectOnPressUp
  });
  let descriptionProps = (0, $5b9b5b5723db6ae1$export$be42ebdab07ae4c2)({
    selectionManager: manager,
    hasItemActions: !!(onRowAction || onCellAction)
  });
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props, {
    labelable: true
  });
  let onFocus = (0, import_react123.useCallback)((e) => {
    if (manager.isFocused) {
      if (!e.currentTarget.contains(e.target)) manager.setFocused(false);
      return;
    }
    if (!e.currentTarget.contains(e.target)) return;
    manager.setFocused(true);
  }, [
    manager
  ]);
  let navDisabledHandlers = (0, import_react123.useMemo)(() => ({
    onBlur: collectionProps.onBlur,
    onFocus
  }), [
    onFocus,
    collectionProps.onBlur
  ]);
  let hasTabbableChild = (0, $83013635b024ae3d$export$eac1895992b9f3d6)(ref, {
    isDisabled: state.collection.size !== 0
  });
  let gridProps = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(
    domProps,
    {
      role: "grid",
      id,
      "aria-multiselectable": manager.selectionMode === "multiple" ? "true" : void 0
    },
    state.isKeyboardNavigationDisabled ? navDisabledHandlers : collectionProps,
    // If collection is empty, make sure the grid is tabbable unless there is a child tabbable element.
    state.collection.size === 0 && {
      tabIndex: hasTabbableChild ? -1 : 0
    } || void 0,
    descriptionProps
  );
  if (isVirtualized) {
    gridProps["aria-rowcount"] = state.collection.size;
    gridProps["aria-colcount"] = state.collection.columnCount;
  }
  (0, $92599c3fd427b763$export$137e594ef3218a10)({
    getRowText
  }, state);
  return {
    gridProps
  };
}

// node_modules/@react-aria/grid/dist/useGridRowGroup.mjs
function $e45487f8ba1cbdbf$export$d3037f5d3f3e51bf() {
  return {
    rowGroupProps: {
      role: "rowgroup"
    }
  };
}

// node_modules/@react-aria/grid/dist/useGridRow.mjs
function $4159a7a9cbb0cc18$export$96357d5a73f686fa(props, state, ref) {
  var _node_props, _node_props1;
  let { node, isVirtualized, shouldSelectOnPressUp, onAction } = props;
  let { actions, shouldSelectOnPressUp: gridShouldSelectOnPressUp } = (0, $1af922eb41e03c8f$export$e6235c0d09b995d0).get(state);
  let onRowAction = actions.onRowAction ? () => {
    var _actions_onRowAction;
    return (_actions_onRowAction = actions.onRowAction) === null || _actions_onRowAction === void 0 ? void 0 : _actions_onRowAction.call(actions, node.key);
  } : onAction;
  let { itemProps, ...states } = (0, $880e95eb8b93ba9a$export$ecf600387e221c37)({
    selectionManager: state.selectionManager,
    key: node.key,
    ref,
    isVirtualized,
    shouldSelectOnPressUp: gridShouldSelectOnPressUp || shouldSelectOnPressUp,
    onAction: onRowAction || (node === null || node === void 0 ? void 0 : (_node_props = node.props) === null || _node_props === void 0 ? void 0 : _node_props.onAction) ? (0, $ff5963eb1fccf552$export$e08e3b67e392101e)(node === null || node === void 0 ? void 0 : (_node_props1 = node.props) === null || _node_props1 === void 0 ? void 0 : _node_props1.onAction, onRowAction) : void 0,
    isDisabled: state.collection.size === 0
  });
  let isSelected = state.selectionManager.isSelected(node.key);
  let rowProps = {
    role: "row",
    "aria-selected": state.selectionManager.selectionMode !== "none" ? isSelected : void 0,
    "aria-disabled": states.isDisabled || void 0,
    ...itemProps
  };
  if (isVirtualized) rowProps["aria-rowindex"] = node.index + 1;
  return {
    rowProps,
    ...states
  };
}

// node_modules/@react-aria/grid/dist/useGridCell.mjs
var import_react124 = __toESM(require_react(), 1);
function $ab90dcbc1b5466d0$export$c7e10bfc0c59f67c(props, state, ref) {
  let { node, isVirtualized, focusMode = "child", shouldSelectOnPressUp, onAction } = props;
  let { direction } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let { keyboardDelegate, actions: { onCellAction } } = (0, $1af922eb41e03c8f$export$e6235c0d09b995d0).get(state);
  let keyWhenFocused = (0, import_react124.useRef)(null);
  let focus = () => {
    if (ref.current) {
      let treeWalker = (0, $9bf71ea28793e738$export$2d6ec8fc375ceafa)(ref.current);
      if (focusMode === "child") {
        if (ref.current.contains(document.activeElement) && ref.current !== document.activeElement) return;
        let focusable = state.selectionManager.childFocusStrategy === "last" ? $ab90dcbc1b5466d0$var$last(treeWalker) : treeWalker.firstChild();
        if (focusable) {
          (0, $3ad3f6e1647bc98d$export$80f3e147d781571c)(focusable);
          return;
        }
      }
      if (keyWhenFocused.current != null && node.key !== keyWhenFocused.current || !ref.current.contains(document.activeElement)) (0, $3ad3f6e1647bc98d$export$80f3e147d781571c)(ref.current);
    }
  };
  let { itemProps, isPressed } = (0, $880e95eb8b93ba9a$export$ecf600387e221c37)({
    selectionManager: state.selectionManager,
    key: node.key,
    ref,
    isVirtualized,
    focus,
    shouldSelectOnPressUp,
    onAction: onCellAction ? () => onCellAction(node.key) : onAction,
    isDisabled: state.collection.size === 0
  });
  let onKeyDownCapture = (e) => {
    if (!e.currentTarget.contains(e.target) || state.isKeyboardNavigationDisabled || !ref.current || !document.activeElement) return;
    let walker = (0, $9bf71ea28793e738$export$2d6ec8fc375ceafa)(ref.current);
    walker.currentNode = document.activeElement;
    switch (e.key) {
      case "ArrowLeft": {
        let focusable = direction === "rtl" ? walker.nextNode() : walker.previousNode();
        if (focusMode === "child" && focusable === ref.current) focusable = null;
        e.preventDefault();
        e.stopPropagation();
        if (focusable) {
          (0, $3ad3f6e1647bc98d$export$80f3e147d781571c)(focusable);
          (0, $2f04cbc44ee30ce0$export$c826860796309d1b)(focusable, {
            containingElement: (0, $62d8ded9296f3872$export$cfa2225e87938781)(ref.current)
          });
        } else {
          var _keyboardDelegate_getKeyLeftOf;
          let prev = (_keyboardDelegate_getKeyLeftOf = keyboardDelegate.getKeyLeftOf) === null || _keyboardDelegate_getKeyLeftOf === void 0 ? void 0 : _keyboardDelegate_getKeyLeftOf.call(keyboardDelegate, node.key);
          if (prev !== node.key) {
            var _ref_current_parentElement;
            (_ref_current_parentElement = ref.current.parentElement) === null || _ref_current_parentElement === void 0 ? void 0 : _ref_current_parentElement.dispatchEvent(new KeyboardEvent(e.nativeEvent.type, e.nativeEvent));
            break;
          }
          if (focusMode === "cell" && direction === "rtl") {
            (0, $3ad3f6e1647bc98d$export$80f3e147d781571c)(ref.current);
            (0, $2f04cbc44ee30ce0$export$c826860796309d1b)(ref.current, {
              containingElement: (0, $62d8ded9296f3872$export$cfa2225e87938781)(ref.current)
            });
          } else {
            walker.currentNode = ref.current;
            focusable = direction === "rtl" ? walker.firstChild() : $ab90dcbc1b5466d0$var$last(walker);
            if (focusable) {
              (0, $3ad3f6e1647bc98d$export$80f3e147d781571c)(focusable);
              (0, $2f04cbc44ee30ce0$export$c826860796309d1b)(focusable, {
                containingElement: (0, $62d8ded9296f3872$export$cfa2225e87938781)(ref.current)
              });
            }
          }
        }
        break;
      }
      case "ArrowRight": {
        let focusable = direction === "rtl" ? walker.previousNode() : walker.nextNode();
        if (focusMode === "child" && focusable === ref.current) focusable = null;
        e.preventDefault();
        e.stopPropagation();
        if (focusable) {
          (0, $3ad3f6e1647bc98d$export$80f3e147d781571c)(focusable);
          (0, $2f04cbc44ee30ce0$export$c826860796309d1b)(focusable, {
            containingElement: (0, $62d8ded9296f3872$export$cfa2225e87938781)(ref.current)
          });
        } else {
          var _keyboardDelegate_getKeyRightOf;
          let next = (_keyboardDelegate_getKeyRightOf = keyboardDelegate.getKeyRightOf) === null || _keyboardDelegate_getKeyRightOf === void 0 ? void 0 : _keyboardDelegate_getKeyRightOf.call(keyboardDelegate, node.key);
          if (next !== node.key) {
            var _ref_current_parentElement1;
            (_ref_current_parentElement1 = ref.current.parentElement) === null || _ref_current_parentElement1 === void 0 ? void 0 : _ref_current_parentElement1.dispatchEvent(new KeyboardEvent(e.nativeEvent.type, e.nativeEvent));
            break;
          }
          if (focusMode === "cell" && direction === "ltr") {
            (0, $3ad3f6e1647bc98d$export$80f3e147d781571c)(ref.current);
            (0, $2f04cbc44ee30ce0$export$c826860796309d1b)(ref.current, {
              containingElement: (0, $62d8ded9296f3872$export$cfa2225e87938781)(ref.current)
            });
          } else {
            walker.currentNode = ref.current;
            focusable = direction === "rtl" ? $ab90dcbc1b5466d0$var$last(walker) : walker.firstChild();
            if (focusable) {
              (0, $3ad3f6e1647bc98d$export$80f3e147d781571c)(focusable);
              (0, $2f04cbc44ee30ce0$export$c826860796309d1b)(focusable, {
                containingElement: (0, $62d8ded9296f3872$export$cfa2225e87938781)(ref.current)
              });
            }
          }
        }
        break;
      }
      case "ArrowUp":
      case "ArrowDown":
        if (!e.altKey && ref.current.contains(e.target)) {
          var _ref_current_parentElement2;
          e.stopPropagation();
          e.preventDefault();
          (_ref_current_parentElement2 = ref.current.parentElement) === null || _ref_current_parentElement2 === void 0 ? void 0 : _ref_current_parentElement2.dispatchEvent(new KeyboardEvent(e.nativeEvent.type, e.nativeEvent));
        }
        break;
    }
  };
  let onFocus = (e) => {
    keyWhenFocused.current = node.key;
    if (e.target !== ref.current) {
      if (!(0, $507fabe10e71c6fb$export$b9b3dfddab17db27)()) state.selectionManager.setFocusedKey(node.key);
      return;
    }
    requestAnimationFrame(() => {
      if (focusMode === "child" && document.activeElement === ref.current) focus();
    });
  };
  let gridCellProps = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(itemProps, {
    role: "gridcell",
    onKeyDownCapture,
    "aria-colspan": node.colSpan,
    "aria-colindex": node.colIndex != null ? node.colIndex + 1 : void 0,
    colSpan: isVirtualized ? void 0 : node.colSpan,
    onFocus
  });
  var _node_colIndex;
  if (isVirtualized) gridCellProps["aria-colindex"] = ((_node_colIndex = node.colIndex) !== null && _node_colIndex !== void 0 ? _node_colIndex : node.index) + 1;
  if (shouldSelectOnPressUp && gridCellProps.tabIndex != null && gridCellProps.onPointerDown == null) gridCellProps.onPointerDown = (e) => {
    let el = e.currentTarget;
    let tabindex = el.getAttribute("tabindex");
    el.removeAttribute("tabindex");
    requestAnimationFrame(() => {
      if (tabindex != null) el.setAttribute("tabindex", tabindex);
    });
  };
  return {
    gridCellProps,
    isPressed
  };
}
function $ab90dcbc1b5466d0$var$last(walker) {
  let next = null;
  let last = null;
  do {
    last = walker.lastChild();
    if (last) next = last;
  } while (last);
  return next;
}

// node_modules/@react-aria/grid/dist/useGridSelectionCheckbox.mjs
function $parcel$interopDefault23(a) {
  return a && a.__esModule ? a.default : a;
}
function $7cb39d07f245a780$export$70e2eed1a92976ad(props, state) {
  let { key } = props;
  let manager = state.selectionManager;
  let checkboxId = (0, $bdb11010cef70236$export$f680877a34711e37)();
  let isDisabled = !state.selectionManager.canSelectItem(key);
  let isSelected = state.selectionManager.isSelected(key);
  let onChange = () => manager.toggleSelection(key);
  const stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault23($835c96616a7cb4f9$exports)), "@react-aria/grid");
  return {
    checkboxProps: {
      id: checkboxId,
      "aria-label": stringFormatter.format("select"),
      isSelected,
      isDisabled,
      onChange
    }
  };
}

// node_modules/@react-aria/gridlist/dist/useGridList.mjs
function $f47efb0c3a859cf2$export$664f9155035607eb(props, state, ref) {
  let { isVirtualized, keyboardDelegate, layoutDelegate, onAction, disallowTypeAhead, linkBehavior = "action", keyboardNavigationBehavior = "arrow", escapeKeyBehavior = "clearSelection", shouldSelectOnPressUp } = props;
  if (!props["aria-label"] && !props["aria-labelledby"]) console.warn("An aria-label or aria-labelledby prop is required for accessibility.");
  let { listProps } = (0, $982254629710d113$export$b95089534ab7c1fd)({
    selectionManager: state.selectionManager,
    collection: state.collection,
    disabledKeys: state.disabledKeys,
    ref,
    keyboardDelegate,
    layoutDelegate,
    isVirtualized,
    selectOnFocus: state.selectionManager.selectionBehavior === "replace",
    shouldFocusWrap: props.shouldFocusWrap,
    linkBehavior,
    disallowTypeAhead,
    autoFocus: props.autoFocus,
    escapeKeyBehavior
  });
  let id = (0, $bdb11010cef70236$export$f680877a34711e37)(props.id);
  (0, $ce9b18daab526bbd$export$5b9bb410392e3991).set(state, {
    id,
    onAction,
    linkBehavior,
    keyboardNavigationBehavior,
    shouldSelectOnPressUp
  });
  let descriptionProps = (0, $5b9b5b5723db6ae1$export$be42ebdab07ae4c2)({
    selectionManager: state.selectionManager,
    hasItemActions: !!onAction
  });
  let hasTabbableChild = (0, $83013635b024ae3d$export$eac1895992b9f3d6)(ref, {
    isDisabled: state.collection.size !== 0
  });
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props, {
    labelable: true
  });
  let gridProps = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(
    domProps,
    {
      role: "grid",
      id,
      "aria-multiselectable": state.selectionManager.selectionMode === "multiple" ? "true" : void 0
    },
    // If collection is empty, make sure the grid is tabbable unless there is a child tabbable element.
    state.collection.size === 0 ? {
      tabIndex: hasTabbableChild ? -1 : 0
    } : listProps,
    descriptionProps
  );
  if (isVirtualized) {
    gridProps["aria-rowcount"] = state.collection.size;
    gridProps["aria-colcount"] = 1;
  }
  (0, $92599c3fd427b763$export$137e594ef3218a10)({}, state);
  return {
    gridProps
  };
}

// node_modules/@react-aria/gridlist/dist/useGridListItem.mjs
var import_react125 = __toESM(require_react(), 1);
var $4e8b0456ef72939f$var$EXPANSION_KEYS = {
  "expand": {
    ltr: "ArrowRight",
    rtl: "ArrowLeft"
  },
  "collapse": {
    ltr: "ArrowLeft",
    rtl: "ArrowRight"
  }
};
function $4e8b0456ef72939f$export$9610e69494fadfd2(props, state, ref) {
  var _node_props, _node_props1;
  let { node, isVirtualized } = props;
  let { direction } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let { onAction, linkBehavior, keyboardNavigationBehavior, shouldSelectOnPressUp } = (0, $ce9b18daab526bbd$export$5b9bb410392e3991).get(state);
  let descriptionId = (0, $bdb11010cef70236$export$b4cc09c592e8fdb8)();
  let keyWhenFocused = (0, import_react125.useRef)(null);
  let focus = () => {
    var _ref_current;
    if (ref.current !== null && (keyWhenFocused.current != null && node.key !== keyWhenFocused.current || !((_ref_current = ref.current) === null || _ref_current === void 0 ? void 0 : _ref_current.contains(document.activeElement)))) (0, $3ad3f6e1647bc98d$export$80f3e147d781571c)(ref.current);
  };
  let treeGridRowProps = {};
  let hasChildRows = props.hasChildItems;
  let hasLink = state.selectionManager.isLink(node.key);
  if (node != null && "expandedKeys" in state) {
    var _state_collection_getChildren, _state_collection, _filter_at;
    let children = (_state_collection_getChildren = (_state_collection = state.collection).getChildren) === null || _state_collection_getChildren === void 0 ? void 0 : _state_collection_getChildren.call(_state_collection, node.key);
    hasChildRows = hasChildRows || [
      ...children !== null && children !== void 0 ? children : []
    ].length > 1;
    if (onAction == null && !hasLink && state.selectionManager.selectionMode === "none" && hasChildRows) onAction = () => state.toggleKey(node.key);
    let isExpanded = hasChildRows ? state.expandedKeys.has(node.key) : void 0;
    let setSize = 1;
    var _filter_at_index;
    if (node.level > 0 && (node === null || node === void 0 ? void 0 : node.parentKey) != null) {
      let parent = state.collection.getItem(node.parentKey);
      if (parent) {
        var _state_collection_getChildren1, _state_collection1;
        let siblings = (_state_collection_getChildren1 = (_state_collection1 = state.collection).getChildren) === null || _state_collection_getChildren1 === void 0 ? void 0 : _state_collection_getChildren1.call(_state_collection1, parent.key);
        setSize = (0, $c5a24bc478652b5f$export$7475b2c64539e4cf)(siblings).index + 1;
      }
    } else setSize = ((_filter_at_index = (_filter_at = [
      ...state.collection
    ].filter((row) => row.level === 0).at(-1)) === null || _filter_at === void 0 ? void 0 : _filter_at.index) !== null && _filter_at_index !== void 0 ? _filter_at_index : 0) + 1;
    treeGridRowProps = {
      "aria-expanded": isExpanded,
      "aria-level": node.level + 1,
      "aria-posinset": (node === null || node === void 0 ? void 0 : node.index) + 1,
      "aria-setsize": setSize
    };
  }
  let { itemProps, ...itemStates } = (0, $880e95eb8b93ba9a$export$ecf600387e221c37)({
    selectionManager: state.selectionManager,
    key: node.key,
    ref,
    isVirtualized,
    shouldSelectOnPressUp: props.shouldSelectOnPressUp || shouldSelectOnPressUp,
    onAction: onAction || ((_node_props = node.props) === null || _node_props === void 0 ? void 0 : _node_props.onAction) ? (0, $ff5963eb1fccf552$export$e08e3b67e392101e)((_node_props1 = node.props) === null || _node_props1 === void 0 ? void 0 : _node_props1.onAction, onAction ? () => onAction(node.key) : void 0) : void 0,
    focus,
    linkBehavior
  });
  let onKeyDownCapture = (e) => {
    if (!e.currentTarget.contains(e.target) || !ref.current || !document.activeElement) return;
    let walker = (0, $9bf71ea28793e738$export$2d6ec8fc375ceafa)(ref.current);
    walker.currentNode = document.activeElement;
    if ("expandedKeys" in state && document.activeElement === ref.current) {
      if (e.key === $4e8b0456ef72939f$var$EXPANSION_KEYS["expand"][direction] && state.selectionManager.focusedKey === node.key && hasChildRows && !state.expandedKeys.has(node.key)) {
        state.toggleKey(node.key);
        e.stopPropagation();
        return;
      } else if (e.key === $4e8b0456ef72939f$var$EXPANSION_KEYS["collapse"][direction] && state.selectionManager.focusedKey === node.key && hasChildRows && state.expandedKeys.has(node.key)) {
        state.toggleKey(node.key);
        e.stopPropagation();
        return;
      }
    }
    switch (e.key) {
      case "ArrowLeft":
        if (keyboardNavigationBehavior === "arrow") {
          let focusable = direction === "rtl" ? walker.nextNode() : walker.previousNode();
          if (focusable) {
            e.preventDefault();
            e.stopPropagation();
            (0, $3ad3f6e1647bc98d$export$80f3e147d781571c)(focusable);
            (0, $2f04cbc44ee30ce0$export$c826860796309d1b)(focusable, {
              containingElement: (0, $62d8ded9296f3872$export$cfa2225e87938781)(ref.current)
            });
          } else {
            e.preventDefault();
            e.stopPropagation();
            if (direction === "rtl") {
              (0, $3ad3f6e1647bc98d$export$80f3e147d781571c)(ref.current);
              (0, $2f04cbc44ee30ce0$export$c826860796309d1b)(ref.current, {
                containingElement: (0, $62d8ded9296f3872$export$cfa2225e87938781)(ref.current)
              });
            } else {
              walker.currentNode = ref.current;
              let lastElement = $4e8b0456ef72939f$var$last(walker);
              if (lastElement) {
                (0, $3ad3f6e1647bc98d$export$80f3e147d781571c)(lastElement);
                (0, $2f04cbc44ee30ce0$export$c826860796309d1b)(lastElement, {
                  containingElement: (0, $62d8ded9296f3872$export$cfa2225e87938781)(ref.current)
                });
              }
            }
          }
        }
        break;
      case "ArrowRight":
        if (keyboardNavigationBehavior === "arrow") {
          let focusable = direction === "rtl" ? walker.previousNode() : walker.nextNode();
          if (focusable) {
            e.preventDefault();
            e.stopPropagation();
            (0, $3ad3f6e1647bc98d$export$80f3e147d781571c)(focusable);
            (0, $2f04cbc44ee30ce0$export$c826860796309d1b)(focusable, {
              containingElement: (0, $62d8ded9296f3872$export$cfa2225e87938781)(ref.current)
            });
          } else {
            e.preventDefault();
            e.stopPropagation();
            if (direction === "ltr") {
              (0, $3ad3f6e1647bc98d$export$80f3e147d781571c)(ref.current);
              (0, $2f04cbc44ee30ce0$export$c826860796309d1b)(ref.current, {
                containingElement: (0, $62d8ded9296f3872$export$cfa2225e87938781)(ref.current)
              });
            } else {
              walker.currentNode = ref.current;
              let lastElement = $4e8b0456ef72939f$var$last(walker);
              if (lastElement) {
                (0, $3ad3f6e1647bc98d$export$80f3e147d781571c)(lastElement);
                (0, $2f04cbc44ee30ce0$export$c826860796309d1b)(lastElement, {
                  containingElement: (0, $62d8ded9296f3872$export$cfa2225e87938781)(ref.current)
                });
              }
            }
          }
        }
        break;
      case "ArrowUp":
      case "ArrowDown":
        if (!e.altKey && ref.current.contains(e.target)) {
          var _ref_current_parentElement;
          e.stopPropagation();
          e.preventDefault();
          (_ref_current_parentElement = ref.current.parentElement) === null || _ref_current_parentElement === void 0 ? void 0 : _ref_current_parentElement.dispatchEvent(new KeyboardEvent(e.nativeEvent.type, e.nativeEvent));
        }
        break;
    }
  };
  let onFocus = (e) => {
    keyWhenFocused.current = node.key;
    if (e.target !== ref.current) {
      if (!(0, $507fabe10e71c6fb$export$b9b3dfddab17db27)()) state.selectionManager.setFocusedKey(node.key);
      return;
    }
  };
  let onKeyDown = (e) => {
    if (!e.currentTarget.contains(e.target) || !ref.current || !document.activeElement) return;
    switch (e.key) {
      case "Tab":
        if (keyboardNavigationBehavior === "tab") {
          let walker = (0, $9bf71ea28793e738$export$2d6ec8fc375ceafa)(ref.current, {
            tabbable: true
          });
          walker.currentNode = document.activeElement;
          let next = e.shiftKey ? walker.previousNode() : walker.nextNode();
          if (next) e.stopPropagation();
        }
    }
  };
  let syntheticLinkProps = (0, $ea8dcbcb9ea1b556$export$bdc77b0c0a3a85d6)(node.props);
  let linkProps = itemStates.hasAction ? syntheticLinkProps : {};
  let rowProps = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(itemProps, linkProps, {
    role: "row",
    onKeyDownCapture,
    onKeyDown,
    onFocus,
    // 'aria-label': [(node.textValue || undefined), rowAnnouncement].filter(Boolean).join(', '),
    "aria-label": node.textValue || void 0,
    "aria-selected": state.selectionManager.canSelectItem(node.key) ? state.selectionManager.isSelected(node.key) : void 0,
    "aria-disabled": state.selectionManager.isDisabled(node.key) || void 0,
    "aria-labelledby": descriptionId && node.textValue ? `${(0, $ce9b18daab526bbd$export$f45c25170b9a99c2)(state, node.key)} ${descriptionId}` : void 0,
    id: (0, $ce9b18daab526bbd$export$f45c25170b9a99c2)(state, node.key)
  });
  if (isVirtualized) rowProps["aria-rowindex"] = node.index + 1;
  let gridCellProps = {
    role: "gridcell",
    "aria-colindex": 1
  };
  return {
    rowProps: {
      ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(rowProps, treeGridRowProps)
    },
    gridCellProps,
    descriptionProps: {
      id: descriptionId
    },
    ...itemStates
  };
}
function $4e8b0456ef72939f$var$last(walker) {
  let next = null;
  let last = null;
  do {
    last = walker.lastChild();
    if (last) next = last;
  } while (last);
  return next;
}

// node_modules/@react-aria/gridlist/dist/useGridListSelectionCheckbox.mjs
function $e52ffc04a4adbd52$export$e29f2573fabbf7b9(props, state) {
  let { key } = props;
  const { checkboxProps } = (0, $7cb39d07f245a780$export$70e2eed1a92976ad)(props, state);
  return {
    checkboxProps: {
      ...checkboxProps,
      "aria-labelledby": `${checkboxProps.id} ${(0, $ce9b18daab526bbd$export$f45c25170b9a99c2)(state, key)}`
    }
  };
}

// node_modules/@react-aria/landmark/dist/useLandmark.mjs
var import_react126 = __toESM(require_react(), 1);
var import_shim2 = __toESM(require_shim(), 1);
var $a86207c5d7f7e1fb$var$LANDMARK_API_VERSION = 1;
var $a86207c5d7f7e1fb$var$landmarkSymbol = Symbol.for("react-aria-landmark-manager");
function $a86207c5d7f7e1fb$var$subscribe(fn) {
  document.addEventListener("react-aria-landmark-manager-change", fn);
  return () => document.removeEventListener("react-aria-landmark-manager-change", fn);
}
function $a86207c5d7f7e1fb$var$getLandmarkManager() {
  if (typeof document === "undefined") return null;
  let instance = document[$a86207c5d7f7e1fb$var$landmarkSymbol];
  if (instance && instance.version >= $a86207c5d7f7e1fb$var$LANDMARK_API_VERSION) return instance;
  document[$a86207c5d7f7e1fb$var$landmarkSymbol] = new $a86207c5d7f7e1fb$var$LandmarkManager();
  document.dispatchEvent(new CustomEvent("react-aria-landmark-manager-change"));
  return document[$a86207c5d7f7e1fb$var$landmarkSymbol];
}
function $a86207c5d7f7e1fb$var$useLandmarkManager() {
  return (0, import_shim2.useSyncExternalStore)($a86207c5d7f7e1fb$var$subscribe, $a86207c5d7f7e1fb$var$getLandmarkManager, $a86207c5d7f7e1fb$var$getLandmarkManager);
}
var $a86207c5d7f7e1fb$var$LandmarkManager = class {
  setupIfNeeded() {
    if (this.isListening) return;
    document.addEventListener("keydown", this.f6Handler, {
      capture: true
    });
    document.addEventListener("focusin", this.focusinHandler, {
      capture: true
    });
    document.addEventListener("focusout", this.focusoutHandler, {
      capture: true
    });
    this.isListening = true;
  }
  teardownIfNeeded() {
    if (!this.isListening || this.landmarks.length > 0 || this.refCount > 0) return;
    document.removeEventListener("keydown", this.f6Handler, {
      capture: true
    });
    document.removeEventListener("focusin", this.focusinHandler, {
      capture: true
    });
    document.removeEventListener("focusout", this.focusoutHandler, {
      capture: true
    });
    this.isListening = false;
  }
  focusLandmark(landmark, direction) {
    var _this_landmarks_find_focus, _this_landmarks_find;
    (_this_landmarks_find = this.landmarks.find((l) => l.ref.current === landmark)) === null || _this_landmarks_find === void 0 ? void 0 : (_this_landmarks_find_focus = _this_landmarks_find.focus) === null || _this_landmarks_find_focus === void 0 ? void 0 : _this_landmarks_find_focus.call(_this_landmarks_find, direction);
  }
  /**
  * Return set of landmarks with a specific role.
  */
  getLandmarksByRole(role) {
    return new Set(this.landmarks.filter((l) => l.role === role));
  }
  /**
  * Return first landmark with a specific role.
  */
  getLandmarkByRole(role) {
    return this.landmarks.find((l) => l.role === role);
  }
  addLandmark(newLandmark) {
    this.setupIfNeeded();
    if (this.landmarks.find((landmark) => landmark.ref === newLandmark.ref) || !newLandmark.ref.current) return;
    if (this.landmarks.filter((landmark) => landmark.role === "main").length > 1 && true) console.error('Page can contain no more than one landmark with the role "main".');
    if (this.landmarks.length === 0) {
      this.landmarks = [
        newLandmark
      ];
      this.checkLabels(newLandmark.role);
      return;
    }
    let start = 0;
    let end = this.landmarks.length - 1;
    while (start <= end) {
      let mid = Math.floor((start + end) / 2);
      let comparedPosition = newLandmark.ref.current.compareDocumentPosition(this.landmarks[mid].ref.current);
      let isNewAfterExisting = Boolean(comparedPosition & Node.DOCUMENT_POSITION_PRECEDING || comparedPosition & Node.DOCUMENT_POSITION_CONTAINS);
      if (isNewAfterExisting) start = mid + 1;
      else end = mid - 1;
    }
    this.landmarks.splice(start, 0, newLandmark);
    this.checkLabels(newLandmark.role);
  }
  updateLandmark(landmark) {
    let index = this.landmarks.findIndex((l) => l.ref === landmark.ref);
    if (index >= 0) {
      this.landmarks[index] = {
        ...this.landmarks[index],
        ...landmark
      };
      this.checkLabels(this.landmarks[index].role);
    }
  }
  removeLandmark(ref) {
    this.landmarks = this.landmarks.filter((landmark) => landmark.ref !== ref);
    this.teardownIfNeeded();
  }
  /**
  * Warn if there are 2+ landmarks with the same role but no label.
  * Labels for landmarks with the same role must also be unique.
  *
  * See https://www.w3.org/WAI/ARIA/apg/practices/landmark-regions/.
  */
  checkLabels(role) {
    let landmarksWithRole = this.getLandmarksByRole(role);
    if (landmarksWithRole.size > 1) {
      let duplicatesWithoutLabel = [
        ...landmarksWithRole
      ].filter((landmark) => !landmark.label);
      if (duplicatesWithoutLabel.length > 0 && true) console.warn(`Page contains more than one landmark with the '${role}' role. If two or more landmarks on a page share the same role, all must be labeled with an aria-label or aria-labelledby attribute: `, duplicatesWithoutLabel.map((landmark) => landmark.ref.current));
      else if (true) {
        let labels = [
          ...landmarksWithRole
        ].map((landmark) => landmark.label);
        let duplicateLabels = labels.filter((item, index) => labels.indexOf(item) !== index);
        duplicateLabels.forEach((label) => {
          console.warn(`Page contains more than one landmark with the '${role}' role and '${label}' label. If two or more landmarks on a page share the same role, they must have unique labels: `, [
            ...landmarksWithRole
          ].filter((landmark) => landmark.label === label).map((landmark) => landmark.ref.current));
        });
      }
    }
  }
  /**
  * Get the landmark that is the closest parent in the DOM.
  * Returns undefined if no parent is a landmark.
  */
  closestLandmark(element) {
    let landmarkMap = new Map(this.landmarks.map((l) => [
      l.ref.current,
      l
    ]));
    let currentElement = element;
    while (currentElement && !landmarkMap.has(currentElement) && currentElement !== document.body && currentElement.parentElement) currentElement = currentElement.parentElement;
    return landmarkMap.get(currentElement);
  }
  /**
  * Gets the next landmark, in DOM focus order, or previous if backwards is specified.
  * If last landmark, next should be the first landmark.
  * If not inside a landmark, will return first landmark.
  * Returns undefined if there are no landmarks.
  */
  getNextLandmark(element, { backward }) {
    var _this_landmarks_nextLandmarkIndex_ref_current;
    let currentLandmark = this.closestLandmark(element);
    let nextLandmarkIndex = backward ? this.landmarks.length - 1 : 0;
    if (currentLandmark) nextLandmarkIndex = this.landmarks.indexOf(currentLandmark) + (backward ? -1 : 1);
    let wrapIfNeeded = () => {
      if (nextLandmarkIndex < 0) {
        if (!element.dispatchEvent(new CustomEvent("react-aria-landmark-navigation", {
          detail: {
            direction: "backward"
          },
          bubbles: true,
          cancelable: true
        }))) return true;
        nextLandmarkIndex = this.landmarks.length - 1;
      } else if (nextLandmarkIndex >= this.landmarks.length) {
        if (!element.dispatchEvent(new CustomEvent("react-aria-landmark-navigation", {
          detail: {
            direction: "forward"
          },
          bubbles: true,
          cancelable: true
        }))) return true;
        nextLandmarkIndex = 0;
      }
      if (nextLandmarkIndex < 0 || nextLandmarkIndex >= this.landmarks.length) return true;
      return false;
    };
    if (wrapIfNeeded()) return void 0;
    let i = nextLandmarkIndex;
    while ((_this_landmarks_nextLandmarkIndex_ref_current = this.landmarks[nextLandmarkIndex].ref.current) === null || _this_landmarks_nextLandmarkIndex_ref_current === void 0 ? void 0 : _this_landmarks_nextLandmarkIndex_ref_current.closest("[aria-hidden=true]")) {
      nextLandmarkIndex += backward ? -1 : 1;
      if (wrapIfNeeded()) return void 0;
      if (nextLandmarkIndex === i) break;
    }
    return this.landmarks[nextLandmarkIndex];
  }
  /**
  * Look at next landmark. If an element was previously focused inside, restore focus there.
  * If not, focus the landmark itself.
  * If no landmarks at all, or none with focusable elements, don't move focus.
  */
  f6Handler(e) {
    if (e.key === "F6") {
      let handled = e.altKey ? this.focusMain() : this.navigate(e.target, e.shiftKey);
      if (handled) {
        e.preventDefault();
        e.stopPropagation();
      }
    }
  }
  focusMain() {
    let main = this.getLandmarkByRole("main");
    if (main && main.ref.current && document.contains(main.ref.current)) {
      this.focusLandmark(main.ref.current, "forward");
      return true;
    }
    return false;
  }
  navigate(from, backward) {
    let nextLandmark = this.getNextLandmark(from, {
      backward
    });
    if (!nextLandmark) return false;
    if (nextLandmark.lastFocused) {
      let lastFocused = nextLandmark.lastFocused;
      if (document.body.contains(lastFocused)) {
        lastFocused.focus();
        return true;
      }
    }
    if (nextLandmark.ref.current && document.contains(nextLandmark.ref.current)) {
      this.focusLandmark(nextLandmark.ref.current, backward ? "backward" : "forward");
      return true;
    }
    return false;
  }
  /**
  * Sets lastFocused for a landmark, if focus is moved within that landmark.
  * Lets the last focused landmark know it was blurred if something else is focused.
  */
  focusinHandler(e) {
    let currentLandmark = this.closestLandmark(e.target);
    if (currentLandmark && currentLandmark.ref.current !== e.target) this.updateLandmark({
      ref: currentLandmark.ref,
      lastFocused: e.target
    });
    let previousFocusedElement = e.relatedTarget;
    if (previousFocusedElement) {
      let closestPreviousLandmark = this.closestLandmark(previousFocusedElement);
      if (closestPreviousLandmark && closestPreviousLandmark.ref.current === previousFocusedElement) closestPreviousLandmark.blur();
    }
  }
  /**
  * Track if the focus is lost to the body. If it is, do cleanup on the landmark that last had focus.
  */
  focusoutHandler(e) {
    let previousFocusedElement = e.target;
    let nextFocusedElement = e.relatedTarget;
    if (!nextFocusedElement || nextFocusedElement === document) {
      let closestPreviousLandmark = this.closestLandmark(previousFocusedElement);
      if (closestPreviousLandmark && closestPreviousLandmark.ref.current === previousFocusedElement) closestPreviousLandmark.blur();
    }
  }
  createLandmarkController() {
    let instance = this;
    instance.refCount++;
    instance.setupIfNeeded();
    return {
      navigate(direction, opts) {
        let element = (opts === null || opts === void 0 ? void 0 : opts.from) || document.activeElement;
        return instance.navigate(element, direction === "backward");
      },
      focusNext(opts) {
        let element = (opts === null || opts === void 0 ? void 0 : opts.from) || document.activeElement;
        return instance.navigate(element, false);
      },
      focusPrevious(opts) {
        let element = (opts === null || opts === void 0 ? void 0 : opts.from) || document.activeElement;
        return instance.navigate(element, true);
      },
      focusMain() {
        return instance.focusMain();
      },
      dispose() {
        if (instance) {
          instance.refCount--;
          instance.teardownIfNeeded();
          instance = null;
        }
      }
    };
  }
  registerLandmark(landmark) {
    if (this.landmarks.find((l) => l.ref === landmark.ref)) this.updateLandmark(landmark);
    else this.addLandmark(landmark);
    return () => this.removeLandmark(landmark.ref);
  }
  constructor() {
    this.landmarks = [];
    this.isListening = false;
    this.refCount = 0;
    this.version = $a86207c5d7f7e1fb$var$LANDMARK_API_VERSION;
    this.f6Handler = this.f6Handler.bind(this);
    this.focusinHandler = this.focusinHandler.bind(this);
    this.focusoutHandler = this.focusoutHandler.bind(this);
  }
};
function $a86207c5d7f7e1fb$export$4cc632584fd87fae(props, ref) {
  const { role, "aria-label": ariaLabel, "aria-labelledby": ariaLabelledby, focus } = props;
  let manager = $a86207c5d7f7e1fb$var$useLandmarkManager();
  let label = ariaLabel || ariaLabelledby;
  let [isLandmarkFocused, setIsLandmarkFocused] = (0, import_react126.useState)(false);
  let defaultFocus = (0, import_react126.useCallback)(() => {
    setIsLandmarkFocused(true);
  }, [
    setIsLandmarkFocused
  ]);
  let blur = (0, import_react126.useCallback)(() => {
    setIsLandmarkFocused(false);
  }, [
    setIsLandmarkFocused
  ]);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    if (manager) return manager.registerLandmark({
      ref,
      label,
      role,
      focus: focus || defaultFocus,
      blur
    });
  }, [
    manager,
    label,
    ref,
    role,
    focus,
    defaultFocus,
    blur
  ]);
  (0, import_react126.useEffect)(() => {
    var _ref_current;
    if (isLandmarkFocused) (_ref_current = ref.current) === null || _ref_current === void 0 ? void 0 : _ref_current.focus();
  }, [
    isLandmarkFocused,
    ref
  ]);
  return {
    landmarkProps: {
      role,
      tabIndex: isLandmarkFocused ? -1 : void 0,
      "aria-label": ariaLabel,
      "aria-labelledby": ariaLabelledby
    }
  };
}

// node_modules/@react-aria/progress/dist/useProgressBar.mjs
function $204d9ebcedfb8806$export$ed5abd763a836edc(props) {
  let { value = 0, minValue = 0, maxValue = 100, valueLabel, isIndeterminate, formatOptions = {
    style: "percent"
  } } = props;
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props, {
    labelable: true
  });
  let { labelProps, fieldProps } = (0, $d191a55c9702f145$export$8467354a121f1b9f)({
    ...props,
    // Progress bar is not an HTML input element so it
    // shouldn't be labeled by a <label> element.
    labelElementType: "span"
  });
  value = (0, $9446cca9a3875146$export$7d15b64cf5a3a4c4)(value, minValue, maxValue);
  let percentage = (value - minValue) / (maxValue - minValue);
  let formatter = (0, $a916eb452884faea$export$b7a616150fdb9f44)(formatOptions);
  if (!isIndeterminate && !valueLabel) {
    let valueToFormat = formatOptions.style === "percent" ? percentage : value;
    valueLabel = formatter.format(valueToFormat);
  }
  return {
    progressBarProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(domProps, {
      ...fieldProps,
      "aria-valuenow": isIndeterminate ? void 0 : value,
      "aria-valuemin": minValue,
      "aria-valuemax": maxValue,
      "aria-valuetext": isIndeterminate ? void 0 : valueLabel,
      role: "progressbar"
    }),
    labelProps
  };
}

// node_modules/@react-aria/meter/dist/useMeter.mjs
function $0002d7e1d16de204$export$e969dbfa146870ff(props) {
  let { progressBarProps, labelProps } = (0, $204d9ebcedfb8806$export$ed5abd763a836edc)(props);
  return {
    meterProps: {
      ...progressBarProps,
      // Use the meter role if available, but fall back to progressbar if not
      // Chrome currently falls back from meter automatically, and Firefox
      // does not support meter at all. Safari 13+ seems to support meter properly.
      // https://bugs.chromium.org/p/chromium/issues/detail?id=944542
      // https://bugzilla.mozilla.org/show_bug.cgi?id=1460378
      role: "meter progressbar"
    },
    labelProps
  };
}

// node_modules/@react-aria/radio/dist/utils.mjs
var $884aeceb3d67f00f$export$37b65e5b5444d35c = /* @__PURE__ */ new WeakMap();

// node_modules/@react-aria/radio/dist/useRadio.mjs
function $0d5c49892c1215da$export$37b0961d2f4751e2(props, state, ref) {
  let { value, children, "aria-label": ariaLabel, "aria-labelledby": ariaLabelledby } = props;
  const isDisabled = props.isDisabled || state.isDisabled;
  let hasChildren = children != null;
  let hasAriaLabel = ariaLabel != null || ariaLabelledby != null;
  if (!hasChildren && !hasAriaLabel && true) console.warn("If you do not provide children, you must specify an aria-label for accessibility");
  let checked = state.selectedValue === value;
  let onChange = (e) => {
    e.stopPropagation();
    state.setSelectedValue(value);
  };
  let { pressProps, isPressed } = (0, $f6c31cce2adf654f$export$45712eceda6fad21)({
    isDisabled
  });
  let { pressProps: labelProps, isPressed: isLabelPressed } = (0, $f6c31cce2adf654f$export$45712eceda6fad21)({
    isDisabled,
    onPress() {
      var _ref_current;
      state.setSelectedValue(value);
      (_ref_current = ref.current) === null || _ref_current === void 0 ? void 0 : _ref_current.focus();
    }
  });
  let { focusableProps } = (0, $f645667febf57a63$export$4c014de7c8940b4c)((0, $3ef42575df84b30b$export$9d1611c77c2fe928)(props, {
    onFocus: () => state.setLastFocusedValue(value)
  }), ref);
  let interactions = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(pressProps, focusableProps);
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props, {
    labelable: true
  });
  let tabIndex = -1;
  if (state.selectedValue != null) {
    if (state.selectedValue === value) tabIndex = 0;
  } else if (state.lastFocusedValue === value || state.lastFocusedValue == null) tabIndex = 0;
  if (isDisabled) tabIndex = void 0;
  let { name, descriptionId, errorMessageId, validationBehavior } = (0, $884aeceb3d67f00f$export$37b65e5b5444d35c).get(state);
  (0, $99facab73266f662$export$5add1d006293d136)(ref, state.selectedValue, state.setSelectedValue);
  (0, $e93e671b31057976$export$b8473d3665f3a75a)({
    validationBehavior
  }, state, ref);
  return {
    labelProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(labelProps, {
      onClick: (e) => e.preventDefault()
    }),
    inputProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(domProps, {
      ...interactions,
      type: "radio",
      name,
      tabIndex,
      disabled: isDisabled,
      required: state.isRequired && validationBehavior === "native",
      checked,
      value,
      onChange,
      "aria-describedby": [
        props["aria-describedby"],
        state.isInvalid ? errorMessageId : null,
        descriptionId
      ].filter(Boolean).join(" ") || void 0
    }),
    isDisabled,
    isSelected: checked,
    isPressed: isPressed || isLabelPressed
  };
}

// node_modules/@react-aria/radio/dist/useRadioGroup.mjs
function $430f30ed08ec25fa$export$62b9571f283ff5c2(props, state) {
  let { name, isReadOnly, isRequired, isDisabled, orientation = "vertical", validationBehavior = "aria" } = props;
  let { direction } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let { isInvalid, validationErrors, validationDetails } = state.displayValidation;
  let { labelProps, fieldProps, descriptionProps, errorMessageProps } = (0, $2baaea4c71418dea$export$294aa081a6c6f55d)({
    ...props,
    // Radio group is not an HTML input element so it
    // shouldn't be labeled by a <label> element.
    labelElementType: "span",
    isInvalid: state.isInvalid,
    errorMessage: props.errorMessage || validationErrors
  });
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props, {
    labelable: true
  });
  let { focusWithinProps } = (0, $9ab94262bd0047c7$export$420e68273165f4ec)({
    onBlurWithin(e) {
      var _props_onBlur;
      (_props_onBlur = props.onBlur) === null || _props_onBlur === void 0 ? void 0 : _props_onBlur.call(props, e);
      if (!state.selectedValue) state.setLastFocusedValue(null);
    },
    onFocusWithin: props.onFocus,
    onFocusWithinChange: props.onFocusChange
  });
  let onKeyDown = (e) => {
    let nextDir;
    switch (e.key) {
      case "ArrowRight":
        if (direction === "rtl" && orientation !== "vertical") nextDir = "prev";
        else nextDir = "next";
        break;
      case "ArrowLeft":
        if (direction === "rtl" && orientation !== "vertical") nextDir = "next";
        else nextDir = "prev";
        break;
      case "ArrowDown":
        nextDir = "next";
        break;
      case "ArrowUp":
        nextDir = "prev";
        break;
      default:
        return;
    }
    e.preventDefault();
    let walker = (0, $9bf71ea28793e738$export$2d6ec8fc375ceafa)(e.currentTarget, {
      from: e.target
    });
    let nextElem;
    if (nextDir === "next") {
      nextElem = walker.nextNode();
      if (!nextElem) {
        walker.currentNode = e.currentTarget;
        nextElem = walker.firstChild();
      }
    } else {
      nextElem = walker.previousNode();
      if (!nextElem) {
        walker.currentNode = e.currentTarget;
        nextElem = walker.lastChild();
      }
    }
    if (nextElem) {
      nextElem.focus();
      state.setSelectedValue(nextElem.value);
    }
  };
  let groupName = (0, $bdb11010cef70236$export$f680877a34711e37)(name);
  (0, $884aeceb3d67f00f$export$37b65e5b5444d35c).set(state, {
    name: groupName,
    descriptionId: descriptionProps.id,
    errorMessageId: errorMessageProps.id,
    validationBehavior
  });
  return {
    radioGroupProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(domProps, {
      // https://www.w3.org/TR/wai-aria-1.2/#radiogroup
      role: "radiogroup",
      onKeyDown,
      "aria-invalid": state.isInvalid || void 0,
      "aria-errormessage": props["aria-errormessage"],
      "aria-readonly": isReadOnly || void 0,
      "aria-required": isRequired || void 0,
      "aria-disabled": isDisabled || void 0,
      "aria-orientation": orientation,
      ...fieldProps,
      ...focusWithinProps
    }),
    labelProps,
    descriptionProps,
    errorMessageProps,
    isInvalid,
    validationErrors,
    validationDetails
  };
}

// node_modules/@react-aria/searchfield/dist/ar-AE.mjs
var $03c9a1a10de12f06$exports = {};
$03c9a1a10de12f06$exports = {
  "Clear search": `مسح البحث`
};

// node_modules/@react-aria/searchfield/dist/bg-BG.mjs
var $4da0c2ffa4ba4159$exports = {};
$4da0c2ffa4ba4159$exports = {
  "Clear search": `Изчистване на търсене`
};

// node_modules/@react-aria/searchfield/dist/cs-CZ.mjs
var $8c59fd0c2c96821b$exports = {};
$8c59fd0c2c96821b$exports = {
  "Clear search": `Vymazat hledání`
};

// node_modules/@react-aria/searchfield/dist/da-DK.mjs
var $0a371f9c1df8120f$exports = {};
$0a371f9c1df8120f$exports = {
  "Clear search": `Ryd søgning`
};

// node_modules/@react-aria/searchfield/dist/de-DE.mjs
var $67f4d0b0de9f8a52$exports = {};
$67f4d0b0de9f8a52$exports = {
  "Clear search": `Suche zurücksetzen`
};

// node_modules/@react-aria/searchfield/dist/el-GR.mjs
var $72a312d948f0214b$exports = {};
$72a312d948f0214b$exports = {
  "Clear search": `Απαλοιφή αναζήτησης`
};

// node_modules/@react-aria/searchfield/dist/en-US.mjs
var $5012d21d933388c1$exports = {};
$5012d21d933388c1$exports = {
  "Clear search": `Clear search`
};

// node_modules/@react-aria/searchfield/dist/es-ES.mjs
var $0159854399308e2e$exports = {};
$0159854399308e2e$exports = {
  "Clear search": `Borrar búsqueda`
};

// node_modules/@react-aria/searchfield/dist/et-EE.mjs
var $390613981d970276$exports = {};
$390613981d970276$exports = {
  "Clear search": `Tühjenda otsing`
};

// node_modules/@react-aria/searchfield/dist/fi-FI.mjs
var $961ae0833f811705$exports = {};
$961ae0833f811705$exports = {
  "Clear search": `Tyhjennä haku`
};

// node_modules/@react-aria/searchfield/dist/fr-FR.mjs
var $26d76742decfd829$exports = {};
$26d76742decfd829$exports = {
  "Clear search": `Effacer la recherche`
};

// node_modules/@react-aria/searchfield/dist/he-IL.mjs
var $92ef254c82a5c769$exports = {};
$92ef254c82a5c769$exports = {
  "Clear search": `נקה חיפוש`
};

// node_modules/@react-aria/searchfield/dist/hr-HR.mjs
var $e0321b43bdefb8b3$exports = {};
$e0321b43bdefb8b3$exports = {
  "Clear search": `Obriši pretragu`
};

// node_modules/@react-aria/searchfield/dist/hu-HU.mjs
var $0c1ee0b8d50940d9$exports = {};
$0c1ee0b8d50940d9$exports = {
  "Clear search": `Keresés törlése`
};

// node_modules/@react-aria/searchfield/dist/it-IT.mjs
var $b09198915a38946f$exports = {};
$b09198915a38946f$exports = {
  "Clear search": `Cancella ricerca`
};

// node_modules/@react-aria/searchfield/dist/ja-JP.mjs
var $3a9a3d180c3145c0$exports = {};
$3a9a3d180c3145c0$exports = {
  "Clear search": `検索をクリア`
};

// node_modules/@react-aria/searchfield/dist/ko-KR.mjs
var $b7a611726449f4a3$exports = {};
$b7a611726449f4a3$exports = {
  "Clear search": `검색 지우기`
};

// node_modules/@react-aria/searchfield/dist/lt-LT.mjs
var $d9a3d49db610dd5c$exports = {};
$d9a3d49db610dd5c$exports = {
  "Clear search": `Išvalyti iešką`
};

// node_modules/@react-aria/searchfield/dist/lv-LV.mjs
var $3ab64b73ea27c23a$exports = {};
$3ab64b73ea27c23a$exports = {
  "Clear search": `Notīrīt meklēšanu`
};

// node_modules/@react-aria/searchfield/dist/nb-NO.mjs
var $bf5cce1b47d23baf$exports = {};
$bf5cce1b47d23baf$exports = {
  "Clear search": `Tøm søk`
};

// node_modules/@react-aria/searchfield/dist/nl-NL.mjs
var $4e0c9a9a010e4598$exports = {};
$4e0c9a9a010e4598$exports = {
  "Clear search": `Zoekactie wissen`
};

// node_modules/@react-aria/searchfield/dist/pl-PL.mjs
var $63cf4a75ec270508$exports = {};
$63cf4a75ec270508$exports = {
  "Clear search": `Wyczyść zawartość wyszukiwania`
};

// node_modules/@react-aria/searchfield/dist/pt-BR.mjs
var $083b0cad27fdbd06$exports = {};
$083b0cad27fdbd06$exports = {
  "Clear search": `Limpar pesquisa`
};

// node_modules/@react-aria/searchfield/dist/pt-PT.mjs
var $1b7f0864d830ba6d$exports = {};
$1b7f0864d830ba6d$exports = {
  "Clear search": `Limpar pesquisa`
};

// node_modules/@react-aria/searchfield/dist/ro-RO.mjs
var $d6d2588377fc9718$exports = {};
$d6d2588377fc9718$exports = {
  "Clear search": `Ştergeţi căutarea`
};

// node_modules/@react-aria/searchfield/dist/ru-RU.mjs
var $701c918a4653e946$exports = {};
$701c918a4653e946$exports = {
  "Clear search": `Очистить поиск`
};

// node_modules/@react-aria/searchfield/dist/sk-SK.mjs
var $7cacc29a1e5f4fbe$exports = {};
$7cacc29a1e5f4fbe$exports = {
  "Clear search": `Vymazať vyhľadávanie`
};

// node_modules/@react-aria/searchfield/dist/sl-SI.mjs
var $c63231bcc300d0df$exports = {};
$c63231bcc300d0df$exports = {
  "Clear search": `Počisti iskanje`
};

// node_modules/@react-aria/searchfield/dist/sr-SP.mjs
var $b61510478bc0e6f6$exports = {};
$b61510478bc0e6f6$exports = {
  "Clear search": `Obriši pretragu`
};

// node_modules/@react-aria/searchfield/dist/sv-SE.mjs
var $ce325e6dd3f9c37a$exports = {};
$ce325e6dd3f9c37a$exports = {
  "Clear search": `Rensa sökning`
};

// node_modules/@react-aria/searchfield/dist/tr-TR.mjs
var $1f7e1cf2285af2b2$exports = {};
$1f7e1cf2285af2b2$exports = {
  "Clear search": `Aramayı temizle`
};

// node_modules/@react-aria/searchfield/dist/uk-UA.mjs
var $2d999353ca652e34$exports = {};
$2d999353ca652e34$exports = {
  "Clear search": `Очистити пошук`
};

// node_modules/@react-aria/searchfield/dist/zh-CN.mjs
var $117b536bfb1ae554$exports = {};
$117b536bfb1ae554$exports = {
  "Clear search": `清除搜索`
};

// node_modules/@react-aria/searchfield/dist/zh-TW.mjs
var $525f6fa4ac26e278$exports = {};
$525f6fa4ac26e278$exports = {
  "Clear search": `清除搜尋條件`
};

// node_modules/@react-aria/searchfield/dist/intlStrings.mjs
var $8112f8b883c0272d$exports = {};
$8112f8b883c0272d$exports = {
  "ar-AE": $03c9a1a10de12f06$exports,
  "bg-BG": $4da0c2ffa4ba4159$exports,
  "cs-CZ": $8c59fd0c2c96821b$exports,
  "da-DK": $0a371f9c1df8120f$exports,
  "de-DE": $67f4d0b0de9f8a52$exports,
  "el-GR": $72a312d948f0214b$exports,
  "en-US": $5012d21d933388c1$exports,
  "es-ES": $0159854399308e2e$exports,
  "et-EE": $390613981d970276$exports,
  "fi-FI": $961ae0833f811705$exports,
  "fr-FR": $26d76742decfd829$exports,
  "he-IL": $92ef254c82a5c769$exports,
  "hr-HR": $e0321b43bdefb8b3$exports,
  "hu-HU": $0c1ee0b8d50940d9$exports,
  "it-IT": $b09198915a38946f$exports,
  "ja-JP": $3a9a3d180c3145c0$exports,
  "ko-KR": $b7a611726449f4a3$exports,
  "lt-LT": $d9a3d49db610dd5c$exports,
  "lv-LV": $3ab64b73ea27c23a$exports,
  "nb-NO": $bf5cce1b47d23baf$exports,
  "nl-NL": $4e0c9a9a010e4598$exports,
  "pl-PL": $63cf4a75ec270508$exports,
  "pt-BR": $083b0cad27fdbd06$exports,
  "pt-PT": $1b7f0864d830ba6d$exports,
  "ro-RO": $d6d2588377fc9718$exports,
  "ru-RU": $701c918a4653e946$exports,
  "sk-SK": $7cacc29a1e5f4fbe$exports,
  "sl-SI": $c63231bcc300d0df$exports,
  "sr-SP": $b61510478bc0e6f6$exports,
  "sv-SE": $ce325e6dd3f9c37a$exports,
  "tr-TR": $1f7e1cf2285af2b2$exports,
  "uk-UA": $2d999353ca652e34$exports,
  "zh-CN": $117b536bfb1ae554$exports,
  "zh-TW": $525f6fa4ac26e278$exports
};

// node_modules/@react-aria/searchfield/dist/useSearchField.mjs
function $parcel$interopDefault24(a) {
  return a && a.__esModule ? a.default : a;
}
function $4d52238874b24f86$export$9bb30bbe003b82e0(props, state, inputRef) {
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault24($8112f8b883c0272d$exports)), "@react-aria/searchfield");
  let { isDisabled, isReadOnly, onSubmit, onClear, type = "search" } = props;
  let onKeyDown = (e) => {
    const key = e.key;
    if (key === "Enter" && (isDisabled || isReadOnly)) e.preventDefault();
    if (isDisabled || isReadOnly) return;
    if (key === "Enter" && onSubmit) {
      e.preventDefault();
      onSubmit(state.value);
    }
    if (key === "Escape") {
      if (state.value === "" && (!inputRef.current || inputRef.current.value === "")) e.continuePropagation();
      else {
        e.preventDefault();
        state.setValue("");
        if (onClear) onClear();
      }
    }
  };
  let onClearButtonClick = () => {
    state.setValue("");
    if (onClear) onClear();
  };
  let onPressStart = () => {
    var _inputRef_current;
    (_inputRef_current = inputRef.current) === null || _inputRef_current === void 0 ? void 0 : _inputRef_current.focus();
  };
  let { labelProps, inputProps, descriptionProps, errorMessageProps, ...validation } = (0, $2d73ec29415bd339$export$712718f7aec83d5)({
    ...props,
    value: state.value,
    onChange: state.setValue,
    onKeyDown: !isReadOnly ? (0, $ff5963eb1fccf552$export$e08e3b67e392101e)(onKeyDown, props.onKeyDown) : props.onKeyDown,
    type
  }, inputRef);
  return {
    labelProps,
    inputProps: {
      ...inputProps,
      // already handled by useSearchFieldState
      defaultValue: void 0
    },
    clearButtonProps: {
      "aria-label": stringFormatter.format("Clear search"),
      excludeFromTabOrder: true,
      preventFocusOnPress: true,
      isDisabled: isDisabled || isReadOnly,
      onPress: onClearButtonClick,
      onPressStart
    },
    descriptionProps,
    errorMessageProps,
    ...validation
  };
}

// node_modules/@react-aria/select/dist/useSelect.mjs
var import_react127 = __toESM(require_react(), 1);
var $58aed456727eb0f3$export$703601b7e90536f8 = /* @__PURE__ */ new WeakMap();
function $58aed456727eb0f3$export$e64b2f635402ca43(props, state, ref) {
  let { keyboardDelegate, isDisabled, isRequired, name, validationBehavior = "aria" } = props;
  let collator = (0, $325a3faab7a68acd$export$a16aca283550c30d)({
    usage: "search",
    sensitivity: "base"
  });
  let delegate = (0, import_react127.useMemo)(() => keyboardDelegate || new (0, $2a25aae57d74318e$export$a05409b8bb224a5a)(state.collection, state.disabledKeys, ref, collator), [
    keyboardDelegate,
    state.collection,
    state.disabledKeys,
    collator,
    ref
  ]);
  let { menuTriggerProps, menuProps } = (0, $168583247155ddda$export$dc9c12ed27dd1b49)({
    isDisabled,
    type: "listbox"
  }, state, ref);
  let onKeyDown = (e) => {
    switch (e.key) {
      case "ArrowLeft": {
        var _delegate_getKeyAbove, _delegate_getFirstKey;
        e.preventDefault();
        let key = state.selectedKey != null ? (_delegate_getKeyAbove = delegate.getKeyAbove) === null || _delegate_getKeyAbove === void 0 ? void 0 : _delegate_getKeyAbove.call(delegate, state.selectedKey) : (_delegate_getFirstKey = delegate.getFirstKey) === null || _delegate_getFirstKey === void 0 ? void 0 : _delegate_getFirstKey.call(delegate);
        if (key) state.setSelectedKey(key);
        break;
      }
      case "ArrowRight": {
        var _delegate_getKeyBelow, _delegate_getFirstKey1;
        e.preventDefault();
        let key = state.selectedKey != null ? (_delegate_getKeyBelow = delegate.getKeyBelow) === null || _delegate_getKeyBelow === void 0 ? void 0 : _delegate_getKeyBelow.call(delegate, state.selectedKey) : (_delegate_getFirstKey1 = delegate.getFirstKey) === null || _delegate_getFirstKey1 === void 0 ? void 0 : _delegate_getFirstKey1.call(delegate);
        if (key) state.setSelectedKey(key);
        break;
      }
    }
  };
  let { typeSelectProps } = (0, $fb3050f43d946246$export$e32c88dfddc6e1d8)({
    keyboardDelegate: delegate,
    selectionManager: state.selectionManager,
    onTypeSelect(key) {
      state.setSelectedKey(key);
    }
  });
  let { isInvalid, validationErrors, validationDetails } = state.displayValidation;
  let { labelProps, fieldProps, descriptionProps, errorMessageProps } = (0, $2baaea4c71418dea$export$294aa081a6c6f55d)({
    ...props,
    labelElementType: "span",
    isInvalid,
    errorMessage: props.errorMessage || validationErrors
  });
  typeSelectProps.onKeyDown = typeSelectProps.onKeyDownCapture;
  delete typeSelectProps.onKeyDownCapture;
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props, {
    labelable: true
  });
  let triggerProps = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(typeSelectProps, menuTriggerProps, fieldProps);
  let valueId = (0, $bdb11010cef70236$export$f680877a34711e37)();
  $58aed456727eb0f3$export$703601b7e90536f8.set(state, {
    isDisabled,
    isRequired,
    name,
    validationBehavior
  });
  return {
    labelProps: {
      ...labelProps,
      onClick: () => {
        if (!props.isDisabled) {
          var _ref_current;
          (_ref_current = ref.current) === null || _ref_current === void 0 ? void 0 : _ref_current.focus();
          (0, $507fabe10e71c6fb$export$8397ddfc504fdb9a)("keyboard");
        }
      }
    },
    triggerProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(domProps, {
      ...triggerProps,
      isDisabled,
      onKeyDown: (0, $ff5963eb1fccf552$export$e08e3b67e392101e)(triggerProps.onKeyDown, onKeyDown, props.onKeyDown),
      onKeyUp: props.onKeyUp,
      "aria-labelledby": [
        valueId,
        triggerProps["aria-labelledby"],
        triggerProps["aria-label"] && !triggerProps["aria-labelledby"] ? triggerProps.id : null
      ].filter(Boolean).join(" "),
      onFocus(e) {
        if (state.isFocused) return;
        if (props.onFocus) props.onFocus(e);
        if (props.onFocusChange) props.onFocusChange(true);
        state.setFocused(true);
      },
      onBlur(e) {
        if (state.isOpen) return;
        if (props.onBlur) props.onBlur(e);
        if (props.onFocusChange) props.onFocusChange(false);
        state.setFocused(false);
      }
    }),
    valueProps: {
      id: valueId
    },
    menuProps: {
      ...menuProps,
      autoFocus: state.focusStrategy || true,
      shouldSelectOnPressUp: true,
      shouldFocusOnHover: true,
      disallowEmptySelection: true,
      linkBehavior: "selection",
      onBlur: (e) => {
        if (e.currentTarget.contains(e.relatedTarget)) return;
        if (props.onBlur) props.onBlur(e);
        if (props.onFocusChange) props.onFocusChange(false);
        state.setFocused(false);
      },
      "aria-labelledby": [
        fieldProps["aria-labelledby"],
        triggerProps["aria-label"] && !fieldProps["aria-labelledby"] ? triggerProps.id : null
      ].filter(Boolean).join(" ")
    },
    descriptionProps,
    errorMessageProps,
    isInvalid,
    validationErrors,
    validationDetails
  };
}

// node_modules/@react-aria/select/dist/HiddenSelect.mjs
var import_react128 = __toESM(require_react(), 1);
function $bdd25dc72710631f$export$f809e80f58e251d1(props, state, triggerRef) {
  let data = (0, $58aed456727eb0f3$export$703601b7e90536f8).get(state) || {};
  let { autoComplete, name = data.name, isDisabled = data.isDisabled } = props;
  let { validationBehavior, isRequired } = data;
  let { visuallyHiddenProps } = (0, $5c3e21d68f1c4674$export$a966af930f325cab)();
  (0, $99facab73266f662$export$5add1d006293d136)(props.selectRef, state.selectedKey, state.setSelectedKey);
  (0, $e93e671b31057976$export$b8473d3665f3a75a)({
    validationBehavior,
    focus: () => {
      var _triggerRef_current;
      return (_triggerRef_current = triggerRef.current) === null || _triggerRef_current === void 0 ? void 0 : _triggerRef_current.focus();
    }
  }, state, props.selectRef);
  var _state_selectedKey;
  return {
    containerProps: {
      ...visuallyHiddenProps,
      "aria-hidden": true,
      // @ts-ignore
      ["data-react-aria-prevent-focus"]: true,
      // @ts-ignore
      ["data-a11y-ignore"]: "aria-hidden-focus"
    },
    inputProps: {
      style: {
        display: "none"
      }
    },
    selectProps: {
      tabIndex: -1,
      autoComplete,
      disabled: isDisabled,
      required: validationBehavior === "native" && isRequired,
      name,
      value: (_state_selectedKey = state.selectedKey) !== null && _state_selectedKey !== void 0 ? _state_selectedKey : void 0,
      onChange: (e) => state.setSelectedKey(e.target.value)
    }
  };
}
function $bdd25dc72710631f$export$cbd84cdb2e668835(props) {
  let { state, triggerRef, label, name, isDisabled } = props;
  let selectRef = (0, import_react128.useRef)(null);
  let { containerProps, selectProps } = $bdd25dc72710631f$export$f809e80f58e251d1({
    ...props,
    selectRef
  }, state, triggerRef);
  var _state_selectedKey;
  if (state.collection.size <= 300) return (0, import_react128.default).createElement("div", {
    ...containerProps,
    "data-testid": "hidden-select-container"
  }, (0, import_react128.default).createElement("label", null, label, (0, import_react128.default).createElement("select", {
    ...selectProps,
    ref: selectRef
  }, (0, import_react128.default).createElement("option", null), [
    ...state.collection.getKeys()
  ].map((key) => {
    let item = state.collection.getItem(key);
    if (item && item.type === "item") return (0, import_react128.default).createElement("option", {
      key: item.key,
      value: item.key
    }, item.textValue);
  }))));
  else if (name) return (0, import_react128.default).createElement("input", {
    type: "hidden",
    autoComplete: selectProps.autoComplete,
    name,
    disabled: isDisabled,
    value: (_state_selectedKey = state.selectedKey) !== null && _state_selectedKey !== void 0 ? _state_selectedKey : ""
  });
  return null;
}

// node_modules/@react-aria/separator/dist/useSeparator.mjs
function $f4b273590fab9f93$export$52210f68a14655d0(props) {
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props, {
    labelable: true
  });
  let ariaOrientation;
  if (props.orientation === "vertical") ariaOrientation = "vertical";
  if (props.elementType !== "hr") return {
    separatorProps: {
      ...domProps,
      role: "separator",
      "aria-orientation": ariaOrientation
    }
  };
  return {
    separatorProps: domProps
  };
}

// node_modules/@react-aria/switch/dist/useSwitch.mjs
function $b418ec0c85c52f27$export$d853f7095ae95f88(props, state, ref) {
  let { labelProps, inputProps, isSelected, isPressed, isDisabled, isReadOnly } = (0, $d2c8e2b0480f3f34$export$cbe85ee05b554577)(props, state, ref);
  return {
    labelProps,
    inputProps: {
      ...inputProps,
      role: "switch",
      checked: isSelected
    },
    isSelected,
    isPressed,
    isDisabled,
    isReadOnly
  };
}

// node_modules/@react-aria/table/dist/utils.mjs
var $2140fb2337097f2d$export$552312adfd451dab = /* @__PURE__ */ new WeakMap();
function $2140fb2337097f2d$var$normalizeKey(key) {
  if (typeof key === "string") return key.replace(/\s*/g, "");
  return "" + key;
}
function $2140fb2337097f2d$export$37cd4213f2ad742e(state, columnKey) {
  let gridId = $2140fb2337097f2d$export$552312adfd451dab.get(state);
  if (!gridId) throw new Error("Unknown grid");
  return `${gridId}-${$2140fb2337097f2d$var$normalizeKey(columnKey)}`;
}
function $2140fb2337097f2d$export$19baff3266315d44(state, rowKey, columnKey) {
  let gridId = $2140fb2337097f2d$export$552312adfd451dab.get(state);
  if (!gridId) throw new Error("Unknown grid");
  return `${gridId}-${$2140fb2337097f2d$var$normalizeKey(rowKey)}-${$2140fb2337097f2d$var$normalizeKey(columnKey)}`;
}
function $2140fb2337097f2d$export$85069b70317f543(state, rowKey) {
  return [
    ...state.collection.rowHeaderColumnKeys
  ].map((columnKey) => $2140fb2337097f2d$export$19baff3266315d44(state, rowKey, columnKey)).join(" ");
}

// node_modules/@react-aria/table/dist/ar-AE.mjs
var $ce3de3ff2fd66848$exports = {};
$ce3de3ff2fd66848$exports = {
  "ascending": `تصاعدي`,
  "ascendingSort": (args) => `ترتيب حسب العمود ${args.columnName} بترتيب تصاعدي`,
  "columnSize": (args) => `${args.value} بالبكسل`,
  "descending": `تنازلي`,
  "descendingSort": (args) => `ترتيب حسب العمود ${args.columnName} بترتيب تنازلي`,
  "resizerDescription": `اضغط على مفتاح Enter لبدء تغيير الحجم`,
  "select": `تحديد`,
  "selectAll": `تحديد الكل`,
  "sortable": `عمود قابل للترتيب`
};

// node_modules/@react-aria/table/dist/bg-BG.mjs
var $cb80dcce530985b9$exports = {};
$cb80dcce530985b9$exports = {
  "ascending": `възходящ`,
  "ascendingSort": (args) => `сортирано по колона ${args.columnName} във възходящ ред`,
  "columnSize": (args) => `${args.value} пиксела`,
  "descending": `низходящ`,
  "descendingSort": (args) => `сортирано по колона ${args.columnName} в низходящ ред`,
  "resizerDescription": `Натиснете „Enter“, за да започнете да преоразмерявате`,
  "select": `Изберете`,
  "selectAll": `Изберете всичко`,
  "sortable": `сортираща колона`
};

// node_modules/@react-aria/table/dist/cs-CZ.mjs
var $68ac86749db4c0fb$exports = {};
$68ac86749db4c0fb$exports = {
  "ascending": `vzestupně`,
  "ascendingSort": (args) => `řazeno vzestupně podle sloupce ${args.columnName}`,
  "columnSize": (args) => `${args.value} pixelů`,
  "descending": `sestupně`,
  "descendingSort": (args) => `řazeno sestupně podle sloupce ${args.columnName}`,
  "resizerDescription": `Stisknutím klávesy Enter začnete měnit velikost`,
  "select": `Vybrat`,
  "selectAll": `Vybrat vše`,
  "sortable": `sloupec s možností řazení`
};

// node_modules/@react-aria/table/dist/da-DK.mjs
var $9a6cbac08487e661$exports = {};
$9a6cbac08487e661$exports = {
  "ascending": `stigende`,
  "ascendingSort": (args) => `sorteret efter kolonne ${args.columnName} i stigende rækkefølge`,
  "columnSize": (args) => `${args.value} pixels`,
  "descending": `faldende`,
  "descendingSort": (args) => `sorteret efter kolonne ${args.columnName} i faldende rækkefølge`,
  "resizerDescription": `Tryk på Enter for at ændre størrelse`,
  "select": `Vælg`,
  "selectAll": `Vælg alle`,
  "sortable": `sorterbar kolonne`
};

// node_modules/@react-aria/table/dist/de-DE.mjs
var $c963661d89486e72$exports = {};
$c963661d89486e72$exports = {
  "ascending": `aufsteigend`,
  "ascendingSort": (args) => `sortiert nach Spalte ${args.columnName} in aufsteigender Reihenfolge`,
  "columnSize": (args) => `${args.value} Pixel`,
  "descending": `absteigend`,
  "descendingSort": (args) => `sortiert nach Spalte ${args.columnName} in absteigender Reihenfolge`,
  "resizerDescription": `Eingabetaste zum Starten der Größenänderung drücken`,
  "select": `Auswählen`,
  "selectAll": `Alles auswählen`,
  "sortable": `sortierbare Spalte`
};

// node_modules/@react-aria/table/dist/el-GR.mjs
var $ac03861c6e8605f4$exports = {};
$ac03861c6e8605f4$exports = {
  "ascending": `αύξουσα`,
  "ascendingSort": (args) => `διαλογή ανά στήλη ${args.columnName} σε αύξουσα σειρά`,
  "columnSize": (args) => `${args.value} pixel`,
  "descending": `φθίνουσα`,
  "descendingSort": (args) => `διαλογή ανά στήλη ${args.columnName} σε φθίνουσα σειρά`,
  "resizerDescription": `Πατήστε Enter για έναρξη της αλλαγής μεγέθους`,
  "select": `Επιλογή`,
  "selectAll": `Επιλογή όλων`,
  "sortable": `Στήλη διαλογής`
};

// node_modules/@react-aria/table/dist/en-US.mjs
var $09e6b82e0d6e466a$exports = {};
$09e6b82e0d6e466a$exports = {
  "select": `Select`,
  "selectAll": `Select All`,
  "sortable": `sortable column`,
  "ascending": `ascending`,
  "descending": `descending`,
  "ascendingSort": (args) => `sorted by column ${args.columnName} in ascending order`,
  "descendingSort": (args) => `sorted by column ${args.columnName} in descending order`,
  "columnSize": (args) => `${args.value} pixels`,
  "resizerDescription": `Press Enter to start resizing`
};

// node_modules/@react-aria/table/dist/es-ES.mjs
var $8cc39eb66c2bf220$exports = {};
$8cc39eb66c2bf220$exports = {
  "ascending": `ascendente`,
  "ascendingSort": (args) => `ordenado por columna ${args.columnName} en sentido ascendente`,
  "columnSize": (args) => `${args.value} píxeles`,
  "descending": `descendente`,
  "descendingSort": (args) => `ordenado por columna ${args.columnName} en orden descendente`,
  "resizerDescription": `Pulse Intro para empezar a redimensionar`,
  "select": `Seleccionar`,
  "selectAll": `Seleccionar todos`,
  "sortable": `columna ordenable`
};

// node_modules/@react-aria/table/dist/et-EE.mjs
var $4e11db3c25a38112$exports = {};
$4e11db3c25a38112$exports = {
  "ascending": `tõusev järjestus`,
  "ascendingSort": (args) => `sorditud veeru järgi ${args.columnName} tõusvas järjestuses`,
  "columnSize": (args) => `${args.value} pikslit`,
  "descending": `laskuv järjestus`,
  "descendingSort": (args) => `sorditud veeru järgi ${args.columnName} laskuvas järjestuses`,
  "resizerDescription": `Suuruse muutmise alustamiseks vajutage klahvi Enter`,
  "select": `Vali`,
  "selectAll": `Vali kõik`,
  "sortable": `sorditav veerg`
};

// node_modules/@react-aria/table/dist/fi-FI.mjs
var $da1e751a92575e02$exports = {};
$da1e751a92575e02$exports = {
  "ascending": `nouseva`,
  "ascendingSort": (args) => `lajiteltu sarakkeen ${args.columnName} mukaan nousevassa järjestyksessä`,
  "columnSize": (args) => `${args.value} pikseliä`,
  "descending": `laskeva`,
  "descendingSort": (args) => `lajiteltu sarakkeen ${args.columnName} mukaan laskevassa järjestyksessä`,
  "resizerDescription": `Aloita koon muutos painamalla Enter-näppäintä`,
  "select": `Valitse`,
  "selectAll": `Valitse kaikki`,
  "sortable": `lajiteltava sarake`
};

// node_modules/@react-aria/table/dist/fr-FR.mjs
var $1b5d6c6c47d55106$exports = {};
$1b5d6c6c47d55106$exports = {
  "ascending": `croissant`,
  "ascendingSort": (args) => `trié en fonction de la colonne ${args.columnName} par ordre croissant`,
  "columnSize": (args) => `${args.value} pixels`,
  "descending": `décroissant`,
  "descendingSort": (args) => `trié en fonction de la colonne ${args.columnName} par ordre décroissant`,
  "resizerDescription": `Appuyez sur Entrée pour commencer le redimensionnement.`,
  "select": `Sélectionner`,
  "selectAll": `Sélectionner tout`,
  "sortable": `colonne triable`
};

// node_modules/@react-aria/table/dist/he-IL.mjs
var $7c18ba27b86d3308$exports = {};
$7c18ba27b86d3308$exports = {
  "ascending": `עולה`,
  "ascendingSort": (args) => `מוין לפי עמודה ${args.columnName} בסדר עולה`,
  "columnSize": (args) => `${args.value} פיקסלים`,
  "descending": `יורד`,
  "descendingSort": (args) => `מוין לפי עמודה ${args.columnName} בסדר יורד`,
  "resizerDescription": `הקש Enter כדי לשנות את הגודל`,
  "select": `בחר`,
  "selectAll": `בחר הכול`,
  "sortable": `עמודה שניתן למיין`
};

// node_modules/@react-aria/table/dist/hr-HR.mjs
var $2cb40998e20e8a46$exports = {};
$2cb40998e20e8a46$exports = {
  "ascending": `rastući`,
  "ascendingSort": (args) => `razvrstano po stupcima ${args.columnName} rastućem redoslijedom`,
  "columnSize": (args) => `${args.value} piksela`,
  "descending": `padajući`,
  "descendingSort": (args) => `razvrstano po stupcima ${args.columnName} padajućim redoslijedom`,
  "resizerDescription": `Pritisnite Enter da biste započeli promenu veličine`,
  "select": `Odaberite`,
  "selectAll": `Odaberite sve`,
  "sortable": `stupac koji se može razvrstati`
};

// node_modules/@react-aria/table/dist/hu-HU.mjs
var $189e23eec1d6aa3a$exports = {};
$189e23eec1d6aa3a$exports = {
  "ascending": `növekvő`,
  "ascendingSort": (args) => `rendezve a(z) ${args.columnName} oszlop szerint, növekvő sorrendben`,
  "columnSize": (args) => `${args.value} képpont`,
  "descending": `csökkenő`,
  "descendingSort": (args) => `rendezve a(z) ${args.columnName} oszlop szerint, csökkenő sorrendben`,
  "resizerDescription": `Nyomja le az Enter billentyűt az átméretezés megkezdéséhez`,
  "select": `Kijelölés`,
  "selectAll": `Összes kijelölése`,
  "sortable": `rendezendő oszlop`
};

// node_modules/@react-aria/table/dist/it-IT.mjs
var $3c5ec8e4f015dfd0$exports = {};
$3c5ec8e4f015dfd0$exports = {
  "ascending": `crescente`,
  "ascendingSort": (args) => `in ordine crescente in base alla colonna ${args.columnName}`,
  "columnSize": (args) => `${args.value} pixel`,
  "descending": `decrescente`,
  "descendingSort": (args) => `in ordine decrescente in base alla colonna ${args.columnName}`,
  "resizerDescription": `Premi Invio per iniziare a ridimensionare`,
  "select": `Seleziona`,
  "selectAll": `Seleziona tutto`,
  "sortable": `colonna ordinabile`
};

// node_modules/@react-aria/table/dist/ja-JP.mjs
var $d021d50e6b315ebb$exports = {};
$d021d50e6b315ebb$exports = {
  "ascending": `昇順`,
  "ascendingSort": (args) => `列 ${args.columnName} を昇順で並べ替え`,
  "columnSize": (args) => `${args.value} ピクセル`,
  "descending": `降順`,
  "descendingSort": (args) => `列 ${args.columnName} を降順で並べ替え`,
  "resizerDescription": `Enter キーを押してサイズ変更を開始`,
  "select": `選択`,
  "selectAll": `すべて選択`,
  "sortable": `並べ替え可能な列`
};

// node_modules/@react-aria/table/dist/ko-KR.mjs
var $52535c35c24ec937$exports = {};
$52535c35c24ec937$exports = {
  "ascending": `오름차순`,
  "ascendingSort": (args) => `${args.columnName} 열을 기준으로 오름차순으로 정렬됨`,
  "columnSize": (args) => `${args.value} 픽셀`,
  "descending": `내림차순`,
  "descendingSort": (args) => `${args.columnName} 열을 기준으로 내림차순으로 정렬됨`,
  "resizerDescription": `크기 조정을 시작하려면 Enter를 누르세요.`,
  "select": `선택`,
  "selectAll": `모두 선택`,
  "sortable": `정렬 가능한 열`
};

// node_modules/@react-aria/table/dist/lt-LT.mjs
var $b37ee03672edfd1d$exports = {};
$b37ee03672edfd1d$exports = {
  "ascending": `didėjančia tvarka`,
  "ascendingSort": (args) => `surikiuota pagal stulpelį ${args.columnName} didėjančia tvarka`,
  "columnSize": (args) => `${args.value} piks.`,
  "descending": `mažėjančia tvarka`,
  "descendingSort": (args) => `surikiuota pagal stulpelį ${args.columnName} mažėjančia tvarka`,
  "resizerDescription": `Paspauskite „Enter“, kad pradėtumėte keisti dydį`,
  "select": `Pasirinkti`,
  "selectAll": `Pasirinkti viską`,
  "sortable": `rikiuojamas stulpelis`
};

// node_modules/@react-aria/table/dist/lv-LV.mjs
var $c7df6686b4189d56$exports = {};
$c7df6686b4189d56$exports = {
  "ascending": `augošā secībā`,
  "ascendingSort": (args) => `kārtots pēc kolonnas ${args.columnName} augošā secībā`,
  "columnSize": (args) => `${args.value} pikseļi`,
  "descending": `dilstošā secībā`,
  "descendingSort": (args) => `kārtots pēc kolonnas ${args.columnName} dilstošā secībā`,
  "resizerDescription": `Nospiediet Enter, lai sāktu izmēru mainīšanu`,
  "select": `Atlasīt`,
  "selectAll": `Atlasīt visu`,
  "sortable": `kārtojamā kolonna`
};

// node_modules/@react-aria/table/dist/nb-NO.mjs
var $da07fe8ec87e6b68$exports = {};
$da07fe8ec87e6b68$exports = {
  "ascending": `stigende`,
  "ascendingSort": (args) => `sortert etter kolonne ${args.columnName} i stigende rekkefølge`,
  "columnSize": (args) => `${args.value} piksler`,
  "descending": `synkende`,
  "descendingSort": (args) => `sortert etter kolonne ${args.columnName} i synkende rekkefølge`,
  "resizerDescription": `Trykk på Enter for å starte størrelsesendring`,
  "select": `Velg`,
  "selectAll": `Velg alle`,
  "sortable": `kolonne som kan sorteres`
};

// node_modules/@react-aria/table/dist/nl-NL.mjs
var $64b7e390f5791490$exports = {};
$64b7e390f5791490$exports = {
  "ascending": `oplopend`,
  "ascendingSort": (args) => `gesorteerd in oplopende volgorde in kolom ${args.columnName}`,
  "columnSize": (args) => `${args.value} pixels`,
  "descending": `aflopend`,
  "descendingSort": (args) => `gesorteerd in aflopende volgorde in kolom ${args.columnName}`,
  "resizerDescription": `Druk op Enter om het formaat te wijzigen`,
  "select": `Selecteren`,
  "selectAll": `Alles selecteren`,
  "sortable": `sorteerbare kolom`
};

// node_modules/@react-aria/table/dist/pl-PL.mjs
var $2a03621e773f1678$exports = {};
$2a03621e773f1678$exports = {
  "ascending": `rosnąco`,
  "ascendingSort": (args) => `posortowano według kolumny ${args.columnName} w porządku rosnącym`,
  "columnSize": (args) => `Liczba pikseli: ${args.value}`,
  "descending": `malejąco`,
  "descendingSort": (args) => `posortowano według kolumny ${args.columnName} w porządku malejącym`,
  "resizerDescription": `Naciśnij Enter, aby rozpocząć zmienianie rozmiaru`,
  "select": `Zaznacz`,
  "selectAll": `Zaznacz wszystko`,
  "sortable": `kolumna z możliwością sortowania`
};

// node_modules/@react-aria/table/dist/pt-BR.mjs
var $0a79c0aba9e5ecc6$exports = {};
$0a79c0aba9e5ecc6$exports = {
  "ascending": `crescente`,
  "ascendingSort": (args) => `classificado pela coluna ${args.columnName} em ordem crescente`,
  "columnSize": (args) => `${args.value} pixels`,
  "descending": `decrescente`,
  "descendingSort": (args) => `classificado pela coluna ${args.columnName} em ordem decrescente`,
  "resizerDescription": `Pressione Enter para começar a redimensionar`,
  "select": `Selecionar`,
  "selectAll": `Selecionar tudo`,
  "sortable": `coluna classificável`
};

// node_modules/@react-aria/table/dist/pt-PT.mjs
var $de7b4d0f7dc86fc8$exports = {};
$de7b4d0f7dc86fc8$exports = {
  "ascending": `ascendente`,
  "ascendingSort": (args) => `Ordenar por coluna ${args.columnName} em ordem ascendente`,
  "columnSize": (args) => `${args.value} pixels`,
  "descending": `descendente`,
  "descendingSort": (args) => `Ordenar por coluna ${args.columnName} em ordem descendente`,
  "resizerDescription": `Prima Enter para iniciar o redimensionamento`,
  "select": `Selecionar`,
  "selectAll": `Selecionar tudo`,
  "sortable": `Coluna ordenável`
};

// node_modules/@react-aria/table/dist/ro-RO.mjs
var $28ea7e849d77bd1c$exports = {};
$28ea7e849d77bd1c$exports = {
  "ascending": `crescătoare`,
  "ascendingSort": (args) => `sortate după coloana ${args.columnName} în ordine crescătoare`,
  "columnSize": (args) => `${args.value} pixeli`,
  "descending": `descrescătoare`,
  "descendingSort": (args) => `sortate după coloana ${args.columnName} în ordine descrescătoare`,
  "resizerDescription": `Apăsați pe Enter pentru a începe redimensionarea`,
  "select": `Selectare`,
  "selectAll": `Selectare totală`,
  "sortable": `coloană sortabilă`
};

// node_modules/@react-aria/table/dist/ru-RU.mjs
var $9a09321cf046b187$exports = {};
$9a09321cf046b187$exports = {
  "ascending": `возрастание`,
  "ascendingSort": (args) => `сортировать столбец ${args.columnName} в порядке возрастания`,
  "columnSize": (args) => `${args.value} пикс.`,
  "descending": `убывание`,
  "descendingSort": (args) => `сортировать столбец ${args.columnName} в порядке убывания`,
  "resizerDescription": `Нажмите клавишу Enter для начала изменения размеров`,
  "select": `Выбрать`,
  "selectAll": `Выбрать все`,
  "sortable": `сортируемый столбец`
};

// node_modules/@react-aria/table/dist/sk-SK.mjs
var $5afe469a63fcac7b$exports = {};
$5afe469a63fcac7b$exports = {
  "ascending": `vzostupne`,
  "ascendingSort": (args) => `zoradené zostupne podľa stĺpca ${args.columnName}`,
  "columnSize": (args) => `Počet pixelov: ${args.value}`,
  "descending": `zostupne`,
  "descendingSort": (args) => `zoradené zostupne podľa stĺpca ${args.columnName}`,
  "resizerDescription": `Stlačením klávesu Enter začnete zmenu veľkosti`,
  "select": `Vybrať`,
  "selectAll": `Vybrať všetko`,
  "sortable": `zoraditeľný stĺpec`
};

// node_modules/@react-aria/table/dist/sl-SI.mjs
var $2956757ac31a7ce2$exports = {};
$2956757ac31a7ce2$exports = {
  "ascending": `naraščajoče`,
  "ascendingSort": (args) => `razvrščeno po stolpcu ${args.columnName} v naraščajočem vrstnem redu`,
  "columnSize": (args) => `${args.value} slikovnih pik`,
  "descending": `padajoče`,
  "descendingSort": (args) => `razvrščeno po stolpcu ${args.columnName} v padajočem vrstnem redu`,
  "resizerDescription": `Pritisnite tipko Enter da začnete spreminjati velikost`,
  "select": `Izberite`,
  "selectAll": `Izberite vse`,
  "sortable": `razvrstljivi stolpec`
};

// node_modules/@react-aria/table/dist/sr-SP.mjs
var $cedee0e66b175529$exports = {};
$cedee0e66b175529$exports = {
  "ascending": `rastući`,
  "ascendingSort": (args) => `sortirano po kolonama ${args.columnName} rastućim redosledom`,
  "columnSize": (args) => `${args.value} piksela`,
  "descending": `padajući`,
  "descendingSort": (args) => `sortirano po kolonama ${args.columnName} padajućim redosledom`,
  "resizerDescription": `Pritisnite Enter da biste započeli promenu veličine`,
  "select": `Izaberite`,
  "selectAll": `Izaberite sve`,
  "sortable": `kolona koja se može sortirati`
};

// node_modules/@react-aria/table/dist/sv-SE.mjs
var $6db19998ba4427da$exports = {};
$6db19998ba4427da$exports = {
  "ascending": `stigande`,
  "ascendingSort": (args) => `sorterat på kolumn ${args.columnName} i stigande ordning`,
  "columnSize": (args) => `${args.value} pixlar`,
  "descending": `fallande`,
  "descendingSort": (args) => `sorterat på kolumn ${args.columnName} i fallande ordning`,
  "resizerDescription": `Tryck på Retur för att börja ändra storlek`,
  "select": `Markera`,
  "selectAll": `Markera allt`,
  "sortable": `sorterbar kolumn`
};

// node_modules/@react-aria/table/dist/tr-TR.mjs
var $166b7c9cc1adb1a1$exports = {};
$166b7c9cc1adb1a1$exports = {
  "ascending": `artan sırada`,
  "ascendingSort": (args) => `${args.columnName} sütuna göre artan düzende sırala`,
  "columnSize": (args) => `${args.value} piksel`,
  "descending": `azalan sırada`,
  "descendingSort": (args) => `${args.columnName} sütuna göre azalan düzende sırala`,
  "resizerDescription": `Yeniden boyutlandırmak için Enter'a basın`,
  "select": `Seç`,
  "selectAll": `Tümünü Seç`,
  "sortable": `Sıralanabilir sütun`
};

// node_modules/@react-aria/table/dist/uk-UA.mjs
var $c7ab180b401e49ff$exports = {};
$c7ab180b401e49ff$exports = {
  "ascending": `висхідний`,
  "ascendingSort": (args) => `відсортовано за стовпцем ${args.columnName} у висхідному порядку`,
  "columnSize": (args) => `${args.value} пікс.`,
  "descending": `низхідний`,
  "descendingSort": (args) => `відсортовано за стовпцем ${args.columnName} у низхідному порядку`,
  "resizerDescription": `Натисніть Enter, щоб почати зміну розміру`,
  "select": `Вибрати`,
  "selectAll": `Вибрати все`,
  "sortable": `сортувальний стовпець`
};

// node_modules/@react-aria/table/dist/zh-CN.mjs
var $1648ec00941567f3$exports = {};
$1648ec00941567f3$exports = {
  "ascending": `升序`,
  "ascendingSort": (args) => `按列 ${args.columnName} 升序排序`,
  "columnSize": (args) => `${args.value} 像素`,
  "descending": `降序`,
  "descendingSort": (args) => `按列 ${args.columnName} 降序排序`,
  "resizerDescription": `按“输入”键开始调整大小。`,
  "select": `选择`,
  "selectAll": `全选`,
  "sortable": `可排序的列`
};

// node_modules/@react-aria/table/dist/zh-TW.mjs
var $b26f22384b3c1526$exports = {};
$b26f22384b3c1526$exports = {
  "ascending": `遞增`,
  "ascendingSort": (args) => `已依據「${args.columnName}」欄遞增排序`,
  "columnSize": (args) => `${args.value} 像素`,
  "descending": `遞減`,
  "descendingSort": (args) => `已依據「${args.columnName}」欄遞減排序`,
  "resizerDescription": `按 Enter 鍵以開始調整大小`,
  "select": `選取`,
  "selectAll": `全選`,
  "sortable": `可排序的欄`
};

// node_modules/@react-aria/table/dist/intlStrings.mjs
var $7476b46781682bf5$exports = {};
$7476b46781682bf5$exports = {
  "ar-AE": $ce3de3ff2fd66848$exports,
  "bg-BG": $cb80dcce530985b9$exports,
  "cs-CZ": $68ac86749db4c0fb$exports,
  "da-DK": $9a6cbac08487e661$exports,
  "de-DE": $c963661d89486e72$exports,
  "el-GR": $ac03861c6e8605f4$exports,
  "en-US": $09e6b82e0d6e466a$exports,
  "es-ES": $8cc39eb66c2bf220$exports,
  "et-EE": $4e11db3c25a38112$exports,
  "fi-FI": $da1e751a92575e02$exports,
  "fr-FR": $1b5d6c6c47d55106$exports,
  "he-IL": $7c18ba27b86d3308$exports,
  "hr-HR": $2cb40998e20e8a46$exports,
  "hu-HU": $189e23eec1d6aa3a$exports,
  "it-IT": $3c5ec8e4f015dfd0$exports,
  "ja-JP": $d021d50e6b315ebb$exports,
  "ko-KR": $52535c35c24ec937$exports,
  "lt-LT": $b37ee03672edfd1d$exports,
  "lv-LV": $c7df6686b4189d56$exports,
  "nb-NO": $da07fe8ec87e6b68$exports,
  "nl-NL": $64b7e390f5791490$exports,
  "pl-PL": $2a03621e773f1678$exports,
  "pt-BR": $0a79c0aba9e5ecc6$exports,
  "pt-PT": $de7b4d0f7dc86fc8$exports,
  "ro-RO": $28ea7e849d77bd1c$exports,
  "ru-RU": $9a09321cf046b187$exports,
  "sk-SK": $5afe469a63fcac7b$exports,
  "sl-SI": $2956757ac31a7ce2$exports,
  "sr-SP": $cedee0e66b175529$exports,
  "sv-SE": $6db19998ba4427da$exports,
  "tr-TR": $166b7c9cc1adb1a1$exports,
  "uk-UA": $c7ab180b401e49ff$exports,
  "zh-CN": $1648ec00941567f3$exports,
  "zh-TW": $b26f22384b3c1526$exports
};

// node_modules/@react-aria/table/dist/TableKeyboardDelegate.mjs
var $0ba3c81c7f1caedd$export$da43f8f5cb04028d = class extends (0, $d1c300d9c497e402$export$de9feff04fda126e) {
  isCell(node) {
    return node.type === "cell" || node.type === "rowheader" || node.type === "column";
  }
  getKeyBelow(key) {
    let startItem = this.collection.getItem(key);
    if (!startItem) return null;
    if (startItem.type === "column") {
      let child = (0, $c5a24bc478652b5f$export$fbdeaa6a76694f71)((0, $c5a24bc478652b5f$export$1005530eda016c13)(startItem, this.collection));
      if (child) return child.key;
      let firstKey = this.getFirstKey();
      if (firstKey == null) return null;
      let firstItem = this.collection.getItem(firstKey);
      if (!firstItem) return null;
      return super.getKeyForItemInRowByIndex(firstKey, startItem.index);
    }
    return super.getKeyBelow(key);
  }
  getKeyAbove(key) {
    let startItem = this.collection.getItem(key);
    if (!startItem) return null;
    if (startItem.type === "column") {
      let parent = startItem.parentKey != null ? this.collection.getItem(startItem.parentKey) : null;
      if (parent && parent.type === "column") return parent.key;
      return null;
    }
    let superKey = super.getKeyAbove(key);
    let superItem = superKey != null ? this.collection.getItem(superKey) : null;
    if (superItem && superItem.type !== "headerrow") return superKey;
    if (this.isCell(startItem)) return this.collection.columns[startItem.index].key;
    return this.collection.columns[0].key;
  }
  findNextColumnKey(column) {
    let key = this.findNextKey(column.key, (item) => item.type === "column");
    if (key != null) return key;
    let row = this.collection.headerRows[column.level];
    for (let item of (0, $c5a24bc478652b5f$export$1005530eda016c13)(row, this.collection)) {
      if (item.type === "column") return item.key;
    }
    return null;
  }
  findPreviousColumnKey(column) {
    let key = this.findPreviousKey(column.key, (item) => item.type === "column");
    if (key != null) return key;
    let row = this.collection.headerRows[column.level];
    let childNodes = [
      ...(0, $c5a24bc478652b5f$export$1005530eda016c13)(row, this.collection)
    ];
    for (let i = childNodes.length - 1; i >= 0; i--) {
      let item = childNodes[i];
      if (item.type === "column") return item.key;
    }
    return null;
  }
  getKeyRightOf(key) {
    let item = this.collection.getItem(key);
    if (!item) return null;
    if (item.type === "column") return this.direction === "rtl" ? this.findPreviousColumnKey(item) : this.findNextColumnKey(item);
    return super.getKeyRightOf(key);
  }
  getKeyLeftOf(key) {
    let item = this.collection.getItem(key);
    if (!item) return null;
    if (item.type === "column") return this.direction === "rtl" ? this.findNextColumnKey(item) : this.findPreviousColumnKey(item);
    return super.getKeyLeftOf(key);
  }
  getKeyForSearch(search, fromKey) {
    if (!this.collator) return null;
    let collection = this.collection;
    let key = fromKey !== null && fromKey !== void 0 ? fromKey : this.getFirstKey();
    if (key == null) return null;
    let startItem = collection.getItem(key);
    var _startItem_parentKey;
    if ((startItem === null || startItem === void 0 ? void 0 : startItem.type) === "cell") key = (_startItem_parentKey = startItem.parentKey) !== null && _startItem_parentKey !== void 0 ? _startItem_parentKey : null;
    let hasWrapped = false;
    while (key != null) {
      let item = collection.getItem(key);
      if (!item) return null;
      if (item.textValue) {
        let substring = item.textValue.slice(0, search.length);
        if (this.collator.compare(substring, search) === 0) return item.key;
      }
      for (let cell of (0, $c5a24bc478652b5f$export$1005530eda016c13)(item, this.collection)) {
        let column = collection.columns[cell.index];
        if (collection.rowHeaderColumnKeys.has(column.key) && cell.textValue) {
          let substring = cell.textValue.slice(0, search.length);
          if (this.collator.compare(substring, search) === 0) {
            let fromItem = fromKey != null ? collection.getItem(fromKey) : startItem;
            return (fromItem === null || fromItem === void 0 ? void 0 : fromItem.type) === "cell" ? cell.key : item.key;
          }
        }
      }
      key = this.getKeyBelow(key);
      if (key == null && !hasWrapped) {
        key = this.getFirstKey();
        hasWrapped = true;
      }
    }
    return null;
  }
};

// node_modules/@react-aria/table/dist/useTable.mjs
var import_react129 = __toESM(require_react(), 1);
function $parcel$interopDefault25(a) {
  return a && a.__esModule ? a.default : a;
}
function $6e31608fbba75bab$export$25bceaac3c7e4dc7(props, state, ref) {
  let { keyboardDelegate, isVirtualized, layoutDelegate, layout } = props;
  let collator = (0, $325a3faab7a68acd$export$a16aca283550c30d)({
    usage: "search",
    sensitivity: "base"
  });
  let { direction } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let disabledBehavior = state.selectionManager.disabledBehavior;
  let delegate = (0, import_react129.useMemo)(() => keyboardDelegate || new (0, $0ba3c81c7f1caedd$export$da43f8f5cb04028d)({
    collection: state.collection,
    disabledKeys: state.disabledKeys,
    disabledBehavior,
    ref,
    direction,
    collator,
    layoutDelegate,
    layout
  }), [
    keyboardDelegate,
    state.collection,
    state.disabledKeys,
    disabledBehavior,
    ref,
    direction,
    collator,
    layoutDelegate,
    layout
  ]);
  let id = (0, $bdb11010cef70236$export$f680877a34711e37)(props.id);
  (0, $2140fb2337097f2d$export$552312adfd451dab).set(state, id);
  let { gridProps } = (0, $83c6e2eafa584c67$export$f6b86a04e5d66d90)({
    ...props,
    id,
    keyboardDelegate: delegate
  }, state, ref);
  if (isVirtualized) gridProps["aria-rowcount"] = state.collection.size + state.collection.headerRows.length;
  if ((0, $f4e2df6bd15f8569$export$1b00cb14a96194e6)() && "expandedKeys" in state) gridProps.role = "treegrid";
  let { column, direction: sortDirection } = state.sortDescriptor || {};
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault25($7476b46781682bf5$exports)), "@react-aria/table");
  let sortDescription = (0, import_react129.useMemo)(() => {
    var _state_collection_columns_find;
    var _state_collection_columns_find_textValue;
    let columnName = (_state_collection_columns_find_textValue = (_state_collection_columns_find = state.collection.columns.find((c) => c.key === column)) === null || _state_collection_columns_find === void 0 ? void 0 : _state_collection_columns_find.textValue) !== null && _state_collection_columns_find_textValue !== void 0 ? _state_collection_columns_find_textValue : "";
    return sortDirection && column ? stringFormatter.format(`${sortDirection}Sort`, {
      columnName
    }) : void 0;
  }, [
    sortDirection,
    column,
    state.collection.columns
  ]);
  let descriptionProps = (0, $ef06256079686ba0$export$f8aeda7b10753fa1)(sortDescription);
  (0, $4f58c5f72bcf79f7$export$496315a1608d9602)(() => {
    if (sortDescription) (0, $319e236875307eab$export$a9b970dcc4ae71a9)(sortDescription, "assertive", 500);
  }, [
    sortDescription
  ]);
  return {
    gridProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(gridProps, descriptionProps, {
      // merge sort description with long press information
      "aria-describedby": [
        descriptionProps["aria-describedby"],
        gridProps["aria-describedby"]
      ].filter(Boolean).join(" ")
    })
  };
}

// node_modules/@react-aria/table/dist/useTableColumnHeader.mjs
var import_react130 = __toESM(require_react(), 1);
function $parcel$interopDefault26(a) {
  return a && a.__esModule ? a.default : a;
}
function $f329116d8ad0aba0$export$9514819a8c81e960(props, state, ref) {
  var _state_sortDescriptor, _state_sortDescriptor1;
  let { node } = props;
  let allowsSorting = node.props.allowsSorting;
  let { gridCellProps } = (0, $ab90dcbc1b5466d0$export$c7e10bfc0c59f67c)({
    ...props,
    focusMode: "child"
  }, state, ref);
  let isSelectionCellDisabled = node.props.isSelectionCell && state.selectionManager.selectionMode === "single";
  let { pressProps } = (0, $f6c31cce2adf654f$export$45712eceda6fad21)({
    isDisabled: !allowsSorting || isSelectionCellDisabled,
    onPress() {
      state.sort(node.key);
    },
    ref
  });
  let { focusableProps } = (0, $f645667febf57a63$export$4c014de7c8940b4c)({}, ref);
  let ariaSort = void 0;
  let isSortedColumn = ((_state_sortDescriptor = state.sortDescriptor) === null || _state_sortDescriptor === void 0 ? void 0 : _state_sortDescriptor.column) === node.key;
  let sortDirection = (_state_sortDescriptor1 = state.sortDescriptor) === null || _state_sortDescriptor1 === void 0 ? void 0 : _state_sortDescriptor1.direction;
  if (node.props.allowsSorting && !(0, $c87311424ea30a05$export$a11b0059900ceec8)()) ariaSort = isSortedColumn ? sortDirection : "none";
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault26($7476b46781682bf5$exports)), "@react-aria/table");
  let sortDescription;
  if (allowsSorting) {
    sortDescription = `${stringFormatter.format("sortable")}`;
    if (isSortedColumn && sortDirection && (0, $c87311424ea30a05$export$a11b0059900ceec8)()) sortDescription = `${sortDescription}, ${stringFormatter.format(sortDirection)}`;
  }
  let descriptionProps = (0, $ef06256079686ba0$export$f8aeda7b10753fa1)(sortDescription);
  let shouldDisableFocus = state.collection.size === 0;
  (0, import_react130.useEffect)(() => {
    if (shouldDisableFocus && state.selectionManager.focusedKey === node.key) state.selectionManager.setFocusedKey(null);
  }, [
    shouldDisableFocus,
    state.selectionManager,
    node.key
  ]);
  return {
    columnHeaderProps: {
      ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(
        focusableProps,
        gridCellProps,
        pressProps,
        descriptionProps,
        // If the table is empty, make all column headers untabbable
        shouldDisableFocus ? {
          tabIndex: -1
        } : null
      ),
      role: "columnheader",
      id: (0, $2140fb2337097f2d$export$37cd4213f2ad742e)(state, node.key),
      "aria-colspan": node.colSpan && node.colSpan > 1 ? node.colSpan : void 0,
      "aria-sort": ariaSort
    }
  };
}

// node_modules/@react-aria/table/dist/useTableRow.mjs
var $b2db214c022798eb$var$EXPANSION_KEYS = {
  expand: {
    ltr: "ArrowRight",
    rtl: "ArrowLeft"
  },
  "collapse": {
    ltr: "ArrowLeft",
    rtl: "ArrowRight"
  }
};
function $b2db214c022798eb$export$7f2f6ae19e707aa5(props, state, ref) {
  let { node, isVirtualized } = props;
  let { rowProps, ...states } = (0, $4159a7a9cbb0cc18$export$96357d5a73f686fa)(props, state, ref);
  let { direction } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  if (isVirtualized && !((0, $f4e2df6bd15f8569$export$1b00cb14a96194e6)() && "expandedKeys" in state)) rowProps["aria-rowindex"] = node.index + 1 + state.collection.headerRows.length;
  else delete rowProps["aria-rowindex"];
  let treeGridRowProps = {};
  if ((0, $f4e2df6bd15f8569$export$1b00cb14a96194e6)() && "expandedKeys" in state) {
    let treeNode = state.keyMap.get(node.key);
    if (treeNode != null) {
      var _treeNode_props, _treeNode_props_children, _treeNode_props1, _getLastItem, _state_keyMap_get, _getLastItem1;
      let hasChildRows = ((_treeNode_props = treeNode.props) === null || _treeNode_props === void 0 ? void 0 : _treeNode_props.UNSTABLE_childItems) || ((_treeNode_props1 = treeNode.props) === null || _treeNode_props1 === void 0 ? void 0 : (_treeNode_props_children = _treeNode_props1.children) === null || _treeNode_props_children === void 0 ? void 0 : _treeNode_props_children.length) > state.userColumnCount;
      var _treeNode_indexOfType, _state_keyMap_get_childNodes, _getLastItem_indexOfType, _getLastItem_indexOfType1;
      treeGridRowProps = {
        onKeyDown: (e) => {
          if (e.key === $b2db214c022798eb$var$EXPANSION_KEYS["expand"][direction] && state.selectionManager.focusedKey === treeNode.key && hasChildRows && state.expandedKeys !== "all" && !state.expandedKeys.has(treeNode.key)) {
            state.toggleKey(treeNode.key);
            e.stopPropagation();
          } else if (e.key === $b2db214c022798eb$var$EXPANSION_KEYS["collapse"][direction] && state.selectionManager.focusedKey === treeNode.key && hasChildRows && (state.expandedKeys === "all" || state.expandedKeys.has(treeNode.key))) {
            state.toggleKey(treeNode.key);
            e.stopPropagation();
          }
        },
        "aria-expanded": hasChildRows ? state.expandedKeys === "all" || state.expandedKeys.has(node.key) : void 0,
        "aria-level": treeNode.level,
        "aria-posinset": ((_treeNode_indexOfType = treeNode.indexOfType) !== null && _treeNode_indexOfType !== void 0 ? _treeNode_indexOfType : 0) + 1,
        "aria-setsize": treeNode.level > 1 ? ((_getLastItem_indexOfType = (_getLastItem = (0, $c5a24bc478652b5f$export$7475b2c64539e4cf)((_state_keyMap_get_childNodes = (_state_keyMap_get = state.keyMap.get(treeNode.parentKey)) === null || _state_keyMap_get === void 0 ? void 0 : _state_keyMap_get.childNodes) !== null && _state_keyMap_get_childNodes !== void 0 ? _state_keyMap_get_childNodes : [])) === null || _getLastItem === void 0 ? void 0 : _getLastItem.indexOfType) !== null && _getLastItem_indexOfType !== void 0 ? _getLastItem_indexOfType : 0) + 1 : ((_getLastItem_indexOfType1 = (_getLastItem1 = (0, $c5a24bc478652b5f$export$7475b2c64539e4cf)(state.collection.body.childNodes)) === null || _getLastItem1 === void 0 ? void 0 : _getLastItem1.indexOfType) !== null && _getLastItem_indexOfType1 !== void 0 ? _getLastItem_indexOfType1 : 0) + 1
      };
    }
  }
  let syntheticLinkProps = (0, $ea8dcbcb9ea1b556$export$bdc77b0c0a3a85d6)(node.props);
  let linkProps = states.hasAction ? syntheticLinkProps : {};
  return {
    rowProps: {
      ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(rowProps, treeGridRowProps, linkProps),
      "aria-labelledby": (0, $2140fb2337097f2d$export$85069b70317f543)(state, node.key)
    },
    ...states
  };
}

// node_modules/@react-aria/table/dist/useTableHeaderRow.mjs
function $f917ee10f4c32dab$export$1b95a7d2d517b841(props, state, ref) {
  let { node, isVirtualized } = props;
  let rowProps = {
    role: "row"
  };
  if (isVirtualized && !((0, $f4e2df6bd15f8569$export$1b00cb14a96194e6)() && "expandedKeys" in state)) rowProps["aria-rowindex"] = node.index + 1;
  return {
    rowProps
  };
}

// node_modules/@react-aria/table/dist/useTableCell.mjs
function $7713593715703b24$export$49571c903d73624c(props, state, ref) {
  var _props_node_column;
  let { gridCellProps, isPressed } = (0, $ab90dcbc1b5466d0$export$c7e10bfc0c59f67c)(props, state, ref);
  let columnKey = (_props_node_column = props.node.column) === null || _props_node_column === void 0 ? void 0 : _props_node_column.key;
  if (columnKey != null && state.collection.rowHeaderColumnKeys.has(columnKey)) {
    gridCellProps.role = "rowheader";
    gridCellProps.id = (0, $2140fb2337097f2d$export$19baff3266315d44)(state, props.node.parentKey, columnKey);
  }
  return {
    gridCellProps,
    isPressed
  };
}

// node_modules/@react-aria/table/dist/useTableSelectionCheckbox.mjs
function $parcel$interopDefault27(a) {
  return a && a.__esModule ? a.default : a;
}
function $2a795c53a101c542$export$16ea7f650bd7c1bb(props, state) {
  let { key } = props;
  const { checkboxProps } = (0, $7cb39d07f245a780$export$70e2eed1a92976ad)(props, state);
  return {
    checkboxProps: {
      ...checkboxProps,
      "aria-labelledby": `${checkboxProps.id} ${(0, $2140fb2337097f2d$export$85069b70317f543)(state, key)}`
    }
  };
}
function $2a795c53a101c542$export$1003db6a7e384b99(state) {
  let { isEmpty, isSelectAll, selectionMode } = state.selectionManager;
  const stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault27($7476b46781682bf5$exports)), "@react-aria/table");
  return {
    checkboxProps: {
      "aria-label": stringFormatter.format(selectionMode === "single" ? "select" : "selectAll"),
      isSelected: isSelectAll,
      isDisabled: selectionMode !== "multiple" || state.collection.size === 0 || state.collection.rows.length === 1 && state.collection.rows[0].type === "loader",
      isIndeterminate: !isEmpty && !isSelectAll,
      onChange: () => state.selectionManager.toggleSelectAll()
    }
  };
}

// node_modules/@react-aria/table/dist/useTableColumnResize.mjs
var import_react131 = __toESM(require_react(), 1);
function $parcel$interopDefault28(a) {
  return a && a.__esModule ? a.default : a;
}
function $e91ef4e5004e3774$export$52994e973806c219(props, state, ref) {
  let { column: item, triggerRef, isDisabled, onResizeStart, onResize, onResizeEnd, "aria-label": ariaLabel } = props;
  const stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault28($7476b46781682bf5$exports)), "@react-aria/table");
  let id = (0, $bdb11010cef70236$export$f680877a34711e37)();
  let isResizing = state.resizingColumn === item.key;
  let isResizingRef = (0, import_react131.useRef)(isResizing);
  let lastSize = (0, import_react131.useRef)(null);
  let wasFocusedOnResizeStart = (0, import_react131.useRef)(false);
  let editModeEnabled = state.tableState.isKeyboardNavigationDisabled;
  let { direction } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let { keyboardProps } = (0, $46d819fcbaf35654$export$8f71654801c2f7cd)({
    onKeyDown: (e) => {
      if (editModeEnabled) {
        if (e.key === "Escape" || e.key === "Enter" || e.key === " " || e.key === "Tab") {
          e.preventDefault();
          endResize(item);
        }
      } else {
        e.continuePropagation();
        if (e.key === "Enter") startResize(item);
      }
    }
  });
  let startResize = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((item2) => {
    if (!isResizingRef.current) {
      lastSize.current = state.updateResizedColumns(item2.key, state.getColumnWidth(item2.key));
      state.startResize(item2.key);
      state.tableState.setKeyboardNavigationDisabled(true);
      onResizeStart === null || onResizeStart === void 0 ? void 0 : onResizeStart(lastSize.current);
    }
    isResizingRef.current = true;
  });
  let resize = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((item2, newWidth) => {
    let sizes = state.updateResizedColumns(item2.key, newWidth);
    onResize === null || onResize === void 0 ? void 0 : onResize(sizes);
    lastSize.current = sizes;
  });
  let endResize = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((item2) => {
    if (isResizingRef.current) {
      if (lastSize.current == null) lastSize.current = state.updateResizedColumns(item2.key, state.getColumnWidth(item2.key));
      state.endResize();
      state.tableState.setKeyboardNavigationDisabled(false);
      onResizeEnd === null || onResizeEnd === void 0 ? void 0 : onResizeEnd(lastSize.current);
      isResizingRef.current = false;
      if ((triggerRef === null || triggerRef === void 0 ? void 0 : triggerRef.current) && !wasFocusedOnResizeStart.current)
        (0, $3ad3f6e1647bc98d$export$80f3e147d781571c)(triggerRef.current);
    }
    lastSize.current = null;
  });
  const columnResizeWidthRef = (0, import_react131.useRef)(0);
  const { moveProps } = (0, $e8a7022cf87cba2a$export$36da96379f79f245)({
    onMoveStart() {
      columnResizeWidthRef.current = state.getColumnWidth(item.key);
      startResize(item);
    },
    onMove(e) {
      let { deltaX, deltaY, pointerType } = e;
      if (direction === "rtl") deltaX *= -1;
      if (pointerType === "keyboard") {
        if (deltaY !== 0 && deltaX === 0) deltaX = deltaY * -1;
        deltaX *= 10;
      }
      if (deltaX !== 0) {
        columnResizeWidthRef.current += deltaX;
        resize(item, columnResizeWidthRef.current);
      }
    },
    onMoveEnd(e) {
      let { pointerType } = e;
      columnResizeWidthRef.current = 0;
      if (pointerType === "mouse" || pointerType === "touch" && wasFocusedOnResizeStart.current) endResize(item);
    }
  });
  let onKeyDown = (0, import_react131.useCallback)((e) => {
    var _moveProps_onKeyDown;
    if (editModeEnabled) (_moveProps_onKeyDown = moveProps.onKeyDown) === null || _moveProps_onKeyDown === void 0 ? void 0 : _moveProps_onKeyDown.call(moveProps, e);
  }, [
    editModeEnabled,
    moveProps
  ]);
  let min = Math.floor(state.getColumnMinWidth(item.key));
  let max = Math.floor(state.getColumnMaxWidth(item.key));
  if (max === Infinity) max = Number.MAX_SAFE_INTEGER;
  let value = Math.floor(state.getColumnWidth(item.key));
  let modality = (0, $507fabe10e71c6fb$export$98e20ec92f614cfe)();
  if (modality === "virtual" && typeof window !== "undefined" && "ontouchstart" in window) modality = "touch";
  let description = (triggerRef === null || triggerRef === void 0 ? void 0 : triggerRef.current) == null && (modality === "keyboard" || modality === "virtual") && !isResizing ? stringFormatter.format("resizerDescription") : void 0;
  let descriptionProps = (0, $ef06256079686ba0$export$f8aeda7b10753fa1)(description);
  let ariaProps = {
    "aria-label": ariaLabel,
    "aria-orientation": "horizontal",
    "aria-labelledby": `${id} ${(0, $2140fb2337097f2d$export$37cd4213f2ad742e)(state.tableState, item.key)}`,
    "aria-valuetext": stringFormatter.format("columnSize", {
      value
    }),
    "type": "range",
    min,
    max,
    value,
    ...descriptionProps
  };
  const focusInput = (0, import_react131.useCallback)(() => {
    if (ref.current) (0, $3ad3f6e1647bc98d$export$80f3e147d781571c)(ref.current);
  }, [
    ref
  ]);
  let resizingColumn = state.resizingColumn;
  let prevResizingColumn = (0, import_react131.useRef)(null);
  (0, import_react131.useEffect)(() => {
    if (prevResizingColumn.current !== resizingColumn && resizingColumn != null && resizingColumn === item.key) {
      wasFocusedOnResizeStart.current = document.activeElement === ref.current;
      startResize(item);
      let timeout = setTimeout(() => focusInput(), 0);
      let VOTimeout = setTimeout(focusInput, 400);
      return () => {
        clearTimeout(timeout);
        clearTimeout(VOTimeout);
      };
    }
    prevResizingColumn.current = resizingColumn;
  }, [
    resizingColumn,
    item,
    focusInput,
    ref,
    startResize
  ]);
  let onChange = (e) => {
    let currentWidth = state.getColumnWidth(item.key);
    let nextValue = parseFloat(e.target.value);
    if (nextValue > currentWidth) nextValue = currentWidth + 10;
    else nextValue = currentWidth - 10;
    resize(item, nextValue);
  };
  let { pressProps } = (0, $f6c31cce2adf654f$export$45712eceda6fad21)({
    preventFocusOnPress: true,
    onPressStart: (e) => {
      if (e.ctrlKey || e.altKey || e.metaKey || e.shiftKey || e.pointerType === "keyboard") return;
      if (e.pointerType === "virtual" && state.resizingColumn != null) {
        endResize(item);
        return;
      }
      focusInput();
      if (e.pointerType !== "virtual") startResize(item);
    },
    onPress: (e) => {
      if ((e.pointerType === "touch" && wasFocusedOnResizeStart.current || e.pointerType === "mouse") && state.resizingColumn != null) endResize(item);
    }
  });
  let { visuallyHiddenProps } = (0, $5c3e21d68f1c4674$export$a966af930f325cab)();
  return {
    resizerProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(keyboardProps, {
      ...moveProps,
      onKeyDown
    }, pressProps, {
      style: {
        touchAction: "none"
      }
    }),
    inputProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(visuallyHiddenProps, {
      id,
      onBlur: () => {
        endResize(item);
      },
      onChange,
      disabled: isDisabled
    }, ariaProps),
    isResizing
  };
}

// node_modules/@react-aria/table/dist/import.mjs
function $0047e6c294ea075f$export$6fb1613bd7b28198() {
  return (0, $e45487f8ba1cbdbf$export$d3037f5d3f3e51bf)();
}

// node_modules/@react-aria/tabs/dist/utils.mjs
var $99b62ae3ff97ec45$export$c5f62239608282b6 = /* @__PURE__ */ new WeakMap();
function $99b62ae3ff97ec45$export$567fc7097e064344(state, key, role) {
  if (!state)
    return "";
  if (typeof key === "string") key = key.replace(/\s+/g, "");
  let baseId = $99b62ae3ff97ec45$export$c5f62239608282b6.get(state);
  return `${baseId}-${role}-${key}`;
}

// node_modules/@react-aria/tabs/dist/useTab.mjs
function $0175d55c2a017ebc$export$fdf4756d5b8ef90a(props, state, ref) {
  let { key, isDisabled: propsDisabled, shouldSelectOnPressUp } = props;
  let { selectionManager: manager, selectedKey } = state;
  let isSelected = key === selectedKey;
  let isDisabled = propsDisabled || state.isDisabled || state.selectionManager.isDisabled(key);
  let { itemProps, isPressed } = (0, $880e95eb8b93ba9a$export$ecf600387e221c37)({
    selectionManager: manager,
    key,
    ref,
    isDisabled,
    shouldSelectOnPressUp,
    linkBehavior: "selection"
  });
  let tabId = (0, $99b62ae3ff97ec45$export$567fc7097e064344)(state, key, "tab");
  let tabPanelId = (0, $99b62ae3ff97ec45$export$567fc7097e064344)(state, key, "tabpanel");
  let { tabIndex } = itemProps;
  let item = state.collection.getItem(key);
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(item === null || item === void 0 ? void 0 : item.props, {
    labelable: true
  });
  delete domProps.id;
  let linkProps = (0, $ea8dcbcb9ea1b556$export$7e924b3091a3bd18)(item === null || item === void 0 ? void 0 : item.props);
  let { focusableProps } = (0, $f645667febf57a63$export$4c014de7c8940b4c)({
    isDisabled
  }, ref);
  return {
    tabProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(domProps, focusableProps, linkProps, itemProps, {
      id: tabId,
      "aria-selected": isSelected,
      "aria-disabled": isDisabled || void 0,
      "aria-controls": isSelected ? tabPanelId : void 0,
      tabIndex: isDisabled ? void 0 : tabIndex,
      role: "tab"
    }),
    isSelected,
    isDisabled,
    isPressed
  };
}

// node_modules/@react-aria/tabs/dist/useTabPanel.mjs
function $34bce698202e07cb$export$fae0121b5afe572d(props, state, ref) {
  let tabIndex = (0, $83013635b024ae3d$export$eac1895992b9f3d6)(ref) ? void 0 : 0;
  var _props_id;
  const id = (0, $99b62ae3ff97ec45$export$567fc7097e064344)(state, (_props_id = props.id) !== null && _props_id !== void 0 ? _props_id : state === null || state === void 0 ? void 0 : state.selectedKey, "tabpanel");
  const tabPanelProps = (0, $313b98861ee5dd6c$export$d6875122194c7b44)({
    ...props,
    id,
    "aria-labelledby": (0, $99b62ae3ff97ec45$export$567fc7097e064344)(state, state === null || state === void 0 ? void 0 : state.selectedKey, "tab")
  });
  return {
    tabPanelProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(tabPanelProps, {
      tabIndex,
      role: "tabpanel",
      "aria-describedby": props["aria-describedby"],
      "aria-details": props["aria-details"]
    })
  };
}

// node_modules/@react-aria/tabs/dist/TabsKeyboardDelegate.mjs
var $bfc6f2d60b8a4c40$export$15010ca3c1abe90b = class {
  getKeyLeftOf(key) {
    if (this.flipDirection) return this.getNextKey(key);
    return this.getPreviousKey(key);
  }
  getKeyRightOf(key) {
    if (this.flipDirection) return this.getPreviousKey(key);
    return this.getNextKey(key);
  }
  isDisabled(key) {
    var _this_collection_getItem_props, _this_collection_getItem;
    return this.disabledKeys.has(key) || !!((_this_collection_getItem = this.collection.getItem(key)) === null || _this_collection_getItem === void 0 ? void 0 : (_this_collection_getItem_props = _this_collection_getItem.props) === null || _this_collection_getItem_props === void 0 ? void 0 : _this_collection_getItem_props.isDisabled);
  }
  getFirstKey() {
    let key = this.collection.getFirstKey();
    if (key != null && this.isDisabled(key)) key = this.getNextKey(key);
    return key;
  }
  getLastKey() {
    let key = this.collection.getLastKey();
    if (key != null && this.isDisabled(key)) key = this.getPreviousKey(key);
    return key;
  }
  getKeyAbove(key) {
    if (this.tabDirection) return null;
    return this.getPreviousKey(key);
  }
  getKeyBelow(key) {
    if (this.tabDirection) return null;
    return this.getNextKey(key);
  }
  getNextKey(startKey) {
    let key = startKey;
    do {
      key = this.collection.getKeyAfter(key);
      if (key == null) key = this.collection.getFirstKey();
    } while (key != null && this.isDisabled(key));
    return key;
  }
  getPreviousKey(startKey) {
    let key = startKey;
    do {
      key = this.collection.getKeyBefore(key);
      if (key == null) key = this.collection.getLastKey();
    } while (key != null && this.isDisabled(key));
    return key;
  }
  constructor(collection, direction, orientation, disabledKeys = /* @__PURE__ */ new Set()) {
    this.collection = collection;
    this.flipDirection = direction === "rtl" && orientation === "horizontal";
    this.disabledKeys = disabledKeys;
    this.tabDirection = orientation === "horizontal";
  }
};

// node_modules/@react-aria/tabs/dist/useTabList.mjs
var import_react132 = __toESM(require_react(), 1);
function $58d314389b21fa3f$export$773e389e644c5874(props, state, ref) {
  let { orientation = "horizontal", keyboardActivation = "automatic" } = props;
  let { collection, selectionManager: manager, disabledKeys } = state;
  let { direction } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let delegate = (0, import_react132.useMemo)(() => new (0, $bfc6f2d60b8a4c40$export$15010ca3c1abe90b)(collection, direction, orientation, disabledKeys), [
    collection,
    disabledKeys,
    orientation,
    direction
  ]);
  let { collectionProps } = (0, $ae20dd8cbca75726$export$d6daf82dcd84e87c)({
    ref,
    selectionManager: manager,
    keyboardDelegate: delegate,
    selectOnFocus: keyboardActivation === "automatic",
    disallowEmptySelection: true,
    scrollRef: ref,
    linkBehavior: "selection"
  });
  let tabsId = (0, $bdb11010cef70236$export$f680877a34711e37)();
  (0, $99b62ae3ff97ec45$export$c5f62239608282b6).set(state, tabsId);
  let tabListLabelProps = (0, $313b98861ee5dd6c$export$d6875122194c7b44)({
    ...props,
    id: tabsId
  });
  return {
    tabListProps: {
      ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(collectionProps, tabListLabelProps),
      role: "tablist",
      "aria-orientation": orientation,
      tabIndex: void 0
    }
  };
}

// node_modules/@react-aria/tag/dist/useTagGroup.mjs
var import_react133 = __toESM(require_react(), 1);
var $d7323bca8d074eeb$export$653eddfc964b0f8a = /* @__PURE__ */ new WeakMap();
function $d7323bca8d074eeb$export$4f8b5cda58b7e8ff(props, state, ref) {
  let { direction } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let keyboardDelegate = props.keyboardDelegate || new (0, $2a25aae57d74318e$export$a05409b8bb224a5a)({
    collection: state.collection,
    ref,
    orientation: "horizontal",
    direction,
    disabledKeys: state.disabledKeys,
    disabledBehavior: state.selectionManager.disabledBehavior
  });
  let { labelProps, fieldProps, descriptionProps, errorMessageProps } = (0, $2baaea4c71418dea$export$294aa081a6c6f55d)({
    ...props,
    labelElementType: "span"
  });
  let { gridProps } = (0, $f47efb0c3a859cf2$export$664f9155035607eb)({
    ...props,
    ...fieldProps,
    keyboardDelegate,
    shouldFocusWrap: true,
    linkBehavior: "override",
    keyboardNavigationBehavior: "tab"
  }, state, ref);
  let [isFocusWithin, setFocusWithin] = (0, import_react133.useState)(false);
  let { focusWithinProps } = (0, $9ab94262bd0047c7$export$420e68273165f4ec)({
    onFocusWithinChange: setFocusWithin
  });
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  let prevCount = (0, import_react133.useRef)(state.collection.size);
  (0, import_react133.useEffect)(() => {
    if (ref.current && prevCount.current > 0 && state.collection.size === 0 && isFocusWithin) ref.current.focus();
    prevCount.current = state.collection.size;
  }, [
    state.collection.size,
    isFocusWithin,
    ref
  ]);
  $d7323bca8d074eeb$export$653eddfc964b0f8a.set(state, {
    onRemove: props.onRemove
  });
  return {
    gridProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(gridProps, domProps, {
      role: state.collection.size ? "grid" : null,
      "aria-atomic": false,
      "aria-relevant": "additions",
      "aria-live": isFocusWithin ? "polite" : "off",
      ...focusWithinProps,
      ...fieldProps
    }),
    labelProps,
    descriptionProps,
    errorMessageProps
  };
}

// node_modules/@react-aria/tag/dist/ar-AE.mjs
var $84925f526f90eebd$exports = {};
$84925f526f90eebd$exports = {
  "removeButtonLabel": `إزالة`,
  "removeDescription": `اضغط على مفتاح DELETE لإزالة علامة.`
};

// node_modules/@react-aria/tag/dist/bg-BG.mjs
var $c0650163dc1b6f9d$exports = {};
$c0650163dc1b6f9d$exports = {
  "removeButtonLabel": `Премахване`,
  "removeDescription": `Натиснете Delete, за да премахнете маркера.`
};

// node_modules/@react-aria/tag/dist/cs-CZ.mjs
var $b2b55661291de587$exports = {};
$b2b55661291de587$exports = {
  "removeButtonLabel": `Odebrat`,
  "removeDescription": `Stisknutím klávesy Delete odeberete značku.`
};

// node_modules/@react-aria/tag/dist/da-DK.mjs
var $deb83970956f6d5b$exports = {};
$deb83970956f6d5b$exports = {
  "removeButtonLabel": `Fjern`,
  "removeDescription": `Tryk på Slet for at fjerne tag.`
};

// node_modules/@react-aria/tag/dist/de-DE.mjs
var $aea1cb4c7ec97e1c$exports = {};
$aea1cb4c7ec97e1c$exports = {
  "removeButtonLabel": `Entfernen`,
  "removeDescription": `Auf „Löschen“ drücken, um das Tag zu entfernen.`
};

// node_modules/@react-aria/tag/dist/el-GR.mjs
var $3618d917e503a8d3$exports = {};
$3618d917e503a8d3$exports = {
  "removeButtonLabel": `Κατάργηση`,
  "removeDescription": `Πατήστε Διαγραφή για να καταργήσετε την ετικέτα.`
};

// node_modules/@react-aria/tag/dist/en-US.mjs
var $9eb56bbbe8e31294$exports = {};
$9eb56bbbe8e31294$exports = {
  "removeDescription": `Press Delete to remove tag.`,
  "removeButtonLabel": `Remove`
};

// node_modules/@react-aria/tag/dist/es-ES.mjs
var $361c604b0fc269a3$exports = {};
$361c604b0fc269a3$exports = {
  "removeButtonLabel": `Quitar`,
  "removeDescription": `Pulse Eliminar para quitar la etiqueta.`
};

// node_modules/@react-aria/tag/dist/et-EE.mjs
var $2f00170f4ee3ca01$exports = {};
$2f00170f4ee3ca01$exports = {
  "removeButtonLabel": `Eemalda`,
  "removeDescription": `Sildi eemaldamiseks vajutage kustutusklahvi Delete.`
};

// node_modules/@react-aria/tag/dist/fi-FI.mjs
var $80ee16b64fab9fb5$exports = {};
$80ee16b64fab9fb5$exports = {
  "removeButtonLabel": `Poista`,
  "removeDescription": `Poista tunniste painamalla Poista-painiketta.`
};

// node_modules/@react-aria/tag/dist/fr-FR.mjs
var $be9d354476c08087$exports = {};
$be9d354476c08087$exports = {
  "removeButtonLabel": `Supprimer`,
  "removeDescription": `Appuyez sur Supprimer pour supprimer l’étiquette.`
};

// node_modules/@react-aria/tag/dist/he-IL.mjs
var $ffeb903ba092eb35$exports = {};
$ffeb903ba092eb35$exports = {
  "removeButtonLabel": `הסר`,
  "removeDescription": `לחץ על מחק כדי להסיר תג.`
};

// node_modules/@react-aria/tag/dist/hr-HR.mjs
var $1df6722c6f19728b$exports = {};
$1df6722c6f19728b$exports = {
  "removeButtonLabel": `Ukloni`,
  "removeDescription": `Pritisnite Delete za uklanjanje oznake.`
};

// node_modules/@react-aria/tag/dist/hu-HU.mjs
var $093d57e325bc9071$exports = {};
$093d57e325bc9071$exports = {
  "removeButtonLabel": `Eltávolítás`,
  "removeDescription": `Nyomja meg a Delete billentyűt a címke eltávolításához.`
};

// node_modules/@react-aria/tag/dist/it-IT.mjs
var $609dbdfbcad85bdb$exports = {};
$609dbdfbcad85bdb$exports = {
  "removeButtonLabel": `Rimuovi`,
  "removeDescription": `Premi Elimina per rimuovere il tag.`
};

// node_modules/@react-aria/tag/dist/ja-JP.mjs
var $c08e84f882644048$exports = {};
$c08e84f882644048$exports = {
  "removeButtonLabel": `削除`,
  "removeDescription": `タグを削除するには、Delete キーを押します。`
};

// node_modules/@react-aria/tag/dist/ko-KR.mjs
var $5cd130489822fa21$exports = {};
$5cd130489822fa21$exports = {
  "removeButtonLabel": `제거`,
  "removeDescription": `태그를 제거하려면 Delete 키를 누르십시오.`
};

// node_modules/@react-aria/tag/dist/lt-LT.mjs
var $ab5183739b6c5e7e$exports = {};
$ab5183739b6c5e7e$exports = {
  "removeButtonLabel": `Pašalinti`,
  "removeDescription": `Norėdami pašalinti žymą, paspauskite „Delete“ klavišą.`
};

// node_modules/@react-aria/tag/dist/lv-LV.mjs
var $dd84a0b574be3f23$exports = {};
$dd84a0b574be3f23$exports = {
  "removeButtonLabel": `Noņemt`,
  "removeDescription": `Nospiediet Delete [Dzēst], lai noņemtu tagu.`
};

// node_modules/@react-aria/tag/dist/nb-NO.mjs
var $85eee97d14eef7b5$exports = {};
$85eee97d14eef7b5$exports = {
  "removeButtonLabel": `Fjern`,
  "removeDescription": `Trykk på Slett for å fjerne taggen.`
};

// node_modules/@react-aria/tag/dist/nl-NL.mjs
var $18781839f93b0314$exports = {};
$18781839f93b0314$exports = {
  "removeButtonLabel": `Verwijderen`,
  "removeDescription": `Druk op Verwijderen om de tag te verwijderen.`
};

// node_modules/@react-aria/tag/dist/pl-PL.mjs
var $1c40ffbbfe9f3bda$exports = {};
$1c40ffbbfe9f3bda$exports = {
  "removeButtonLabel": `Usuń`,
  "removeDescription": `Naciśnij Usuń, aby usunąć znacznik.`
};

// node_modules/@react-aria/tag/dist/pt-BR.mjs
var $156880e329b1c717$exports = {};
$156880e329b1c717$exports = {
  "removeButtonLabel": `Remover`,
  "removeDescription": `Pressione Delete para remover a tag.`
};

// node_modules/@react-aria/tag/dist/pt-PT.mjs
var $b6d50b1d20768ce4$exports = {};
$b6d50b1d20768ce4$exports = {
  "removeButtonLabel": `Eliminar`,
  "removeDescription": `Prima Delete para eliminar a tag.`
};

// node_modules/@react-aria/tag/dist/ro-RO.mjs
var $d8c38c691b006187$exports = {};
$d8c38c691b006187$exports = {
  "removeButtonLabel": `Îndepărtaţi`,
  "removeDescription": `Apăsați pe Delete (Ștergere) pentru a elimina eticheta.`
};

// node_modules/@react-aria/tag/dist/ru-RU.mjs
var $ed9b4bf7ce1fb1d7$exports = {};
$ed9b4bf7ce1fb1d7$exports = {
  "removeButtonLabel": `Удалить`,
  "removeDescription": `Нажмите DELETE, чтобы удалить тег.`
};

// node_modules/@react-aria/tag/dist/sk-SK.mjs
var $51d8721afda4d678$exports = {};
$51d8721afda4d678$exports = {
  "removeButtonLabel": `Odstrániť`,
  "removeDescription": `Ak chcete odstrániť značku, stlačte kláves Delete.`
};

// node_modules/@react-aria/tag/dist/sl-SI.mjs
var $fd37a27baae493e8$exports = {};
$fd37a27baae493e8$exports = {
  "removeButtonLabel": `Odstrani`,
  "removeDescription": `Pritisnite Delete, da odstranite oznako.`
};

// node_modules/@react-aria/tag/dist/sr-SP.mjs
var $5505a1ca71ffd6f4$exports = {};
$5505a1ca71ffd6f4$exports = {
  "removeButtonLabel": `Ukloni`,
  "removeDescription": `Pritisnite Obriši da biste uklonili oznaku.`
};

// node_modules/@react-aria/tag/dist/sv-SE.mjs
var $33670e148c84ad02$exports = {};
$33670e148c84ad02$exports = {
  "removeButtonLabel": `Ta bort`,
  "removeDescription": `Tryck på Radera för att ta bort taggen.`
};

// node_modules/@react-aria/tag/dist/tr-TR.mjs
var $0bf46fdcdd7cb5f6$exports = {};
$0bf46fdcdd7cb5f6$exports = {
  "removeButtonLabel": `Kaldır`,
  "removeDescription": `Etiketi kaldırmak için Sil tuşuna basın.`
};

// node_modules/@react-aria/tag/dist/uk-UA.mjs
var $9d9765222bc08ca2$exports = {};
$9d9765222bc08ca2$exports = {
  "removeButtonLabel": `Вилучити`,
  "removeDescription": `Натисніть Delete, щоб вилучити тег.`
};

// node_modules/@react-aria/tag/dist/zh-CN.mjs
var $d737296cedcdee9f$exports = {};
$d737296cedcdee9f$exports = {
  "removeButtonLabel": `删除`,
  "removeDescription": `按下“删除”以删除标记。`
};

// node_modules/@react-aria/tag/dist/zh-TW.mjs
var $09cd168ab18773f4$exports = {};
$09cd168ab18773f4$exports = {
  "removeButtonLabel": `移除`,
  "removeDescription": `按 Delete 鍵以移除標記。`
};

// node_modules/@react-aria/tag/dist/intlStrings.mjs
var $3bb15cc24d006ec5$exports = {};
$3bb15cc24d006ec5$exports = {
  "ar-AE": $84925f526f90eebd$exports,
  "bg-BG": $c0650163dc1b6f9d$exports,
  "cs-CZ": $b2b55661291de587$exports,
  "da-DK": $deb83970956f6d5b$exports,
  "de-DE": $aea1cb4c7ec97e1c$exports,
  "el-GR": $3618d917e503a8d3$exports,
  "en-US": $9eb56bbbe8e31294$exports,
  "es-ES": $361c604b0fc269a3$exports,
  "et-EE": $2f00170f4ee3ca01$exports,
  "fi-FI": $80ee16b64fab9fb5$exports,
  "fr-FR": $be9d354476c08087$exports,
  "he-IL": $ffeb903ba092eb35$exports,
  "hr-HR": $1df6722c6f19728b$exports,
  "hu-HU": $093d57e325bc9071$exports,
  "it-IT": $609dbdfbcad85bdb$exports,
  "ja-JP": $c08e84f882644048$exports,
  "ko-KR": $5cd130489822fa21$exports,
  "lt-LT": $ab5183739b6c5e7e$exports,
  "lv-LV": $dd84a0b574be3f23$exports,
  "nb-NO": $85eee97d14eef7b5$exports,
  "nl-NL": $18781839f93b0314$exports,
  "pl-PL": $1c40ffbbfe9f3bda$exports,
  "pt-BR": $156880e329b1c717$exports,
  "pt-PT": $b6d50b1d20768ce4$exports,
  "ro-RO": $d8c38c691b006187$exports,
  "ru-RU": $ed9b4bf7ce1fb1d7$exports,
  "sk-SK": $51d8721afda4d678$exports,
  "sl-SI": $fd37a27baae493e8$exports,
  "sr-SP": $5505a1ca71ffd6f4$exports,
  "sv-SE": $33670e148c84ad02$exports,
  "tr-TR": $0bf46fdcdd7cb5f6$exports,
  "uk-UA": $9d9765222bc08ca2$exports,
  "zh-CN": $d737296cedcdee9f$exports,
  "zh-TW": $09cd168ab18773f4$exports
};

// node_modules/@react-aria/tag/dist/useTag.mjs
function $parcel$interopDefault29(a) {
  return a && a.__esModule ? a.default : a;
}
function $fc6126c82a4601f1$export$3f568fff7dff2f03(props, state, ref) {
  let { item } = props;
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault29($3bb15cc24d006ec5$exports)), "@react-aria/tag");
  let buttonId = (0, $bdb11010cef70236$export$f680877a34711e37)();
  let { onRemove } = (0, $d7323bca8d074eeb$export$653eddfc964b0f8a).get(state) || {};
  let { rowProps, gridCellProps, ...states } = (0, $4e8b0456ef72939f$export$9610e69494fadfd2)({
    node: item
  }, state, ref);
  let { descriptionProps: _, ...stateWithoutDescription } = states;
  let isDisabled = state.disabledKeys.has(item.key) || item.props.isDisabled;
  let onKeyDown = (e) => {
    if (e.key === "Delete" || e.key === "Backspace") {
      if (isDisabled) return;
      e.preventDefault();
      if (state.selectionManager.isSelected(item.key)) onRemove === null || onRemove === void 0 ? void 0 : onRemove(new Set(state.selectionManager.selectedKeys));
      else onRemove === null || onRemove === void 0 ? void 0 : onRemove(/* @__PURE__ */ new Set([
        item.key
      ]));
    }
  };
  let modality = (0, $507fabe10e71c6fb$export$98e20ec92f614cfe)();
  if (modality === "virtual" && typeof window !== "undefined" && "ontouchstart" in window) modality = "pointer";
  let description = onRemove && (modality === "keyboard" || modality === "virtual") ? stringFormatter.format("removeDescription") : "";
  let descProps = (0, $ef06256079686ba0$export$f8aeda7b10753fa1)(description);
  let isItemFocused = item.key === state.selectionManager.focusedKey;
  let isFocused = state.selectionManager.focusedKey != null;
  let tabIndex = -1;
  if (!isDisabled && (isItemFocused || !isFocused)) tabIndex = 0;
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(item.props);
  let linkProps = (0, $ea8dcbcb9ea1b556$export$bdc77b0c0a3a85d6)(item.props);
  let { focusableProps } = (0, $f645667febf57a63$export$4c014de7c8940b4c)({
    isDisabled
  }, ref);
  return {
    removeButtonProps: {
      "aria-label": stringFormatter.format("removeButtonLabel"),
      "aria-labelledby": `${buttonId} ${rowProps.id}`,
      isDisabled,
      id: buttonId,
      onPress: () => onRemove ? onRemove(/* @__PURE__ */ new Set([
        item.key
      ])) : null
    },
    rowProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(focusableProps, rowProps, domProps, linkProps, {
      tabIndex,
      onKeyDown: onRemove ? onKeyDown : void 0,
      "aria-describedby": descProps["aria-describedby"]
    }),
    gridCellProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(gridCellProps, {
      "aria-errormessage": props["aria-errormessage"],
      "aria-label": props["aria-label"]
    }),
    ...stateWithoutDescription,
    allowsRemoving: !!onRemove
  };
}

// node_modules/@react-aria/toast/dist/ar-AE.mjs
var $ff9177efc58547ad$exports = {};
$ff9177efc58547ad$exports = {
  "close": `إغلاق`,
  "notifications": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} إشعار`,
    other: () => `${formatter.number(args.count)} إشعارات`
  })}.`
};

// node_modules/@react-aria/toast/dist/bg-BG.mjs
var $25eb7c0c0c45e544$exports = {};
$25eb7c0c0c45e544$exports = {
  "close": `Затвори`,
  "notifications": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} известие`,
    other: () => `${formatter.number(args.count)} известия`
  })}.`
};

// node_modules/@react-aria/toast/dist/cs-CZ.mjs
var $28feffc3d61a8691$exports = {};
$28feffc3d61a8691$exports = {
  "close": `Zavřít`,
  "notifications": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} oznámení`,
    other: () => `${formatter.number(args.count)} oznámení`
  })}.`
};

// node_modules/@react-aria/toast/dist/da-DK.mjs
var $390d441203d25ff4$exports = {};
$390d441203d25ff4$exports = {
  "close": `Luk`,
  "notifications": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} besked`,
    other: () => `${formatter.number(args.count)} beskeder`
  })}.`
};

// node_modules/@react-aria/toast/dist/de-DE.mjs
var $7063c2d0f14f979a$exports = {};
$7063c2d0f14f979a$exports = {
  "close": `Schließen`,
  "notifications": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} Benachrichtigung`,
    other: () => `${formatter.number(args.count)} Benachrichtigungen`
  })}.`
};

// node_modules/@react-aria/toast/dist/el-GR.mjs
var $2dfc1dbb6590af88$exports = {};
$2dfc1dbb6590af88$exports = {
  "close": `Κλείσιμο`,
  "notifications": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} ειδοποίηση`,
    other: () => `${formatter.number(args.count)} ειδοποιήσεις`
  })}.`
};

// node_modules/@react-aria/toast/dist/en-US.mjs
var $9a12ff1caae5a7a5$exports = {};
$9a12ff1caae5a7a5$exports = {
  "close": `Close`,
  "notifications": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} notification`,
    other: () => `${formatter.number(args.count)} notifications`
  })}.`
};

// node_modules/@react-aria/toast/dist/es-ES.mjs
var $f4095fb5a72adbe6$exports = {};
$f4095fb5a72adbe6$exports = {
  "close": `Cerrar`,
  "notifications": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} notificación`,
    other: () => `${formatter.number(args.count)} notificaciones`
  })}.`
};

// node_modules/@react-aria/toast/dist/et-EE.mjs
var $75bc5191b9d7826a$exports = {};
$75bc5191b9d7826a$exports = {
  "close": `Sule`,
  "notifications": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} teatis`,
    other: () => `${formatter.number(args.count)} teatist`
  })}.`
};

// node_modules/@react-aria/toast/dist/fi-FI.mjs
var $e4b9aef18b0db8dc$exports = {};
$e4b9aef18b0db8dc$exports = {
  "close": `Sulje`,
  "notifications": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} ilmoitus`,
    other: () => `${formatter.number(args.count)} ilmoitusta`
  })}.`
};

// node_modules/@react-aria/toast/dist/fr-FR.mjs
var $888756784d832bd7$exports = {};
$888756784d832bd7$exports = {
  "close": `Fermer`,
  "notifications": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} notification`,
    other: () => `${formatter.number(args.count)} notifications`
  })}.`
};

// node_modules/@react-aria/toast/dist/he-IL.mjs
var $6835949b68a1fabf$exports = {};
$6835949b68a1fabf$exports = {
  "close": `סגור`,
  "notifications": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} התראה`,
    other: () => `${formatter.number(args.count)} התראות`
  })}.`
};

// node_modules/@react-aria/toast/dist/hr-HR.mjs
var $87ffcbc0b651e40b$exports = {};
$87ffcbc0b651e40b$exports = {
  "close": `Zatvori`,
  "notifications": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} obavijest`,
    other: () => `${formatter.number(args.count)} obavijesti`
  })}.`
};

// node_modules/@react-aria/toast/dist/hu-HU.mjs
var $dc6e3b2813600d69$exports = {};
$dc6e3b2813600d69$exports = {
  "close": `Bezárás`,
  "notifications": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} értesítés`,
    other: () => `${formatter.number(args.count)} értesítés`
  })}.`
};

// node_modules/@react-aria/toast/dist/it-IT.mjs
var $fe136bcbacfcfa14$exports = {};
$fe136bcbacfcfa14$exports = {
  "close": `Chiudi`,
  "notifications": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} notifica`,
    other: () => `${formatter.number(args.count)} notifiche`
  })}.`
};

// node_modules/@react-aria/toast/dist/ja-JP.mjs
var $8fb53a929b46df83$exports = {};
$8fb53a929b46df83$exports = {
  "close": `閉じる`,
  "notifications": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} 個の通知`,
    other: () => `${formatter.number(args.count)} 個の通知`
  })}。`
};

// node_modules/@react-aria/toast/dist/ko-KR.mjs
var $2c38dbfaf041a865$exports = {};
$2c38dbfaf041a865$exports = {
  "close": `닫기`,
  "notifications": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)}개 알림`,
    other: () => `${formatter.number(args.count)}개 알림`
  })}.`
};

// node_modules/@react-aria/toast/dist/lt-LT.mjs
var $48f3f33a29908d4c$exports = {};
$48f3f33a29908d4c$exports = {
  "close": `Uždaryti`,
  "notifications": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} pranešimas`,
    other: () => `${formatter.number(args.count)} pranešimai`
  })}.`
};

// node_modules/@react-aria/toast/dist/lv-LV.mjs
var $9867160d996455a0$exports = {};
$9867160d996455a0$exports = {
  "close": `Aizvērt`,
  "notifications": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} paziņojums`,
    other: () => `${formatter.number(args.count)} paziņojumi`
  })}.`
};

// node_modules/@react-aria/toast/dist/nb-NO.mjs
var $196258ea25c96487$exports = {};
$196258ea25c96487$exports = {
  "close": `Lukk`,
  "notifications": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} varsling`,
    other: () => `${formatter.number(args.count)} varsler`
  })}.`
};

// node_modules/@react-aria/toast/dist/nl-NL.mjs
var $949061cb954e8000$exports = {};
$949061cb954e8000$exports = {
  "close": `Sluiten`,
  "notifications": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} melding`,
    other: () => `${formatter.number(args.count)} meldingen`
  })}.`
};

// node_modules/@react-aria/toast/dist/pl-PL.mjs
var $8189bed27add1ad3$exports = {};
$8189bed27add1ad3$exports = {
  "close": `Zamknij`,
  "notifications": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} powiadomienie`,
    few: () => `${formatter.number(args.count)} powiadomienia`,
    many: () => `${formatter.number(args.count)} powiadomień`,
    other: () => `${formatter.number(args.count)} powiadomienia`
  })}.`
};

// node_modules/@react-aria/toast/dist/pt-BR.mjs
var $a361756a93b6e28c$exports = {};
$a361756a93b6e28c$exports = {
  "close": `Fechar`,
  "notifications": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} notificação`,
    other: () => `${formatter.number(args.count)} notificações`
  })}.`
};

// node_modules/@react-aria/toast/dist/pt-PT.mjs
var $034c7393857c8db0$exports = {};
$034c7393857c8db0$exports = {
  "close": `Fechar`,
  "notifications": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} notificação`,
    other: () => `${formatter.number(args.count)} notificações`
  })}.`
};

// node_modules/@react-aria/toast/dist/ro-RO.mjs
var $e33d3b3868478b04$exports = {};
$e33d3b3868478b04$exports = {
  "close": `Închideţi`,
  "notifications": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} notificare`,
    other: () => `${formatter.number(args.count)} notificări`
  })}.`
};

// node_modules/@react-aria/toast/dist/ru-RU.mjs
var $9a7dcb914b29cd9f$exports = {};
$9a7dcb914b29cd9f$exports = {
  "close": `Закрыть`,
  "notifications": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} уведомление`,
    other: () => `${formatter.number(args.count)} уведомления`
  })}.`
};

// node_modules/@react-aria/toast/dist/sk-SK.mjs
var $e43d964a0c7f1266$exports = {};
$e43d964a0c7f1266$exports = {
  "close": `Zatvoriť`,
  "notifications": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} oznámenie`,
    few: () => `${formatter.number(args.count)} oznámenia`,
    other: () => `${formatter.number(args.count)} oznámení`
  })}.`
};

// node_modules/@react-aria/toast/dist/sl-SI.mjs
var $0bc56cee3275bcaa$exports = {};
$0bc56cee3275bcaa$exports = {
  "close": `Zapri`,
  "notifications": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} obvestilo`,
    two: () => `${formatter.number(args.count)} obvestili`,
    few: () => `${formatter.number(args.count)} obvestila`,
    other: () => `${formatter.number(args.count)} obvestil`
  })}.`
};

// node_modules/@react-aria/toast/dist/sr-SP.mjs
var $7dbdd7289c10d2ba$exports = {};
$7dbdd7289c10d2ba$exports = {
  "close": `Zatvori`,
  "notifications": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} obaveštenje`,
    other: () => `${formatter.number(args.count)} obaveštenja`
  })}.`
};

// node_modules/@react-aria/toast/dist/sv-SE.mjs
var $ccbe6066c10b1e53$exports = {};
$ccbe6066c10b1e53$exports = {
  "close": `Stäng`,
  "notifications": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} meddelande`,
    other: () => `${formatter.number(args.count)} meddelanden`
  })}.`
};

// node_modules/@react-aria/toast/dist/tr-TR.mjs
var $9d503476b9d858b7$exports = {};
$9d503476b9d858b7$exports = {
  "close": `Kapat`,
  "notifications": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} bildirim`,
    other: () => `${formatter.number(args.count)} bildirim`
  })}.`
};

// node_modules/@react-aria/toast/dist/uk-UA.mjs
var $32ee419c7b9b7a83$exports = {};
$32ee419c7b9b7a83$exports = {
  "close": `Закрити`,
  "notifications": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} сповіщення`,
    other: () => `${formatter.number(args.count)} сповіщення`
  })}.`
};

// node_modules/@react-aria/toast/dist/zh-CN.mjs
var $122525af1cb737c7$exports = {};
$122525af1cb737c7$exports = {
  "close": `关闭`,
  "notifications": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} 个通知`,
    other: () => `${formatter.number(args.count)} 个通知`
  })}。`
};

// node_modules/@react-aria/toast/dist/zh-TW.mjs
var $52e8b1b00094e5a3$exports = {};
$52e8b1b00094e5a3$exports = {
  "close": `關閉`,
  "notifications": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} 個通知`,
    other: () => `${formatter.number(args.count)} 個通知`
  })}。`
};

// node_modules/@react-aria/toast/dist/intlStrings.mjs
var $7853651519a70071$exports = {};
$7853651519a70071$exports = {
  "ar-AE": $ff9177efc58547ad$exports,
  "bg-BG": $25eb7c0c0c45e544$exports,
  "cs-CZ": $28feffc3d61a8691$exports,
  "da-DK": $390d441203d25ff4$exports,
  "de-DE": $7063c2d0f14f979a$exports,
  "el-GR": $2dfc1dbb6590af88$exports,
  "en-US": $9a12ff1caae5a7a5$exports,
  "es-ES": $f4095fb5a72adbe6$exports,
  "et-EE": $75bc5191b9d7826a$exports,
  "fi-FI": $e4b9aef18b0db8dc$exports,
  "fr-FR": $888756784d832bd7$exports,
  "he-IL": $6835949b68a1fabf$exports,
  "hr-HR": $87ffcbc0b651e40b$exports,
  "hu-HU": $dc6e3b2813600d69$exports,
  "it-IT": $fe136bcbacfcfa14$exports,
  "ja-JP": $8fb53a929b46df83$exports,
  "ko-KR": $2c38dbfaf041a865$exports,
  "lt-LT": $48f3f33a29908d4c$exports,
  "lv-LV": $9867160d996455a0$exports,
  "nb-NO": $196258ea25c96487$exports,
  "nl-NL": $949061cb954e8000$exports,
  "pl-PL": $8189bed27add1ad3$exports,
  "pt-BR": $a361756a93b6e28c$exports,
  "pt-PT": $034c7393857c8db0$exports,
  "ro-RO": $e33d3b3868478b04$exports,
  "ru-RU": $9a7dcb914b29cd9f$exports,
  "sk-SK": $e43d964a0c7f1266$exports,
  "sl-SI": $0bc56cee3275bcaa$exports,
  "sr-SP": $7dbdd7289c10d2ba$exports,
  "sv-SE": $ccbe6066c10b1e53$exports,
  "tr-TR": $9d503476b9d858b7$exports,
  "uk-UA": $32ee419c7b9b7a83$exports,
  "zh-CN": $122525af1cb737c7$exports,
  "zh-TW": $52e8b1b00094e5a3$exports
};

// node_modules/@react-aria/toast/dist/useToast.mjs
var import_react134 = __toESM(require_react(), 1);
function $parcel$interopDefault30(a) {
  return a && a.__esModule ? a.default : a;
}
function $d6542812f0669241$export$a407b657d3044108(props, state, ref) {
  let { key, timer, timeout } = props.toast;
  (0, import_react134.useEffect)(() => {
    if (timer == null || timeout == null) return;
    timer.reset(timeout);
    return () => {
      timer.pause();
    };
  }, [
    timer,
    timeout
  ]);
  let titleId = (0, $bdb11010cef70236$export$f680877a34711e37)();
  let descriptionId = (0, $bdb11010cef70236$export$b4cc09c592e8fdb8)();
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault30($7853651519a70071$exports)), "@react-aria/toast");
  let [isVisible, setIsVisible] = (0, import_react134.useState)(false);
  (0, import_react134.useEffect)(() => {
    setIsVisible(true);
  }, []);
  let toastProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props, {
    labelable: true
  });
  return {
    toastProps: {
      ...toastProps,
      role: "alertdialog",
      "aria-modal": "false",
      "aria-labelledby": props["aria-labelledby"] || titleId,
      "aria-describedby": props["aria-describedby"] || descriptionId,
      tabIndex: 0
    },
    contentProps: {
      role: "alert",
      "aria-atomic": "true",
      "aria-hidden": isVisible ? void 0 : "true"
    },
    titleProps: {
      id: titleId
    },
    descriptionProps: {
      id: descriptionId
    },
    closeButtonProps: {
      "aria-label": stringFormatter.format("close"),
      onPress: () => state.close(key)
    }
  };
}

// node_modules/@react-aria/toast/dist/useToastRegion.mjs
var import_react135 = __toESM(require_react(), 1);
function $parcel$interopDefault31(a) {
  return a && a.__esModule ? a.default : a;
}
function $6cc546b19ee7130a$export$b8cbbb20a51697de(props, state, ref) {
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault31($7853651519a70071$exports)), "@react-aria/toast");
  let { landmarkProps } = (0, $a86207c5d7f7e1fb$export$4cc632584fd87fae)({
    role: "region",
    "aria-label": props["aria-label"] || stringFormatter.format("notifications", {
      count: state.visibleToasts.length
    })
  }, ref);
  let isHovered = (0, import_react135.useRef)(false);
  let isFocused = (0, import_react135.useRef)(false);
  let updateTimers = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)(() => {
    if (isHovered.current || isFocused.current) state.pauseAll();
    else state.resumeAll();
  });
  let { hoverProps } = (0, $6179b936705e76d3$export$ae780daf29e6d456)({
    onHoverStart: () => {
      isHovered.current = true;
      updateTimers();
    },
    onHoverEnd: () => {
      isHovered.current = false;
      updateTimers();
    }
  });
  let toasts = (0, import_react135.useRef)([]);
  let prevVisibleToasts = (0, import_react135.useRef)(state.visibleToasts);
  let focusedToast = (0, import_react135.useRef)(null);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    if (focusedToast.current === -1 || state.visibleToasts.length === 0 || !ref.current) {
      toasts.current = [];
      prevVisibleToasts.current = state.visibleToasts;
      return;
    }
    toasts.current = [
      ...ref.current.querySelectorAll('[role="alertdialog"]')
    ];
    if (prevVisibleToasts.current.length === state.visibleToasts.length && state.visibleToasts.every((t, i) => t.key === prevVisibleToasts.current[i].key)) {
      prevVisibleToasts.current = state.visibleToasts;
      return;
    }
    let allToasts = prevVisibleToasts.current.map((t, i) => ({
      ...t,
      i,
      isRemoved: !state.visibleToasts.some((t2) => t.key === t2.key)
    }));
    let removedFocusedToastIndex = allToasts.findIndex((t) => t.i === focusedToast.current && t.isRemoved);
    if (removedFocusedToastIndex > -1) {
      var _lastFocused_current;
      if ((0, $507fabe10e71c6fb$export$630ff653c5ada6a9)() === "pointer" && ((_lastFocused_current = lastFocused.current) === null || _lastFocused_current === void 0 ? void 0 : _lastFocused_current.isConnected)) (0, $7215afc6de606d6b$export$de79e2c695e052f3)(lastFocused.current);
      else {
        let i = 0;
        let nextToast;
        let prevToast;
        while (i <= removedFocusedToastIndex) {
          if (!allToasts[i].isRemoved) prevToast = Math.max(0, i - 1);
          i++;
        }
        while (i < allToasts.length) {
          if (!allToasts[i].isRemoved) {
            nextToast = i - 1;
            break;
          }
          i++;
        }
        if (prevToast === void 0 && nextToast === void 0) prevToast = 0;
        if (prevToast >= 0 && prevToast < toasts.current.length) (0, $7215afc6de606d6b$export$de79e2c695e052f3)(toasts.current[prevToast]);
        else if (nextToast >= 0 && nextToast < toasts.current.length) (0, $7215afc6de606d6b$export$de79e2c695e052f3)(toasts.current[nextToast]);
      }
    }
    prevVisibleToasts.current = state.visibleToasts;
  }, [
    state.visibleToasts,
    ref,
    updateTimers
  ]);
  let lastFocused = (0, import_react135.useRef)(null);
  let { focusWithinProps } = (0, $9ab94262bd0047c7$export$420e68273165f4ec)({
    onFocusWithin: (e) => {
      isFocused.current = true;
      lastFocused.current = e.relatedTarget;
      updateTimers();
    },
    onBlurWithin: () => {
      isFocused.current = false;
      lastFocused.current = null;
      updateTimers();
    }
  });
  (0, import_react135.useEffect)(() => {
    var _lastFocused_current;
    if (state.visibleToasts.length === 0 && ((_lastFocused_current = lastFocused.current) === null || _lastFocused_current === void 0 ? void 0 : _lastFocused_current.isConnected)) {
      if ((0, $507fabe10e71c6fb$export$630ff653c5ada6a9)() === "pointer") (0, $7215afc6de606d6b$export$de79e2c695e052f3)(lastFocused.current);
      else lastFocused.current.focus();
      lastFocused.current = null;
    }
  }, [
    ref,
    state.visibleToasts.length
  ]);
  (0, import_react135.useEffect)(() => {
    return () => {
      var _lastFocused_current;
      if ((_lastFocused_current = lastFocused.current) === null || _lastFocused_current === void 0 ? void 0 : _lastFocused_current.isConnected) {
        if ((0, $507fabe10e71c6fb$export$630ff653c5ada6a9)() === "pointer") (0, $7215afc6de606d6b$export$de79e2c695e052f3)(lastFocused.current);
        else lastFocused.current.focus();
        lastFocused.current = null;
      }
    };
  }, [
    ref
  ]);
  return {
    regionProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(landmarkProps, hoverProps, focusWithinProps, {
      tabIndex: -1,
      // Mark the toast region as a "top layer", so that it:
      //   - is not aria-hidden when opening an overlay
      //   - allows focus even outside a containing focus scope
      //   - doesn’t dismiss overlays when clicking on it, even though it is outside
      // @ts-ignore
      "data-react-aria-top-layer": true,
      // listen to focus events separate from focuswithin because that will only fire once
      // and we need to follow all focus changes
      onFocus: (e) => {
        let target = e.target.closest('[role="alertdialog"]');
        focusedToast.current = toasts.current.findIndex((t) => t === target);
      },
      onBlur: () => {
        focusedToast.current = -1;
      }
    })
  };
}

// node_modules/@react-aria/tooltip/dist/useTooltip.mjs
function $326e436e94273fe1$export$1c4b08e0eca38426(props, state) {
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props, {
    labelable: true
  });
  let { hoverProps } = (0, $6179b936705e76d3$export$ae780daf29e6d456)({
    onHoverStart: () => state === null || state === void 0 ? void 0 : state.open(true),
    onHoverEnd: () => state === null || state === void 0 ? void 0 : state.close()
  });
  return {
    tooltipProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(domProps, hoverProps, {
      role: "tooltip"
    })
  };
}

// node_modules/@react-aria/tooltip/dist/useTooltipTrigger.mjs
var import_react136 = __toESM(require_react(), 1);
function $4e1b34546679e357$export$a6da6c504e4bba8b(props, state, ref) {
  let { isDisabled, trigger } = props;
  let tooltipId = (0, $bdb11010cef70236$export$f680877a34711e37)();
  let isHovered = (0, import_react136.useRef)(false);
  let isFocused = (0, import_react136.useRef)(false);
  let handleShow = () => {
    if (isHovered.current || isFocused.current) state.open(isFocused.current);
  };
  let handleHide = (immediate) => {
    if (!isHovered.current && !isFocused.current) state.close(immediate);
  };
  (0, import_react136.useEffect)(() => {
    let onKeyDown = (e) => {
      if (ref && ref.current) {
        if (e.key === "Escape") {
          e.stopPropagation();
          state.close(true);
        }
      }
    };
    if (state.isOpen) {
      document.addEventListener("keydown", onKeyDown, true);
      return () => {
        document.removeEventListener("keydown", onKeyDown, true);
      };
    }
  }, [
    ref,
    state
  ]);
  let onHoverStart = () => {
    if (trigger === "focus") return;
    if ((0, $507fabe10e71c6fb$export$630ff653c5ada6a9)() === "pointer") isHovered.current = true;
    else isHovered.current = false;
    handleShow();
  };
  let onHoverEnd = () => {
    if (trigger === "focus") return;
    isFocused.current = false;
    isHovered.current = false;
    handleHide();
  };
  let onPressStart = () => {
    isFocused.current = false;
    isHovered.current = false;
    handleHide(true);
  };
  let onFocus = () => {
    let isVisible = (0, $507fabe10e71c6fb$export$b9b3dfddab17db27)();
    if (isVisible) {
      isFocused.current = true;
      handleShow();
    }
  };
  let onBlur = () => {
    isFocused.current = false;
    isHovered.current = false;
    handleHide(true);
  };
  let { hoverProps } = (0, $6179b936705e76d3$export$ae780daf29e6d456)({
    isDisabled,
    onHoverStart,
    onHoverEnd
  });
  let { focusableProps } = (0, $f645667febf57a63$export$4c014de7c8940b4c)({
    isDisabled,
    onFocus,
    onBlur
  }, ref);
  return {
    triggerProps: {
      "aria-describedby": state.isOpen ? tooltipId : void 0,
      ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(focusableProps, hoverProps, {
        onPointerDown: onPressStart,
        onKeyDown: onPressStart,
        tabIndex: void 0
      })
    },
    tooltipProps: {
      id: tooltipId
    }
  };
}

// node_modules/@react-aria/tree/dist/useTree.mjs
function $6d8a57ce39fda2fa$export$fb0040ce9d6e8bd1(props, state, ref) {
  let { gridProps } = (0, $f47efb0c3a859cf2$export$664f9155035607eb)(props, state, ref);
  gridProps.role = "treegrid";
  return {
    gridProps
  };
}

// node_modules/@react-aria/tree/dist/ar-AE.mjs
var $2eab88da6eb0edda$exports = {};
$2eab88da6eb0edda$exports = {
  "collapse": `طي`,
  "expand": `تمديد`
};

// node_modules/@react-aria/tree/dist/bg-BG.mjs
var $5b7ed47241cec9bc$exports = {};
$5b7ed47241cec9bc$exports = {
  "collapse": `Свиване`,
  "expand": `Разширяване`
};

// node_modules/@react-aria/tree/dist/cs-CZ.mjs
var $b1bf14102833c31a$exports = {};
$b1bf14102833c31a$exports = {
  "collapse": `Sbalit`,
  "expand": `Roztáhnout`
};

// node_modules/@react-aria/tree/dist/da-DK.mjs
var $9b4b47ae278c0f51$exports = {};
$9b4b47ae278c0f51$exports = {
  "collapse": `Skjul`,
  "expand": `Udvid`
};

// node_modules/@react-aria/tree/dist/de-DE.mjs
var $f4b5b80fed008d49$exports = {};
$f4b5b80fed008d49$exports = {
  "collapse": `Reduzieren`,
  "expand": `Erweitern`
};

// node_modules/@react-aria/tree/dist/el-GR.mjs
var $fe0436b1fbfb0a3c$exports = {};
$fe0436b1fbfb0a3c$exports = {
  "collapse": `Σύμπτυξη`,
  "expand": `Ανάπτυξη`
};

// node_modules/@react-aria/tree/dist/en-US.mjs
var $1ab61de85823a0b7$exports = {};
$1ab61de85823a0b7$exports = {
  "expand": `Expand`,
  "collapse": `Collapse`
};

// node_modules/@react-aria/tree/dist/es-ES.mjs
var $8cdc60ee01e5e7f8$exports = {};
$8cdc60ee01e5e7f8$exports = {
  "collapse": `Contraer`,
  "expand": `Ampliar`
};

// node_modules/@react-aria/tree/dist/et-EE.mjs
var $576be2ddc0818dc4$exports = {};
$576be2ddc0818dc4$exports = {
  "collapse": `Ahenda`,
  "expand": `Laienda`
};

// node_modules/@react-aria/tree/dist/fi-FI.mjs
var $146218e7e6749652$exports = {};
$146218e7e6749652$exports = {
  "collapse": `Pienennä`,
  "expand": `Laajenna`
};

// node_modules/@react-aria/tree/dist/fr-FR.mjs
var $c64f4db9c44aed5b$exports = {};
$c64f4db9c44aed5b$exports = {
  "collapse": `Réduire`,
  "expand": `Développer`
};

// node_modules/@react-aria/tree/dist/he-IL.mjs
var $2bd2c84dbaab5624$exports = {};
$2bd2c84dbaab5624$exports = {
  "collapse": `כווץ`,
  "expand": `הרחב`
};

// node_modules/@react-aria/tree/dist/hr-HR.mjs
var $9df6ccd8ba00758d$exports = {};
$9df6ccd8ba00758d$exports = {
  "collapse": `Sažmi`,
  "expand": `Proširi`
};

// node_modules/@react-aria/tree/dist/hu-HU.mjs
var $924ec5973b9d52a8$exports = {};
$924ec5973b9d52a8$exports = {
  "collapse": `Összecsukás`,
  "expand": `Kibontás`
};

// node_modules/@react-aria/tree/dist/it-IT.mjs
var $b423649b5cbc9dc3$exports = {};
$b423649b5cbc9dc3$exports = {
  "collapse": `Comprimi`,
  "expand": `Espandi`
};

// node_modules/@react-aria/tree/dist/ja-JP.mjs
var $2b9e50ee093c0349$exports = {};
$2b9e50ee093c0349$exports = {
  "collapse": `折りたたむ`,
  "expand": `展開`
};

// node_modules/@react-aria/tree/dist/ko-KR.mjs
var $c94ab22311ee00dd$exports = {};
$c94ab22311ee00dd$exports = {
  "collapse": `접기`,
  "expand": `펼치기`
};

// node_modules/@react-aria/tree/dist/lt-LT.mjs
var $ffb2f77741c566ee$exports = {};
$ffb2f77741c566ee$exports = {
  "collapse": `Sutraukti`,
  "expand": `Išskleisti`
};

// node_modules/@react-aria/tree/dist/lv-LV.mjs
var $ba19b07a1b9e5177$exports = {};
$ba19b07a1b9e5177$exports = {
  "collapse": `Sakļaut`,
  "expand": `Izvērst`
};

// node_modules/@react-aria/tree/dist/nb-NO.mjs
var $38dc782dae76851a$exports = {};
$38dc782dae76851a$exports = {
  "collapse": `Skjul`,
  "expand": `Utvid`
};

// node_modules/@react-aria/tree/dist/nl-NL.mjs
var $fa99f4a7b08c9c55$exports = {};
$fa99f4a7b08c9c55$exports = {
  "collapse": `Samenvouwen`,
  "expand": `Uitvouwen`
};

// node_modules/@react-aria/tree/dist/pl-PL.mjs
var $cfcfda392bc6483e$exports = {};
$cfcfda392bc6483e$exports = {
  "collapse": `Zwiń`,
  "expand": `Rozwiń`
};

// node_modules/@react-aria/tree/dist/pt-BR.mjs
var $3d11d74855233b86$exports = {};
$3d11d74855233b86$exports = {
  "collapse": `Recolher`,
  "expand": `Expandir`
};

// node_modules/@react-aria/tree/dist/pt-PT.mjs
var $b7a0e914f2f1fc45$exports = {};
$b7a0e914f2f1fc45$exports = {
  "collapse": `Colapsar`,
  "expand": `Expandir`
};

// node_modules/@react-aria/tree/dist/ro-RO.mjs
var $e83474afc7c44eea$exports = {};
$e83474afc7c44eea$exports = {
  "collapse": `Restrângeți`,
  "expand": `Extindeți`
};

// node_modules/@react-aria/tree/dist/ru-RU.mjs
var $2db6648255dd48ea$exports = {};
$2db6648255dd48ea$exports = {
  "collapse": `Свернуть`,
  "expand": `Развернуть`
};

// node_modules/@react-aria/tree/dist/sk-SK.mjs
var $e01b4013a471f6b5$exports = {};
$e01b4013a471f6b5$exports = {
  "collapse": `Zbaliť`,
  "expand": `Rozbaliť`
};

// node_modules/@react-aria/tree/dist/sl-SI.mjs
var $f906d8c9d57a8ac7$exports = {};
$f906d8c9d57a8ac7$exports = {
  "collapse": `Strni`,
  "expand": `Razširi`
};

// node_modules/@react-aria/tree/dist/sr-SP.mjs
var $bfa21259fd564cea$exports = {};
$bfa21259fd564cea$exports = {
  "collapse": ` Skupi`,
  "expand": `Proširi`
};

// node_modules/@react-aria/tree/dist/sv-SE.mjs
var $0ed2db6e68f48ea3$exports = {};
$0ed2db6e68f48ea3$exports = {
  "collapse": `Dölj`,
  "expand": `Expandera`
};

// node_modules/@react-aria/tree/dist/tr-TR.mjs
var $384a15a899b42310$exports = {};
$384a15a899b42310$exports = {
  "collapse": `Daralt`,
  "expand": `Genişlet`
};

// node_modules/@react-aria/tree/dist/uk-UA.mjs
var $f8ed0031472d4b0e$exports = {};
$f8ed0031472d4b0e$exports = {
  "collapse": `Згорнути`,
  "expand": `Розгорнути`
};

// node_modules/@react-aria/tree/dist/zh-CN.mjs
var $bca1931646cb2236$exports = {};
$bca1931646cb2236$exports = {
  "collapse": `折叠`,
  "expand": `扩展`
};

// node_modules/@react-aria/tree/dist/zh-TW.mjs
var $35be4b468e070ce1$exports = {};
$35be4b468e070ce1$exports = {
  "collapse": `收合`,
  "expand": `展開`
};

// node_modules/@react-aria/tree/dist/intlStrings.mjs
var $290aaab42842e3be$exports = {};
$290aaab42842e3be$exports = {
  "ar-AE": $2eab88da6eb0edda$exports,
  "bg-BG": $5b7ed47241cec9bc$exports,
  "cs-CZ": $b1bf14102833c31a$exports,
  "da-DK": $9b4b47ae278c0f51$exports,
  "de-DE": $f4b5b80fed008d49$exports,
  "el-GR": $fe0436b1fbfb0a3c$exports,
  "en-US": $1ab61de85823a0b7$exports,
  "es-ES": $8cdc60ee01e5e7f8$exports,
  "et-EE": $576be2ddc0818dc4$exports,
  "fi-FI": $146218e7e6749652$exports,
  "fr-FR": $c64f4db9c44aed5b$exports,
  "he-IL": $2bd2c84dbaab5624$exports,
  "hr-HR": $9df6ccd8ba00758d$exports,
  "hu-HU": $924ec5973b9d52a8$exports,
  "it-IT": $b423649b5cbc9dc3$exports,
  "ja-JP": $2b9e50ee093c0349$exports,
  "ko-KR": $c94ab22311ee00dd$exports,
  "lt-LT": $ffb2f77741c566ee$exports,
  "lv-LV": $ba19b07a1b9e5177$exports,
  "nb-NO": $38dc782dae76851a$exports,
  "nl-NL": $fa99f4a7b08c9c55$exports,
  "pl-PL": $cfcfda392bc6483e$exports,
  "pt-BR": $3d11d74855233b86$exports,
  "pt-PT": $b7a0e914f2f1fc45$exports,
  "ro-RO": $e83474afc7c44eea$exports,
  "ru-RU": $2db6648255dd48ea$exports,
  "sk-SK": $e01b4013a471f6b5$exports,
  "sl-SI": $f906d8c9d57a8ac7$exports,
  "sr-SP": $bfa21259fd564cea$exports,
  "sv-SE": $0ed2db6e68f48ea3$exports,
  "tr-TR": $384a15a899b42310$exports,
  "uk-UA": $f8ed0031472d4b0e$exports,
  "zh-CN": $bca1931646cb2236$exports,
  "zh-TW": $35be4b468e070ce1$exports
};

// node_modules/@react-aria/tree/dist/useTreeItem.mjs
function $parcel$interopDefault32(a) {
  return a && a.__esModule ? a.default : a;
}
function $b41e0bc5ca49db3d$export$e4bcc4675b2b123a(props, state, ref) {
  let { node } = props;
  let gridListAria = (0, $4e8b0456ef72939f$export$9610e69494fadfd2)(props, state, ref);
  let isExpanded = gridListAria.rowProps["aria-expanded"] === true;
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault32($290aaab42842e3be$exports)), "@react-aria/tree");
  let labelProps = (0, $313b98861ee5dd6c$export$d6875122194c7b44)({
    "aria-label": isExpanded ? stringFormatter.format("collapse") : stringFormatter.format("expand"),
    "aria-labelledby": gridListAria.rowProps.id
  });
  let expandButtonProps = {
    onPress: () => {
      if (!gridListAria.isDisabled) {
        state.toggleKey(node.key);
        state.selectionManager.setFocused(true);
        state.selectionManager.setFocusedKey(node.key);
      }
    },
    excludeFromTabOrder: true,
    preventFocusOnPress: true,
    "data-react-aria-prevent-focus": true,
    ...labelProps
  };
  return {
    ...gridListAria,
    expandButtonProps
  };
}

// node_modules/react-aria-components/dist/Input.mjs
var import_react137 = __toESM(require_react(), 1);
var $3985021b0ad6602f$export$37fb8590cf2c088c = (0, import_react137.createContext)({});
var $3985021b0ad6602f$var$filterHoverProps = (props) => {
  let { onHoverStart, onHoverChange, onHoverEnd, ...otherProps } = props;
  return otherProps;
};
var $3985021b0ad6602f$export$f5b8910cec6cf069 = (0, $f39a9eba43920ace$export$86427a43e3e48ebb)(function Input(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $3985021b0ad6602f$export$37fb8590cf2c088c);
  let { hoverProps, isHovered } = (0, $6179b936705e76d3$export$ae780daf29e6d456)(props);
  let { isFocused, isFocusVisible, focusProps } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)({
    isTextInput: true,
    autoFocus: props.autoFocus
  });
  let isInvalid = !!props["aria-invalid"] && props["aria-invalid"] !== "false";
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    values: {
      isHovered,
      isFocused,
      isFocusVisible,
      isDisabled: props.disabled || false,
      isInvalid
    },
    defaultClassName: "react-aria-Input"
  });
  return (0, import_react137.default).createElement("input", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)($3985021b0ad6602f$var$filterHoverProps(props), focusProps, hoverProps),
    ...renderProps,
    ref,
    "data-focused": isFocused || void 0,
    "data-disabled": props.disabled || void 0,
    "data-hovered": isHovered || void 0,
    "data-focus-visible": isFocusVisible || void 0,
    "data-invalid": isInvalid || void 0
  });
});

// node_modules/react-aria-components/dist/Label.mjs
var import_react138 = __toESM(require_react(), 1);
var $01b77f81d0f07f68$export$75b6ee27786ba447 = (0, import_react138.createContext)({});
var $01b77f81d0f07f68$export$b04be29aa201d4f5 = (0, $f39a9eba43920ace$export$86427a43e3e48ebb)(function Label(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $01b77f81d0f07f68$export$75b6ee27786ba447);
  let { elementType: ElementType = "label", ...labelProps } = props;
  return (0, import_react138.default).createElement(ElementType, {
    className: "react-aria-Label",
    ...labelProps,
    ref
  });
});

// node_modules/react-aria-components/dist/ProgressBar.mjs
var import_react139 = __toESM(require_react(), 1);
var $0393f8ab869a0f1a$export$e9f3bf65a26ce129 = (0, import_react139.createContext)(null);
var $0393f8ab869a0f1a$export$c17561cb55d4db30 = (0, import_react139.forwardRef)(function ProgressBar(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $0393f8ab869a0f1a$export$e9f3bf65a26ce129);
  let { value = 0, minValue = 0, maxValue = 100, isIndeterminate = false } = props;
  value = (0, $9446cca9a3875146$export$7d15b64cf5a3a4c4)(value, minValue, maxValue);
  let [labelRef, label] = (0, $64fa3d84918910a7$export$9d4c57ee4c6ffdd8)(!props["aria-label"] && !props["aria-labelledby"]);
  let { progressBarProps, labelProps } = (0, $204d9ebcedfb8806$export$ed5abd763a836edc)({
    ...props,
    label
  });
  let percentage = isIndeterminate ? void 0 : (value - minValue) / (maxValue - minValue) * 100;
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    defaultClassName: "react-aria-ProgressBar",
    values: {
      percentage,
      valueText: progressBarProps["aria-valuetext"],
      isIndeterminate
    }
  });
  return (0, import_react139.default).createElement("div", {
    ...progressBarProps,
    ...renderProps,
    ref,
    slot: props.slot || void 0
  }, (0, import_react139.default).createElement((0, $01b77f81d0f07f68$export$75b6ee27786ba447).Provider, {
    value: {
      ...labelProps,
      ref: labelRef,
      elementType: "span"
    }
  }, renderProps.children));
});

// node_modules/react-aria-components/dist/Button.mjs
var import_react140 = __toESM(require_react(), 1);
var $d2b4bc8c273e7be6$var$additionalButtonHTMLAttributes = /* @__PURE__ */ new Set([
  "form",
  "formAction",
  "formEncType",
  "formMethod",
  "formNoValidate",
  "formTarget",
  "name",
  "value"
]);
var $d2b4bc8c273e7be6$export$24d547caef80ccd1 = (0, import_react140.createContext)({});
var $d2b4bc8c273e7be6$export$353f5b6fc5456de1 = (0, $f39a9eba43920ace$export$86427a43e3e48ebb)(function Button(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $d2b4bc8c273e7be6$export$24d547caef80ccd1);
  props = $d2b4bc8c273e7be6$var$disablePendingProps(props);
  let ctx = props;
  let { isPending } = ctx;
  let { buttonProps, isPressed } = (0, $701a24aa0da5b062$export$ea18c227d4417cc3)(props, ref);
  let { focusProps, isFocused, isFocusVisible } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)(props);
  let { hoverProps, isHovered } = (0, $6179b936705e76d3$export$ae780daf29e6d456)({
    ...props,
    isDisabled: props.isDisabled || isPending
  });
  let renderValues = {
    isHovered,
    isPressed: (ctx.isPressed || isPressed) && !isPending,
    isFocused,
    isFocusVisible,
    isDisabled: props.isDisabled || false,
    isPending: isPending !== null && isPending !== void 0 ? isPending : false
  };
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    values: renderValues,
    defaultClassName: "react-aria-Button"
  });
  let buttonId = (0, $bdb11010cef70236$export$f680877a34711e37)(buttonProps.id);
  let progressId = (0, $bdb11010cef70236$export$f680877a34711e37)();
  let ariaLabelledby = buttonProps["aria-labelledby"];
  if (isPending) {
    if (ariaLabelledby) ariaLabelledby = `${ariaLabelledby} ${progressId}`;
    else if (buttonProps["aria-label"]) ariaLabelledby = `${buttonId} ${progressId}`;
  }
  let wasPending = (0, import_react140.useRef)(isPending);
  (0, import_react140.useEffect)(() => {
    let message = {
      "aria-labelledby": ariaLabelledby || buttonId
    };
    if (!wasPending.current && isFocused && isPending) (0, $319e236875307eab$export$a9b970dcc4ae71a9)(message, "assertive");
    else if (wasPending.current && isFocused && !isPending) (0, $319e236875307eab$export$a9b970dcc4ae71a9)(message, "assertive");
    wasPending.current = isPending;
  }, [
    isPending,
    isFocused,
    ariaLabelledby,
    buttonId
  ]);
  return (0, import_react140.default).createElement("button", {
    ...(0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props, {
      propNames: $d2b4bc8c273e7be6$var$additionalButtonHTMLAttributes
    }),
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(buttonProps, focusProps, hoverProps),
    ...renderProps,
    type: buttonProps.type === "submit" && isPending ? "button" : buttonProps.type,
    id: buttonId,
    ref,
    "aria-labelledby": ariaLabelledby,
    slot: props.slot || void 0,
    "aria-disabled": isPending ? "true" : buttonProps["aria-disabled"],
    "data-disabled": props.isDisabled || void 0,
    "data-pressed": renderValues.isPressed || void 0,
    "data-hovered": isHovered || void 0,
    "data-focused": isFocused || void 0,
    "data-pending": isPending || void 0,
    "data-focus-visible": isFocusVisible || void 0
  }, (0, import_react140.default).createElement((0, $0393f8ab869a0f1a$export$e9f3bf65a26ce129).Provider, {
    value: {
      id: progressId
    }
  }, renderProps.children));
});
function $d2b4bc8c273e7be6$var$disablePendingProps(props) {
  if (props.isPending) {
    props.onPress = void 0;
    props.onPressStart = void 0;
    props.onPressEnd = void 0;
    props.onPressChange = void 0;
    props.onPressUp = void 0;
    props.onKeyDown = void 0;
    props.onKeyUp = void 0;
    props.onClick = void 0;
    props.href = void 0;
  }
  return props;
}

// node_modules/react-aria-components/dist/Text.mjs
var import_react141 = __toESM(require_react(), 1);
var $514c0188e459b4c0$export$9afb8bc826b033ea = (0, import_react141.createContext)({});
var $514c0188e459b4c0$export$5f1af8db9871e1d6 = (0, import_react141.forwardRef)(function Text(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $514c0188e459b4c0$export$9afb8bc826b033ea);
  let { elementType: ElementType = "span", ...domProps } = props;
  return (0, import_react141.default).createElement(ElementType, {
    className: "react-aria-Text",
    ...domProps,
    ref
  });
});

// node_modules/react-aria-components/dist/FieldError.mjs
var import_react142 = __toESM(require_react(), 1);
var $ee014567cb39d3f0$export$ff05c3ac10437e03 = (0, import_react142.createContext)(null);
var $ee014567cb39d3f0$export$f551688fc98f2e09 = (0, import_react142.forwardRef)(function FieldError(props, ref) {
  let validation = (0, import_react142.useContext)($ee014567cb39d3f0$export$ff05c3ac10437e03);
  if (!(validation === null || validation === void 0 ? void 0 : validation.isInvalid)) return null;
  return (0, import_react142.default).createElement($ee014567cb39d3f0$var$FieldErrorInner, {
    ...props,
    ref
  });
});
var $ee014567cb39d3f0$var$FieldErrorInner = (0, import_react142.forwardRef)((props, ref) => {
  let validation = (0, import_react142.useContext)($ee014567cb39d3f0$export$ff05c3ac10437e03);
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    defaultClassName: "react-aria-FieldError",
    defaultChildren: validation.validationErrors.length === 0 ? void 0 : validation.validationErrors.join(" "),
    values: validation
  });
  if (renderProps.children == null) return null;
  return (0, import_react142.default).createElement((0, $514c0188e459b4c0$export$5f1af8db9871e1d6), {
    slot: "errorMessage",
    ...domProps,
    ...renderProps,
    ref
  });
});

// node_modules/@react-stately/calendar/dist/utils.mjs
function $f62d864046160412$export$eac50920cf2fd59a(date, minValue, maxValue) {
  return minValue != null && date.compare(minValue) < 0 || maxValue != null && date.compare(maxValue) > 0;
}
function $f62d864046160412$export$f4a51ff076cc9a09(date, duration, locale, minValue, maxValue) {
  let halfDuration = {};
  for (let key in duration) {
    halfDuration[key] = Math.floor(duration[key] / 2);
    if (halfDuration[key] > 0 && duration[key] % 2 === 0) halfDuration[key]--;
  }
  let aligned = $f62d864046160412$export$144a00ba6044eb9(date, duration, locale).subtract(halfDuration);
  return $f62d864046160412$export$5bb865b12696a77d(date, aligned, duration, locale, minValue, maxValue);
}
function $f62d864046160412$export$144a00ba6044eb9(date, duration, locale, minValue, maxValue) {
  let aligned = date;
  if (duration.years) aligned = (0, $14e0f24ef4ac5c92$export$f91e89d3d0406102)(date);
  else if (duration.months) aligned = (0, $14e0f24ef4ac5c92$export$a5a3b454ada2268e)(date);
  else if (duration.weeks) aligned = (0, $14e0f24ef4ac5c92$export$42c81a444fbfb5d4)(date, locale);
  return $f62d864046160412$export$5bb865b12696a77d(date, aligned, duration, locale, minValue, maxValue);
}
function $f62d864046160412$export$530edbfc915b2b04(date, duration, locale, minValue, maxValue) {
  let d = {
    ...duration
  };
  if (d.days) d.days--;
  else if (d.weeks) d.weeks--;
  else if (d.months) d.months--;
  else if (d.years) d.years--;
  let aligned = $f62d864046160412$export$144a00ba6044eb9(date, duration, locale).subtract(d);
  return $f62d864046160412$export$5bb865b12696a77d(date, aligned, duration, locale, minValue, maxValue);
}
function $f62d864046160412$export$5bb865b12696a77d(date, aligned, duration, locale, minValue, maxValue) {
  if (minValue && date.compare(minValue) >= 0) {
    let newDate = (0, $14e0f24ef4ac5c92$export$a75f2bff57811055)(aligned, $f62d864046160412$export$144a00ba6044eb9((0, $11d87f3f76e88657$export$93522d1a439f3617)(minValue), duration, locale));
    if (newDate) aligned = newDate;
  }
  if (maxValue && date.compare(maxValue) <= 0) {
    let newDate = (0, $14e0f24ef4ac5c92$export$5c333a116e949cdd)(aligned, $f62d864046160412$export$530edbfc915b2b04((0, $11d87f3f76e88657$export$93522d1a439f3617)(maxValue), duration, locale));
    if (newDate) aligned = newDate;
  }
  return aligned;
}
function $f62d864046160412$export$4f5203c0d889109e(date, minValue, maxValue) {
  if (minValue) {
    let newDate = (0, $14e0f24ef4ac5c92$export$a75f2bff57811055)(date, (0, $11d87f3f76e88657$export$93522d1a439f3617)(minValue));
    if (newDate) date = newDate;
  }
  if (maxValue) {
    let newDate = (0, $14e0f24ef4ac5c92$export$5c333a116e949cdd)(date, (0, $11d87f3f76e88657$export$93522d1a439f3617)(maxValue));
    if (newDate) date = newDate;
  }
  return date;
}
function $f62d864046160412$export$a1d3911297b952d7(date, minValue, isDateUnavailable) {
  if (!isDateUnavailable) return date;
  while (date.compare(minValue) >= 0 && isDateUnavailable(date)) date = date.subtract({
    days: 1
  });
  if (date.compare(minValue) >= 0) return date;
  return null;
}

// node_modules/@react-stately/calendar/dist/useCalendarState.mjs
var import_react143 = __toESM(require_react(), 1);
function $131cf43a05231e1e$export$6d095e787d2b5e1f(props) {
  let defaultFormatter = (0, import_react143.useMemo)(() => new (0, $fb18d541ea1ad717$export$ad991b66133851cf)(props.locale), [
    props.locale
  ]);
  let resolvedOptions = (0, import_react143.useMemo)(() => defaultFormatter.resolvedOptions(), [
    defaultFormatter
  ]);
  let { locale, createCalendar, visibleDuration = {
    months: 1
  }, minValue, maxValue, selectionAlignment, isDateUnavailable, pageBehavior = "visible", firstDayOfWeek } = props;
  let calendar = (0, import_react143.useMemo)(() => createCalendar(resolvedOptions.calendar), [
    createCalendar,
    resolvedOptions.calendar
  ]);
  var _props_defaultValue;
  let [value, setControlledValue] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(props.value, (_props_defaultValue = props.defaultValue) !== null && _props_defaultValue !== void 0 ? _props_defaultValue : null, props.onChange);
  let calendarDateValue = (0, import_react143.useMemo)(() => value ? (0, $11d87f3f76e88657$export$b4a036af3fc0b032)((0, $11d87f3f76e88657$export$93522d1a439f3617)(value), calendar) : null, [
    value,
    calendar
  ]);
  let timeZone = (0, import_react143.useMemo)(() => value && "timeZone" in value ? value.timeZone : resolvedOptions.timeZone, [
    value,
    resolvedOptions.timeZone
  ]);
  let focusedCalendarDate = (0, import_react143.useMemo)(() => props.focusedValue ? (0, $f62d864046160412$export$4f5203c0d889109e)((0, $11d87f3f76e88657$export$b4a036af3fc0b032)((0, $11d87f3f76e88657$export$93522d1a439f3617)(props.focusedValue), calendar), minValue, maxValue) : void 0, [
    props.focusedValue,
    calendar,
    minValue,
    maxValue
  ]);
  let defaultFocusedCalendarDate = (0, import_react143.useMemo)(() => (0, $f62d864046160412$export$4f5203c0d889109e)(props.defaultFocusedValue ? (0, $11d87f3f76e88657$export$b4a036af3fc0b032)((0, $11d87f3f76e88657$export$93522d1a439f3617)(props.defaultFocusedValue), calendar) : calendarDateValue || (0, $11d87f3f76e88657$export$b4a036af3fc0b032)((0, $14e0f24ef4ac5c92$export$d0bdf45af03a6ea3)(timeZone), calendar), minValue, maxValue), [
    props.defaultFocusedValue,
    calendarDateValue,
    timeZone,
    calendar,
    minValue,
    maxValue
  ]);
  let [focusedDate, setFocusedDate] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(focusedCalendarDate, defaultFocusedCalendarDate, props.onFocusChange);
  let [startDate, setStartDate] = (0, import_react143.useState)(() => {
    switch (selectionAlignment) {
      case "start":
        return (0, $f62d864046160412$export$144a00ba6044eb9)(focusedDate, visibleDuration, locale, minValue, maxValue);
      case "end":
        return (0, $f62d864046160412$export$530edbfc915b2b04)(focusedDate, visibleDuration, locale, minValue, maxValue);
      case "center":
      default:
        return (0, $f62d864046160412$export$f4a51ff076cc9a09)(focusedDate, visibleDuration, locale, minValue, maxValue);
    }
  });
  let [isFocused, setFocused] = (0, import_react143.useState)(props.autoFocus || false);
  let endDate = (0, import_react143.useMemo)(() => {
    let duration = {
      ...visibleDuration
    };
    if (duration.days) duration.days--;
    else duration.days = -1;
    return startDate.add(duration);
  }, [
    startDate,
    visibleDuration
  ]);
  let [lastCalendar, setLastCalendar] = (0, import_react143.useState)(calendar);
  if (!(0, $14e0f24ef4ac5c92$export$dbc69fd56b53d5e)(calendar, lastCalendar)) {
    let newFocusedDate = (0, $11d87f3f76e88657$export$b4a036af3fc0b032)(focusedDate, calendar);
    setStartDate((0, $f62d864046160412$export$f4a51ff076cc9a09)(newFocusedDate, visibleDuration, locale, minValue, maxValue));
    setFocusedDate(newFocusedDate);
    setLastCalendar(calendar);
  }
  if ((0, $f62d864046160412$export$eac50920cf2fd59a)(focusedDate, minValue, maxValue))
    setFocusedDate((0, $f62d864046160412$export$4f5203c0d889109e)(focusedDate, minValue, maxValue));
  else if (focusedDate.compare(startDate) < 0) setStartDate((0, $f62d864046160412$export$530edbfc915b2b04)(focusedDate, visibleDuration, locale, minValue, maxValue));
  else if (focusedDate.compare(endDate) > 0) setStartDate((0, $f62d864046160412$export$144a00ba6044eb9)(focusedDate, visibleDuration, locale, minValue, maxValue));
  function focusCell(date) {
    date = (0, $f62d864046160412$export$4f5203c0d889109e)(date, minValue, maxValue);
    setFocusedDate(date);
  }
  function setValue(newValue) {
    if (!props.isDisabled && !props.isReadOnly) {
      let localValue = newValue;
      if (localValue === null) {
        setControlledValue(null);
        return;
      }
      localValue = (0, $f62d864046160412$export$4f5203c0d889109e)(localValue, minValue, maxValue);
      localValue = (0, $f62d864046160412$export$a1d3911297b952d7)(localValue, startDate, isDateUnavailable);
      if (!localValue) return;
      localValue = (0, $11d87f3f76e88657$export$b4a036af3fc0b032)(localValue, (value === null || value === void 0 ? void 0 : value.calendar) || new (0, $3b62074eb05584b2$export$80ee6245ec4f29ec)());
      if (value && "hour" in value) setControlledValue(value.set(localValue));
      else setControlledValue(localValue);
    }
  }
  let isUnavailable = (0, import_react143.useMemo)(() => {
    if (!calendarDateValue) return false;
    if (isDateUnavailable && isDateUnavailable(calendarDateValue)) return true;
    return (0, $f62d864046160412$export$eac50920cf2fd59a)(calendarDateValue, minValue, maxValue);
  }, [
    calendarDateValue,
    isDateUnavailable,
    minValue,
    maxValue
  ]);
  let isValueInvalid = props.isInvalid || props.validationState === "invalid" || isUnavailable;
  let validationState = isValueInvalid ? "invalid" : null;
  let pageDuration = (0, import_react143.useMemo)(() => {
    if (pageBehavior === "visible") return visibleDuration;
    return $131cf43a05231e1e$var$unitDuration(visibleDuration);
  }, [
    pageBehavior,
    visibleDuration
  ]);
  var _props_isDisabled, _props_isReadOnly;
  return {
    isDisabled: (_props_isDisabled = props.isDisabled) !== null && _props_isDisabled !== void 0 ? _props_isDisabled : false,
    isReadOnly: (_props_isReadOnly = props.isReadOnly) !== null && _props_isReadOnly !== void 0 ? _props_isReadOnly : false,
    value: calendarDateValue,
    setValue,
    visibleRange: {
      start: startDate,
      end: endDate
    },
    minValue,
    maxValue,
    focusedDate,
    timeZone,
    validationState,
    isValueInvalid,
    setFocusedDate(date) {
      focusCell(date);
      setFocused(true);
    },
    focusNextDay() {
      focusCell(focusedDate.add({
        days: 1
      }));
    },
    focusPreviousDay() {
      focusCell(focusedDate.subtract({
        days: 1
      }));
    },
    focusNextRow() {
      if (visibleDuration.days) this.focusNextPage();
      else if (visibleDuration.weeks || visibleDuration.months || visibleDuration.years) focusCell(focusedDate.add({
        weeks: 1
      }));
    },
    focusPreviousRow() {
      if (visibleDuration.days) this.focusPreviousPage();
      else if (visibleDuration.weeks || visibleDuration.months || visibleDuration.years) focusCell(focusedDate.subtract({
        weeks: 1
      }));
    },
    focusNextPage() {
      let start = startDate.add(pageDuration);
      setFocusedDate((0, $f62d864046160412$export$4f5203c0d889109e)(focusedDate.add(pageDuration), minValue, maxValue));
      setStartDate((0, $f62d864046160412$export$144a00ba6044eb9)((0, $f62d864046160412$export$5bb865b12696a77d)(focusedDate, start, pageDuration, locale, minValue, maxValue), pageDuration, locale));
    },
    focusPreviousPage() {
      let start = startDate.subtract(pageDuration);
      setFocusedDate((0, $f62d864046160412$export$4f5203c0d889109e)(focusedDate.subtract(pageDuration), minValue, maxValue));
      setStartDate((0, $f62d864046160412$export$144a00ba6044eb9)((0, $f62d864046160412$export$5bb865b12696a77d)(focusedDate, start, pageDuration, locale, minValue, maxValue), pageDuration, locale));
    },
    focusSectionStart() {
      if (visibleDuration.days) focusCell(startDate);
      else if (visibleDuration.weeks) focusCell((0, $14e0f24ef4ac5c92$export$42c81a444fbfb5d4)(focusedDate, locale));
      else if (visibleDuration.months || visibleDuration.years) focusCell((0, $14e0f24ef4ac5c92$export$a5a3b454ada2268e)(focusedDate));
    },
    focusSectionEnd() {
      if (visibleDuration.days) focusCell(endDate);
      else if (visibleDuration.weeks) focusCell((0, $14e0f24ef4ac5c92$export$ef8b6d9133084f4e)(focusedDate, locale));
      else if (visibleDuration.months || visibleDuration.years) focusCell((0, $14e0f24ef4ac5c92$export$a2258d9c4118825c)(focusedDate));
    },
    focusNextSection(larger) {
      if (!larger && !visibleDuration.days) {
        focusCell(focusedDate.add($131cf43a05231e1e$var$unitDuration(visibleDuration)));
        return;
      }
      if (visibleDuration.days) this.focusNextPage();
      else if (visibleDuration.weeks) focusCell(focusedDate.add({
        months: 1
      }));
      else if (visibleDuration.months || visibleDuration.years) focusCell(focusedDate.add({
        years: 1
      }));
    },
    focusPreviousSection(larger) {
      if (!larger && !visibleDuration.days) {
        focusCell(focusedDate.subtract($131cf43a05231e1e$var$unitDuration(visibleDuration)));
        return;
      }
      if (visibleDuration.days) this.focusPreviousPage();
      else if (visibleDuration.weeks) focusCell(focusedDate.subtract({
        months: 1
      }));
      else if (visibleDuration.months || visibleDuration.years) focusCell(focusedDate.subtract({
        years: 1
      }));
    },
    selectFocusedDate() {
      if (!(isDateUnavailable && isDateUnavailable(focusedDate))) setValue(focusedDate);
    },
    selectDate(date) {
      setValue(date);
    },
    isFocused,
    setFocused,
    isInvalid(date) {
      return (0, $f62d864046160412$export$eac50920cf2fd59a)(date, minValue, maxValue);
    },
    isSelected(date) {
      return calendarDateValue != null && (0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(date, calendarDateValue) && !this.isCellDisabled(date) && !this.isCellUnavailable(date);
    },
    isCellFocused(date) {
      return isFocused && focusedDate && (0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(date, focusedDate);
    },
    isCellDisabled(date) {
      return props.isDisabled || date.compare(startDate) < 0 || date.compare(endDate) > 0 || this.isInvalid(date);
    },
    isCellUnavailable(date) {
      return props.isDateUnavailable ? props.isDateUnavailable(date) : false;
    },
    isPreviousVisibleRangeInvalid() {
      let prev = startDate.subtract({
        days: 1
      });
      return (0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(prev, startDate) || this.isInvalid(prev);
    },
    isNextVisibleRangeInvalid() {
      let next = endDate.add({
        days: 1
      });
      return (0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(next, endDate) || this.isInvalid(next);
    },
    getDatesInWeek(weekIndex, from = startDate) {
      let date = from.add({
        weeks: weekIndex
      });
      let dates = [];
      date = (0, $14e0f24ef4ac5c92$export$42c81a444fbfb5d4)(date, locale, firstDayOfWeek);
      let dayOfWeek = (0, $14e0f24ef4ac5c92$export$2061056d06d7cdf7)(date, locale, firstDayOfWeek);
      for (let i = 0; i < dayOfWeek; i++) dates.push(null);
      while (dates.length < 7) {
        dates.push(date);
        let nextDate = date.add({
          days: 1
        });
        if ((0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(date, nextDate)) break;
        date = nextDate;
      }
      while (dates.length < 7) dates.push(null);
      return dates;
    }
  };
}
function $131cf43a05231e1e$var$unitDuration(duration) {
  let unit = {
    ...duration
  };
  for (let key in duration) unit[key] = 1;
  return unit;
}

// node_modules/@react-stately/calendar/dist/useRangeCalendarState.mjs
var import_react144 = __toESM(require_react(), 1);
function $9a36b6ba2fb1a7c5$export$9a987164d97ecc90(props) {
  let { value: valueProp, defaultValue, onChange, createCalendar, locale, visibleDuration = {
    months: 1
  }, minValue, maxValue, ...calendarProps } = props;
  let [value, setValue] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(valueProp, defaultValue || null, onChange);
  let [anchorDate, setAnchorDateState] = (0, import_react144.useState)(null);
  let alignment = "center";
  if (value && value.start && value.end) {
    let start = (0, $f62d864046160412$export$f4a51ff076cc9a09)((0, $11d87f3f76e88657$export$93522d1a439f3617)(value.start), visibleDuration, locale, minValue, maxValue);
    let end = start.add(visibleDuration).subtract({
      days: 1
    });
    if (value.end.compare(end) > 0) alignment = "start";
  }
  let availableRangeRef = (0, import_react144.useRef)(null);
  let [availableRange, setAvailableRange] = (0, import_react144.useState)(null);
  let min = (0, import_react144.useMemo)(() => (0, $14e0f24ef4ac5c92$export$a75f2bff57811055)(minValue, availableRange === null || availableRange === void 0 ? void 0 : availableRange.start), [
    minValue,
    availableRange
  ]);
  let max = (0, import_react144.useMemo)(() => (0, $14e0f24ef4ac5c92$export$5c333a116e949cdd)(maxValue, availableRange === null || availableRange === void 0 ? void 0 : availableRange.end), [
    maxValue,
    availableRange
  ]);
  let calendar = (0, $131cf43a05231e1e$export$6d095e787d2b5e1f)({
    ...calendarProps,
    value: value && value.start,
    createCalendar,
    locale,
    visibleDuration,
    minValue: min,
    maxValue: max,
    selectionAlignment: alignment
  });
  let updateAvailableRange = (date) => {
    if (date && props.isDateUnavailable && !props.allowsNonContiguousRanges) {
      const nextAvailableStartDate = $9a36b6ba2fb1a7c5$var$nextUnavailableDate(date, calendar, -1);
      const nextAvailableEndDate = $9a36b6ba2fb1a7c5$var$nextUnavailableDate(date, calendar, 1);
      availableRangeRef.current = {
        start: nextAvailableStartDate,
        end: nextAvailableEndDate
      };
      setAvailableRange(availableRangeRef.current);
    } else {
      availableRangeRef.current = null;
      setAvailableRange(null);
    }
  };
  let [lastVisibleRange, setLastVisibleRange] = (0, import_react144.useState)(calendar.visibleRange);
  if (!(0, $14e0f24ef4ac5c92$export$91b62ebf2ba703ee)(calendar.visibleRange.start, lastVisibleRange.start) || !(0, $14e0f24ef4ac5c92$export$91b62ebf2ba703ee)(calendar.visibleRange.end, lastVisibleRange.end)) {
    updateAvailableRange(anchorDate);
    setLastVisibleRange(calendar.visibleRange);
  }
  let setAnchorDate = (date) => {
    if (date) {
      setAnchorDateState(date);
      updateAvailableRange(date);
    } else {
      setAnchorDateState(null);
      updateAvailableRange(null);
    }
  };
  let highlightedRange = anchorDate ? $9a36b6ba2fb1a7c5$var$makeRange(anchorDate, calendar.focusedDate) : value && $9a36b6ba2fb1a7c5$var$makeRange(value.start, value.end);
  let selectDate = (date) => {
    if (props.isReadOnly) return;
    const constrainedDate = (0, $f62d864046160412$export$4f5203c0d889109e)(date, min, max);
    const previousAvailableConstrainedDate = (0, $f62d864046160412$export$a1d3911297b952d7)(constrainedDate, calendar.visibleRange.start, props.isDateUnavailable);
    if (!previousAvailableConstrainedDate) return;
    if (!anchorDate) setAnchorDate(previousAvailableConstrainedDate);
    else {
      let range = $9a36b6ba2fb1a7c5$var$makeRange(anchorDate, previousAvailableConstrainedDate);
      if (range) setValue({
        start: $9a36b6ba2fb1a7c5$var$convertValue(range.start, value === null || value === void 0 ? void 0 : value.start),
        end: $9a36b6ba2fb1a7c5$var$convertValue(range.end, value === null || value === void 0 ? void 0 : value.end)
      });
      setAnchorDate(null);
    }
  };
  let [isDragging, setDragging] = (0, import_react144.useState)(false);
  let { isDateUnavailable } = props;
  let isInvalidSelection = (0, import_react144.useMemo)(() => {
    if (!value || anchorDate) return false;
    if (isDateUnavailable && (isDateUnavailable(value.start) || isDateUnavailable(value.end))) return true;
    return (0, $f62d864046160412$export$eac50920cf2fd59a)(value.start, minValue, maxValue) || (0, $f62d864046160412$export$eac50920cf2fd59a)(value.end, minValue, maxValue);
  }, [
    isDateUnavailable,
    value,
    anchorDate,
    minValue,
    maxValue
  ]);
  let isValueInvalid = props.isInvalid || props.validationState === "invalid" || isInvalidSelection;
  let validationState = isValueInvalid ? "invalid" : null;
  return {
    ...calendar,
    value,
    setValue,
    anchorDate,
    setAnchorDate,
    highlightedRange,
    validationState,
    isValueInvalid,
    selectFocusedDate() {
      selectDate(calendar.focusedDate);
    },
    selectDate,
    highlightDate(date) {
      if (anchorDate) calendar.setFocusedDate(date);
    },
    isSelected(date) {
      return Boolean(highlightedRange && date.compare(highlightedRange.start) >= 0 && date.compare(highlightedRange.end) <= 0 && !calendar.isCellDisabled(date) && !calendar.isCellUnavailable(date));
    },
    isInvalid(date) {
      var _availableRangeRef_current, _availableRangeRef_current1;
      return calendar.isInvalid(date) || (0, $f62d864046160412$export$eac50920cf2fd59a)(date, (_availableRangeRef_current = availableRangeRef.current) === null || _availableRangeRef_current === void 0 ? void 0 : _availableRangeRef_current.start, (_availableRangeRef_current1 = availableRangeRef.current) === null || _availableRangeRef_current1 === void 0 ? void 0 : _availableRangeRef_current1.end);
    },
    isDragging,
    setDragging
  };
}
function $9a36b6ba2fb1a7c5$var$makeRange(start, end) {
  if (!start || !end) return null;
  if (end.compare(start) < 0) [start, end] = [
    end,
    start
  ];
  return {
    start: (0, $11d87f3f76e88657$export$93522d1a439f3617)(start),
    end: (0, $11d87f3f76e88657$export$93522d1a439f3617)(end)
  };
}
function $9a36b6ba2fb1a7c5$var$convertValue(newValue, oldValue) {
  newValue = (0, $11d87f3f76e88657$export$b4a036af3fc0b032)(newValue, (oldValue === null || oldValue === void 0 ? void 0 : oldValue.calendar) || new (0, $3b62074eb05584b2$export$80ee6245ec4f29ec)());
  if (oldValue && "hour" in oldValue) return oldValue.set(newValue);
  return newValue;
}
function $9a36b6ba2fb1a7c5$var$nextUnavailableDate(anchorDate, state, dir) {
  let nextDate = anchorDate.add({
    days: dir
  });
  while ((dir < 0 ? nextDate.compare(state.visibleRange.start) >= 0 : nextDate.compare(state.visibleRange.end) <= 0) && !state.isCellUnavailable(nextDate)) nextDate = nextDate.add({
    days: dir
  });
  if (state.isCellUnavailable(nextDate)) return nextDate.add({
    days: -dir
  });
}

// node_modules/@react-stately/checkbox/dist/useCheckboxGroupState.mjs
var import_react145 = __toESM(require_react(), 1);
function $587d3ad58be6d31f$export$daff6da51032a415(props = {}) {
  let [selectedValues, setValue] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(props.value, props.defaultValue || [], props.onChange);
  let isRequired = !!props.isRequired && selectedValues.length === 0;
  let invalidValues = (0, import_react145.useRef)(/* @__PURE__ */ new Map());
  let validation = (0, $e5be200c675c3b3a$export$fc1a364ae1f3ff10)({
    ...props,
    value: selectedValues
  });
  let isInvalid = validation.displayValidation.isInvalid;
  var _props_validationState;
  const state = {
    ...validation,
    value: selectedValues,
    setValue(value) {
      if (props.isReadOnly || props.isDisabled) return;
      setValue(value);
    },
    isDisabled: props.isDisabled || false,
    isReadOnly: props.isReadOnly || false,
    isSelected(value) {
      return selectedValues.includes(value);
    },
    addValue(value) {
      if (props.isReadOnly || props.isDisabled) return;
      if (!selectedValues.includes(value)) setValue(selectedValues.concat(value));
    },
    removeValue(value) {
      if (props.isReadOnly || props.isDisabled) return;
      if (selectedValues.includes(value)) setValue(selectedValues.filter((existingValue) => existingValue !== value));
    },
    toggleValue(value) {
      if (props.isReadOnly || props.isDisabled) return;
      if (selectedValues.includes(value)) setValue(selectedValues.filter((existingValue) => existingValue !== value));
      else setValue(selectedValues.concat(value));
    },
    setInvalid(value, v) {
      let s = new Map(invalidValues.current);
      if (v.isInvalid) s.set(value, v);
      else s.delete(value);
      invalidValues.current = s;
      validation.updateValidation((0, $e5be200c675c3b3a$export$75ee7c75d68f5b0e)(...s.values()));
    },
    validationState: (_props_validationState = props.validationState) !== null && _props_validationState !== void 0 ? _props_validationState : isInvalid ? "invalid" : null,
    isInvalid,
    isRequired
  };
  return state;
}

// node_modules/@react-stately/list/dist/ListCollection.mjs
var $a02d57049d202695$export$d085fb9e920b5ca7 = class {
  *[Symbol.iterator]() {
    yield* this.iterable;
  }
  get size() {
    return this.keyMap.size;
  }
  getKeys() {
    return this.keyMap.keys();
  }
  getKeyBefore(key) {
    let node = this.keyMap.get(key);
    var _node_prevKey;
    return node ? (_node_prevKey = node.prevKey) !== null && _node_prevKey !== void 0 ? _node_prevKey : null : null;
  }
  getKeyAfter(key) {
    let node = this.keyMap.get(key);
    var _node_nextKey;
    return node ? (_node_nextKey = node.nextKey) !== null && _node_nextKey !== void 0 ? _node_nextKey : null : null;
  }
  getFirstKey() {
    return this.firstKey;
  }
  getLastKey() {
    return this.lastKey;
  }
  getItem(key) {
    var _this_keyMap_get;
    return (_this_keyMap_get = this.keyMap.get(key)) !== null && _this_keyMap_get !== void 0 ? _this_keyMap_get : null;
  }
  at(idx) {
    const keys = [
      ...this.getKeys()
    ];
    return this.getItem(keys[idx]);
  }
  getChildren(key) {
    let node = this.keyMap.get(key);
    return (node === null || node === void 0 ? void 0 : node.childNodes) || [];
  }
  constructor(nodes) {
    this.keyMap = /* @__PURE__ */ new Map();
    this.firstKey = null;
    this.lastKey = null;
    this.iterable = nodes;
    let visit = (node) => {
      this.keyMap.set(node.key, node);
      if (node.childNodes && node.type === "section") for (let child of node.childNodes) visit(child);
    };
    for (let node of nodes) visit(node);
    let last = null;
    let index = 0;
    for (let [key, node] of this.keyMap) {
      if (last) {
        last.nextKey = key;
        node.prevKey = last.key;
      } else {
        this.firstKey = key;
        node.prevKey = void 0;
      }
      if (node.type === "item") node.index = index++;
      last = node;
      last.nextKey = void 0;
    }
    var _last_key;
    this.lastKey = (_last_key = last === null || last === void 0 ? void 0 : last.key) !== null && _last_key !== void 0 ? _last_key : null;
  }
};

// node_modules/@react-stately/selection/dist/Selection.mjs
var $e40ea825a81a3709$export$52baac22726c72bf = class _$e40ea825a81a3709$export$52baac22726c72bf extends Set {
  constructor(keys, anchorKey, currentKey) {
    super(keys);
    if (keys instanceof _$e40ea825a81a3709$export$52baac22726c72bf) {
      this.anchorKey = anchorKey !== null && anchorKey !== void 0 ? anchorKey : keys.anchorKey;
      this.currentKey = currentKey !== null && currentKey !== void 0 ? currentKey : keys.currentKey;
    } else {
      this.anchorKey = anchorKey !== null && anchorKey !== void 0 ? anchorKey : null;
      this.currentKey = currentKey !== null && currentKey !== void 0 ? currentKey : null;
    }
  }
};

// node_modules/@react-stately/selection/dist/useMultipleSelectionState.mjs
var import_react146 = __toESM(require_react(), 1);
function $7af3f5b51489e0b5$var$equalSets(setA, setB) {
  if (setA.size !== setB.size) return false;
  for (let item of setA) {
    if (!setB.has(item)) return false;
  }
  return true;
}
function $7af3f5b51489e0b5$export$253fe78d46329472(props) {
  let { selectionMode = "none", disallowEmptySelection = false, allowDuplicateSelectionEvents, selectionBehavior: selectionBehaviorProp = "toggle", disabledBehavior = "all" } = props;
  let isFocusedRef = (0, import_react146.useRef)(false);
  let [, setFocused] = (0, import_react146.useState)(false);
  let focusedKeyRef = (0, import_react146.useRef)(null);
  let childFocusStrategyRef = (0, import_react146.useRef)(null);
  let [, setFocusedKey] = (0, import_react146.useState)(null);
  let selectedKeysProp = (0, import_react146.useMemo)(() => $7af3f5b51489e0b5$var$convertSelection(props.selectedKeys), [
    props.selectedKeys
  ]);
  let defaultSelectedKeys = (0, import_react146.useMemo)(() => $7af3f5b51489e0b5$var$convertSelection(props.defaultSelectedKeys, new (0, $e40ea825a81a3709$export$52baac22726c72bf)()), [
    props.defaultSelectedKeys
  ]);
  let [selectedKeys, setSelectedKeys] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(selectedKeysProp, defaultSelectedKeys, props.onSelectionChange);
  let disabledKeysProp = (0, import_react146.useMemo)(() => props.disabledKeys ? new Set(props.disabledKeys) : /* @__PURE__ */ new Set(), [
    props.disabledKeys
  ]);
  let [selectionBehavior, setSelectionBehavior] = (0, import_react146.useState)(selectionBehaviorProp);
  if (selectionBehaviorProp === "replace" && selectionBehavior === "toggle" && typeof selectedKeys === "object" && selectedKeys.size === 0) setSelectionBehavior("replace");
  let lastSelectionBehavior = (0, import_react146.useRef)(selectionBehaviorProp);
  (0, import_react146.useEffect)(() => {
    if (selectionBehaviorProp !== lastSelectionBehavior.current) {
      setSelectionBehavior(selectionBehaviorProp);
      lastSelectionBehavior.current = selectionBehaviorProp;
    }
  }, [
    selectionBehaviorProp
  ]);
  return {
    selectionMode,
    disallowEmptySelection,
    selectionBehavior,
    setSelectionBehavior,
    get isFocused() {
      return isFocusedRef.current;
    },
    setFocused(f) {
      isFocusedRef.current = f;
      setFocused(f);
    },
    get focusedKey() {
      return focusedKeyRef.current;
    },
    get childFocusStrategy() {
      return childFocusStrategyRef.current;
    },
    setFocusedKey(k, childFocusStrategy = "first") {
      focusedKeyRef.current = k;
      childFocusStrategyRef.current = childFocusStrategy;
      setFocusedKey(k);
    },
    selectedKeys,
    setSelectedKeys(keys) {
      if (allowDuplicateSelectionEvents || !$7af3f5b51489e0b5$var$equalSets(keys, selectedKeys)) setSelectedKeys(keys);
    },
    disabledKeys: disabledKeysProp,
    disabledBehavior
  };
}
function $7af3f5b51489e0b5$var$convertSelection(selection, defaultValue) {
  if (!selection) return defaultValue;
  return selection === "all" ? "all" : new (0, $e40ea825a81a3709$export$52baac22726c72bf)(selection);
}

// node_modules/@react-stately/selection/dist/SelectionManager.mjs
var $d496c0a20b6e58ec$export$6c8a5aaad13c9852 = class _$d496c0a20b6e58ec$export$6c8a5aaad13c9852 {
  /**
  * The type of selection that is allowed in the collection.
  */
  get selectionMode() {
    return this.state.selectionMode;
  }
  /**
  * Whether the collection allows empty selection.
  */
  get disallowEmptySelection() {
    return this.state.disallowEmptySelection;
  }
  /**
  * The selection behavior for the collection.
  */
  get selectionBehavior() {
    return this.state.selectionBehavior;
  }
  /**
  * Sets the selection behavior for the collection.
  */
  setSelectionBehavior(selectionBehavior) {
    this.state.setSelectionBehavior(selectionBehavior);
  }
  /**
  * Whether the collection is currently focused.
  */
  get isFocused() {
    return this.state.isFocused;
  }
  /**
  * Sets whether the collection is focused.
  */
  setFocused(isFocused) {
    this.state.setFocused(isFocused);
  }
  /**
  * The current focused key in the collection.
  */
  get focusedKey() {
    return this.state.focusedKey;
  }
  /** Whether the first or last child of the focused key should receive focus. */
  get childFocusStrategy() {
    return this.state.childFocusStrategy;
  }
  /**
  * Sets the focused key.
  */
  setFocusedKey(key, childFocusStrategy) {
    if (key == null || this.collection.getItem(key)) this.state.setFocusedKey(key, childFocusStrategy);
  }
  /**
  * The currently selected keys in the collection.
  */
  get selectedKeys() {
    return this.state.selectedKeys === "all" ? new Set(this.getSelectAllKeys()) : this.state.selectedKeys;
  }
  /**
  * The raw selection value for the collection.
  * Either 'all' for select all, or a set of keys.
  */
  get rawSelection() {
    return this.state.selectedKeys;
  }
  /**
  * Returns whether a key is selected.
  */
  isSelected(key) {
    if (this.state.selectionMode === "none") return false;
    let mappedKey = this.getKey(key);
    if (mappedKey == null) return false;
    return this.state.selectedKeys === "all" ? this.canSelectItem(mappedKey) : this.state.selectedKeys.has(mappedKey);
  }
  /**
  * Whether the selection is empty.
  */
  get isEmpty() {
    return this.state.selectedKeys !== "all" && this.state.selectedKeys.size === 0;
  }
  /**
  * Whether all items in the collection are selected.
  */
  get isSelectAll() {
    if (this.isEmpty) return false;
    if (this.state.selectedKeys === "all") return true;
    if (this._isSelectAll != null) return this._isSelectAll;
    let allKeys = this.getSelectAllKeys();
    let selectedKeys = this.state.selectedKeys;
    this._isSelectAll = allKeys.every((k) => selectedKeys.has(k));
    return this._isSelectAll;
  }
  get firstSelectedKey() {
    let first = null;
    for (let key of this.state.selectedKeys) {
      let item = this.collection.getItem(key);
      if (!first || item && (0, $c5a24bc478652b5f$export$8c434b3a7a4dad6)(this.collection, item, first) < 0) first = item;
    }
    var _first_key;
    return (_first_key = first === null || first === void 0 ? void 0 : first.key) !== null && _first_key !== void 0 ? _first_key : null;
  }
  get lastSelectedKey() {
    let last = null;
    for (let key of this.state.selectedKeys) {
      let item = this.collection.getItem(key);
      if (!last || item && (0, $c5a24bc478652b5f$export$8c434b3a7a4dad6)(this.collection, item, last) > 0) last = item;
    }
    var _last_key;
    return (_last_key = last === null || last === void 0 ? void 0 : last.key) !== null && _last_key !== void 0 ? _last_key : null;
  }
  get disabledKeys() {
    return this.state.disabledKeys;
  }
  get disabledBehavior() {
    return this.state.disabledBehavior;
  }
  /**
  * Extends the selection to the given key.
  */
  extendSelection(toKey) {
    if (this.selectionMode === "none") return;
    if (this.selectionMode === "single") {
      this.replaceSelection(toKey);
      return;
    }
    let mappedToKey = this.getKey(toKey);
    if (mappedToKey == null) return;
    let selection;
    if (this.state.selectedKeys === "all") selection = new (0, $e40ea825a81a3709$export$52baac22726c72bf)([
      mappedToKey
    ], mappedToKey, mappedToKey);
    else {
      let selectedKeys = this.state.selectedKeys;
      var _selectedKeys_anchorKey;
      let anchorKey = (_selectedKeys_anchorKey = selectedKeys.anchorKey) !== null && _selectedKeys_anchorKey !== void 0 ? _selectedKeys_anchorKey : mappedToKey;
      selection = new (0, $e40ea825a81a3709$export$52baac22726c72bf)(selectedKeys, anchorKey, mappedToKey);
      var _selectedKeys_currentKey;
      for (let key of this.getKeyRange(anchorKey, (_selectedKeys_currentKey = selectedKeys.currentKey) !== null && _selectedKeys_currentKey !== void 0 ? _selectedKeys_currentKey : mappedToKey)) selection.delete(key);
      for (let key of this.getKeyRange(mappedToKey, anchorKey)) if (this.canSelectItem(key)) selection.add(key);
    }
    this.state.setSelectedKeys(selection);
  }
  getKeyRange(from, to) {
    let fromItem = this.collection.getItem(from);
    let toItem = this.collection.getItem(to);
    if (fromItem && toItem) {
      if ((0, $c5a24bc478652b5f$export$8c434b3a7a4dad6)(this.collection, fromItem, toItem) <= 0) return this.getKeyRangeInternal(from, to);
      return this.getKeyRangeInternal(to, from);
    }
    return [];
  }
  getKeyRangeInternal(from, to) {
    var _this_layoutDelegate;
    if ((_this_layoutDelegate = this.layoutDelegate) === null || _this_layoutDelegate === void 0 ? void 0 : _this_layoutDelegate.getKeyRange) return this.layoutDelegate.getKeyRange(from, to);
    let keys = [];
    let key = from;
    while (key != null) {
      let item = this.collection.getItem(key);
      if (item && (item.type === "item" || item.type === "cell" && this.allowsCellSelection)) keys.push(key);
      if (key === to) return keys;
      key = this.collection.getKeyAfter(key);
    }
    return [];
  }
  getKey(key) {
    let item = this.collection.getItem(key);
    if (!item)
      return key;
    if (item.type === "cell" && this.allowsCellSelection) return key;
    while (item && item.type !== "item" && item.parentKey != null) item = this.collection.getItem(item.parentKey);
    if (!item || item.type !== "item") return null;
    return item.key;
  }
  /**
  * Toggles whether the given key is selected.
  */
  toggleSelection(key) {
    if (this.selectionMode === "none") return;
    if (this.selectionMode === "single" && !this.isSelected(key)) {
      this.replaceSelection(key);
      return;
    }
    let mappedKey = this.getKey(key);
    if (mappedKey == null) return;
    let keys = new (0, $e40ea825a81a3709$export$52baac22726c72bf)(this.state.selectedKeys === "all" ? this.getSelectAllKeys() : this.state.selectedKeys);
    if (keys.has(mappedKey)) keys.delete(mappedKey);
    else if (this.canSelectItem(mappedKey)) {
      keys.add(mappedKey);
      keys.anchorKey = mappedKey;
      keys.currentKey = mappedKey;
    }
    if (this.disallowEmptySelection && keys.size === 0) return;
    this.state.setSelectedKeys(keys);
  }
  /**
  * Replaces the selection with only the given key.
  */
  replaceSelection(key) {
    if (this.selectionMode === "none") return;
    let mappedKey = this.getKey(key);
    if (mappedKey == null) return;
    let selection = this.canSelectItem(mappedKey) ? new (0, $e40ea825a81a3709$export$52baac22726c72bf)([
      mappedKey
    ], mappedKey, mappedKey) : new (0, $e40ea825a81a3709$export$52baac22726c72bf)();
    this.state.setSelectedKeys(selection);
  }
  /**
  * Replaces the selection with the given keys.
  */
  setSelectedKeys(keys) {
    if (this.selectionMode === "none") return;
    let selection = new (0, $e40ea825a81a3709$export$52baac22726c72bf)();
    for (let key of keys) {
      let mappedKey = this.getKey(key);
      if (mappedKey != null) {
        selection.add(mappedKey);
        if (this.selectionMode === "single") break;
      }
    }
    this.state.setSelectedKeys(selection);
  }
  getSelectAllKeys() {
    let keys = [];
    let addKeys = (key) => {
      while (key != null) {
        if (this.canSelectItem(key)) {
          var _getFirstItem;
          let item = this.collection.getItem(key);
          if ((item === null || item === void 0 ? void 0 : item.type) === "item") keys.push(key);
          var _getFirstItem_key;
          if ((item === null || item === void 0 ? void 0 : item.hasChildNodes) && (this.allowsCellSelection || item.type !== "item")) addKeys((_getFirstItem_key = (_getFirstItem = (0, $c5a24bc478652b5f$export$fbdeaa6a76694f71)((0, $c5a24bc478652b5f$export$1005530eda016c13)(item, this.collection))) === null || _getFirstItem === void 0 ? void 0 : _getFirstItem.key) !== null && _getFirstItem_key !== void 0 ? _getFirstItem_key : null);
        }
        key = this.collection.getKeyAfter(key);
      }
    };
    addKeys(this.collection.getFirstKey());
    return keys;
  }
  /**
  * Selects all items in the collection.
  */
  selectAll() {
    if (!this.isSelectAll && this.selectionMode === "multiple") this.state.setSelectedKeys("all");
  }
  /**
  * Removes all keys from the selection.
  */
  clearSelection() {
    if (!this.disallowEmptySelection && (this.state.selectedKeys === "all" || this.state.selectedKeys.size > 0)) this.state.setSelectedKeys(new (0, $e40ea825a81a3709$export$52baac22726c72bf)());
  }
  /**
  * Toggles between select all and an empty selection.
  */
  toggleSelectAll() {
    if (this.isSelectAll) this.clearSelection();
    else this.selectAll();
  }
  select(key, e) {
    if (this.selectionMode === "none") return;
    if (this.selectionMode === "single") {
      if (this.isSelected(key) && !this.disallowEmptySelection) this.toggleSelection(key);
      else this.replaceSelection(key);
    } else if (this.selectionBehavior === "toggle" || e && (e.pointerType === "touch" || e.pointerType === "virtual"))
      this.toggleSelection(key);
    else this.replaceSelection(key);
  }
  /**
  * Returns whether the current selection is equal to the given selection.
  */
  isSelectionEqual(selection) {
    if (selection === this.state.selectedKeys) return true;
    let selectedKeys = this.selectedKeys;
    if (selection.size !== selectedKeys.size) return false;
    for (let key of selection) {
      if (!selectedKeys.has(key)) return false;
    }
    for (let key of selectedKeys) {
      if (!selection.has(key)) return false;
    }
    return true;
  }
  canSelectItem(key) {
    var _item_props;
    if (this.state.selectionMode === "none" || this.state.disabledKeys.has(key)) return false;
    let item = this.collection.getItem(key);
    if (!item || (item === null || item === void 0 ? void 0 : (_item_props = item.props) === null || _item_props === void 0 ? void 0 : _item_props.isDisabled) || item.type === "cell" && !this.allowsCellSelection) return false;
    return true;
  }
  isDisabled(key) {
    var _this_collection_getItem_props, _this_collection_getItem;
    return this.state.disabledBehavior === "all" && (this.state.disabledKeys.has(key) || !!((_this_collection_getItem = this.collection.getItem(key)) === null || _this_collection_getItem === void 0 ? void 0 : (_this_collection_getItem_props = _this_collection_getItem.props) === null || _this_collection_getItem_props === void 0 ? void 0 : _this_collection_getItem_props.isDisabled));
  }
  isLink(key) {
    var _this_collection_getItem_props, _this_collection_getItem;
    return !!((_this_collection_getItem = this.collection.getItem(key)) === null || _this_collection_getItem === void 0 ? void 0 : (_this_collection_getItem_props = _this_collection_getItem.props) === null || _this_collection_getItem_props === void 0 ? void 0 : _this_collection_getItem_props.href);
  }
  getItemProps(key) {
    var _this_collection_getItem;
    return (_this_collection_getItem = this.collection.getItem(key)) === null || _this_collection_getItem === void 0 ? void 0 : _this_collection_getItem.props;
  }
  withCollection(collection) {
    return new _$d496c0a20b6e58ec$export$6c8a5aaad13c9852(collection, this.state, {
      allowsCellSelection: this.allowsCellSelection,
      layoutDelegate: this.layoutDelegate || void 0
    });
  }
  constructor(collection, state, options) {
    this.collection = collection;
    this.state = state;
    var _options_allowsCellSelection;
    this.allowsCellSelection = (_options_allowsCellSelection = options === null || options === void 0 ? void 0 : options.allowsCellSelection) !== null && _options_allowsCellSelection !== void 0 ? _options_allowsCellSelection : false;
    this._isSelectAll = null;
    this.layoutDelegate = (options === null || options === void 0 ? void 0 : options.layoutDelegate) || null;
  }
};

// node_modules/@react-stately/list/dist/useListState.mjs
var import_react147 = __toESM(require_react(), 1);
function $e72dd72e1c76a225$export$2f645645f7bca764(props) {
  let { filter, layoutDelegate } = props;
  let selectionState = (0, $7af3f5b51489e0b5$export$253fe78d46329472)(props);
  let disabledKeys = (0, import_react147.useMemo)(() => props.disabledKeys ? new Set(props.disabledKeys) : /* @__PURE__ */ new Set(), [
    props.disabledKeys
  ]);
  let factory = (0, import_react147.useCallback)((nodes) => filter ? new (0, $a02d57049d202695$export$d085fb9e920b5ca7)(filter(nodes)) : new (0, $a02d57049d202695$export$d085fb9e920b5ca7)(nodes), [
    filter
  ]);
  let context = (0, import_react147.useMemo)(() => ({
    suppressTextValueWarning: props.suppressTextValueWarning
  }), [
    props.suppressTextValueWarning
  ]);
  let collection = (0, $7613b1592d41b092$export$6cd28814d92fa9c9)(props, factory, context);
  let selectionManager = (0, import_react147.useMemo)(() => new (0, $d496c0a20b6e58ec$export$6c8a5aaad13c9852)(collection, selectionState, {
    layoutDelegate
  }), [
    collection,
    selectionState,
    layoutDelegate
  ]);
  $e72dd72e1c76a225$var$useFocusedKeyReset(collection, selectionManager);
  return {
    collection,
    disabledKeys,
    selectionManager
  };
}
function $e72dd72e1c76a225$export$ba9d38c0f1bf2b36(state, filter) {
  let collection = (0, import_react147.useMemo)(() => filter ? state.collection.UNSTABLE_filter(filter) : state.collection, [
    state.collection,
    filter
  ]);
  let selectionManager = state.selectionManager.withCollection(collection);
  $e72dd72e1c76a225$var$useFocusedKeyReset(collection, selectionManager);
  return {
    collection,
    selectionManager,
    disabledKeys: state.disabledKeys
  };
}
function $e72dd72e1c76a225$var$useFocusedKeyReset(collection, selectionManager) {
  const cachedCollection = (0, import_react147.useRef)(null);
  (0, import_react147.useEffect)(() => {
    if (selectionManager.focusedKey != null && !collection.getItem(selectionManager.focusedKey) && cachedCollection.current) {
      const startItem = cachedCollection.current.getItem(selectionManager.focusedKey);
      const cachedItemNodes = [
        ...cachedCollection.current.getKeys()
      ].map((key) => {
        const itemNode = cachedCollection.current.getItem(key);
        return (itemNode === null || itemNode === void 0 ? void 0 : itemNode.type) === "item" ? itemNode : null;
      }).filter((node) => node !== null);
      const itemNodes = [
        ...collection.getKeys()
      ].map((key) => {
        const itemNode = collection.getItem(key);
        return (itemNode === null || itemNode === void 0 ? void 0 : itemNode.type) === "item" ? itemNode : null;
      }).filter((node) => node !== null);
      var _cachedItemNodes_length, _itemNodes_length;
      const diff = ((_cachedItemNodes_length = cachedItemNodes === null || cachedItemNodes === void 0 ? void 0 : cachedItemNodes.length) !== null && _cachedItemNodes_length !== void 0 ? _cachedItemNodes_length : 0) - ((_itemNodes_length = itemNodes === null || itemNodes === void 0 ? void 0 : itemNodes.length) !== null && _itemNodes_length !== void 0 ? _itemNodes_length : 0);
      var _startItem_index, _startItem_index1, _itemNodes_length1;
      let index = Math.min(diff > 1 ? Math.max(((_startItem_index = startItem === null || startItem === void 0 ? void 0 : startItem.index) !== null && _startItem_index !== void 0 ? _startItem_index : 0) - diff + 1, 0) : (_startItem_index1 = startItem === null || startItem === void 0 ? void 0 : startItem.index) !== null && _startItem_index1 !== void 0 ? _startItem_index1 : 0, ((_itemNodes_length1 = itemNodes === null || itemNodes === void 0 ? void 0 : itemNodes.length) !== null && _itemNodes_length1 !== void 0 ? _itemNodes_length1 : 0) - 1);
      let newNode = null;
      let isReverseSearching = false;
      while (index >= 0) {
        if (!selectionManager.isDisabled(itemNodes[index].key)) {
          newNode = itemNodes[index];
          break;
        }
        if (index < itemNodes.length - 1 && !isReverseSearching) index++;
        else {
          isReverseSearching = true;
          var _startItem_index2, _startItem_index3;
          if (index > ((_startItem_index2 = startItem === null || startItem === void 0 ? void 0 : startItem.index) !== null && _startItem_index2 !== void 0 ? _startItem_index2 : 0)) index = (_startItem_index3 = startItem === null || startItem === void 0 ? void 0 : startItem.index) !== null && _startItem_index3 !== void 0 ? _startItem_index3 : 0;
          index--;
        }
      }
      selectionManager.setFocusedKey(newNode ? newNode.key : null);
    }
    cachedCollection.current = collection;
  }, [
    collection,
    selectionManager
  ]);
}

// node_modules/@react-stately/list/dist/useSingleSelectListState.mjs
var import_react148 = __toESM(require_react(), 1);
function $a0d645289fe9b86b$export$e7f05e985daf4b5f(props) {
  var _props_defaultSelectedKey;
  let [selectedKey, setSelectedKey] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(props.selectedKey, (_props_defaultSelectedKey = props.defaultSelectedKey) !== null && _props_defaultSelectedKey !== void 0 ? _props_defaultSelectedKey : null, props.onSelectionChange);
  let selectedKeys = (0, import_react148.useMemo)(() => selectedKey != null ? [
    selectedKey
  ] : [], [
    selectedKey
  ]);
  let { collection, disabledKeys, selectionManager } = (0, $e72dd72e1c76a225$export$2f645645f7bca764)({
    ...props,
    selectionMode: "single",
    disallowEmptySelection: true,
    allowDuplicateSelectionEvents: true,
    selectedKeys,
    onSelectionChange: (keys) => {
      if (keys === "all") return;
      var _keys_values_next_value;
      let key = (_keys_values_next_value = keys.values().next().value) !== null && _keys_values_next_value !== void 0 ? _keys_values_next_value : null;
      if (key === selectedKey && props.onSelectionChange) props.onSelectionChange(key);
      setSelectedKey(key);
    }
  });
  let selectedItem = selectedKey != null ? collection.getItem(selectedKey) : null;
  return {
    collection,
    disabledKeys,
    selectionManager,
    selectedKey,
    setSelectedKey,
    selectedItem
  };
}

// node_modules/@react-stately/combobox/dist/useComboBoxState.mjs
var import_react150 = __toESM(require_react(), 1);

// node_modules/@react-stately/overlays/dist/useOverlayTriggerState.mjs
var import_react149 = __toESM(require_react(), 1);
function $fc909762b330b746$export$61c6a8c84e605fb6(props) {
  let [isOpen, setOpen] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(props.isOpen, props.defaultOpen || false, props.onOpenChange);
  const open = (0, import_react149.useCallback)(() => {
    setOpen(true);
  }, [
    setOpen
  ]);
  const close = (0, import_react149.useCallback)(() => {
    setOpen(false);
  }, [
    setOpen
  ]);
  const toggle = (0, import_react149.useCallback)(() => {
    setOpen(!isOpen);
  }, [
    setOpen,
    isOpen
  ]);
  return {
    isOpen,
    setOpen,
    open,
    close,
    toggle
  };
}

// node_modules/@react-stately/combobox/dist/useComboBoxState.mjs
function $a9e7382a7d111cb5$export$b453a3bfd4a5fa9e(props) {
  var _collection_getItem;
  let { defaultFilter, menuTrigger = "input", allowsEmptyCollection = false, allowsCustomValue, shouldCloseOnBlur = true } = props;
  let [showAllItems, setShowAllItems] = (0, import_react150.useState)(false);
  let [isFocused, setFocusedState] = (0, import_react150.useState)(false);
  let [focusStrategy, setFocusStrategy] = (0, import_react150.useState)(null);
  let onSelectionChange = (key) => {
    if (props.onSelectionChange) props.onSelectionChange(key);
    if (key === selectedKey) {
      resetInputValue();
      closeMenu();
    }
  };
  var _props_items;
  let { collection, selectionManager, selectedKey, setSelectedKey, selectedItem, disabledKeys } = (0, $a0d645289fe9b86b$export$e7f05e985daf4b5f)({
    ...props,
    onSelectionChange,
    items: (_props_items = props.items) !== null && _props_items !== void 0 ? _props_items : props.defaultItems
  });
  let defaultInputValue = props.defaultInputValue;
  if (defaultInputValue == null) {
    var _collection_getItem1;
    var _collection_getItem_textValue;
    if (selectedKey == null) defaultInputValue = "";
    else defaultInputValue = (_collection_getItem_textValue = (_collection_getItem1 = collection.getItem(selectedKey)) === null || _collection_getItem1 === void 0 ? void 0 : _collection_getItem1.textValue) !== null && _collection_getItem_textValue !== void 0 ? _collection_getItem_textValue : "";
  }
  let [inputValue, setInputValue] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(props.inputValue, defaultInputValue, props.onInputChange);
  let originalCollection = collection;
  let filteredCollection = (0, import_react150.useMemo)(() => (
    // No default filter if items are controlled.
    props.items != null || !defaultFilter ? collection : $a9e7382a7d111cb5$var$filterCollection(collection, inputValue, defaultFilter)
  ), [
    collection,
    inputValue,
    defaultFilter,
    props.items
  ]);
  let [lastCollection, setLastCollection] = (0, import_react150.useState)(filteredCollection);
  let menuOpenTrigger = (0, import_react150.useRef)("focus");
  let onOpenChange = (open2) => {
    if (props.onOpenChange) props.onOpenChange(open2, open2 ? menuOpenTrigger.current : void 0);
    selectionManager.setFocused(open2);
    if (!open2) selectionManager.setFocusedKey(null);
  };
  let triggerState = (0, $fc909762b330b746$export$61c6a8c84e605fb6)({
    ...props,
    onOpenChange,
    isOpen: void 0,
    defaultOpen: void 0
  });
  let open = (focusStrategy2 = null, trigger) => {
    let displayAllItems = trigger === "manual" || trigger === "focus" && menuTrigger === "focus";
    if (allowsEmptyCollection || filteredCollection.size > 0 || displayAllItems && originalCollection.size > 0 || props.items) {
      if (displayAllItems && !triggerState.isOpen && props.items === void 0)
        setShowAllItems(true);
      menuOpenTrigger.current = trigger;
      setFocusStrategy(focusStrategy2);
      triggerState.open();
    }
  };
  let toggle = (focusStrategy2 = null, trigger) => {
    let displayAllItems = trigger === "manual" || trigger === "focus" && menuTrigger === "focus";
    if (!(allowsEmptyCollection || filteredCollection.size > 0 || displayAllItems && originalCollection.size > 0 || props.items) && !triggerState.isOpen) return;
    if (displayAllItems && !triggerState.isOpen && props.items === void 0)
      setShowAllItems(true);
    if (!triggerState.isOpen) menuOpenTrigger.current = trigger;
    toggleMenu(focusStrategy2);
  };
  let updateLastCollection = (0, import_react150.useCallback)(() => {
    setLastCollection(showAllItems ? originalCollection : filteredCollection);
  }, [
    showAllItems,
    originalCollection,
    filteredCollection
  ]);
  let toggleMenu = (0, import_react150.useCallback)((focusStrategy2 = null) => {
    if (triggerState.isOpen) updateLastCollection();
    setFocusStrategy(focusStrategy2);
    triggerState.toggle();
  }, [
    triggerState,
    updateLastCollection
  ]);
  let closeMenu = (0, import_react150.useCallback)(() => {
    if (triggerState.isOpen) {
      updateLastCollection();
      triggerState.close();
    }
  }, [
    triggerState,
    updateLastCollection
  ]);
  let [lastValue, setLastValue] = (0, import_react150.useState)(inputValue);
  let resetInputValue = () => {
    var _collection_getItem2;
    var _collection_getItem_textValue2;
    let itemText = selectedKey != null ? (_collection_getItem_textValue2 = (_collection_getItem2 = collection.getItem(selectedKey)) === null || _collection_getItem2 === void 0 ? void 0 : _collection_getItem2.textValue) !== null && _collection_getItem_textValue2 !== void 0 ? _collection_getItem_textValue2 : "" : "";
    setLastValue(itemText);
    setInputValue(itemText);
  };
  var _props_selectedKey, _ref;
  let lastSelectedKey = (0, import_react150.useRef)((_ref = (_props_selectedKey = props.selectedKey) !== null && _props_selectedKey !== void 0 ? _props_selectedKey : props.defaultSelectedKey) !== null && _ref !== void 0 ? _ref : null);
  var _collection_getItem_textValue1;
  let lastSelectedKeyText = (0, import_react150.useRef)(selectedKey != null ? (_collection_getItem_textValue1 = (_collection_getItem = collection.getItem(selectedKey)) === null || _collection_getItem === void 0 ? void 0 : _collection_getItem.textValue) !== null && _collection_getItem_textValue1 !== void 0 ? _collection_getItem_textValue1 : "" : "");
  (0, import_react150.useEffect)(() => {
    var _collection_getItem2;
    if (isFocused && (filteredCollection.size > 0 || allowsEmptyCollection) && !triggerState.isOpen && inputValue !== lastValue && menuTrigger !== "manual") open(null, "input");
    if (!showAllItems && !allowsEmptyCollection && triggerState.isOpen && filteredCollection.size === 0) closeMenu();
    if (selectedKey != null && selectedKey !== lastSelectedKey.current) closeMenu();
    if (inputValue !== lastValue) {
      selectionManager.setFocusedKey(null);
      setShowAllItems(false);
      if (inputValue === "" && (props.inputValue === void 0 || props.selectedKey === void 0)) setSelectedKey(null);
    }
    if (selectedKey !== lastSelectedKey.current && (props.inputValue === void 0 || props.selectedKey === void 0)) resetInputValue();
    else if (lastValue !== inputValue) setLastValue(inputValue);
    var _collection_getItem_textValue2;
    let selectedItemText = selectedKey != null ? (_collection_getItem_textValue2 = (_collection_getItem2 = collection.getItem(selectedKey)) === null || _collection_getItem2 === void 0 ? void 0 : _collection_getItem2.textValue) !== null && _collection_getItem_textValue2 !== void 0 ? _collection_getItem_textValue2 : "" : "";
    if (!isFocused && selectedKey != null && props.inputValue === void 0 && selectedKey === lastSelectedKey.current) {
      if (lastSelectedKeyText.current !== selectedItemText) {
        setLastValue(selectedItemText);
        setInputValue(selectedItemText);
      }
    }
    lastSelectedKey.current = selectedKey;
    lastSelectedKeyText.current = selectedItemText;
  });
  let validation = (0, $e5be200c675c3b3a$export$fc1a364ae1f3ff10)({
    ...props,
    value: (0, import_react150.useMemo)(() => ({
      inputValue,
      selectedKey
    }), [
      inputValue,
      selectedKey
    ])
  });
  let revert = () => {
    if (allowsCustomValue && selectedKey == null) commitCustomValue();
    else commitSelection();
  };
  let commitCustomValue = () => {
    lastSelectedKey.current = null;
    setSelectedKey(null);
    closeMenu();
  };
  let commitSelection = () => {
    if (props.selectedKey !== void 0 && props.inputValue !== void 0) {
      var _props_onSelectionChange, _collection_getItem2;
      (_props_onSelectionChange = props.onSelectionChange) === null || _props_onSelectionChange === void 0 ? void 0 : _props_onSelectionChange.call(props, selectedKey);
      var _collection_getItem_textValue2;
      let itemText = selectedKey != null ? (_collection_getItem_textValue2 = (_collection_getItem2 = collection.getItem(selectedKey)) === null || _collection_getItem2 === void 0 ? void 0 : _collection_getItem2.textValue) !== null && _collection_getItem_textValue2 !== void 0 ? _collection_getItem_textValue2 : "" : "";
      setLastValue(itemText);
      closeMenu();
    } else {
      resetInputValue();
      closeMenu();
    }
  };
  const commitValue = () => {
    if (allowsCustomValue) {
      var _collection_getItem2;
      var _collection_getItem_textValue2;
      const itemText = selectedKey != null ? (_collection_getItem_textValue2 = (_collection_getItem2 = collection.getItem(selectedKey)) === null || _collection_getItem2 === void 0 ? void 0 : _collection_getItem2.textValue) !== null && _collection_getItem_textValue2 !== void 0 ? _collection_getItem_textValue2 : "" : "";
      inputValue === itemText ? commitSelection() : commitCustomValue();
    } else
      commitSelection();
  };
  let commit = () => {
    if (triggerState.isOpen && selectionManager.focusedKey != null) {
      if (selectedKey === selectionManager.focusedKey) commitSelection();
      else setSelectedKey(selectionManager.focusedKey);
    } else commitValue();
  };
  let valueOnFocus = (0, import_react150.useRef)(inputValue);
  let setFocused = (isFocused2) => {
    if (isFocused2) {
      valueOnFocus.current = inputValue;
      if (menuTrigger === "focus" && !props.isReadOnly) open(null, "focus");
    } else {
      if (shouldCloseOnBlur) commitValue();
      if (inputValue !== valueOnFocus.current) validation.commitValidation();
    }
    setFocusedState(isFocused2);
  };
  let displayedCollection = (0, import_react150.useMemo)(() => {
    if (triggerState.isOpen) {
      if (showAllItems) return originalCollection;
      else return filteredCollection;
    } else return lastCollection;
  }, [
    triggerState.isOpen,
    originalCollection,
    filteredCollection,
    showAllItems,
    lastCollection
  ]);
  return {
    ...validation,
    ...triggerState,
    focusStrategy,
    toggle,
    open,
    close: commitValue,
    selectionManager,
    selectedKey,
    setSelectedKey,
    disabledKeys,
    isFocused,
    setFocused,
    selectedItem,
    collection: displayedCollection,
    inputValue,
    setInputValue,
    commit,
    revert
  };
}
function $a9e7382a7d111cb5$var$filterCollection(collection, inputValue, filter) {
  return new (0, $a02d57049d202695$export$d085fb9e920b5ca7)($a9e7382a7d111cb5$var$filterNodes(collection, collection, inputValue, filter));
}
function $a9e7382a7d111cb5$var$filterNodes(collection, nodes, inputValue, filter) {
  let filteredNode = [];
  for (let node of nodes) {
    if (node.type === "section" && node.hasChildNodes) {
      let filtered = $a9e7382a7d111cb5$var$filterNodes(collection, (0, $c5a24bc478652b5f$export$1005530eda016c13)(node, collection), inputValue, filter);
      if ([
        ...filtered
      ].some((node2) => node2.type === "item")) filteredNode.push({
        ...node,
        childNodes: filtered
      });
    } else if (node.type === "item" && filter(node.textValue, inputValue)) filteredNode.push({
      ...node
    });
    else if (node.type !== "item") filteredNode.push({
      ...node
    });
  }
  return filteredNode;
}

// node_modules/@react-stately/datepicker/dist/ar-AE.mjs
var $b3427c06585c22a0$exports = {};
$b3427c06585c22a0$exports = {
  "rangeOverflow": (args) => `يجب أن تكون القيمة ${args.maxValue} أو قبل ذلك.`,
  "rangeReversed": `تاريخ البدء يجب أن يكون قبل تاريخ الانتهاء.`,
  "rangeUnderflow": (args) => `يجب أن تكون القيمة ${args.minValue} أو بعد ذلك.`,
  "unavailableDate": `البيانات المحددة غير متاحة.`
};

// node_modules/@react-stately/datepicker/dist/bg-BG.mjs
var $d282528f459122b9$exports = {};
$d282528f459122b9$exports = {
  "rangeOverflow": (args) => `Стойността трябва да е ${args.maxValue} или по-ранна.`,
  "rangeReversed": `Началната дата трябва да е преди крайната.`,
  "rangeUnderflow": (args) => `Стойността трябва да е ${args.minValue} или по-късно.`,
  "unavailableDate": `Избраната дата не е налична.`
};

// node_modules/@react-stately/datepicker/dist/cs-CZ.mjs
var $2d5eecd634a9ca45$exports = {};
$2d5eecd634a9ca45$exports = {
  "rangeOverflow": (args) => `Hodnota musí být ${args.maxValue} nebo dřívější.`,
  "rangeReversed": `Datum zahájení musí předcházet datu ukončení.`,
  "rangeUnderflow": (args) => `Hodnota musí být ${args.minValue} nebo pozdější.`,
  "unavailableDate": `Vybrané datum není k dispozici.`
};

// node_modules/@react-stately/datepicker/dist/da-DK.mjs
var $c8e2288226c24a67$exports = {};
$c8e2288226c24a67$exports = {
  "rangeOverflow": (args) => `Værdien skal være ${args.maxValue} eller tidligere.`,
  "rangeReversed": `Startdatoen skal være før slutdatoen.`,
  "rangeUnderflow": (args) => `Værdien skal være ${args.minValue} eller nyere.`,
  "unavailableDate": `Den valgte dato er ikke tilgængelig.`
};

// node_modules/@react-stately/datepicker/dist/de-DE.mjs
var $6f5745e389c346d7$exports = {};
$6f5745e389c346d7$exports = {
  "rangeOverflow": (args) => `Der Wert muss ${args.maxValue} oder früher sein.`,
  "rangeReversed": `Das Anfangsdatum muss vor dem Enddatum liegen.`,
  "rangeUnderflow": (args) => `Der Wert muss ${args.minValue} oder später sein.`,
  "unavailableDate": `Das ausgewählte Datum ist nicht verfügbar.`
};

// node_modules/@react-stately/datepicker/dist/el-GR.mjs
var $8c882ccf4300d1da$exports = {};
$8c882ccf4300d1da$exports = {
  "rangeOverflow": (args) => `Η τιμή πρέπει να είναι ${args.maxValue} ή παλαιότερη.`,
  "rangeReversed": `Η ημερομηνία έναρξης πρέπει να είναι πριν από την ημερομηνία λήξης.`,
  "rangeUnderflow": (args) => `Η τιμή πρέπει να είναι ${args.minValue} ή μεταγενέστερη.`,
  "unavailableDate": `Η επιλεγμένη ημερομηνία δεν είναι διαθέσιμη.`
};

// node_modules/@react-stately/datepicker/dist/en-US.mjs
var $22195056771860be$exports = {};
$22195056771860be$exports = {
  "rangeUnderflow": (args) => `Value must be ${args.minValue} or later.`,
  "rangeOverflow": (args) => `Value must be ${args.maxValue} or earlier.`,
  "rangeReversed": `Start date must be before end date.`,
  "unavailableDate": `Selected date unavailable.`
};

// node_modules/@react-stately/datepicker/dist/es-ES.mjs
var $cedfa43b4e2a5906$exports = {};
$cedfa43b4e2a5906$exports = {
  "rangeOverflow": (args) => `El valor debe ser ${args.maxValue} o anterior.`,
  "rangeReversed": `La fecha de inicio debe ser anterior a la fecha de finalización.`,
  "rangeUnderflow": (args) => `El valor debe ser ${args.minValue} o posterior.`,
  "unavailableDate": `Fecha seleccionada no disponible.`
};

// node_modules/@react-stately/datepicker/dist/et-EE.mjs
var $eeeaa8daee3601c7$exports = {};
$eeeaa8daee3601c7$exports = {
  "rangeOverflow": (args) => `Väärtus peab olema ${args.maxValue} või varasem.`,
  "rangeReversed": `Alguskuupäev peab olema enne lõppkuupäeva.`,
  "rangeUnderflow": (args) => `Väärtus peab olema ${args.minValue} või hilisem.`,
  "unavailableDate": `Valitud kuupäev pole saadaval.`
};

// node_modules/@react-stately/datepicker/dist/fi-FI.mjs
var $35e0614a49b3bb40$exports = {};
$35e0614a49b3bb40$exports = {
  "rangeOverflow": (args) => `Arvon on oltava ${args.maxValue} tai sitä aikaisempi.`,
  "rangeReversed": `Aloituspäivän on oltava ennen lopetuspäivää.`,
  "rangeUnderflow": (args) => `Arvon on oltava ${args.minValue} tai sitä myöhäisempi.`,
  "unavailableDate": `Valittu päivämäärä ei ole käytettävissä.`
};

// node_modules/@react-stately/datepicker/dist/fr-FR.mjs
var $929bc63f7705a78f$exports = {};
$929bc63f7705a78f$exports = {
  "rangeOverflow": (args) => `La valeur doit être ${args.maxValue} ou antérieure.`,
  "rangeReversed": `La date de début doit être antérieure à la date de fin.`,
  "rangeUnderflow": (args) => `La valeur doit être ${args.minValue} ou ultérieure.`,
  "unavailableDate": `La date sélectionnée n’est pas disponible.`
};

// node_modules/@react-stately/datepicker/dist/he-IL.mjs
var $9a28d073b034d183$exports = {};
$9a28d073b034d183$exports = {
  "rangeOverflow": (args) => `הערך חייב להיות ${args.maxValue} או מוקדם יותר.`,
  "rangeReversed": `תאריך ההתחלה חייב להיות לפני תאריך הסיום.`,
  "rangeUnderflow": (args) => `הערך חייב להיות ${args.minValue} או מאוחר יותר.`,
  "unavailableDate": `התאריך הנבחר אינו זמין.`
};

// node_modules/@react-stately/datepicker/dist/hr-HR.mjs
var $7743e79780ebcca3$exports = {};
$7743e79780ebcca3$exports = {
  "rangeOverflow": (args) => `Vrijednost mora biti ${args.maxValue} ili ranije.`,
  "rangeReversed": `Datum početka mora biti prije datuma završetka.`,
  "rangeUnderflow": (args) => `Vrijednost mora biti ${args.minValue} ili kasnije.`,
  "unavailableDate": `Odabrani datum nije dostupan.`
};

// node_modules/@react-stately/datepicker/dist/hu-HU.mjs
var $3351817a04898858$exports = {};
$3351817a04898858$exports = {
  "rangeOverflow": (args) => `Az értéknek ${args.maxValue} vagy korábbinak kell lennie.`,
  "rangeReversed": `A kezdő dátumnak a befejező dátumnál korábbinak kell lennie.`,
  "rangeUnderflow": (args) => `Az értéknek ${args.minValue} vagy későbbinek kell lennie.`,
  "unavailableDate": `A kiválasztott dátum nem érhető el.`
};

// node_modules/@react-stately/datepicker/dist/it-IT.mjs
var $4120bdb1d03484db$exports = {};
$4120bdb1d03484db$exports = {
  "rangeOverflow": (args) => `Il valore deve essere ${args.maxValue} o precedente.`,
  "rangeReversed": `La data di inizio deve essere antecedente alla data di fine.`,
  "rangeUnderflow": (args) => `Il valore deve essere ${args.minValue} o successivo.`,
  "unavailableDate": `Data selezionata non disponibile.`
};

// node_modules/@react-stately/datepicker/dist/ja-JP.mjs
var $65e5e1569f34ea4f$exports = {};
$65e5e1569f34ea4f$exports = {
  "rangeOverflow": (args) => `値は ${args.maxValue} 以下にする必要があります。`,
  "rangeReversed": `開始日は終了日より前にする必要があります。`,
  "rangeUnderflow": (args) => `値は ${args.minValue} 以上にする必要があります。`,
  "unavailableDate": `選択した日付は使用できません。`
};

// node_modules/@react-stately/datepicker/dist/ko-KR.mjs
var $d34552a7550967e7$exports = {};
$d34552a7550967e7$exports = {
  "rangeOverflow": (args) => `값은 ${args.maxValue} 이전이어야 합니다.`,
  "rangeReversed": `시작일은 종료일 이전이어야 합니다.`,
  "rangeUnderflow": (args) => `값은 ${args.minValue} 이상이어야 합니다.`,
  "unavailableDate": `선택한 날짜를 사용할 수 없습니다.`
};

// node_modules/@react-stately/datepicker/dist/lt-LT.mjs
var $8f855bffe63f6eca$exports = {};
$8f855bffe63f6eca$exports = {
  "rangeOverflow": (args) => `Reikšmė turi būti ${args.maxValue} arba ankstesnė.`,
  "rangeReversed": `Pradžios data turi būti ankstesnė nei pabaigos data.`,
  "rangeUnderflow": (args) => `Reikšmė turi būti ${args.minValue} arba naujesnė.`,
  "unavailableDate": `Pasirinkta data nepasiekiama.`
};

// node_modules/@react-stately/datepicker/dist/lv-LV.mjs
var $ce40f46d09034645$exports = {};
$ce40f46d09034645$exports = {
  "rangeOverflow": (args) => `Vērtībai ir jābūt ${args.maxValue} vai agrākai.`,
  "rangeReversed": `Sākuma datumam ir jābūt pirms beigu datuma.`,
  "rangeUnderflow": (args) => `Vērtībai ir jābūt ${args.minValue} vai vēlākai.`,
  "unavailableDate": `Atlasītais datums nav pieejams.`
};

// node_modules/@react-stately/datepicker/dist/nb-NO.mjs
var $dd1a9a73340c793e$exports = {};
$dd1a9a73340c793e$exports = {
  "rangeOverflow": (args) => `Verdien må være ${args.maxValue} eller tidligere.`,
  "rangeReversed": `Startdatoen må være før sluttdatoen.`,
  "rangeUnderflow": (args) => `Verdien må være ${args.minValue} eller senere.`,
  "unavailableDate": `Valgt dato utilgjengelig.`
};

// node_modules/@react-stately/datepicker/dist/nl-NL.mjs
var $4ee1fb3f0cbe6f59$exports = {};
$4ee1fb3f0cbe6f59$exports = {
  "rangeOverflow": (args) => `Waarde moet ${args.maxValue} of eerder zijn.`,
  "rangeReversed": `De startdatum moet voor de einddatum liggen.`,
  "rangeUnderflow": (args) => `Waarde moet ${args.minValue} of later zijn.`,
  "unavailableDate": `Geselecteerde datum niet beschikbaar.`
};

// node_modules/@react-stately/datepicker/dist/pl-PL.mjs
var $c85829aebb0bc94b$exports = {};
$c85829aebb0bc94b$exports = {
  "rangeOverflow": (args) => `Wartość musi mieć wartość ${args.maxValue} lub wcześniejszą.`,
  "rangeReversed": `Data rozpoczęcia musi być wcześniejsza niż data zakończenia.`,
  "rangeUnderflow": (args) => `Wartość musi mieć wartość ${args.minValue} lub późniejszą.`,
  "unavailableDate": `Wybrana data jest niedostępna.`
};

// node_modules/@react-stately/datepicker/dist/pt-BR.mjs
var $27f5cd2291ca8a02$exports = {};
$27f5cd2291ca8a02$exports = {
  "rangeOverflow": (args) => `O valor deve ser ${args.maxValue} ou anterior.`,
  "rangeReversed": `A data inicial deve ser anterior à data final.`,
  "rangeUnderflow": (args) => `O valor deve ser ${args.minValue} ou posterior.`,
  "unavailableDate": `Data selecionada indisponível.`
};

// node_modules/@react-stately/datepicker/dist/pt-PT.mjs
var $e046fdccd69bea8e$exports = {};
$e046fdccd69bea8e$exports = {
  "rangeOverflow": (args) => `O valor tem de ser ${args.maxValue} ou anterior.`,
  "rangeReversed": `A data de início deve ser anterior à data de fim.`,
  "rangeUnderflow": (args) => `O valor tem de ser ${args.minValue} ou posterior.`,
  "unavailableDate": `Data selecionada indisponível.`
};

// node_modules/@react-stately/datepicker/dist/ro-RO.mjs
var $fa5f88e804986547$exports = {};
$fa5f88e804986547$exports = {
  "rangeOverflow": (args) => `Valoarea trebuie să fie ${args.maxValue} sau anterioară.`,
  "rangeReversed": `Data de început trebuie să fie anterioară datei de sfârșit.`,
  "rangeUnderflow": (args) => `Valoarea trebuie să fie ${args.minValue} sau ulterioară.`,
  "unavailableDate": `Data selectată nu este disponibilă.`
};

// node_modules/@react-stately/datepicker/dist/ru-RU.mjs
var $28e4714602d1b568$exports = {};
$28e4714602d1b568$exports = {
  "rangeOverflow": (args) => `Значение должно быть не позже ${args.maxValue}.`,
  "rangeReversed": `Дата начала должна предшествовать дате окончания.`,
  "rangeUnderflow": (args) => `Значение должно быть не раньше ${args.minValue}.`,
  "unavailableDate": `Выбранная дата недоступна.`
};

// node_modules/@react-stately/datepicker/dist/sk-SK.mjs
var $4e3bc8cf783ad569$exports = {};
$4e3bc8cf783ad569$exports = {
  "rangeOverflow": (args) => `Hodnota musí byť ${args.maxValue} alebo skoršia.`,
  "rangeReversed": `Dátum začiatku musí byť skorší ako dátum konca.`,
  "rangeUnderflow": (args) => `Hodnota musí byť ${args.minValue} alebo neskoršia.`,
  "unavailableDate": `Vybratý dátum je nedostupný.`
};

// node_modules/@react-stately/datepicker/dist/sl-SI.mjs
var $bee07513333bdc15$exports = {};
$bee07513333bdc15$exports = {
  "rangeOverflow": (args) => `Vrednost mora biti ${args.maxValue} ali starejša.`,
  "rangeReversed": `Začetni datum mora biti pred končnim datumom.`,
  "rangeUnderflow": (args) => `Vrednost mora biti ${args.minValue} ali novejša.`,
  "unavailableDate": `Izbrani datum ni na voljo.`
};

// node_modules/@react-stately/datepicker/dist/sr-SP.mjs
var $7ed9c6fad16a15ec$exports = {};
$7ed9c6fad16a15ec$exports = {
  "rangeOverflow": (args) => `Vrednost mora da bude ${args.maxValue} ili starija.`,
  "rangeReversed": `Datum početka mora biti pre datuma završetka.`,
  "rangeUnderflow": (args) => `Vrednost mora da bude ${args.minValue} ili novija.`,
  "unavailableDate": `Izabrani datum nije dostupan.`
};

// node_modules/@react-stately/datepicker/dist/sv-SE.mjs
var $8bef6d5a236de86c$exports = {};
$8bef6d5a236de86c$exports = {
  "rangeOverflow": (args) => `Värdet måste vara ${args.maxValue} eller tidigare.`,
  "rangeReversed": `Startdatumet måste vara före slutdatumet.`,
  "rangeUnderflow": (args) => `Värdet måste vara ${args.minValue} eller senare.`,
  "unavailableDate": `Det valda datumet är inte tillgängligt.`
};

// node_modules/@react-stately/datepicker/dist/tr-TR.mjs
var $098b9a2d2340cfc5$exports = {};
$098b9a2d2340cfc5$exports = {
  "rangeOverflow": (args) => `Değer, ${args.maxValue} veya öncesi olmalıdır.`,
  "rangeReversed": `Başlangıç tarihi bitiş tarihinden önce olmalıdır.`,
  "rangeUnderflow": (args) => `Değer, ${args.minValue} veya sonrası olmalıdır.`,
  "unavailableDate": `Seçilen tarih kullanılamıyor.`
};

// node_modules/@react-stately/datepicker/dist/uk-UA.mjs
var $54a862ea7fad7419$exports = {};
$54a862ea7fad7419$exports = {
  "rangeOverflow": (args) => `Значення має бути не пізніше ${args.maxValue}.`,
  "rangeReversed": `Дата початку має передувати даті завершення.`,
  "rangeUnderflow": (args) => `Значення має бути не раніше ${args.minValue}.`,
  "unavailableDate": `Вибрана дата недоступна.`
};

// node_modules/@react-stately/datepicker/dist/zh-CN.mjs
var $e6cc491d590dfda5$exports = {};
$e6cc491d590dfda5$exports = {
  "rangeOverflow": (args) => `值必须是 ${args.maxValue} 或更早日期。`,
  "rangeReversed": `开始日期必须早于结束日期。`,
  "rangeUnderflow": (args) => `值必须是 ${args.minValue} 或更晚日期。`,
  "unavailableDate": `所选日期不可用。`
};

// node_modules/@react-stately/datepicker/dist/zh-TW.mjs
var $9aebf53181a474bd$exports = {};
$9aebf53181a474bd$exports = {
  "rangeOverflow": (args) => `值必須是 ${args.maxValue} 或更早。`,
  "rangeReversed": `開始日期必須在結束日期之前。`,
  "rangeUnderflow": (args) => `值必須是 ${args.minValue} 或更晚。`,
  "unavailableDate": `所選日期無法使用。`
};

// node_modules/@react-stately/datepicker/dist/intlStrings.mjs
var $452ac34de8c2444e$exports = {};
$452ac34de8c2444e$exports = {
  "ar-AE": $b3427c06585c22a0$exports,
  "bg-BG": $d282528f459122b9$exports,
  "cs-CZ": $2d5eecd634a9ca45$exports,
  "da-DK": $c8e2288226c24a67$exports,
  "de-DE": $6f5745e389c346d7$exports,
  "el-GR": $8c882ccf4300d1da$exports,
  "en-US": $22195056771860be$exports,
  "es-ES": $cedfa43b4e2a5906$exports,
  "et-EE": $eeeaa8daee3601c7$exports,
  "fi-FI": $35e0614a49b3bb40$exports,
  "fr-FR": $929bc63f7705a78f$exports,
  "he-IL": $9a28d073b034d183$exports,
  "hr-HR": $7743e79780ebcca3$exports,
  "hu-HU": $3351817a04898858$exports,
  "it-IT": $4120bdb1d03484db$exports,
  "ja-JP": $65e5e1569f34ea4f$exports,
  "ko-KR": $d34552a7550967e7$exports,
  "lt-LT": $8f855bffe63f6eca$exports,
  "lv-LV": $ce40f46d09034645$exports,
  "nb-NO": $dd1a9a73340c793e$exports,
  "nl-NL": $4ee1fb3f0cbe6f59$exports,
  "pl-PL": $c85829aebb0bc94b$exports,
  "pt-BR": $27f5cd2291ca8a02$exports,
  "pt-PT": $e046fdccd69bea8e$exports,
  "ro-RO": $fa5f88e804986547$exports,
  "ru-RU": $28e4714602d1b568$exports,
  "sk-SK": $4e3bc8cf783ad569$exports,
  "sl-SI": $bee07513333bdc15$exports,
  "sr-SP": $7ed9c6fad16a15ec$exports,
  "sv-SE": $8bef6d5a236de86c$exports,
  "tr-TR": $098b9a2d2340cfc5$exports,
  "uk-UA": $54a862ea7fad7419$exports,
  "zh-CN": $e6cc491d590dfda5$exports,
  "zh-TW": $9aebf53181a474bd$exports
};

// node_modules/@react-stately/datepicker/dist/utils.mjs
var import_react151 = __toESM(require_react(), 1);
function $parcel$interopDefault33(a) {
  return a && a.__esModule ? a.default : a;
}
var $35a22f14a1f04b11$var$dictionary = new (0, $5b160d28a433310d$export$c17fa47878dc55b6)((0, $parcel$interopDefault33($452ac34de8c2444e$exports)));
function $35a22f14a1f04b11$var$getLocale() {
  return typeof navigator !== "undefined" && (navigator.language || navigator.userLanguage) || "en-US";
}
function $35a22f14a1f04b11$export$f18627323ab57ac0(value, minValue, maxValue, isDateUnavailable, options) {
  let rangeOverflow = value != null && maxValue != null && value.compare(maxValue) > 0;
  let rangeUnderflow = value != null && minValue != null && value.compare(minValue) < 0;
  let isUnavailable = value != null && (isDateUnavailable === null || isDateUnavailable === void 0 ? void 0 : isDateUnavailable(value)) || false;
  let isInvalid = rangeOverflow || rangeUnderflow || isUnavailable;
  let errors = [];
  if (isInvalid) {
    let locale = $35a22f14a1f04b11$var$getLocale();
    let strings = (0, $5b160d28a433310d$export$c17fa47878dc55b6).getGlobalDictionaryForPackage("@react-stately/datepicker") || $35a22f14a1f04b11$var$dictionary;
    let formatter = new (0, $6db58dc88e78b024$export$2f817fcdc4b89ae0)(locale, strings);
    let dateFormatter = new (0, $fb18d541ea1ad717$export$ad991b66133851cf)(locale, $35a22f14a1f04b11$export$7e319ea407e63bc0({}, options));
    let timeZone = dateFormatter.resolvedOptions().timeZone;
    if (rangeUnderflow && minValue != null) errors.push(formatter.format("rangeUnderflow", {
      minValue: dateFormatter.format(minValue.toDate(timeZone))
    }));
    if (rangeOverflow && maxValue != null) errors.push(formatter.format("rangeOverflow", {
      maxValue: dateFormatter.format(maxValue.toDate(timeZone))
    }));
    if (isUnavailable) errors.push(formatter.format("unavailableDate"));
  }
  return {
    isInvalid,
    validationErrors: errors,
    validationDetails: {
      badInput: isUnavailable,
      customError: false,
      patternMismatch: false,
      rangeOverflow,
      rangeUnderflow,
      stepMismatch: false,
      tooLong: false,
      tooShort: false,
      typeMismatch: false,
      valueMissing: false,
      valid: !isInvalid
    }
  };
}
function $35a22f14a1f04b11$export$80ff8fc0ae339c13(value, minValue, maxValue, isDateUnavailable, options) {
  var _value_start;
  let startValidation = $35a22f14a1f04b11$export$f18627323ab57ac0((_value_start = value === null || value === void 0 ? void 0 : value.start) !== null && _value_start !== void 0 ? _value_start : null, minValue, maxValue, isDateUnavailable, options);
  var _value_end;
  let endValidation = $35a22f14a1f04b11$export$f18627323ab57ac0((_value_end = value === null || value === void 0 ? void 0 : value.end) !== null && _value_end !== void 0 ? _value_end : null, minValue, maxValue, isDateUnavailable, options);
  let result = (0, $e5be200c675c3b3a$export$75ee7c75d68f5b0e)(startValidation, endValidation);
  if ((value === null || value === void 0 ? void 0 : value.end) != null && value.start != null && value.end.compare(value.start) < 0) {
    let strings = (0, $5b160d28a433310d$export$c17fa47878dc55b6).getGlobalDictionaryForPackage("@react-stately/datepicker") || $35a22f14a1f04b11$var$dictionary;
    result = (0, $e5be200c675c3b3a$export$75ee7c75d68f5b0e)(result, {
      isInvalid: true,
      validationErrors: [
        strings.getStringForLocale("rangeReversed", $35a22f14a1f04b11$var$getLocale())
      ],
      validationDetails: {
        ...(0, $e5be200c675c3b3a$export$aca958c65c314e6c),
        rangeUnderflow: true,
        rangeOverflow: true,
        valid: false
      }
    });
  }
  return result;
}
var $35a22f14a1f04b11$var$DEFAULT_FIELD_OPTIONS = {
  year: "numeric",
  month: "numeric",
  day: "numeric",
  hour: "numeric",
  minute: "2-digit",
  second: "2-digit"
};
var $35a22f14a1f04b11$var$TWO_DIGIT_FIELD_OPTIONS = {
  year: "numeric",
  month: "2-digit",
  day: "2-digit",
  hour: "2-digit",
  minute: "2-digit",
  second: "2-digit"
};
function $35a22f14a1f04b11$export$7e319ea407e63bc0(fieldOptions, options) {
  let defaultFieldOptions = options.shouldForceLeadingZeros ? $35a22f14a1f04b11$var$TWO_DIGIT_FIELD_OPTIONS : $35a22f14a1f04b11$var$DEFAULT_FIELD_OPTIONS;
  fieldOptions = {
    ...defaultFieldOptions,
    ...fieldOptions
  };
  let granularity = options.granularity || "minute";
  let keys = Object.keys(fieldOptions);
  var _options_maxGranularity;
  let startIdx = keys.indexOf((_options_maxGranularity = options.maxGranularity) !== null && _options_maxGranularity !== void 0 ? _options_maxGranularity : "year");
  if (startIdx < 0) startIdx = 0;
  let endIdx = keys.indexOf(granularity);
  if (endIdx < 0) endIdx = 2;
  if (startIdx > endIdx) throw new Error("maxGranularity must be greater than granularity");
  let opts = keys.slice(startIdx, endIdx + 1).reduce((opts2, key) => {
    opts2[key] = fieldOptions[key];
    return opts2;
  }, {});
  if (options.hourCycle != null) opts.hour12 = options.hourCycle === 12;
  opts.timeZone = options.timeZone || "UTC";
  let hasTime = granularity === "hour" || granularity === "minute" || granularity === "second";
  if (hasTime && options.timeZone && !options.hideTimeZone) opts.timeZoneName = "short";
  if (options.showEra && startIdx === 0) opts.era = "short";
  return opts;
}
function $35a22f14a1f04b11$export$c5221a78ef73c5e9(placeholderValue) {
  if (placeholderValue && "hour" in placeholderValue) return placeholderValue;
  return new (0, $35ea8db9cb2ccb90$export$680ea196effce5f)();
}
function $35a22f14a1f04b11$export$61a490a80c552550(value, calendar) {
  if (value === null) return null;
  if (!value) return void 0;
  return (0, $11d87f3f76e88657$export$b4a036af3fc0b032)(value, calendar);
}
function $35a22f14a1f04b11$export$66aa2b09de4b1ea5(placeholderValue, granularity, calendar, timeZone) {
  if (placeholderValue) return $35a22f14a1f04b11$export$61a490a80c552550(placeholderValue, calendar);
  let date = (0, $11d87f3f76e88657$export$b4a036af3fc0b032)((0, $14e0f24ef4ac5c92$export$461939dd4422153)(timeZone !== null && timeZone !== void 0 ? timeZone : (0, $14e0f24ef4ac5c92$export$aa8b41735afcabd2)()).set({
    hour: 0,
    minute: 0,
    second: 0,
    millisecond: 0
  }), calendar);
  if (granularity === "year" || granularity === "month" || granularity === "day") return (0, $11d87f3f76e88657$export$93522d1a439f3617)(date);
  if (!timeZone) return (0, $11d87f3f76e88657$export$b21e0b124e224484)(date);
  return date;
}
function $35a22f14a1f04b11$export$2440da353cedad43(v, granularity) {
  let defaultTimeZone = v && "timeZone" in v ? v.timeZone : void 0;
  let defaultGranularity = v && "minute" in v ? "minute" : "day";
  if (v && granularity && !(granularity in v)) throw new Error("Invalid granularity " + granularity + " for value " + v.toString());
  let [lastValue, setLastValue] = (0, import_react151.useState)([
    defaultGranularity,
    defaultTimeZone
  ]);
  if (v && (lastValue[0] !== defaultGranularity || lastValue[1] !== defaultTimeZone)) setLastValue([
    defaultGranularity,
    defaultTimeZone
  ]);
  if (!granularity) granularity = v ? defaultGranularity : lastValue[0];
  let timeZone = v ? defaultTimeZone : lastValue[1];
  return [
    granularity,
    timeZone
  ];
}

// node_modules/@react-stately/datepicker/dist/useDatePickerState.mjs
var import_react152 = __toESM(require_react(), 1);
function $ab5bf3f618090389$export$87194bb378cc3ac2(props) {
  let overlayState = (0, $fc909762b330b746$export$61c6a8c84e605fb6)(props);
  let [value, setValue] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(props.value, props.defaultValue || null, props.onChange);
  let v = value || props.placeholderValue || null;
  let [granularity, defaultTimeZone] = (0, $35a22f14a1f04b11$export$2440da353cedad43)(v, props.granularity);
  let dateValue = value != null ? value.toDate(defaultTimeZone !== null && defaultTimeZone !== void 0 ? defaultTimeZone : "UTC") : null;
  let hasTime = granularity === "hour" || granularity === "minute" || granularity === "second";
  var _props_shouldCloseOnSelect;
  let shouldCloseOnSelect = (_props_shouldCloseOnSelect = props.shouldCloseOnSelect) !== null && _props_shouldCloseOnSelect !== void 0 ? _props_shouldCloseOnSelect : true;
  let [selectedDate, setSelectedDate] = (0, import_react152.useState)(null);
  let [selectedTime, setSelectedTime] = (0, import_react152.useState)(null);
  if (value) {
    selectedDate = value;
    if ("hour" in value) selectedTime = value;
  }
  if (v && !(granularity in v)) throw new Error("Invalid granularity " + granularity + " for value " + v.toString());
  let showEra = (value === null || value === void 0 ? void 0 : value.calendar.identifier) === "gregory" && value.era === "BC";
  let formatOpts = (0, import_react152.useMemo)(() => ({
    granularity,
    timeZone: defaultTimeZone,
    hideTimeZone: props.hideTimeZone,
    hourCycle: props.hourCycle,
    shouldForceLeadingZeros: props.shouldForceLeadingZeros,
    showEra
  }), [
    granularity,
    props.hourCycle,
    props.shouldForceLeadingZeros,
    defaultTimeZone,
    props.hideTimeZone,
    showEra
  ]);
  let { minValue, maxValue, isDateUnavailable } = props;
  let builtinValidation = (0, import_react152.useMemo)(() => (0, $35a22f14a1f04b11$export$f18627323ab57ac0)(value, minValue, maxValue, isDateUnavailable, formatOpts), [
    value,
    minValue,
    maxValue,
    isDateUnavailable,
    formatOpts
  ]);
  let validation = (0, $e5be200c675c3b3a$export$fc1a364ae1f3ff10)({
    ...props,
    value,
    builtinValidation
  });
  let isValueInvalid = validation.displayValidation.isInvalid;
  let validationState = props.validationState || (isValueInvalid ? "invalid" : null);
  let commitValue = (date, time) => {
    setValue("timeZone" in time ? time.set((0, $11d87f3f76e88657$export$93522d1a439f3617)(date)) : (0, $11d87f3f76e88657$export$b21e0b124e224484)(date, time));
    setSelectedDate(null);
    setSelectedTime(null);
    validation.commitValidation();
  };
  let selectDate = (newValue) => {
    let shouldClose = typeof shouldCloseOnSelect === "function" ? shouldCloseOnSelect() : shouldCloseOnSelect;
    if (hasTime) {
      if (selectedTime || shouldClose) commitValue(newValue, selectedTime || (0, $35a22f14a1f04b11$export$c5221a78ef73c5e9)(props.defaultValue || props.placeholderValue));
      else setSelectedDate(newValue);
    } else {
      setValue(newValue);
      validation.commitValidation();
    }
    if (shouldClose) overlayState.setOpen(false);
  };
  let selectTime = (newValue) => {
    if (selectedDate && newValue) commitValue(selectedDate, newValue);
    else setSelectedTime(newValue);
  };
  return {
    ...validation,
    value,
    setValue,
    dateValue: selectedDate,
    timeValue: selectedTime,
    setDateValue: selectDate,
    setTimeValue: selectTime,
    granularity,
    hasTime,
    ...overlayState,
    setOpen(isOpen) {
      if (!isOpen && !value && selectedDate && hasTime) commitValue(selectedDate, selectedTime || (0, $35a22f14a1f04b11$export$c5221a78ef73c5e9)(props.defaultValue || props.placeholderValue));
      overlayState.setOpen(isOpen);
    },
    validationState,
    isInvalid: isValueInvalid,
    formatValue(locale, fieldOptions) {
      if (!dateValue) return "";
      let formatOptions = (0, $35a22f14a1f04b11$export$7e319ea407e63bc0)(fieldOptions, formatOpts);
      let formatter = new (0, $fb18d541ea1ad717$export$ad991b66133851cf)(locale, formatOptions);
      return formatter.format(dateValue);
    },
    getDateFormatter(locale, formatOptions) {
      let newOptions = {
        ...formatOpts,
        ...formatOptions
      };
      let newFormatOptions = (0, $35a22f14a1f04b11$export$7e319ea407e63bc0)({}, newOptions);
      return new (0, $fb18d541ea1ad717$export$ad991b66133851cf)(locale, newFormatOptions);
    }
  };
}

// node_modules/@react-stately/datepicker/dist/placeholders.mjs
var $3e3ed55ab2966714$var$placeholders = new (0, $5b160d28a433310d$export$c17fa47878dc55b6)({
  ach: {
    year: "mwaka",
    month: "dwe",
    day: "nino"
  },
  af: {
    year: "jjjj",
    month: "mm",
    day: "dd"
  },
  am: {
    year: "ዓዓዓዓ",
    month: "ሚሜ",
    day: "ቀቀ"
  },
  an: {
    year: "aaaa",
    month: "mm",
    day: "dd"
  },
  ar: {
    year: "سنة",
    month: "شهر",
    day: "يوم"
  },
  ast: {
    year: "aaaa",
    month: "mm",
    day: "dd"
  },
  az: {
    year: "iiii",
    month: "aa",
    day: "gg"
  },
  be: {
    year: "гггг",
    month: "мм",
    day: "дд"
  },
  bg: {
    year: "гггг",
    month: "мм",
    day: "дд"
  },
  bn: {
    year: "yyyy",
    month: "মিমি",
    day: "dd"
  },
  br: {
    year: "bbbb",
    month: "mm",
    day: "dd"
  },
  bs: {
    year: "gggg",
    month: "mm",
    day: "dd"
  },
  ca: {
    year: "aaaa",
    month: "mm",
    day: "dd"
  },
  cak: {
    year: "jjjj",
    month: "ii",
    day: "q'q'"
  },
  ckb: {
    year: "ساڵ",
    month: "مانگ",
    day: "ڕۆژ"
  },
  cs: {
    year: "rrrr",
    month: "mm",
    day: "dd"
  },
  cy: {
    year: "bbbb",
    month: "mm",
    day: "dd"
  },
  da: {
    year: "åååå",
    month: "mm",
    day: "dd"
  },
  de: {
    year: "jjjj",
    month: "mm",
    day: "tt"
  },
  dsb: {
    year: "llll",
    month: "mm",
    day: "źź"
  },
  el: {
    year: "εεεε",
    month: "μμ",
    day: "ηη"
  },
  en: {
    year: "yyyy",
    month: "mm",
    day: "dd"
  },
  eo: {
    year: "jjjj",
    month: "mm",
    day: "tt"
  },
  es: {
    year: "aaaa",
    month: "mm",
    day: "dd"
  },
  et: {
    year: "aaaa",
    month: "kk",
    day: "pp"
  },
  eu: {
    year: "uuuu",
    month: "hh",
    day: "ee"
  },
  fa: {
    year: "سال",
    month: "ماه",
    day: "روز"
  },
  ff: {
    year: "hhhh",
    month: "ll",
    day: "ññ"
  },
  fi: {
    year: "vvvv",
    month: "kk",
    day: "pp"
  },
  fr: {
    year: "aaaa",
    month: "mm",
    day: "jj"
  },
  fy: {
    year: "jjjj",
    month: "mm",
    day: "dd"
  },
  ga: {
    year: "bbbb",
    month: "mm",
    day: "ll"
  },
  gd: {
    year: "bbbb",
    month: "mm",
    day: "ll"
  },
  gl: {
    year: "aaaa",
    month: "mm",
    day: "dd"
  },
  he: {
    year: "שנה",
    month: "חודש",
    day: "יום"
  },
  hr: {
    year: "gggg",
    month: "mm",
    day: "dd"
  },
  hsb: {
    year: "llll",
    month: "mm",
    day: "dd"
  },
  hu: {
    year: "éééé",
    month: "hh",
    day: "nn"
  },
  ia: {
    year: "aaaa",
    month: "mm",
    day: "dd"
  },
  id: {
    year: "tttt",
    month: "bb",
    day: "hh"
  },
  it: {
    year: "aaaa",
    month: "mm",
    day: "gg"
  },
  ja: {
    year: "年",
    month: "月",
    day: "日"
  },
  ka: {
    year: "წწწწ",
    month: "თთ",
    day: "რრ"
  },
  kk: {
    year: "жжжж",
    month: "аа",
    day: "кк"
  },
  kn: {
    year: "ವವವವ",
    month: "ಮಿಮೀ",
    day: "ದಿದಿ"
  },
  ko: {
    year: "연도",
    month: "월",
    day: "일"
  },
  lb: {
    year: "jjjj",
    month: "mm",
    day: "dd"
  },
  lo: {
    year: "ປປປປ",
    month: "ດດ",
    day: "ວວ"
  },
  lt: {
    year: "mmmm",
    month: "mm",
    day: "dd"
  },
  lv: {
    year: "gggg",
    month: "mm",
    day: "dd"
  },
  meh: {
    year: "aaaa",
    month: "mm",
    day: "dd"
  },
  ml: {
    year: "വർഷം",
    month: "മാസം",
    day: "തീയതി"
  },
  ms: {
    year: "tttt",
    month: "mm",
    day: "hh"
  },
  nl: {
    year: "jjjj",
    month: "mm",
    day: "dd"
  },
  nn: {
    year: "åååå",
    month: "mm",
    day: "dd"
  },
  no: {
    year: "åååå",
    month: "mm",
    day: "dd"
  },
  oc: {
    year: "aaaa",
    month: "mm",
    day: "jj"
  },
  pl: {
    year: "rrrr",
    month: "mm",
    day: "dd"
  },
  pt: {
    year: "aaaa",
    month: "mm",
    day: "dd"
  },
  rm: {
    year: "oooo",
    month: "mm",
    day: "dd"
  },
  ro: {
    year: "aaaa",
    month: "ll",
    day: "zz"
  },
  ru: {
    year: "гггг",
    month: "мм",
    day: "дд"
  },
  sc: {
    year: "aaaa",
    month: "mm",
    day: "dd"
  },
  scn: {
    year: "aaaa",
    month: "mm",
    day: "jj"
  },
  sk: {
    year: "rrrr",
    month: "mm",
    day: "dd"
  },
  sl: {
    year: "llll",
    month: "mm",
    day: "dd"
  },
  sr: {
    year: "гггг",
    month: "мм",
    day: "дд"
  },
  sv: {
    year: "åååå",
    month: "mm",
    day: "dd"
  },
  szl: {
    year: "rrrr",
    month: "mm",
    day: "dd"
  },
  tg: {
    year: "сссс",
    month: "мм",
    day: "рр"
  },
  th: {
    year: "ปปปป",
    month: "ดด",
    day: "วว"
  },
  tr: {
    year: "yyyy",
    month: "aa",
    day: "gg"
  },
  uk: {
    year: "рррр",
    month: "мм",
    day: "дд"
  },
  "zh-CN": {
    year: "年",
    month: "月",
    day: "日"
  },
  "zh-TW": {
    year: "年",
    month: "月",
    day: "日"
  }
}, "en");
function $3e3ed55ab2966714$export$d3f5c5e0a5023fa0(field, value, locale) {
  if (field === "era" || field === "dayPeriod") return value;
  if (field === "year" || field === "month" || field === "day") return $3e3ed55ab2966714$var$placeholders.getStringForLocale(field, locale);
  return "––";
}

// node_modules/@react-stately/datepicker/dist/useDateFieldState.mjs
var import_react153 = __toESM(require_react(), 1);
var $3c0fc76039f1c516$var$EDITABLE_SEGMENTS = {
  year: true,
  month: true,
  day: true,
  hour: true,
  minute: true,
  second: true,
  dayPeriod: true,
  era: true
};
var $3c0fc76039f1c516$var$PAGE_STEP = {
  year: 5,
  month: 2,
  day: 7,
  hour: 2,
  minute: 15,
  second: 15
};
var $3c0fc76039f1c516$var$TYPE_MAPPING = {
  // Node seems to convert everything to lowercase...
  dayperiod: "dayPeriod",
  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/formatToParts#named_years
  relatedYear: "year",
  yearName: "literal",
  unknown: "literal"
};
function $3c0fc76039f1c516$export$60e84778edff6d26(props) {
  let { locale, createCalendar, hideTimeZone, isDisabled = false, isReadOnly = false, isRequired = false, minValue, maxValue, isDateUnavailable } = props;
  let v = props.value || props.defaultValue || props.placeholderValue || null;
  let [granularity, defaultTimeZone] = (0, $35a22f14a1f04b11$export$2440da353cedad43)(v, props.granularity);
  let timeZone = defaultTimeZone || "UTC";
  if (v && !(granularity in v)) throw new Error("Invalid granularity " + granularity + " for value " + v.toString());
  let defaultFormatter = (0, import_react153.useMemo)(() => new (0, $fb18d541ea1ad717$export$ad991b66133851cf)(locale), [
    locale
  ]);
  let calendar = (0, import_react153.useMemo)(() => createCalendar(defaultFormatter.resolvedOptions().calendar), [
    createCalendar,
    defaultFormatter
  ]);
  var _props_defaultValue;
  let [value, setDate] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(props.value, (_props_defaultValue = props.defaultValue) !== null && _props_defaultValue !== void 0 ? _props_defaultValue : null, props.onChange);
  let calendarValue = (0, import_react153.useMemo)(() => {
    var _convertValue;
    return (_convertValue = (0, $35a22f14a1f04b11$export$61a490a80c552550)(value, calendar)) !== null && _convertValue !== void 0 ? _convertValue : null;
  }, [
    value,
    calendar
  ]);
  let [placeholderDate, setPlaceholderDate] = (0, import_react153.useState)(() => (0, $35a22f14a1f04b11$export$66aa2b09de4b1ea5)(props.placeholderValue, granularity, calendar, defaultTimeZone));
  let val = calendarValue || placeholderDate;
  let showEra = calendar.identifier === "gregory" && val.era === "BC";
  let formatOpts = (0, import_react153.useMemo)(() => {
    var _props_maxGranularity2;
    return {
      granularity,
      maxGranularity: (_props_maxGranularity2 = props.maxGranularity) !== null && _props_maxGranularity2 !== void 0 ? _props_maxGranularity2 : "year",
      timeZone: defaultTimeZone,
      hideTimeZone,
      hourCycle: props.hourCycle,
      showEra,
      shouldForceLeadingZeros: props.shouldForceLeadingZeros
    };
  }, [
    props.maxGranularity,
    granularity,
    props.hourCycle,
    props.shouldForceLeadingZeros,
    defaultTimeZone,
    hideTimeZone,
    showEra
  ]);
  let opts = (0, import_react153.useMemo)(() => (0, $35a22f14a1f04b11$export$7e319ea407e63bc0)({}, formatOpts), [
    formatOpts
  ]);
  let dateFormatter = (0, import_react153.useMemo)(() => new (0, $fb18d541ea1ad717$export$ad991b66133851cf)(locale, opts), [
    locale,
    opts
  ]);
  let resolvedOptions = (0, import_react153.useMemo)(() => dateFormatter.resolvedOptions(), [
    dateFormatter
  ]);
  let allSegments = (0, import_react153.useMemo)(() => dateFormatter.formatToParts(/* @__PURE__ */ new Date()).filter((seg) => $3c0fc76039f1c516$var$EDITABLE_SEGMENTS[seg.type]).reduce((p, seg) => (p[$3c0fc76039f1c516$var$TYPE_MAPPING[seg.type] || seg.type] = true, p), {}), [
    dateFormatter
  ]);
  let [validSegments, setValidSegments] = (0, import_react153.useState)(() => props.value || props.defaultValue ? {
    ...allSegments
  } : {});
  let clearedSegment = (0, import_react153.useRef)(null);
  let lastCalendar = (0, import_react153.useRef)(calendar);
  (0, import_react153.useEffect)(() => {
    if (!(0, $14e0f24ef4ac5c92$export$dbc69fd56b53d5e)(calendar, lastCalendar.current)) {
      lastCalendar.current = calendar;
      setPlaceholderDate((placeholder) => Object.keys(validSegments).length > 0 ? (0, $11d87f3f76e88657$export$b4a036af3fc0b032)(placeholder, calendar) : (0, $35a22f14a1f04b11$export$66aa2b09de4b1ea5)(props.placeholderValue, granularity, calendar, defaultTimeZone));
    }
  }, [
    calendar,
    granularity,
    validSegments,
    defaultTimeZone,
    props.placeholderValue
  ]);
  if (value && Object.keys(validSegments).length < Object.keys(allSegments).length) {
    validSegments = {
      ...allSegments
    };
    setValidSegments(validSegments);
  }
  if (value == null && Object.keys(validSegments).length === Object.keys(allSegments).length) {
    validSegments = {};
    setValidSegments(validSegments);
    setPlaceholderDate((0, $35a22f14a1f04b11$export$66aa2b09de4b1ea5)(props.placeholderValue, granularity, calendar, defaultTimeZone));
  }
  let displayValue = calendarValue && Object.keys(validSegments).length >= Object.keys(allSegments).length ? calendarValue : placeholderDate;
  let setValue = (newValue) => {
    if (props.isDisabled || props.isReadOnly) return;
    let validKeys = Object.keys(validSegments);
    let allKeys = Object.keys(allSegments);
    if (newValue == null) {
      setDate(null);
      setPlaceholderDate((0, $35a22f14a1f04b11$export$66aa2b09de4b1ea5)(props.placeholderValue, granularity, calendar, defaultTimeZone));
      setValidSegments({});
    } else if (validKeys.length >= allKeys.length || validKeys.length === allKeys.length - 1 && allSegments.dayPeriod && !validSegments.dayPeriod && clearedSegment.current !== "dayPeriod") {
      newValue = (0, $11d87f3f76e88657$export$b4a036af3fc0b032)(newValue, (v === null || v === void 0 ? void 0 : v.calendar) || new (0, $3b62074eb05584b2$export$80ee6245ec4f29ec)());
      setDate(newValue);
    } else setPlaceholderDate(newValue);
    clearedSegment.current = null;
  };
  let dateValue = (0, import_react153.useMemo)(() => displayValue.toDate(timeZone), [
    displayValue,
    timeZone
  ]);
  let segments = (0, import_react153.useMemo)(() => $3c0fc76039f1c516$var$processSegments(dateValue, validSegments, dateFormatter, resolvedOptions, displayValue, calendar, locale, granularity), [
    dateValue,
    validSegments,
    dateFormatter,
    resolvedOptions,
    displayValue,
    calendar,
    locale,
    granularity
  ]);
  if (allSegments.era && validSegments.year && !validSegments.era) {
    validSegments.era = true;
    setValidSegments({
      ...validSegments
    });
  } else if (!allSegments.era && validSegments.era) {
    delete validSegments.era;
    setValidSegments({
      ...validSegments
    });
  }
  let markValid = (part) => {
    validSegments[part] = true;
    if (part === "year" && allSegments.era) validSegments.era = true;
    setValidSegments({
      ...validSegments
    });
  };
  let adjustSegment = (type, amount) => {
    if (!validSegments[type]) {
      markValid(type);
      let validKeys = Object.keys(validSegments);
      let allKeys = Object.keys(allSegments);
      if (validKeys.length >= allKeys.length || validKeys.length === allKeys.length - 1 && allSegments.dayPeriod && !validSegments.dayPeriod) setValue(displayValue);
    } else setValue($3c0fc76039f1c516$var$addSegment(displayValue, type, amount, resolvedOptions));
  };
  let builtinValidation = (0, import_react153.useMemo)(() => (0, $35a22f14a1f04b11$export$f18627323ab57ac0)(value, minValue, maxValue, isDateUnavailable, formatOpts), [
    value,
    minValue,
    maxValue,
    isDateUnavailable,
    formatOpts
  ]);
  let validation = (0, $e5be200c675c3b3a$export$fc1a364ae1f3ff10)({
    ...props,
    value,
    builtinValidation
  });
  let isValueInvalid = validation.displayValidation.isInvalid;
  let validationState = props.validationState || (isValueInvalid ? "invalid" : null);
  var _props_maxGranularity;
  return {
    ...validation,
    value: calendarValue,
    dateValue,
    calendar,
    setValue,
    segments,
    dateFormatter,
    validationState,
    isInvalid: isValueInvalid,
    granularity,
    maxGranularity: (_props_maxGranularity = props.maxGranularity) !== null && _props_maxGranularity !== void 0 ? _props_maxGranularity : "year",
    isDisabled,
    isReadOnly,
    isRequired,
    increment(part) {
      adjustSegment(part, 1);
    },
    decrement(part) {
      adjustSegment(part, -1);
    },
    incrementPage(part) {
      adjustSegment(part, $3c0fc76039f1c516$var$PAGE_STEP[part] || 1);
    },
    decrementPage(part) {
      adjustSegment(part, -($3c0fc76039f1c516$var$PAGE_STEP[part] || 1));
    },
    setSegment(part, v2) {
      markValid(part);
      setValue($3c0fc76039f1c516$var$setSegment(displayValue, part, v2, resolvedOptions));
    },
    confirmPlaceholder() {
      if (props.isDisabled || props.isReadOnly) return;
      let validKeys = Object.keys(validSegments);
      let allKeys = Object.keys(allSegments);
      if (validKeys.length === allKeys.length - 1 && allSegments.dayPeriod && !validSegments.dayPeriod) {
        validSegments = {
          ...allSegments
        };
        setValidSegments(validSegments);
        setValue(displayValue.copy());
      }
    },
    clearSegment(part) {
      delete validSegments[part];
      clearedSegment.current = part;
      setValidSegments({
        ...validSegments
      });
      let placeholder = (0, $35a22f14a1f04b11$export$66aa2b09de4b1ea5)(props.placeholderValue, granularity, calendar, defaultTimeZone);
      let value2 = displayValue;
      if (part === "dayPeriod" && "hour" in displayValue && "hour" in placeholder) {
        let isPM = displayValue.hour >= 12;
        let shouldBePM = placeholder.hour >= 12;
        if (isPM && !shouldBePM) value2 = displayValue.set({
          hour: displayValue.hour - 12
        });
        else if (!isPM && shouldBePM) value2 = displayValue.set({
          hour: displayValue.hour + 12
        });
      } else if (part === "hour" && "hour" in displayValue && displayValue.hour >= 12 && validSegments.dayPeriod) value2 = displayValue.set({
        hour: placeholder["hour"] + 12
      });
      else if (part in displayValue) value2 = displayValue.set({
        [part]: placeholder[part]
      });
      setDate(null);
      setValue(value2);
    },
    formatValue(fieldOptions) {
      if (!calendarValue) return "";
      let formatOptions = (0, $35a22f14a1f04b11$export$7e319ea407e63bc0)(fieldOptions, formatOpts);
      let formatter = new (0, $fb18d541ea1ad717$export$ad991b66133851cf)(locale, formatOptions);
      return formatter.format(dateValue);
    },
    getDateFormatter(locale2, formatOptions) {
      let newOptions = {
        ...formatOpts,
        ...formatOptions
      };
      let newFormatOptions = (0, $35a22f14a1f04b11$export$7e319ea407e63bc0)({}, newOptions);
      return new (0, $fb18d541ea1ad717$export$ad991b66133851cf)(locale2, newFormatOptions);
    }
  };
}
function $3c0fc76039f1c516$var$processSegments(dateValue, validSegments, dateFormatter, resolvedOptions, displayValue, calendar, locale, granularity) {
  let timeValue = [
    "hour",
    "minute",
    "second"
  ];
  let segments = dateFormatter.formatToParts(dateValue);
  let processedSegments = [];
  for (let segment of segments) {
    let type = $3c0fc76039f1c516$var$TYPE_MAPPING[segment.type] || segment.type;
    let isEditable = $3c0fc76039f1c516$var$EDITABLE_SEGMENTS[type];
    if (type === "era" && calendar.getEras().length === 1) isEditable = false;
    let isPlaceholder = $3c0fc76039f1c516$var$EDITABLE_SEGMENTS[type] && !validSegments[type];
    let placeholder = $3c0fc76039f1c516$var$EDITABLE_SEGMENTS[type] ? (0, $3e3ed55ab2966714$export$d3f5c5e0a5023fa0)(type, segment.value, locale) : null;
    let dateSegment = {
      type,
      text: isPlaceholder ? placeholder : segment.value,
      ...$3c0fc76039f1c516$var$getSegmentLimits(displayValue, type, resolvedOptions),
      isPlaceholder,
      placeholder,
      isEditable
    };
    if (type === "hour") {
      processedSegments.push({
        type: "literal",
        text: "⁦",
        ...$3c0fc76039f1c516$var$getSegmentLimits(displayValue, "literal", resolvedOptions),
        isPlaceholder: false,
        placeholder: "",
        isEditable: false
      });
      processedSegments.push(dateSegment);
      if (type === granularity) processedSegments.push({
        type: "literal",
        text: "⁩",
        ...$3c0fc76039f1c516$var$getSegmentLimits(displayValue, "literal", resolvedOptions),
        isPlaceholder: false,
        placeholder: "",
        isEditable: false
      });
    } else if (timeValue.includes(type) && type === granularity) {
      processedSegments.push(dateSegment);
      processedSegments.push({
        type: "literal",
        text: "⁩",
        ...$3c0fc76039f1c516$var$getSegmentLimits(displayValue, "literal", resolvedOptions),
        isPlaceholder: false,
        placeholder: "",
        isEditable: false
      });
    } else
      processedSegments.push(dateSegment);
  }
  return processedSegments;
}
function $3c0fc76039f1c516$var$getSegmentLimits(date, type, options) {
  switch (type) {
    case "era": {
      let eras = date.calendar.getEras();
      return {
        value: eras.indexOf(date.era),
        minValue: 0,
        maxValue: eras.length - 1
      };
    }
    case "year":
      return {
        value: date.year,
        minValue: 1,
        maxValue: date.calendar.getYearsInEra(date)
      };
    case "month":
      return {
        value: date.month,
        minValue: (0, $14e0f24ef4ac5c92$export$5412ac11713b72ad)(date),
        maxValue: date.calendar.getMonthsInYear(date)
      };
    case "day":
      return {
        value: date.day,
        minValue: (0, $14e0f24ef4ac5c92$export$b2f4953d301981d5)(date),
        maxValue: date.calendar.getDaysInMonth(date)
      };
  }
  if ("hour" in date) switch (type) {
    case "dayPeriod":
      return {
        value: date.hour >= 12 ? 12 : 0,
        minValue: 0,
        maxValue: 12
      };
    case "hour":
      if (options.hour12) {
        let isPM = date.hour >= 12;
        return {
          value: date.hour,
          minValue: isPM ? 12 : 0,
          maxValue: isPM ? 23 : 11
        };
      }
      return {
        value: date.hour,
        minValue: 0,
        maxValue: 23
      };
    case "minute":
      return {
        value: date.minute,
        minValue: 0,
        maxValue: 59
      };
    case "second":
      return {
        value: date.second,
        minValue: 0,
        maxValue: 59
      };
  }
  return {};
}
function $3c0fc76039f1c516$var$addSegment(value, part, amount, options) {
  switch (part) {
    case "era":
    case "year":
    case "month":
    case "day":
      return value.cycle(part, amount, {
        round: part === "year"
      });
  }
  if ("hour" in value) switch (part) {
    case "dayPeriod": {
      let hours = value.hour;
      let isPM = hours >= 12;
      return value.set({
        hour: isPM ? hours - 12 : hours + 12
      });
    }
    case "hour":
    case "minute":
    case "second":
      return value.cycle(part, amount, {
        round: part !== "hour",
        hourCycle: options.hour12 ? 12 : 24
      });
  }
  throw new Error("Unknown segment: " + part);
}
function $3c0fc76039f1c516$var$setSegment(value, part, segmentValue, options) {
  switch (part) {
    case "day":
    case "month":
    case "year":
    case "era":
      return value.set({
        [part]: segmentValue
      });
  }
  if ("hour" in value && typeof segmentValue === "number") switch (part) {
    case "dayPeriod": {
      let hours = value.hour;
      let wasPM = hours >= 12;
      let isPM = segmentValue >= 12;
      if (isPM === wasPM) return value;
      return value.set({
        hour: wasPM ? hours - 12 : hours + 12
      });
    }
    case "hour":
      if (options.hour12) {
        let hours = value.hour;
        let wasPM = hours >= 12;
        if (!wasPM && segmentValue === 12) segmentValue = 0;
        if (wasPM && segmentValue < 12) segmentValue += 12;
      }
    // fallthrough
    case "minute":
    case "second":
      return value.set({
        [part]: segmentValue
      });
  }
  throw new Error("Unknown segment: " + part);
}

// node_modules/@react-stately/datepicker/dist/useDateRangePickerState.mjs
var import_react154 = __toESM(require_react(), 1);
function $93c38a5e28be6249$export$e50a61c1de9f574(props) {
  var _value_start, _value_end;
  let overlayState = (0, $fc909762b330b746$export$61c6a8c84e605fb6)(props);
  let [controlledValue, setControlledValue] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(props.value, props.defaultValue || null, props.onChange);
  let [placeholderValue, setPlaceholderValue] = (0, import_react154.useState)(() => controlledValue || {
    start: null,
    end: null
  });
  if (controlledValue == null && placeholderValue.start && placeholderValue.end) {
    placeholderValue = {
      start: null,
      end: null
    };
    setPlaceholderValue(placeholderValue);
  }
  let value = controlledValue || placeholderValue;
  let setValue = (value2) => {
    setPlaceholderValue(value2 || {
      start: null,
      end: null
    });
    if ($93c38a5e28be6249$var$isCompleteRange(value2)) setControlledValue(value2);
    else setControlledValue(null);
  };
  let v = (value === null || value === void 0 ? void 0 : value.start) || (value === null || value === void 0 ? void 0 : value.end) || props.placeholderValue || null;
  let [granularity, defaultTimeZone] = (0, $35a22f14a1f04b11$export$2440da353cedad43)(v, props.granularity);
  let hasTime = granularity === "hour" || granularity === "minute" || granularity === "second";
  var _props_shouldCloseOnSelect;
  let shouldCloseOnSelect = (_props_shouldCloseOnSelect = props.shouldCloseOnSelect) !== null && _props_shouldCloseOnSelect !== void 0 ? _props_shouldCloseOnSelect : true;
  let [dateRange, setSelectedDateRange] = (0, import_react154.useState)(null);
  let [timeRange, setSelectedTimeRange] = (0, import_react154.useState)(null);
  if (value && $93c38a5e28be6249$var$isCompleteRange(value)) {
    dateRange = value;
    if ("hour" in value.start) timeRange = value;
  }
  let commitValue = (dateRange2, timeRange2) => {
    setValue({
      start: "timeZone" in timeRange2.start ? timeRange2.start.set((0, $11d87f3f76e88657$export$93522d1a439f3617)(dateRange2.start)) : (0, $11d87f3f76e88657$export$b21e0b124e224484)(dateRange2.start, timeRange2.start),
      end: "timeZone" in timeRange2.end ? timeRange2.end.set((0, $11d87f3f76e88657$export$93522d1a439f3617)(dateRange2.end)) : (0, $11d87f3f76e88657$export$b21e0b124e224484)(dateRange2.end, timeRange2.end)
    });
    setSelectedDateRange(null);
    setSelectedTimeRange(null);
    validation.commitValidation();
  };
  let setDateRange = (range) => {
    let shouldClose = typeof shouldCloseOnSelect === "function" ? shouldCloseOnSelect() : shouldCloseOnSelect;
    if (hasTime) {
      if ($93c38a5e28be6249$var$isCompleteRange(range) && (shouldClose || (timeRange === null || timeRange === void 0 ? void 0 : timeRange.start) && (timeRange === null || timeRange === void 0 ? void 0 : timeRange.end))) commitValue(range, {
        start: (timeRange === null || timeRange === void 0 ? void 0 : timeRange.start) || (0, $35a22f14a1f04b11$export$c5221a78ef73c5e9)(props.placeholderValue),
        end: (timeRange === null || timeRange === void 0 ? void 0 : timeRange.end) || (0, $35a22f14a1f04b11$export$c5221a78ef73c5e9)(props.placeholderValue)
      });
      else setSelectedDateRange(range);
    } else if ($93c38a5e28be6249$var$isCompleteRange(range)) {
      setValue(range);
      validation.commitValidation();
    } else setSelectedDateRange(range);
    if (shouldClose) overlayState.setOpen(false);
  };
  let setTimeRange = (range) => {
    if ($93c38a5e28be6249$var$isCompleteRange(dateRange) && $93c38a5e28be6249$var$isCompleteRange(range)) commitValue(dateRange, range);
    else setSelectedTimeRange(range);
  };
  let showEra = (value === null || value === void 0 ? void 0 : (_value_start = value.start) === null || _value_start === void 0 ? void 0 : _value_start.calendar.identifier) === "gregory" && value.start.era === "BC" || (value === null || value === void 0 ? void 0 : (_value_end = value.end) === null || _value_end === void 0 ? void 0 : _value_end.calendar.identifier) === "gregory" && value.end.era === "BC";
  let formatOpts = (0, import_react154.useMemo)(() => ({
    granularity,
    timeZone: defaultTimeZone,
    hideTimeZone: props.hideTimeZone,
    hourCycle: props.hourCycle,
    shouldForceLeadingZeros: props.shouldForceLeadingZeros,
    showEra
  }), [
    granularity,
    props.hourCycle,
    props.shouldForceLeadingZeros,
    defaultTimeZone,
    props.hideTimeZone,
    showEra
  ]);
  let { minValue, maxValue, isDateUnavailable } = props;
  let builtinValidation = (0, import_react154.useMemo)(() => (0, $35a22f14a1f04b11$export$80ff8fc0ae339c13)(value, minValue, maxValue, isDateUnavailable, formatOpts), [
    value,
    minValue,
    maxValue,
    isDateUnavailable,
    formatOpts
  ]);
  let validation = (0, $e5be200c675c3b3a$export$fc1a364ae1f3ff10)({
    ...props,
    value: controlledValue,
    name: (0, import_react154.useMemo)(() => [
      props.startName,
      props.endName
    ].filter((n) => n != null), [
      props.startName,
      props.endName
    ]),
    builtinValidation
  });
  let isValueInvalid = validation.displayValidation.isInvalid;
  let validationState = props.validationState || (isValueInvalid ? "invalid" : null);
  return {
    ...validation,
    value,
    setValue,
    dateRange,
    timeRange,
    granularity,
    hasTime,
    setDate(part, date) {
      var _dateRange_end, _dateRange_start;
      if (part === "start") setDateRange({
        start: date,
        end: (_dateRange_end = dateRange === null || dateRange === void 0 ? void 0 : dateRange.end) !== null && _dateRange_end !== void 0 ? _dateRange_end : null
      });
      else setDateRange({
        start: (_dateRange_start = dateRange === null || dateRange === void 0 ? void 0 : dateRange.start) !== null && _dateRange_start !== void 0 ? _dateRange_start : null,
        end: date
      });
    },
    setTime(part, time) {
      var _timeRange_end, _timeRange_start;
      if (part === "start") setTimeRange({
        start: time,
        end: (_timeRange_end = timeRange === null || timeRange === void 0 ? void 0 : timeRange.end) !== null && _timeRange_end !== void 0 ? _timeRange_end : null
      });
      else setTimeRange({
        start: (_timeRange_start = timeRange === null || timeRange === void 0 ? void 0 : timeRange.start) !== null && _timeRange_start !== void 0 ? _timeRange_start : null,
        end: time
      });
    },
    setDateTime(part, dateTime) {
      var _value_end2, _value_start2;
      if (part === "start") setValue({
        start: dateTime,
        end: (_value_end2 = value === null || value === void 0 ? void 0 : value.end) !== null && _value_end2 !== void 0 ? _value_end2 : null
      });
      else setValue({
        start: (_value_start2 = value === null || value === void 0 ? void 0 : value.start) !== null && _value_start2 !== void 0 ? _value_start2 : null,
        end: dateTime
      });
    },
    setDateRange,
    setTimeRange,
    ...overlayState,
    setOpen(isOpen) {
      if (!isOpen && !((value === null || value === void 0 ? void 0 : value.start) && (value === null || value === void 0 ? void 0 : value.end)) && $93c38a5e28be6249$var$isCompleteRange(dateRange) && hasTime) commitValue(dateRange, {
        start: (timeRange === null || timeRange === void 0 ? void 0 : timeRange.start) || (0, $35a22f14a1f04b11$export$c5221a78ef73c5e9)(props.placeholderValue),
        end: (timeRange === null || timeRange === void 0 ? void 0 : timeRange.end) || (0, $35a22f14a1f04b11$export$c5221a78ef73c5e9)(props.placeholderValue)
      });
      overlayState.setOpen(isOpen);
    },
    validationState,
    isInvalid: isValueInvalid,
    formatValue(locale, fieldOptions) {
      if (!value || !value.start || !value.end) return null;
      let startTimeZone = "timeZone" in value.start ? value.start.timeZone : void 0;
      let startGranularity = props.granularity || (value.start && "minute" in value.start ? "minute" : "day");
      let endTimeZone = "timeZone" in value.end ? value.end.timeZone : void 0;
      let endGranularity = props.granularity || (value.end && "minute" in value.end ? "minute" : "day");
      let startOptions = (0, $35a22f14a1f04b11$export$7e319ea407e63bc0)(fieldOptions, {
        granularity: startGranularity,
        timeZone: startTimeZone,
        hideTimeZone: props.hideTimeZone,
        hourCycle: props.hourCycle,
        showEra: value.start.calendar.identifier === "gregory" && value.start.era === "BC" || value.end.calendar.identifier === "gregory" && value.end.era === "BC"
      });
      let startDate = value.start.toDate(startTimeZone || "UTC");
      let endDate = value.end.toDate(endTimeZone || "UTC");
      let startFormatter = new (0, $fb18d541ea1ad717$export$ad991b66133851cf)(locale, startOptions);
      let endFormatter;
      if (startTimeZone === endTimeZone && startGranularity === endGranularity && value.start.compare(value.end) !== 0) {
        try {
          let parts = startFormatter.formatRangeToParts(startDate, endDate);
          let separatorIndex = -1;
          for (let i = 0; i < parts.length; i++) {
            let part = parts[i];
            if (part.source === "shared" && part.type === "literal") separatorIndex = i;
            else if (part.source === "endRange") break;
          }
          let start = "";
          let end = "";
          for (let i = 0; i < parts.length; i++) {
            if (i < separatorIndex) start += parts[i].value;
            else if (i > separatorIndex) end += parts[i].value;
          }
          return {
            start,
            end
          };
        } catch {
        }
        endFormatter = startFormatter;
      } else {
        let endOptions = (0, $35a22f14a1f04b11$export$7e319ea407e63bc0)(fieldOptions, {
          granularity: endGranularity,
          timeZone: endTimeZone,
          hideTimeZone: props.hideTimeZone,
          hourCycle: props.hourCycle
        });
        endFormatter = new (0, $fb18d541ea1ad717$export$ad991b66133851cf)(locale, endOptions);
      }
      return {
        start: startFormatter.format(startDate),
        end: endFormatter.format(endDate)
      };
    },
    getDateFormatter(locale, formatOptions) {
      let newOptions = {
        ...formatOpts,
        ...formatOptions
      };
      let newFormatOptions = (0, $35a22f14a1f04b11$export$7e319ea407e63bc0)({}, newOptions);
      return new (0, $fb18d541ea1ad717$export$ad991b66133851cf)(locale, newFormatOptions);
    }
  };
}
function $93c38a5e28be6249$var$isCompleteRange(value) {
  return (value === null || value === void 0 ? void 0 : value.start) != null && value.end != null;
}

// node_modules/@react-stately/datepicker/dist/useTimeFieldState.mjs
var import_react155 = __toESM(require_react(), 1);
function $eff5d8ee529ac4bb$export$fd53cef0cc796101(props) {
  let { placeholderValue = new (0, $35ea8db9cb2ccb90$export$680ea196effce5f)(), minValue, maxValue, granularity, validate } = props;
  var _props_defaultValue;
  let [value, setValue] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(props.value, (_props_defaultValue = props.defaultValue) !== null && _props_defaultValue !== void 0 ? _props_defaultValue : null, props.onChange);
  let v = value || placeholderValue;
  let day = v && "day" in v ? v : void 0;
  let defaultValueTimeZone = props.defaultValue && "timeZone" in props.defaultValue ? props.defaultValue.timeZone : void 0;
  let placeholderDate = (0, import_react155.useMemo)(() => {
    let valueTimeZone = v && "timeZone" in v ? v.timeZone : void 0;
    return (valueTimeZone || defaultValueTimeZone) && placeholderValue ? (0, $11d87f3f76e88657$export$84c95a83c799e074)($eff5d8ee529ac4bb$var$convertValue(placeholderValue), valueTimeZone || defaultValueTimeZone) : $eff5d8ee529ac4bb$var$convertValue(placeholderValue);
  }, [
    placeholderValue,
    v,
    defaultValueTimeZone
  ]);
  let minDate = (0, import_react155.useMemo)(() => $eff5d8ee529ac4bb$var$convertValue(minValue, day), [
    minValue,
    day
  ]);
  let maxDate = (0, import_react155.useMemo)(() => $eff5d8ee529ac4bb$var$convertValue(maxValue, day), [
    maxValue,
    day
  ]);
  let timeValue = (0, import_react155.useMemo)(() => value && "day" in value ? (0, $11d87f3f76e88657$export$d33f79e3ffc3dc83)(value) : value, [
    value
  ]);
  let dateTime = (0, import_react155.useMemo)(() => value == null ? null : $eff5d8ee529ac4bb$var$convertValue(value), [
    value
  ]);
  let onChange = (newValue) => {
    setValue(day || defaultValueTimeZone ? newValue : newValue && (0, $11d87f3f76e88657$export$d33f79e3ffc3dc83)(newValue));
  };
  let state = (0, $3c0fc76039f1c516$export$60e84778edff6d26)({
    ...props,
    value: dateTime,
    defaultValue: void 0,
    minValue: minDate,
    maxValue: maxDate,
    onChange,
    granularity: granularity || "minute",
    maxGranularity: "hour",
    placeholderValue: placeholderDate !== null && placeholderDate !== void 0 ? placeholderDate : void 0,
    // Calendar should not matter for time fields.
    createCalendar: () => new (0, $3b62074eb05584b2$export$80ee6245ec4f29ec)(),
    validate: (0, import_react155.useCallback)(() => validate === null || validate === void 0 ? void 0 : validate(value), [
      validate,
      value
    ])
  });
  return {
    ...state,
    timeValue
  };
}
function $eff5d8ee529ac4bb$var$convertValue(value, date = (0, $14e0f24ef4ac5c92$export$d0bdf45af03a6ea3)((0, $14e0f24ef4ac5c92$export$aa8b41735afcabd2)())) {
  if (!value) return null;
  if ("day" in value) return value;
  return (0, $11d87f3f76e88657$export$b21e0b124e224484)(date, value);
}

// node_modules/@react-stately/disclosure/dist/useDisclosureState.mjs
var import_react156 = __toESM(require_react(), 1);
function $bf996d45f4a36925$export$3fcbf6e4407997e0(props) {
  let [isExpanded, setExpanded] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(props.isExpanded, props.defaultExpanded || false, props.onExpandedChange);
  const expand = (0, import_react156.useCallback)(() => {
    setExpanded(true);
  }, [
    setExpanded
  ]);
  const collapse = (0, import_react156.useCallback)(() => {
    setExpanded(false);
  }, [
    setExpanded
  ]);
  const toggle = (0, import_react156.useCallback)(() => {
    setExpanded(!isExpanded);
  }, [
    setExpanded,
    isExpanded
  ]);
  return {
    isExpanded,
    setExpanded,
    expand,
    collapse,
    toggle
  };
}

// node_modules/@react-stately/disclosure/dist/useDisclosureGroupState.mjs
var import_react157 = __toESM(require_react(), 1);
function $9385b3affbdec831$export$f36461af0ef4707d(props) {
  let { allowsMultipleExpanded = false, isDisabled = false } = props;
  let [expandedKeys, setExpandedKeys] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)((0, import_react157.useMemo)(() => props.expandedKeys ? new Set(props.expandedKeys) : void 0, [
    props.expandedKeys
  ]), (0, import_react157.useMemo)(() => props.defaultExpandedKeys ? new Set(props.defaultExpandedKeys) : /* @__PURE__ */ new Set(), [
    props.defaultExpandedKeys
  ]), props.onExpandedChange);
  (0, import_react157.useEffect)(() => {
    if (!allowsMultipleExpanded && expandedKeys.size > 1) {
      let firstKey = expandedKeys.values().next().value;
      if (firstKey != null) setExpandedKeys(/* @__PURE__ */ new Set([
        firstKey
      ]));
    }
  });
  return {
    allowsMultipleExpanded,
    isDisabled,
    expandedKeys,
    setExpandedKeys,
    toggleKey(key) {
      let keys;
      if (allowsMultipleExpanded) {
        keys = new Set(expandedKeys);
        if (keys.has(key)) keys.delete(key);
        else keys.add(key);
      } else keys = new Set(expandedKeys.has(key) ? [] : [
        key
      ]);
      setExpandedKeys(keys);
    }
  };
}

// node_modules/@react-stately/dnd/dist/useDraggableCollectionState.mjs
var import_react158 = __toESM(require_react(), 1);
function $b45bbbaf0c3785df$export$29efd034f1d79f81(props) {
  let { getItems, isDisabled, collection, selectionManager, onDragStart, onDragMove, onDragEnd, preview, getAllowedDropOperations } = props;
  let [, setDragging] = (0, import_react158.useState)(false);
  let draggingKeys = (0, import_react158.useRef)(/* @__PURE__ */ new Set());
  let draggedKey = (0, import_react158.useRef)(null);
  let getKeys = (key) => {
    let keys = /* @__PURE__ */ new Set();
    if (selectionManager.isSelected(key)) for (let currentKey of selectionManager.selectedKeys) {
      let node = collection.getItem(currentKey);
      if (node) {
        let isChild = false;
        let parentKey = node.parentKey;
        while (parentKey != null) {
          if (selectionManager.selectedKeys.has(parentKey)) {
            isChild = true;
            break;
          }
          let parentNode = collection.getItem(parentKey);
          parentKey = parentNode ? parentNode.parentKey : null;
        }
        if (!isChild) keys.add(currentKey);
      }
    }
    else keys.add(key);
    return keys;
  };
  return {
    collection,
    selectionManager,
    get draggedKey() {
      return draggedKey.current;
    },
    get draggingKeys() {
      return draggingKeys.current;
    },
    isDragging(key) {
      return draggingKeys.current.has(key);
    },
    getKeysForDrag: getKeys,
    getItems(key) {
      return getItems(getKeys(key));
    },
    isDisabled,
    preview,
    getAllowedDropOperations,
    startDrag(key, event) {
      let keys = getKeys(key);
      draggingKeys.current = keys;
      draggedKey.current = key;
      selectionManager.setFocused(false);
      setDragging(true);
      if (typeof onDragStart === "function") onDragStart({
        ...event,
        keys
      });
    },
    moveDrag(event) {
      if (typeof onDragMove === "function") onDragMove({
        ...event,
        keys: draggingKeys.current
      });
    },
    endDrag(event) {
      let { isInternal } = event;
      if (typeof onDragEnd === "function") onDragEnd({
        ...event,
        keys: draggingKeys.current,
        isInternal
      });
      draggingKeys.current = /* @__PURE__ */ new Set();
      draggedKey.current = null;
      setDragging(false);
    }
  };
}

// node_modules/@react-stately/dnd/dist/useDroppableCollectionState.mjs
var import_react159 = __toESM(require_react(), 1);
function $e672e8bc247525d1$export$926850f6ecef79d0(props) {
  let { acceptedDragTypes = "all", isDisabled, onInsert, onRootDrop, onItemDrop, onReorder, onMove, shouldAcceptItemDrop, collection, selectionManager, onDropEnter, getDropOperation, onDrop } = props;
  let [target, setTarget] = (0, import_react159.useState)(null);
  let targetRef = (0, import_react159.useRef)(null);
  let getOppositeTarget = (target2) => {
    if (target2.dropPosition === "before") {
      let node = collection.getItem(target2.key);
      return node && node.prevKey != null ? {
        type: "item",
        key: node.prevKey,
        dropPosition: "after"
      } : null;
    } else if (target2.dropPosition === "after") {
      let node = collection.getItem(target2.key);
      return node && node.nextKey != null ? {
        type: "item",
        key: node.nextKey,
        dropPosition: "before"
      } : null;
    }
    return null;
  };
  let defaultGetDropOperation = (0, import_react159.useCallback)((e) => {
    let { target: target2, types, allowedOperations, isInternal, draggingKeys } = e;
    if (isDisabled || !target2) return "cancel";
    if (acceptedDragTypes === "all" || acceptedDragTypes.some((type) => types.has(type))) {
      let isValidInsert = onInsert && target2.type === "item" && !isInternal && (target2.dropPosition === "before" || target2.dropPosition === "after");
      let isValidReorder = onReorder && target2.type === "item" && isInternal && (target2.dropPosition === "before" || target2.dropPosition === "after") && $e672e8bc247525d1$var$isDraggingWithinParent(collection, target2, draggingKeys);
      let isItemDropAllowed = target2.type !== "item" || target2.dropPosition !== "on" || !shouldAcceptItemDrop || shouldAcceptItemDrop(target2, types);
      let isValidMove = onMove && target2.type === "item" && isInternal && isItemDropAllowed;
      let isValidRootDrop = onRootDrop && target2.type === "root" && !isInternal;
      let isValidOnItemDrop = onItemDrop && target2.type === "item" && target2.dropPosition === "on" && !(isInternal && target2.key != null && draggingKeys.has(target2.key)) && isItemDropAllowed;
      if (onDrop || isValidInsert || isValidReorder || isValidMove || isValidRootDrop || isValidOnItemDrop) {
        if (getDropOperation) return getDropOperation(target2, types, allowedOperations);
        else return allowedOperations[0];
      }
    }
    return "cancel";
  }, [
    isDisabled,
    collection,
    acceptedDragTypes,
    getDropOperation,
    onInsert,
    onRootDrop,
    onItemDrop,
    shouldAcceptItemDrop,
    onReorder,
    onMove,
    onDrop
  ]);
  return {
    collection,
    selectionManager,
    isDisabled,
    target,
    setTarget(newTarget) {
      if (this.isDropTarget(newTarget)) return;
      let target2 = targetRef.current;
      if (target2 && typeof props.onDropExit === "function") props.onDropExit({
        type: "dropexit",
        x: 0,
        y: 0,
        target: target2
      });
      if (newTarget && typeof onDropEnter === "function") onDropEnter({
        type: "dropenter",
        x: 0,
        y: 0,
        target: newTarget
      });
      targetRef.current = newTarget !== null && newTarget !== void 0 ? newTarget : null;
      setTarget(newTarget !== null && newTarget !== void 0 ? newTarget : null);
    },
    isDropTarget(dropTarget) {
      let target2 = targetRef.current;
      if (!target2 || !dropTarget) return false;
      if ($e672e8bc247525d1$var$isEqualDropTarget(dropTarget, target2)) return true;
      if ((dropTarget === null || dropTarget === void 0 ? void 0 : dropTarget.type) === "item" && (target2 === null || target2 === void 0 ? void 0 : target2.type) === "item" && dropTarget.key !== target2.key && dropTarget.dropPosition !== target2.dropPosition && dropTarget.dropPosition !== "on" && target2.dropPosition !== "on") return $e672e8bc247525d1$var$isEqualDropTarget(getOppositeTarget(dropTarget), target2) || $e672e8bc247525d1$var$isEqualDropTarget(dropTarget, getOppositeTarget(target2));
      return false;
    },
    getDropOperation(e) {
      return defaultGetDropOperation(e);
    }
  };
}
function $e672e8bc247525d1$var$isEqualDropTarget(a, b) {
  if (!a) return !b;
  switch (a.type) {
    case "root":
      return (b === null || b === void 0 ? void 0 : b.type) === "root";
    case "item":
      return (b === null || b === void 0 ? void 0 : b.type) === "item" && (b === null || b === void 0 ? void 0 : b.key) === a.key && (b === null || b === void 0 ? void 0 : b.dropPosition) === a.dropPosition;
  }
}
function $e672e8bc247525d1$var$isDraggingWithinParent(collection, target, draggingKeys) {
  let targetNode = collection.getItem(target.key);
  for (let key of draggingKeys) {
    let node = collection.getItem(key);
    if ((node === null || node === void 0 ? void 0 : node.parentKey) !== (targetNode === null || targetNode === void 0 ? void 0 : targetNode.parentKey)) return false;
  }
  return true;
}

// node_modules/@react-stately/data/dist/useListData.mjs
var import_react160 = __toESM(require_react(), 1);

// node_modules/@react-stately/data/dist/useAsyncList.mjs
var import_react161 = __toESM(require_react(), 1);

// node_modules/@react-stately/data/dist/useTreeData.mjs
var import_react162 = __toESM(require_react(), 1);

// node_modules/@react-stately/menu/dist/useMenuTriggerState.mjs
var import_react163 = __toESM(require_react(), 1);
function $a28c903ee9ad8dc5$export$79fefeb1c2091ac3(props) {
  let overlayTriggerState = (0, $fc909762b330b746$export$61c6a8c84e605fb6)(props);
  let [focusStrategy, setFocusStrategy] = (0, import_react163.useState)(null);
  let [expandedKeysStack, setExpandedKeysStack] = (0, import_react163.useState)([]);
  let closeAll = () => {
    setExpandedKeysStack([]);
    overlayTriggerState.close();
  };
  let openSubmenu = (triggerKey, level) => {
    setExpandedKeysStack((oldStack) => {
      if (level > oldStack.length) return oldStack;
      return [
        ...oldStack.slice(0, level),
        triggerKey
      ];
    });
  };
  let closeSubmenu = (triggerKey, level) => {
    setExpandedKeysStack((oldStack) => {
      let key = oldStack[level];
      if (key === triggerKey) return oldStack.slice(0, level);
      else return oldStack;
    });
  };
  return {
    focusStrategy,
    ...overlayTriggerState,
    open(focusStrategy2 = null) {
      setFocusStrategy(focusStrategy2);
      overlayTriggerState.open();
    },
    toggle(focusStrategy2 = null) {
      setFocusStrategy(focusStrategy2);
      overlayTriggerState.toggle();
    },
    close() {
      closeAll();
    },
    expandedKeysStack,
    openSubmenu,
    closeSubmenu
  };
}

// node_modules/@react-stately/menu/dist/useSubmenuTriggerState.mjs
var import_react164 = __toESM(require_react(), 1);
function $e5614764aa47eb35$export$cfc51cf86138bf98(props, state) {
  let { triggerKey } = props;
  let { expandedKeysStack, openSubmenu, closeSubmenu, close: closeAll } = state;
  let [submenuLevel] = (0, import_react164.useState)(expandedKeysStack === null || expandedKeysStack === void 0 ? void 0 : expandedKeysStack.length);
  let isOpen = (0, import_react164.useMemo)(() => expandedKeysStack[submenuLevel] === triggerKey, [
    expandedKeysStack,
    triggerKey,
    submenuLevel
  ]);
  let [focusStrategy, setFocusStrategy] = (0, import_react164.useState)(null);
  let open = (0, import_react164.useCallback)((focusStrategy2) => {
    setFocusStrategy(focusStrategy2 !== null && focusStrategy2 !== void 0 ? focusStrategy2 : null);
    openSubmenu(triggerKey, submenuLevel);
  }, [
    openSubmenu,
    submenuLevel,
    triggerKey
  ]);
  let close = (0, import_react164.useCallback)(() => {
    setFocusStrategy(null);
    closeSubmenu(triggerKey, submenuLevel);
  }, [
    closeSubmenu,
    submenuLevel,
    triggerKey
  ]);
  let toggle = (0, import_react164.useCallback)((focusStrategy2) => {
    setFocusStrategy(focusStrategy2 !== null && focusStrategy2 !== void 0 ? focusStrategy2 : null);
    if (isOpen) close();
    else open(focusStrategy2);
  }, [
    close,
    open,
    isOpen
  ]);
  return (0, import_react164.useMemo)(() => ({
    focusStrategy,
    isOpen,
    open,
    close,
    closeAll,
    submenuLevel,
    // TODO: Placeholders that aren't used but give us parity with OverlayTriggerState so we can use this in Popover. Refactor if we update Popover via
    // https://github.com/adobe/react-spectrum/pull/4976#discussion_r1336472863
    setOpen: () => {
    },
    toggle
  }), [
    isOpen,
    open,
    close,
    closeAll,
    focusStrategy,
    toggle,
    submenuLevel
  ]);
}

// node_modules/@react-stately/radio/dist/useRadioGroupState.mjs
var import_react165 = __toESM(require_react(), 1);
var $a54cdc5c1942b639$var$instance = Math.round(Math.random() * 1e10);
var $a54cdc5c1942b639$var$i = 0;
function $a54cdc5c1942b639$export$bca9d026f8e704eb(props) {
  let name = (0, import_react165.useMemo)(() => props.name || `radio-group-${$a54cdc5c1942b639$var$instance}-${++$a54cdc5c1942b639$var$i}`, [
    props.name
  ]);
  var _props_defaultValue;
  let [selectedValue, setSelected] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(props.value, (_props_defaultValue = props.defaultValue) !== null && _props_defaultValue !== void 0 ? _props_defaultValue : null, props.onChange);
  let [lastFocusedValue, setLastFocusedValue] = (0, import_react165.useState)(null);
  let validation = (0, $e5be200c675c3b3a$export$fc1a364ae1f3ff10)({
    ...props,
    value: selectedValue
  });
  let setSelectedValue = (value) => {
    if (!props.isReadOnly && !props.isDisabled) {
      setSelected(value);
      validation.commitValidation();
    }
  };
  let isInvalid = validation.displayValidation.isInvalid;
  return {
    ...validation,
    name,
    selectedValue,
    setSelectedValue,
    lastFocusedValue,
    setLastFocusedValue,
    isDisabled: props.isDisabled || false,
    isReadOnly: props.isReadOnly || false,
    isRequired: props.isRequired || false,
    validationState: props.validationState || (isInvalid ? "invalid" : null),
    isInvalid
  };
}

// node_modules/@react-stately/searchfield/dist/useSearchFieldState.mjs
function $0b2218c4e3fe7d7e$export$3f8be18b0f41eaf2(props) {
  let [value, setValue] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)($0b2218c4e3fe7d7e$var$toString(props.value), $0b2218c4e3fe7d7e$var$toString(props.defaultValue) || "", props.onChange);
  return {
    value,
    setValue
  };
}
function $0b2218c4e3fe7d7e$var$toString(val) {
  if (val == null) return;
  return val.toString();
}

// node_modules/@react-stately/select/dist/useSelectState.mjs
var import_react166 = __toESM(require_react(), 1);
function $2bc3a590c5373a4e$export$5159ec8b34d4ec12(props) {
  let triggerState = (0, $fc909762b330b746$export$61c6a8c84e605fb6)(props);
  let [focusStrategy, setFocusStrategy] = (0, import_react166.useState)(null);
  let listState = (0, $a0d645289fe9b86b$export$e7f05e985daf4b5f)({
    ...props,
    onSelectionChange: (key) => {
      if (props.onSelectionChange != null) props.onSelectionChange(key);
      triggerState.close();
      validationState.commitValidation();
    }
  });
  let validationState = (0, $e5be200c675c3b3a$export$fc1a364ae1f3ff10)({
    ...props,
    value: listState.selectedKey
  });
  let [isFocused, setFocused] = (0, import_react166.useState)(false);
  let isEmpty = (0, import_react166.useMemo)(() => {
    var _listState_collection_getItem;
    return listState.collection.size === 0 || listState.collection.size === 1 && ((_listState_collection_getItem = listState.collection.getItem(listState.collection.getFirstKey())) === null || _listState_collection_getItem === void 0 ? void 0 : _listState_collection_getItem.type) === "loader";
  }, [
    listState.collection
  ]);
  return {
    ...validationState,
    ...listState,
    ...triggerState,
    focusStrategy,
    open(focusStrategy2 = null) {
      if (!isEmpty) {
        setFocusStrategy(focusStrategy2);
        triggerState.open();
      }
    },
    toggle(focusStrategy2 = null) {
      if (!isEmpty) {
        setFocusStrategy(focusStrategy2);
        triggerState.toggle();
      }
    },
    isFocused,
    setFocused
  };
}

// node_modules/@react-stately/table/dist/TableUtils.mjs
function $6818b1c4fc67028d$export$1994a077b98ee0d5(width) {
  return width != null && (!isNaN(width) || String(width).match(/^(\d+)(?=%$)/) !== null);
}
function $6818b1c4fc67028d$export$9078bad4c3934604(width) {
  if (!width || typeof width === "number") return 1;
  let match = width.match(/^(.+)(?=fr$)/);
  if (!match) {
    if (true) console.warn(`width: ${width} is not a supported format, width should be a number (ex. 150), percentage (ex. '50%') or fr unit (ex. '2fr')`, "defaulting to '1fr'");
    return 1;
  }
  return parseFloat(match[0]);
}
function $6818b1c4fc67028d$export$7bbad27896f7ae9f(width, tableWidth) {
  if (typeof width === "string") {
    let match = width.match(/^(\d+)(?=%$)/);
    if (!match) throw new Error("Only percentages or numbers are supported for static column widths");
    return tableWidth * (parseFloat(match[0]) / 100);
  }
  return width;
}
function $6818b1c4fc67028d$export$59185c62a7544aa0(maxWidth, tableWidth) {
  return maxWidth != null ? $6818b1c4fc67028d$export$7bbad27896f7ae9f(maxWidth, tableWidth) : Number.MAX_SAFE_INTEGER;
}
function $6818b1c4fc67028d$export$f556054ce4358701(minWidth, tableWidth) {
  return minWidth != null ? $6818b1c4fc67028d$export$7bbad27896f7ae9f(minWidth, tableWidth) : 0;
}
function $6818b1c4fc67028d$export$55d50dc687385491(availableWidth, columns, changedColumns, getDefaultWidth, getDefaultMinWidth) {
  let hasNonFrozenItems = false;
  let flexItems = columns.map((column, index) => {
    var _changedColumns_get, _column_width, _ref, _ref1;
    let width = changedColumns.get(column.key) != null ? (_changedColumns_get = changedColumns.get(column.key)) !== null && _changedColumns_get !== void 0 ? _changedColumns_get : "1fr" : (_ref1 = (_ref = (_column_width = column.width) !== null && _column_width !== void 0 ? _column_width : column.defaultWidth) !== null && _ref !== void 0 ? _ref : getDefaultWidth === null || getDefaultWidth === void 0 ? void 0 : getDefaultWidth(index)) !== null && _ref1 !== void 0 ? _ref1 : "1fr";
    let frozen = false;
    let baseSize = 0;
    let flex = 0;
    let targetMainSize = 0;
    if ($6818b1c4fc67028d$export$1994a077b98ee0d5(width)) {
      baseSize = $6818b1c4fc67028d$export$7bbad27896f7ae9f(width, availableWidth);
      frozen = true;
    } else {
      flex = $6818b1c4fc67028d$export$9078bad4c3934604(width);
      if (flex <= 0) frozen = true;
    }
    var _column_minWidth, _ref2;
    let min = $6818b1c4fc67028d$export$f556054ce4358701((_ref2 = (_column_minWidth = column.minWidth) !== null && _column_minWidth !== void 0 ? _column_minWidth : getDefaultMinWidth === null || getDefaultMinWidth === void 0 ? void 0 : getDefaultMinWidth(index)) !== null && _ref2 !== void 0 ? _ref2 : 0, availableWidth);
    let max = $6818b1c4fc67028d$export$59185c62a7544aa0(column.maxWidth, availableWidth);
    let hypotheticalMainSize = Math.max(min, Math.min(baseSize, max));
    if (frozen) targetMainSize = hypotheticalMainSize;
    else if (baseSize > hypotheticalMainSize) {
      frozen = true;
      targetMainSize = hypotheticalMainSize;
    }
    if (!frozen) hasNonFrozenItems = true;
    return {
      frozen,
      baseSize,
      hypotheticalMainSize,
      min,
      max,
      flex,
      targetMainSize,
      violation: 0
    };
  });
  while (hasNonFrozenItems) {
    let usedWidth = 0;
    let flexFactors = 0;
    flexItems.forEach((item) => {
      if (item.frozen) usedWidth += item.targetMainSize;
      else {
        usedWidth += item.baseSize;
        flexFactors += item.flex;
      }
    });
    let remainingFreeSpace = availableWidth - usedWidth;
    if (remainingFreeSpace > 0) flexItems.forEach((item) => {
      if (!item.frozen) {
        let ratio = item.flex / flexFactors;
        item.targetMainSize = item.baseSize + ratio * remainingFreeSpace;
      }
    });
    let totalViolation = 0;
    flexItems.forEach((item) => {
      item.violation = 0;
      if (!item.frozen) {
        let { min, max, targetMainSize } = item;
        item.targetMainSize = Math.max(min, Math.min(targetMainSize, max));
        item.violation = item.targetMainSize - targetMainSize;
        totalViolation += item.violation;
      }
    });
    hasNonFrozenItems = false;
    flexItems.forEach((item) => {
      if (totalViolation === 0 || Math.sign(totalViolation) === Math.sign(item.violation)) item.frozen = true;
      else if (!item.frozen) hasNonFrozenItems = true;
    });
  }
  return $6818b1c4fc67028d$var$cascadeRounding(flexItems);
}
function $6818b1c4fc67028d$var$cascadeRounding(flexItems) {
  let fpTotal = 0;
  let intTotal = 0;
  let roundedArray = [];
  flexItems.forEach(function(item) {
    let float = item.targetMainSize;
    let integer = Math.round(float + fpTotal) - intTotal;
    fpTotal += float;
    intTotal += integer;
    roundedArray.push(integer);
  });
  return roundedArray;
}

// node_modules/@react-stately/table/dist/TableColumnLayout.mjs
var $a9e7ae544a4e41dd$export$7ff77a162970b30e = class {
  /** Takes an array of columns and splits it into 2 maps of columns with controlled and columns with uncontrolled widths. */
  splitColumnsIntoControlledAndUncontrolled(columns) {
    return columns.reduce((acc, col) => {
      if (col.props.width != null) acc[0].set(col.key, col);
      else acc[1].set(col.key, col);
      return acc;
    }, [
      /* @__PURE__ */ new Map(),
      /* @__PURE__ */ new Map()
    ]);
  }
  /** Takes uncontrolled and controlled widths and joins them into a single Map. */
  recombineColumns(columns, uncontrolledWidths, uncontrolledColumns, controlledColumns) {
    return new Map(columns.map((col) => {
      if (uncontrolledColumns.has(col.key)) return [
        col.key,
        uncontrolledWidths.get(col.key)
      ];
      else return [
        col.key,
        controlledColumns.get(col.key).props.width
      ];
    }));
  }
  /** Used to make an initial Map of the uncontrolled widths based on default widths. */
  getInitialUncontrolledWidths(uncontrolledColumns) {
    return new Map(Array.from(uncontrolledColumns).map(([key, col]) => {
      var _this_getDefaultWidth, _this;
      var _col_props_defaultWidth, _ref;
      return [
        key,
        (_ref = (_col_props_defaultWidth = col.props.defaultWidth) !== null && _col_props_defaultWidth !== void 0 ? _col_props_defaultWidth : (_this_getDefaultWidth = (_this = this).getDefaultWidth) === null || _this_getDefaultWidth === void 0 ? void 0 : _this_getDefaultWidth.call(_this, col)) !== null && _ref !== void 0 ? _ref : "1fr"
      ];
    }));
  }
  getColumnWidth(key) {
    var _this_columnWidths_get;
    return (_this_columnWidths_get = this.columnWidths.get(key)) !== null && _this_columnWidths_get !== void 0 ? _this_columnWidths_get : 0;
  }
  getColumnMinWidth(key) {
    var _this_columnMinWidths_get;
    return (_this_columnMinWidths_get = this.columnMinWidths.get(key)) !== null && _this_columnMinWidths_get !== void 0 ? _this_columnMinWidths_get : 0;
  }
  getColumnMaxWidth(key) {
    var _this_columnMaxWidths_get;
    return (_this_columnMaxWidths_get = this.columnMaxWidths.get(key)) !== null && _this_columnMaxWidths_get !== void 0 ? _this_columnMaxWidths_get : 0;
  }
  resizeColumnWidth(collection, uncontrolledWidths, col, width) {
    let prevColumnWidths = this.columnWidths;
    let freeze = true;
    let newWidths = /* @__PURE__ */ new Map();
    width = Math.max(this.getColumnMinWidth(col), Math.min(this.getColumnMaxWidth(col), Math.floor(width)));
    collection.columns.forEach((column) => {
      var _prevColumnWidths_get, _column_props_width;
      if (column.key === col) {
        newWidths.set(column.key, width);
        freeze = false;
      } else if (freeze)
        newWidths.set(column.key, (_prevColumnWidths_get = prevColumnWidths.get(column.key)) !== null && _prevColumnWidths_get !== void 0 ? _prevColumnWidths_get : 0);
      else newWidths.set(column.key, (_column_props_width = column.props.width) !== null && _column_props_width !== void 0 ? _column_props_width : uncontrolledWidths.get(column.key));
    });
    return newWidths;
  }
  buildColumnWidths(tableWidth, collection, widths) {
    this.columnWidths = /* @__PURE__ */ new Map();
    this.columnMinWidths = /* @__PURE__ */ new Map();
    this.columnMaxWidths = /* @__PURE__ */ new Map();
    let columnWidths = (0, $6818b1c4fc67028d$export$55d50dc687385491)(tableWidth, collection.columns.map((col) => ({
      ...col.props,
      key: col.key
    })), widths, (i) => this.getDefaultWidth(collection.columns[i]), (i) => this.getDefaultMinWidth(collection.columns[i]));
    columnWidths.forEach((width, index) => {
      let key = collection.columns[index].key;
      let column = collection.columns[index];
      this.columnWidths.set(key, width);
      var _column_props_minWidth;
      this.columnMinWidths.set(key, (0, $6818b1c4fc67028d$export$f556054ce4358701)((_column_props_minWidth = column.props.minWidth) !== null && _column_props_minWidth !== void 0 ? _column_props_minWidth : this.getDefaultMinWidth(column), tableWidth));
      this.columnMaxWidths.set(key, (0, $6818b1c4fc67028d$export$59185c62a7544aa0)(column.props.maxWidth, tableWidth));
    });
    return this.columnWidths;
  }
  constructor(options) {
    this.columnWidths = /* @__PURE__ */ new Map();
    this.columnMinWidths = /* @__PURE__ */ new Map();
    this.columnMaxWidths = /* @__PURE__ */ new Map();
    var _options_getDefaultWidth;
    this.getDefaultWidth = (_options_getDefaultWidth = options === null || options === void 0 ? void 0 : options.getDefaultWidth) !== null && _options_getDefaultWidth !== void 0 ? _options_getDefaultWidth : () => "1fr";
    var _options_getDefaultMinWidth;
    this.getDefaultMinWidth = (_options_getDefaultMinWidth = options === null || options === void 0 ? void 0 : options.getDefaultMinWidth) !== null && _options_getDefaultMinWidth !== void 0 ? _options_getDefaultMinWidth : () => 75;
  }
};

// node_modules/@react-stately/table/dist/useTableColumnResizeState.mjs
var import_react167 = __toESM(require_react(), 1);
function $292bc4e09cd0eb62$export$cb895dcf85db1319(props, state) {
  let { getDefaultWidth, getDefaultMinWidth, tableWidth = 0 } = props;
  let [resizingColumn, setResizingColumn] = (0, import_react167.useState)(null);
  let columnLayout = (0, import_react167.useMemo)(() => new (0, $a9e7ae544a4e41dd$export$7ff77a162970b30e)({
    getDefaultWidth,
    getDefaultMinWidth
  }), [
    getDefaultWidth,
    getDefaultMinWidth
  ]);
  let [controlledColumns, uncontrolledColumns] = (0, import_react167.useMemo)(() => columnLayout.splitColumnsIntoControlledAndUncontrolled(state.collection.columns), [
    state.collection.columns,
    columnLayout
  ]);
  let [uncontrolledWidths, setUncontrolledWidths] = (0, import_react167.useState)(() => columnLayout.getInitialUncontrolledWidths(uncontrolledColumns));
  let [lastColumns, setLastColumns] = (0, import_react167.useState)(state.collection.columns);
  if (state.collection.columns !== lastColumns) {
    if (state.collection.columns.length !== lastColumns.length || state.collection.columns.some((c, i) => c.key !== lastColumns[i].key)) {
      let newUncontrolledWidths = columnLayout.getInitialUncontrolledWidths(uncontrolledColumns);
      setUncontrolledWidths(newUncontrolledWidths);
    }
    setLastColumns(state.collection.columns);
  }
  let colWidths = (0, import_react167.useMemo)(() => columnLayout.recombineColumns(state.collection.columns, uncontrolledWidths, uncontrolledColumns, controlledColumns), [
    state.collection.columns,
    uncontrolledWidths,
    uncontrolledColumns,
    controlledColumns,
    columnLayout
  ]);
  let startResize = (0, import_react167.useCallback)((key) => {
    setResizingColumn(key);
  }, [
    setResizingColumn
  ]);
  let updateResizedColumns = (0, import_react167.useCallback)((key, width) => {
    let newSizes = columnLayout.resizeColumnWidth(state.collection, uncontrolledWidths, key, width);
    let map = new Map(Array.from(uncontrolledColumns).map(([key2]) => [
      key2,
      newSizes.get(key2)
    ]));
    map.set(key, width);
    setUncontrolledWidths(map);
    return newSizes;
  }, [
    uncontrolledColumns,
    setUncontrolledWidths,
    columnLayout,
    state.collection,
    uncontrolledWidths
  ]);
  let endResize = (0, import_react167.useCallback)(() => {
    setResizingColumn(null);
  }, [
    setResizingColumn
  ]);
  let columnWidths = (0, import_react167.useMemo)(() => columnLayout.buildColumnWidths(tableWidth, state.collection, colWidths), [
    tableWidth,
    state.collection,
    colWidths,
    columnLayout
  ]);
  return (0, import_react167.useMemo)(() => ({
    resizingColumn,
    updateResizedColumns,
    startResize,
    endResize,
    getColumnWidth: (key) => columnLayout.getColumnWidth(key),
    getColumnMinWidth: (key) => columnLayout.getColumnMinWidth(key),
    getColumnMaxWidth: (key) => columnLayout.getColumnMaxWidth(key),
    tableState: state,
    columnWidths
  }), [
    columnLayout,
    columnWidths,
    resizingColumn,
    updateResizedColumns,
    startResize,
    endResize,
    state
  ]);
}

// node_modules/@react-stately/grid/dist/useGridState.mjs
var import_react168 = __toESM(require_react(), 1);
function $62967d126f3aa823$export$4007ac09ff9c68ed(props) {
  let { collection, focusMode } = props;
  let selectionState = props.UNSAFE_selectionState || (0, $7af3f5b51489e0b5$export$253fe78d46329472)(props);
  let disabledKeys = (0, import_react168.useMemo)(() => props.disabledKeys ? new Set(props.disabledKeys) : /* @__PURE__ */ new Set(), [
    props.disabledKeys
  ]);
  let setFocusedKey = selectionState.setFocusedKey;
  selectionState.setFocusedKey = (key, child) => {
    if (focusMode === "cell" && key != null) {
      let item = collection.getItem(key);
      if ((item === null || item === void 0 ? void 0 : item.type) === "item") {
        var _getLastItem, _getFirstItem;
        let children = (0, $c5a24bc478652b5f$export$1005530eda016c13)(item, collection);
        var _getLastItem_key, _getFirstItem_key;
        if (child === "last") key = (_getLastItem_key = (_getLastItem = (0, $c5a24bc478652b5f$export$7475b2c64539e4cf)(children)) === null || _getLastItem === void 0 ? void 0 : _getLastItem.key) !== null && _getLastItem_key !== void 0 ? _getLastItem_key : null;
        else key = (_getFirstItem_key = (_getFirstItem = (0, $c5a24bc478652b5f$export$fbdeaa6a76694f71)(children)) === null || _getFirstItem === void 0 ? void 0 : _getFirstItem.key) !== null && _getFirstItem_key !== void 0 ? _getFirstItem_key : null;
      }
    }
    setFocusedKey(key, child);
  };
  let selectionManager = (0, import_react168.useMemo)(() => new (0, $d496c0a20b6e58ec$export$6c8a5aaad13c9852)(collection, selectionState), [
    collection,
    selectionState
  ]);
  const cachedCollection = (0, import_react168.useRef)(null);
  (0, import_react168.useEffect)(() => {
    if (selectionState.focusedKey != null && cachedCollection.current && !collection.getItem(selectionState.focusedKey)) {
      const node = cachedCollection.current.getItem(selectionState.focusedKey);
      const parentNode = (node === null || node === void 0 ? void 0 : node.parentKey) != null && (node.type === "cell" || node.type === "rowheader" || node.type === "column") ? cachedCollection.current.getItem(node.parentKey) : node;
      if (!parentNode) {
        selectionState.setFocusedKey(null);
        return;
      }
      const cachedRows = cachedCollection.current.rows;
      const rows = collection.rows;
      const diff = cachedRows.length - rows.length;
      let index = Math.min(diff > 1 ? Math.max(parentNode.index - diff + 1, 0) : parentNode.index, rows.length - 1);
      let newRow = null;
      while (index >= 0) {
        if (!selectionManager.isDisabled(rows[index].key) && rows[index].type !== "headerrow") {
          newRow = rows[index];
          break;
        }
        if (index < rows.length - 1) index++;
        else {
          if (index > parentNode.index) index = parentNode.index;
          index--;
        }
      }
      if (newRow) {
        const childNodes = newRow.hasChildNodes ? [
          ...(0, $c5a24bc478652b5f$export$1005530eda016c13)(newRow, collection)
        ] : [];
        const keyToFocus = newRow.hasChildNodes && parentNode !== node && node && node.index < childNodes.length ? childNodes[node.index].key : newRow.key;
        selectionState.setFocusedKey(keyToFocus);
      } else selectionState.setFocusedKey(null);
    }
    cachedCollection.current = collection;
  }, [
    collection,
    selectionManager,
    selectionState,
    selectionState.focusedKey
  ]);
  return {
    collection,
    disabledKeys,
    isKeyboardNavigationDisabled: false,
    selectionManager
  };
}

// node_modules/@react-stately/grid/dist/GridCollection.mjs
var $16805b1b18093c5f$export$de3fdf6493c353d = class {
  *[Symbol.iterator]() {
    yield* [
      ...this.rows
    ];
  }
  get size() {
    return [
      ...this.rows
    ].length;
  }
  getKeys() {
    return this.keyMap.keys();
  }
  getKeyBefore(key) {
    let node = this.keyMap.get(key);
    var _node_prevKey;
    return node ? (_node_prevKey = node.prevKey) !== null && _node_prevKey !== void 0 ? _node_prevKey : null : null;
  }
  getKeyAfter(key) {
    let node = this.keyMap.get(key);
    var _node_nextKey;
    return node ? (_node_nextKey = node.nextKey) !== null && _node_nextKey !== void 0 ? _node_nextKey : null : null;
  }
  getFirstKey() {
    var _;
    return (_ = [
      ...this.rows
    ][0]) === null || _ === void 0 ? void 0 : _.key;
  }
  getLastKey() {
    var _rows_;
    let rows = [
      ...this.rows
    ];
    return (_rows_ = rows[rows.length - 1]) === null || _rows_ === void 0 ? void 0 : _rows_.key;
  }
  getItem(key) {
    var _this_keyMap_get;
    return (_this_keyMap_get = this.keyMap.get(key)) !== null && _this_keyMap_get !== void 0 ? _this_keyMap_get : null;
  }
  at(idx) {
    const keys = [
      ...this.getKeys()
    ];
    return this.getItem(keys[idx]);
  }
  getChildren(key) {
    let node = this.keyMap.get(key);
    return (node === null || node === void 0 ? void 0 : node.childNodes) || [];
  }
  constructor(opts) {
    this.keyMap = /* @__PURE__ */ new Map();
    this.keyMap = /* @__PURE__ */ new Map();
    this.columnCount = opts === null || opts === void 0 ? void 0 : opts.columnCount;
    this.rows = [];
    let visit = (node) => {
      let prevNode = this.keyMap.get(node.key);
      if (opts.visitNode) node = opts.visitNode(node);
      this.keyMap.set(node.key, node);
      let childKeys = /* @__PURE__ */ new Set();
      let last2 = null;
      let rowHasCellWithColSpan = false;
      if (node.type === "item") {
        var _child_props;
        for (let child of node.childNodes) if (((_child_props = child.props) === null || _child_props === void 0 ? void 0 : _child_props.colSpan) !== void 0) {
          rowHasCellWithColSpan = true;
          break;
        }
      }
      for (let child of node.childNodes) {
        if (child.type === "cell" && rowHasCellWithColSpan) {
          var _child_props1, _child_props2;
          child.colspan = (_child_props1 = child.props) === null || _child_props1 === void 0 ? void 0 : _child_props1.colSpan;
          child.colSpan = (_child_props2 = child.props) === null || _child_props2 === void 0 ? void 0 : _child_props2.colSpan;
          var _last_colIndex, _last_colSpan;
          child.colIndex = !last2 ? child.index : ((_last_colIndex = last2.colIndex) !== null && _last_colIndex !== void 0 ? _last_colIndex : last2.index) + ((_last_colSpan = last2.colSpan) !== null && _last_colSpan !== void 0 ? _last_colSpan : 1);
        }
        if (child.type === "cell" && child.parentKey == null)
          child.parentKey = node.key;
        childKeys.add(child.key);
        if (last2) {
          last2.nextKey = child.key;
          child.prevKey = last2.key;
        } else child.prevKey = null;
        visit(child);
        last2 = child;
      }
      if (last2) last2.nextKey = null;
      if (prevNode) {
        for (let child of prevNode.childNodes) if (!childKeys.has(child.key)) remove(child);
      }
    };
    let remove = (node) => {
      this.keyMap.delete(node.key);
      for (let child of node.childNodes) if (this.keyMap.get(child.key) === child) remove(child);
    };
    let last = null;
    for (let [i, node] of opts.items.entries()) {
      var _node_level, _node_key, _node_type, _node_value, _node_textValue, _node_index;
      let rowNode = {
        ...node,
        level: (_node_level = node.level) !== null && _node_level !== void 0 ? _node_level : 0,
        key: (_node_key = node.key) !== null && _node_key !== void 0 ? _node_key : "row-" + i,
        type: (_node_type = node.type) !== null && _node_type !== void 0 ? _node_type : "row",
        value: (_node_value = node.value) !== null && _node_value !== void 0 ? _node_value : null,
        hasChildNodes: true,
        childNodes: [
          ...node.childNodes
        ],
        rendered: node.rendered,
        textValue: (_node_textValue = node.textValue) !== null && _node_textValue !== void 0 ? _node_textValue : "",
        index: (_node_index = node.index) !== null && _node_index !== void 0 ? _node_index : i
      };
      if (last) {
        last.nextKey = rowNode.key;
        rowNode.prevKey = last.key;
      } else rowNode.prevKey = null;
      this.rows.push(rowNode);
      visit(rowNode);
      last = rowNode;
    }
    if (last) last.nextKey = null;
  }
};

// node_modules/@react-stately/table/dist/TableCollection.mjs
var $788781baa30117fa$var$ROW_HEADER_COLUMN_KEY = "row-header-column-" + Math.random().toString(36).slice(2);
var $788781baa30117fa$var$ROW_HEADER_COLUMN_KEY_DRAG = "row-header-column-" + Math.random().toString(36).slice(2);
while ($788781baa30117fa$var$ROW_HEADER_COLUMN_KEY === $788781baa30117fa$var$ROW_HEADER_COLUMN_KEY_DRAG) $788781baa30117fa$var$ROW_HEADER_COLUMN_KEY_DRAG = "row-header-column-" + Math.random().toString(36).slice(2);
function $788781baa30117fa$export$7c127db850d4e81e(keyMap, columnNodes) {
  if (columnNodes.length === 0) return [];
  let columns = [];
  let seen = /* @__PURE__ */ new Map();
  for (let column of columnNodes) {
    let parentKey = column.parentKey;
    let col = [
      column
    ];
    while (parentKey) {
      let parent = keyMap.get(parentKey);
      if (!parent) break;
      if (seen.has(parent)) {
        var _parent;
        var _colSpan;
        (_colSpan = (_parent = parent).colSpan) !== null && _colSpan !== void 0 ? _colSpan : _parent.colSpan = 0;
        parent.colSpan++;
        parent.colspan = parent.colSpan;
        let { column: column2, index } = seen.get(parent);
        if (index > col.length) break;
        for (let i2 = index; i2 < col.length; i2++) column2.splice(i2, 0, null);
        for (let i2 = col.length; i2 < column2.length; i2++)
          if (column2[i2] && seen.has(column2[i2])) seen.get(column2[i2]).index = i2;
      } else {
        parent.colSpan = 1;
        parent.colspan = 1;
        col.push(parent);
        seen.set(parent, {
          column: col,
          index: col.length - 1
        });
      }
      parentKey = parent.parentKey;
    }
    columns.push(col);
    column.index = columns.length - 1;
  }
  let maxLength = Math.max(...columns.map((c) => c.length));
  let headerRows = Array(maxLength).fill(0).map(() => []);
  let colIndex = 0;
  for (let column of columns) {
    let i2 = maxLength - 1;
    for (let item of column) {
      if (item) {
        let row = headerRows[i2];
        let rowLength = row.reduce((p, c) => {
          var _c_colSpan;
          return p + ((_c_colSpan = c.colSpan) !== null && _c_colSpan !== void 0 ? _c_colSpan : 1);
        }, 0);
        if (rowLength < colIndex) {
          let placeholder = {
            type: "placeholder",
            key: "placeholder-" + item.key,
            colspan: colIndex - rowLength,
            colSpan: colIndex - rowLength,
            index: rowLength,
            value: null,
            rendered: null,
            level: i2,
            hasChildNodes: false,
            childNodes: [],
            textValue: ""
          };
          if (row.length > 0) {
            row[row.length - 1].nextKey = placeholder.key;
            placeholder.prevKey = row[row.length - 1].key;
          }
          row.push(placeholder);
        }
        if (row.length > 0) {
          row[row.length - 1].nextKey = item.key;
          item.prevKey = row[row.length - 1].key;
        }
        item.level = i2;
        item.colIndex = colIndex;
        row.push(item);
      }
      i2--;
    }
    colIndex++;
  }
  let i = 0;
  for (let row of headerRows) {
    let rowLength = row.reduce((p, c) => {
      var _c_colSpan;
      return p + ((_c_colSpan = c.colSpan) !== null && _c_colSpan !== void 0 ? _c_colSpan : 1);
    }, 0);
    if (rowLength < columnNodes.length) {
      let placeholder = {
        type: "placeholder",
        key: "placeholder-" + row[row.length - 1].key,
        colSpan: columnNodes.length - rowLength,
        colspan: columnNodes.length - rowLength,
        index: rowLength,
        value: null,
        rendered: null,
        level: i,
        hasChildNodes: false,
        childNodes: [],
        textValue: "",
        prevKey: row[row.length - 1].key
      };
      row.push(placeholder);
    }
    i++;
  }
  return headerRows.map((childNodes, index) => {
    let row = {
      type: "headerrow",
      key: "headerrow-" + index,
      index,
      value: null,
      rendered: null,
      level: 0,
      hasChildNodes: true,
      childNodes,
      textValue: ""
    };
    return row;
  });
}
var $788781baa30117fa$export$596e1b2e2cf93690 = class extends (0, $16805b1b18093c5f$export$de3fdf6493c353d) {
  *[Symbol.iterator]() {
    yield* this.body.childNodes;
  }
  get size() {
    return this._size;
  }
  getKeys() {
    return this.keyMap.keys();
  }
  getKeyBefore(key) {
    let node = this.keyMap.get(key);
    var _node_prevKey;
    return (_node_prevKey = node === null || node === void 0 ? void 0 : node.prevKey) !== null && _node_prevKey !== void 0 ? _node_prevKey : null;
  }
  getKeyAfter(key) {
    let node = this.keyMap.get(key);
    var _node_nextKey;
    return (_node_nextKey = node === null || node === void 0 ? void 0 : node.nextKey) !== null && _node_nextKey !== void 0 ? _node_nextKey : null;
  }
  getFirstKey() {
    var _getFirstItem;
    var _getFirstItem_key;
    return (_getFirstItem_key = (_getFirstItem = (0, $c5a24bc478652b5f$export$fbdeaa6a76694f71)(this.body.childNodes)) === null || _getFirstItem === void 0 ? void 0 : _getFirstItem.key) !== null && _getFirstItem_key !== void 0 ? _getFirstItem_key : null;
  }
  getLastKey() {
    var _getLastItem;
    var _getLastItem_key;
    return (_getLastItem_key = (_getLastItem = (0, $c5a24bc478652b5f$export$7475b2c64539e4cf)(this.body.childNodes)) === null || _getLastItem === void 0 ? void 0 : _getLastItem.key) !== null && _getLastItem_key !== void 0 ? _getLastItem_key : null;
  }
  getItem(key) {
    var _this_keyMap_get;
    return (_this_keyMap_get = this.keyMap.get(key)) !== null && _this_keyMap_get !== void 0 ? _this_keyMap_get : null;
  }
  at(idx) {
    const keys = [
      ...this.getKeys()
    ];
    return this.getItem(keys[idx]);
  }
  getChildren(key) {
    if (key === this.body.key) return this.body.childNodes;
    return super.getChildren(key);
  }
  getTextValue(key) {
    let row = this.getItem(key);
    if (!row) return "";
    if (row.textValue) return row.textValue;
    let rowHeaderColumnKeys = this.rowHeaderColumnKeys;
    if (rowHeaderColumnKeys) {
      let text = [];
      for (let cell of row.childNodes) {
        let column = this.columns[cell.index];
        if (rowHeaderColumnKeys.has(column.key) && cell.textValue) text.push(cell.textValue);
        if (text.length === rowHeaderColumnKeys.size) break;
      }
      return text.join(" ");
    }
    return "";
  }
  constructor(nodes, prev, opts) {
    let rowHeaderColumnKeys = /* @__PURE__ */ new Set();
    let body = null;
    let columns = [];
    if (opts === null || opts === void 0 ? void 0 : opts.showSelectionCheckboxes) {
      let rowHeaderColumn = {
        type: "column",
        key: $788781baa30117fa$var$ROW_HEADER_COLUMN_KEY,
        value: null,
        textValue: "",
        level: 0,
        index: (opts === null || opts === void 0 ? void 0 : opts.showDragButtons) ? 1 : 0,
        hasChildNodes: false,
        rendered: null,
        childNodes: [],
        props: {
          isSelectionCell: true
        }
      };
      columns.unshift(rowHeaderColumn);
    }
    if (opts === null || opts === void 0 ? void 0 : opts.showDragButtons) {
      let rowHeaderColumn = {
        type: "column",
        key: $788781baa30117fa$var$ROW_HEADER_COLUMN_KEY_DRAG,
        value: null,
        textValue: "",
        level: 0,
        index: 0,
        hasChildNodes: false,
        rendered: null,
        childNodes: [],
        props: {
          isDragButtonCell: true
        }
      };
      columns.unshift(rowHeaderColumn);
    }
    let rows = [];
    let columnKeyMap = /* @__PURE__ */ new Map();
    let visit = (node) => {
      switch (node.type) {
        case "body":
          body = node;
          break;
        case "column":
          columnKeyMap.set(node.key, node);
          if (!node.hasChildNodes) {
            columns.push(node);
            if (node.props.isRowHeader) rowHeaderColumnKeys.add(node.key);
          }
          break;
        case "item":
          rows.push(node);
          return;
      }
      for (let child of node.childNodes) visit(child);
    };
    for (let node of nodes) visit(node);
    let headerRows = $788781baa30117fa$export$7c127db850d4e81e(columnKeyMap, columns);
    headerRows.forEach((row, i) => rows.splice(i, 0, row));
    super({
      columnCount: columns.length,
      items: rows,
      visitNode: (node) => {
        node.column = columns[node.index];
        return node;
      }
    }), this._size = 0;
    this.columns = columns;
    this.rowHeaderColumnKeys = rowHeaderColumnKeys;
    this.body = body;
    this.headerRows = headerRows;
    this._size = [
      ...body.childNodes
    ].length;
    if (this.rowHeaderColumnKeys.size === 0) {
      let col = this.columns.find((column) => {
        var _column_props, _column_props1;
        return !((_column_props = column.props) === null || _column_props === void 0 ? void 0 : _column_props.isDragButtonCell) && !((_column_props1 = column.props) === null || _column_props1 === void 0 ? void 0 : _column_props1.isSelectionCell);
      });
      if (col) this.rowHeaderColumnKeys.add(col.key);
    }
  }
};

// node_modules/@react-stately/table/dist/useTableState.mjs
var import_react169 = __toESM(require_react(), 1);
var $4a0dd036d492cee4$var$OPPOSITE_SORT_DIRECTION = {
  ascending: "descending",
  descending: "ascending"
};
function $4a0dd036d492cee4$export$907bcc6c48325fd6(props) {
  let [isKeyboardNavigationDisabled, setKeyboardNavigationDisabled] = (0, import_react169.useState)(false);
  let { selectionMode = "none", showSelectionCheckboxes, showDragButtons } = props;
  let context = (0, import_react169.useMemo)(() => ({
    showSelectionCheckboxes: showSelectionCheckboxes && selectionMode !== "none",
    showDragButtons,
    selectionMode,
    columns: []
  }), [
    props.children,
    showSelectionCheckboxes,
    selectionMode,
    showDragButtons
  ]);
  let collection = (0, $7613b1592d41b092$export$6cd28814d92fa9c9)(props, (0, import_react169.useCallback)((nodes) => new (0, $788781baa30117fa$export$596e1b2e2cf93690)(nodes, null, context), [
    context
  ]), context);
  let { disabledKeys, selectionManager } = (0, $62967d126f3aa823$export$4007ac09ff9c68ed)({
    ...props,
    collection,
    disabledBehavior: props.disabledBehavior || "selection"
  });
  var _props_sortDescriptor;
  return {
    collection,
    disabledKeys,
    selectionManager,
    showSelectionCheckboxes: props.showSelectionCheckboxes || false,
    sortDescriptor: (_props_sortDescriptor = props.sortDescriptor) !== null && _props_sortDescriptor !== void 0 ? _props_sortDescriptor : null,
    isKeyboardNavigationDisabled: collection.size === 0 || isKeyboardNavigationDisabled,
    setKeyboardNavigationDisabled,
    sort(columnKey, direction) {
      var _props_sortDescriptor2, _props_onSortChange;
      (_props_onSortChange = props.onSortChange) === null || _props_onSortChange === void 0 ? void 0 : _props_onSortChange.call(props, {
        column: columnKey,
        direction: direction !== null && direction !== void 0 ? direction : ((_props_sortDescriptor2 = props.sortDescriptor) === null || _props_sortDescriptor2 === void 0 ? void 0 : _props_sortDescriptor2.column) === columnKey ? $4a0dd036d492cee4$var$OPPOSITE_SORT_DIRECTION[props.sortDescriptor.direction] : "ascending"
      });
    }
  };
}

// node_modules/@react-stately/table/dist/TableHeader.mjs
var import_react170 = __toESM(require_react(), 1);
function $312ae3b56a94a86e$var$TableHeader(props) {
  return null;
}
$312ae3b56a94a86e$var$TableHeader.getCollectionNode = function* getCollectionNode3(props, context) {
  let { children, columns } = props;
  context.columns = [];
  if (typeof children === "function") {
    if (!columns) throw new Error("props.children was a function but props.columns is missing");
    for (let column of columns) yield {
      type: "column",
      value: column,
      renderer: children
    };
  } else {
    let columns2 = [];
    (0, import_react170.default).Children.forEach(children, (column) => {
      columns2.push({
        type: "column",
        element: column
      });
    });
    yield* columns2;
  }
};

// node_modules/@react-stately/table/dist/TableBody.mjs
var import_react171 = __toESM(require_react(), 1);
function $4ae5314bf50db1a3$var$TableBody(props) {
  return null;
}
$4ae5314bf50db1a3$var$TableBody.getCollectionNode = function* getCollectionNode4(props) {
  let { children, items } = props;
  yield {
    type: "body",
    hasChildNodes: true,
    props,
    *childNodes() {
      if (typeof children === "function") {
        if (!items) throw new Error("props.children was a function but props.items is missing");
        for (let item of items) yield {
          type: "item",
          value: item,
          renderer: children
        };
      } else {
        let items2 = [];
        (0, import_react171.default).Children.forEach(children, (item) => {
          items2.push({
            type: "item",
            element: item
          });
        });
        yield* items2;
      }
    }
  };
};

// node_modules/@react-stately/table/dist/Column.mjs
var import_react172 = __toESM(require_react(), 1);
function $1cd244557c2f97d5$var$Column(props) {
  return null;
}
$1cd244557c2f97d5$var$Column.getCollectionNode = function* getCollectionNode5(props, context) {
  let { title, children, childColumns } = props;
  let rendered = title || children;
  let textValue = props.textValue || (typeof rendered === "string" ? rendered : "") || props["aria-label"];
  let fullNodes = yield {
    type: "column",
    hasChildNodes: !!childColumns || !!title && (0, import_react172.default).Children.count(children) > 0,
    rendered,
    textValue,
    props,
    *childNodes() {
      if (childColumns) for (let child of childColumns) yield {
        type: "column",
        value: child
      };
      else if (title) {
        let childColumns2 = [];
        (0, import_react172.default).Children.forEach(children, (child) => {
          childColumns2.push({
            type: "column",
            element: child
          });
        });
        yield* childColumns2;
      }
    },
    shouldInvalidate(newContext) {
      updateContext(newContext);
      return false;
    }
  };
  let updateContext = (context2) => {
    for (let node of fullNodes) if (!node.hasChildNodes) context2.columns.push(node);
  };
  updateContext(context);
};

// node_modules/@react-stately/table/dist/Row.mjs
var import_react173 = __toESM(require_react(), 1);
function $70d70eb16ea48428$var$Row(props) {
  return null;
}
$70d70eb16ea48428$var$Row.getCollectionNode = function* getCollectionNode6(props, context) {
  let { children, textValue, UNSTABLE_childItems } = props;
  yield {
    type: "item",
    props,
    textValue,
    "aria-label": props["aria-label"],
    hasChildNodes: true,
    *childNodes() {
      if (context.showDragButtons) yield {
        type: "cell",
        key: "header-drag",
        props: {
          isDragButtonCell: true
        }
      };
      if (context.showSelectionCheckboxes && context.selectionMode !== "none") yield {
        type: "cell",
        key: "header",
        props: {
          isSelectionCell: true
        }
      };
      if (typeof children === "function") {
        for (let column of context.columns) yield {
          type: "cell",
          element: children(column.key),
          key: column.key
          // this is combined with the row key by CollectionBuilder
        };
        if (UNSTABLE_childItems) for (let child of UNSTABLE_childItems)
          yield {
            type: "item",
            value: child
          };
      } else {
        let cells = [];
        let childRows = [];
        let columnCount = 0;
        (0, import_react173.default).Children.forEach(children, (node) => {
          if (node.type === $70d70eb16ea48428$var$Row) {
            if (cells.length < context.columns.length) throw new Error("All of a Row's child Cells must be positioned before any child Rows.");
            childRows.push({
              type: "item",
              element: node
            });
          } else {
            cells.push({
              type: "cell",
              element: node
            });
            var _node_props_colSpan;
            columnCount += (_node_props_colSpan = node.props.colSpan) !== null && _node_props_colSpan !== void 0 ? _node_props_colSpan : 1;
          }
        });
        if (columnCount !== context.columns.length) throw new Error(`Cell count must match column count. Found ${columnCount} cells and ${context.columns.length} columns.`);
        yield* cells;
        yield* childRows;
      }
    },
    shouldInvalidate(newContext) {
      return newContext.columns.length !== context.columns.length || newContext.columns.some((c, i) => c.key !== context.columns[i].key) || newContext.showSelectionCheckboxes !== context.showSelectionCheckboxes || newContext.showDragButtons !== context.showDragButtons || newContext.selectionMode !== context.selectionMode;
    }
  };
};

// node_modules/@react-stately/table/dist/Cell.mjs
function $941d1d9a6a28982a$var$Cell(props) {
  return null;
}
$941d1d9a6a28982a$var$Cell.getCollectionNode = function* getCollectionNode7(props) {
  let { children } = props;
  let textValue = props.textValue || (typeof children === "string" ? children : "") || props["aria-label"] || "";
  yield {
    type: "cell",
    props,
    rendered: children,
    textValue,
    "aria-label": props["aria-label"],
    hasChildNodes: false
  };
};

// node_modules/@react-stately/table/dist/useTreeGridState.mjs
var import_react174 = __toESM(require_react(), 1);

// node_modules/@react-stately/tabs/dist/useTabListState.mjs
var import_react175 = __toESM(require_react(), 1);
function $76f919a04c5a7d14$export$4ba071daf4e486(props) {
  var _props_defaultSelectedKey, _ref;
  let state = (0, $a0d645289fe9b86b$export$e7f05e985daf4b5f)({
    ...props,
    onSelectionChange: props.onSelectionChange ? (key) => {
      var _props_onSelectionChange;
      if (key != null) (_props_onSelectionChange = props.onSelectionChange) === null || _props_onSelectionChange === void 0 ? void 0 : _props_onSelectionChange.call(props, key);
    } : void 0,
    suppressTextValueWarning: true,
    defaultSelectedKey: (_ref = (_props_defaultSelectedKey = props.defaultSelectedKey) !== null && _props_defaultSelectedKey !== void 0 ? _props_defaultSelectedKey : $76f919a04c5a7d14$var$findDefaultSelectedKey(props.collection, props.disabledKeys ? new Set(props.disabledKeys) : /* @__PURE__ */ new Set())) !== null && _ref !== void 0 ? _ref : void 0
  });
  let { selectionManager, collection, selectedKey: currentSelectedKey } = state;
  let lastSelectedKey = (0, import_react175.useRef)(currentSelectedKey);
  (0, import_react175.useEffect)(() => {
    let selectedKey = currentSelectedKey;
    if (props.selectedKey == null && (selectionManager.isEmpty || selectedKey == null || !collection.getItem(selectedKey))) {
      selectedKey = $76f919a04c5a7d14$var$findDefaultSelectedKey(collection, state.disabledKeys);
      if (selectedKey != null)
        selectionManager.setSelectedKeys([
          selectedKey
        ]);
    }
    if (selectedKey != null && selectionManager.focusedKey == null || !selectionManager.isFocused && selectedKey !== lastSelectedKey.current) selectionManager.setFocusedKey(selectedKey);
    lastSelectedKey.current = selectedKey;
  });
  return {
    ...state,
    isDisabled: props.isDisabled || false
  };
}
function $76f919a04c5a7d14$var$findDefaultSelectedKey(collection, disabledKeys) {
  let selectedKey = null;
  if (collection) {
    var _collection_getItem_props, _collection_getItem, _collection_getItem_props1, _collection_getItem1;
    selectedKey = collection.getFirstKey();
    while (selectedKey != null && (disabledKeys.has(selectedKey) || ((_collection_getItem = collection.getItem(selectedKey)) === null || _collection_getItem === void 0 ? void 0 : (_collection_getItem_props = _collection_getItem.props) === null || _collection_getItem_props === void 0 ? void 0 : _collection_getItem_props.isDisabled)) && selectedKey !== collection.getLastKey()) selectedKey = collection.getKeyAfter(selectedKey);
    if (selectedKey != null && (disabledKeys.has(selectedKey) || ((_collection_getItem1 = collection.getItem(selectedKey)) === null || _collection_getItem1 === void 0 ? void 0 : (_collection_getItem_props1 = _collection_getItem1.props) === null || _collection_getItem_props1 === void 0 ? void 0 : _collection_getItem_props1.isDisabled)) && selectedKey === collection.getLastKey()) selectedKey = collection.getFirstKey();
  }
  return selectedKey;
}

// node_modules/@react-stately/toast/dist/useToastState.mjs
var import_react176 = __toESM(require_react(), 1);
var import_shim3 = __toESM(require_shim(), 1);
function $77b352cf12efcf73$export$84726ef35ca2129a(queue) {
  let subscribe = (0, import_react176.useCallback)((fn) => queue.subscribe(fn), [
    queue
  ]);
  let getSnapshot = (0, import_react176.useCallback)(() => queue.visibleToasts, [
    queue
  ]);
  let visibleToasts = (0, import_shim3.useSyncExternalStore)(subscribe, getSnapshot, getSnapshot);
  return {
    visibleToasts,
    add: (content, options) => queue.add(content, options),
    close: (key) => queue.close(key),
    pauseAll: () => queue.pauseAll(),
    resumeAll: () => queue.resumeAll()
  };
}
var $77b352cf12efcf73$export$f1f8569633bbbec4 = class {
  runWithWrapUpdate(fn, action) {
    if (this.wrapUpdate) this.wrapUpdate(fn, action);
    else fn();
  }
  /** Subscribes to updates to the visible toasts. */
  subscribe(fn) {
    this.subscriptions.add(fn);
    return () => this.subscriptions.delete(fn);
  }
  /** Adds a new toast to the queue. */
  add(content, options = {}) {
    let toastKey = "_" + Math.random().toString(36).slice(2);
    let toast = {
      ...options,
      content,
      key: toastKey,
      timer: options.timeout ? new $77b352cf12efcf73$var$Timer(() => this.close(toastKey), options.timeout) : void 0
    };
    this.queue.unshift(toast);
    this.updateVisibleToasts("add");
    return toastKey;
  }
  /**
  * Closes a toast.
  */
  close(key) {
    let index = this.queue.findIndex((t) => t.key === key);
    if (index >= 0) {
      var _this_queue_index_onClose, _this_queue_index;
      (_this_queue_index_onClose = (_this_queue_index = this.queue[index]).onClose) === null || _this_queue_index_onClose === void 0 ? void 0 : _this_queue_index_onClose.call(_this_queue_index);
      this.queue.splice(index, 1);
    }
    this.updateVisibleToasts("remove");
  }
  updateVisibleToasts(action) {
    this.visibleToasts = this.queue.slice(0, this.maxVisibleToasts);
    this.runWithWrapUpdate(() => {
      for (let fn of this.subscriptions) fn();
    }, action);
  }
  /** Pauses the timers for all visible toasts. */
  pauseAll() {
    for (let toast of this.visibleToasts) if (toast.timer) toast.timer.pause();
  }
  /** Resumes the timers for all visible toasts. */
  resumeAll() {
    for (let toast of this.visibleToasts) if (toast.timer) toast.timer.resume();
  }
  clear() {
    this.queue = [];
    this.updateVisibleToasts("clear");
  }
  constructor(options) {
    this.queue = [];
    this.subscriptions = /* @__PURE__ */ new Set();
    this.visibleToasts = [];
    var _options_maxVisibleToasts;
    this.maxVisibleToasts = (_options_maxVisibleToasts = options === null || options === void 0 ? void 0 : options.maxVisibleToasts) !== null && _options_maxVisibleToasts !== void 0 ? _options_maxVisibleToasts : Infinity;
    this.wrapUpdate = options === null || options === void 0 ? void 0 : options.wrapUpdate;
  }
};
var $77b352cf12efcf73$var$Timer = class {
  reset(delay) {
    this.remaining = delay;
    this.resume();
  }
  pause() {
    if (this.timerId == null) return;
    clearTimeout(this.timerId);
    this.timerId = null;
    this.remaining -= Date.now() - this.startTime;
  }
  resume() {
    if (this.remaining <= 0) return;
    this.startTime = Date.now();
    this.timerId = setTimeout(() => {
      this.timerId = null;
      this.remaining = 0;
      this.callback();
    }, this.remaining);
  }
  constructor(callback, delay) {
    this.startTime = null;
    this.remaining = delay;
    this.callback = callback;
  }
};

// node_modules/@react-stately/tooltip/dist/useTooltipTriggerState.mjs
var import_react177 = __toESM(require_react(), 1);
var $8796f90736e175cb$var$TOOLTIP_DELAY = 1500;
var $8796f90736e175cb$var$TOOLTIP_COOLDOWN = 500;
var $8796f90736e175cb$var$tooltips = {};
var $8796f90736e175cb$var$tooltipId = 0;
var $8796f90736e175cb$var$globalWarmedUp = false;
var $8796f90736e175cb$var$globalWarmUpTimeout = null;
var $8796f90736e175cb$var$globalCooldownTimeout = null;
function $8796f90736e175cb$export$4d40659c25ecb50b(props = {}) {
  let { delay = $8796f90736e175cb$var$TOOLTIP_DELAY, closeDelay = $8796f90736e175cb$var$TOOLTIP_COOLDOWN } = props;
  let { isOpen, open, close } = (0, $fc909762b330b746$export$61c6a8c84e605fb6)(props);
  let id = (0, import_react177.useMemo)(() => `${++$8796f90736e175cb$var$tooltipId}`, []);
  let closeTimeout = (0, import_react177.useRef)(null);
  let closeCallback = (0, import_react177.useRef)(close);
  let ensureTooltipEntry = () => {
    $8796f90736e175cb$var$tooltips[id] = hideTooltip;
  };
  let closeOpenTooltips = () => {
    for (let hideTooltipId in $8796f90736e175cb$var$tooltips) if (hideTooltipId !== id) {
      $8796f90736e175cb$var$tooltips[hideTooltipId](true);
      delete $8796f90736e175cb$var$tooltips[hideTooltipId];
    }
  };
  let showTooltip = () => {
    if (closeTimeout.current) clearTimeout(closeTimeout.current);
    closeTimeout.current = null;
    closeOpenTooltips();
    ensureTooltipEntry();
    $8796f90736e175cb$var$globalWarmedUp = true;
    open();
    if ($8796f90736e175cb$var$globalWarmUpTimeout) {
      clearTimeout($8796f90736e175cb$var$globalWarmUpTimeout);
      $8796f90736e175cb$var$globalWarmUpTimeout = null;
    }
    if ($8796f90736e175cb$var$globalCooldownTimeout) {
      clearTimeout($8796f90736e175cb$var$globalCooldownTimeout);
      $8796f90736e175cb$var$globalCooldownTimeout = null;
    }
  };
  let hideTooltip = (immediate) => {
    if (immediate || closeDelay <= 0) {
      if (closeTimeout.current) clearTimeout(closeTimeout.current);
      closeTimeout.current = null;
      closeCallback.current();
    } else if (!closeTimeout.current) closeTimeout.current = setTimeout(() => {
      closeTimeout.current = null;
      closeCallback.current();
    }, closeDelay);
    if ($8796f90736e175cb$var$globalWarmUpTimeout) {
      clearTimeout($8796f90736e175cb$var$globalWarmUpTimeout);
      $8796f90736e175cb$var$globalWarmUpTimeout = null;
    }
    if ($8796f90736e175cb$var$globalWarmedUp) {
      if ($8796f90736e175cb$var$globalCooldownTimeout) clearTimeout($8796f90736e175cb$var$globalCooldownTimeout);
      $8796f90736e175cb$var$globalCooldownTimeout = setTimeout(() => {
        delete $8796f90736e175cb$var$tooltips[id];
        $8796f90736e175cb$var$globalCooldownTimeout = null;
        $8796f90736e175cb$var$globalWarmedUp = false;
      }, Math.max($8796f90736e175cb$var$TOOLTIP_COOLDOWN, closeDelay));
    }
  };
  let warmupTooltip = () => {
    closeOpenTooltips();
    ensureTooltipEntry();
    if (!isOpen && !$8796f90736e175cb$var$globalWarmUpTimeout && !$8796f90736e175cb$var$globalWarmedUp) $8796f90736e175cb$var$globalWarmUpTimeout = setTimeout(() => {
      $8796f90736e175cb$var$globalWarmUpTimeout = null;
      $8796f90736e175cb$var$globalWarmedUp = true;
      showTooltip();
    }, delay);
    else if (!isOpen) showTooltip();
  };
  (0, import_react177.useEffect)(() => {
    closeCallback.current = close;
  }, [
    close
  ]);
  (0, import_react177.useEffect)(() => {
    return () => {
      if (closeTimeout.current) clearTimeout(closeTimeout.current);
      let tooltip = $8796f90736e175cb$var$tooltips[id];
      if (tooltip) delete $8796f90736e175cb$var$tooltips[id];
    };
  }, [
    id
  ]);
  return {
    isOpen,
    open: (immediate) => {
      if (!immediate && delay > 0 && !closeTimeout.current) warmupTooltip();
      else showTooltip();
    },
    close: hideTooltip
  };
}

// node_modules/@react-stately/tree/dist/TreeCollection.mjs
var $05ca4cd7c4a5a999$export$863faf230ee2118a = class {
  *[Symbol.iterator]() {
    yield* this.iterable;
  }
  get size() {
    return this.keyMap.size;
  }
  getKeys() {
    return this.keyMap.keys();
  }
  getKeyBefore(key) {
    let node = this.keyMap.get(key);
    var _node_prevKey;
    return node ? (_node_prevKey = node.prevKey) !== null && _node_prevKey !== void 0 ? _node_prevKey : null : null;
  }
  getKeyAfter(key) {
    let node = this.keyMap.get(key);
    var _node_nextKey;
    return node ? (_node_nextKey = node.nextKey) !== null && _node_nextKey !== void 0 ? _node_nextKey : null : null;
  }
  getFirstKey() {
    return this.firstKey;
  }
  getLastKey() {
    return this.lastKey;
  }
  getItem(key) {
    var _this_keyMap_get;
    return (_this_keyMap_get = this.keyMap.get(key)) !== null && _this_keyMap_get !== void 0 ? _this_keyMap_get : null;
  }
  at(idx) {
    const keys = [
      ...this.getKeys()
    ];
    return this.getItem(keys[idx]);
  }
  constructor(nodes, { expandedKeys } = {}) {
    this.keyMap = /* @__PURE__ */ new Map();
    this.firstKey = null;
    this.lastKey = null;
    this.iterable = nodes;
    expandedKeys = expandedKeys || /* @__PURE__ */ new Set();
    let visit = (node) => {
      this.keyMap.set(node.key, node);
      if (node.childNodes && (node.type === "section" || expandedKeys.has(node.key))) for (let child of node.childNodes) visit(child);
    };
    for (let node of nodes) visit(node);
    let last = null;
    let index = 0;
    for (let [key, node] of this.keyMap) {
      if (last) {
        last.nextKey = key;
        node.prevKey = last.key;
      } else {
        this.firstKey = key;
        node.prevKey = void 0;
      }
      if (node.type === "item") node.index = index++;
      last = node;
      last.nextKey = void 0;
    }
    var _last_key;
    this.lastKey = (_last_key = last === null || last === void 0 ? void 0 : last.key) !== null && _last_key !== void 0 ? _last_key : null;
  }
};

// node_modules/@react-stately/tree/dist/useTreeState.mjs
var import_react178 = __toESM(require_react(), 1);
function $875d6693e12af071$export$728d6ba534403756(props) {
  let { onExpandedChange } = props;
  let [expandedKeys, setExpandedKeys] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(props.expandedKeys ? new Set(props.expandedKeys) : void 0, props.defaultExpandedKeys ? new Set(props.defaultExpandedKeys) : /* @__PURE__ */ new Set(), onExpandedChange);
  let selectionState = (0, $7af3f5b51489e0b5$export$253fe78d46329472)(props);
  let disabledKeys = (0, import_react178.useMemo)(() => props.disabledKeys ? new Set(props.disabledKeys) : /* @__PURE__ */ new Set(), [
    props.disabledKeys
  ]);
  let tree = (0, $7613b1592d41b092$export$6cd28814d92fa9c9)(props, (0, import_react178.useCallback)((nodes) => new (0, $05ca4cd7c4a5a999$export$863faf230ee2118a)(nodes, {
    expandedKeys
  }), [
    expandedKeys
  ]), null);
  (0, import_react178.useEffect)(() => {
    if (selectionState.focusedKey != null && !tree.getItem(selectionState.focusedKey)) selectionState.setFocusedKey(null);
  }, [
    tree,
    selectionState.focusedKey
  ]);
  let onToggle = (key) => {
    setExpandedKeys($875d6693e12af071$var$toggleKey(expandedKeys, key));
  };
  return {
    collection: tree,
    expandedKeys,
    disabledKeys,
    toggleKey: onToggle,
    setExpandedKeys,
    selectionManager: new (0, $d496c0a20b6e58ec$export$6c8a5aaad13c9852)(tree, selectionState)
  };
}
function $875d6693e12af071$var$toggleKey(set, key) {
  let res = new Set(set);
  if (res.has(key)) res.delete(key);
  else res.add(key);
  return res;
}

// node_modules/react-aria-components/dist/Form.mjs
var import_react179 = __toESM(require_react(), 1);
var $d3e0e05bdfcf66bd$export$c24727297075ec6a = (0, import_react179.createContext)(null);
var $d3e0e05bdfcf66bd$export$a7fed597f4b8afd8 = (0, import_react179.forwardRef)(function Form(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $d3e0e05bdfcf66bd$export$c24727297075ec6a);
  let { validationErrors, validationBehavior = "native", children, className, ...domProps } = props;
  return (0, import_react179.default).createElement("form", {
    noValidate: validationBehavior !== "native",
    ...domProps,
    ref,
    className: className || "react-aria-Form"
  }, (0, import_react179.default).createElement($d3e0e05bdfcf66bd$export$c24727297075ec6a.Provider, {
    value: {
      ...props,
      validationBehavior
    }
  }, (0, import_react179.default).createElement((0, $e5be200c675c3b3a$export$571b5131b7e65c11).Provider, {
    value: validationErrors !== null && validationErrors !== void 0 ? validationErrors : {}
  }, children)));
});

// node_modules/react-aria-components/dist/Group.mjs
var import_react180 = __toESM(require_react(), 1);
var $a049562f99e7db0e$export$f9c6924e160136d1 = (0, import_react180.createContext)({});
var $a049562f99e7db0e$export$eb2fcfdbd7ba97d4 = (0, import_react180.forwardRef)(function Group(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $a049562f99e7db0e$export$f9c6924e160136d1);
  let { isDisabled, isInvalid, onHoverStart, onHoverChange, onHoverEnd, ...otherProps } = props;
  let { hoverProps, isHovered } = (0, $6179b936705e76d3$export$ae780daf29e6d456)({
    onHoverStart,
    onHoverChange,
    onHoverEnd,
    isDisabled
  });
  let { isFocused, isFocusVisible, focusProps } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)({
    within: true
  });
  isDisabled !== null && isDisabled !== void 0 ? isDisabled : isDisabled = !!props["aria-disabled"] && props["aria-disabled"] !== "false";
  isInvalid !== null && isInvalid !== void 0 ? isInvalid : isInvalid = !!props["aria-invalid"] && props["aria-invalid"] !== "false";
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    values: {
      isHovered,
      isFocusWithin: isFocused,
      isFocusVisible,
      isDisabled,
      isInvalid
    },
    defaultClassName: "react-aria-Group"
  });
  var _props_role, _props_slot;
  return (0, import_react180.default).createElement("div", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(otherProps, focusProps, hoverProps),
    ...renderProps,
    ref,
    role: (_props_role = props.role) !== null && _props_role !== void 0 ? _props_role : "group",
    slot: (_props_slot = props.slot) !== null && _props_slot !== void 0 ? _props_slot : void 0,
    "data-focus-within": isFocused || void 0,
    "data-hovered": isHovered || void 0,
    "data-focus-visible": isFocusVisible || void 0,
    "data-disabled": isDisabled || void 0,
    "data-invalid": isInvalid || void 0
  }, renderProps.children);
});

// node_modules/react-aria-components/dist/SearchField.mjs
var import_react181 = __toESM(require_react(), 1);
var $440f4836bcb56932$export$d1c4e4c63cb03a11 = (0, import_react181.createContext)(null);
var $440f4836bcb56932$export$b94867ecbd698f21 = (0, $f39a9eba43920ace$export$86427a43e3e48ebb)(function SearchField(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $440f4836bcb56932$export$d1c4e4c63cb03a11);
  let { validationBehavior: formValidationBehavior } = (0, $64fa3d84918910a7$export$fabf2dc03a41866e)((0, $d3e0e05bdfcf66bd$export$c24727297075ec6a)) || {};
  var _props_validationBehavior, _ref;
  let validationBehavior = (_ref = (_props_validationBehavior = props.validationBehavior) !== null && _props_validationBehavior !== void 0 ? _props_validationBehavior : formValidationBehavior) !== null && _ref !== void 0 ? _ref : "native";
  let inputRef = (0, import_react181.useRef)(null);
  let [inputContextProps, mergedInputRef] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)({}, inputRef, (0, $3985021b0ad6602f$export$37fb8590cf2c088c));
  let [labelRef, label] = (0, $64fa3d84918910a7$export$9d4c57ee4c6ffdd8)(!props["aria-label"] && !props["aria-labelledby"]);
  let state = (0, $0b2218c4e3fe7d7e$export$3f8be18b0f41eaf2)({
    ...props,
    validationBehavior
  });
  let { labelProps, inputProps, clearButtonProps, descriptionProps, errorMessageProps, ...validation } = (0, $4d52238874b24f86$export$9bb30bbe003b82e0)({
    ...(0, $64fa3d84918910a7$export$ef03459518577ad4)(props),
    label,
    validationBehavior
  }, state, mergedInputRef);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    values: {
      isEmpty: state.value === "",
      isDisabled: props.isDisabled || false,
      isInvalid: validation.isInvalid || false,
      state
    },
    defaultClassName: "react-aria-SearchField"
  });
  let DOMProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  delete DOMProps.id;
  return (0, import_react181.default).createElement("div", {
    ...DOMProps,
    ...renderProps,
    ref,
    slot: props.slot || void 0,
    "data-empty": state.value === "" || void 0,
    "data-disabled": props.isDisabled || void 0,
    "data-invalid": validation.isInvalid || void 0
  }, (0, import_react181.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        (0, $01b77f81d0f07f68$export$75b6ee27786ba447),
        {
          ...labelProps,
          ref: labelRef
        }
      ],
      [
        (0, $3985021b0ad6602f$export$37fb8590cf2c088c),
        {
          ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(inputProps, inputContextProps),
          ref: mergedInputRef
        }
      ],
      [
        (0, $d2b4bc8c273e7be6$export$24d547caef80ccd1),
        clearButtonProps
      ],
      [
        (0, $514c0188e459b4c0$export$9afb8bc826b033ea),
        {
          slots: {
            description: descriptionProps,
            errorMessage: errorMessageProps
          }
        }
      ],
      [
        (0, $a049562f99e7db0e$export$f9c6924e160136d1),
        {
          isInvalid: validation.isInvalid,
          isDisabled: props.isDisabled || false
        }
      ],
      [
        (0, $ee014567cb39d3f0$export$ff05c3ac10437e03),
        validation
      ]
    ]
  }, renderProps.children));
});

// node_modules/react-aria-components/dist/TextArea.mjs
var import_react182 = __toESM(require_react(), 1);
var $216918bed6669f72$export$2dc6166a7e65358c = (0, import_react182.createContext)({});
var $216918bed6669f72$var$filterHoverProps = (props) => {
  let { onHoverStart, onHoverChange, onHoverEnd, ...otherProps } = props;
  return otherProps;
};
var $216918bed6669f72$export$f5c9f3c2c4054eec = (0, import_react182.forwardRef)(function TextArea(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $216918bed6669f72$export$2dc6166a7e65358c);
  let { hoverProps, isHovered } = (0, $6179b936705e76d3$export$ae780daf29e6d456)(props);
  let { isFocused, isFocusVisible, focusProps } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)({
    isTextInput: true,
    autoFocus: props.autoFocus
  });
  let isInvalid = !!props["aria-invalid"] && props["aria-invalid"] !== "false";
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    values: {
      isHovered,
      isFocused,
      isFocusVisible,
      isDisabled: props.disabled || false,
      isInvalid
    },
    defaultClassName: "react-aria-TextArea"
  });
  return (0, import_react182.default).createElement("textarea", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)($216918bed6669f72$var$filterHoverProps(props), focusProps, hoverProps),
    ...renderProps,
    ref,
    "data-focused": isFocused || void 0,
    "data-disabled": props.disabled || void 0,
    "data-hovered": isHovered || void 0,
    "data-focus-visible": isFocusVisible || void 0,
    "data-invalid": isInvalid || void 0
  });
});

// node_modules/react-aria-components/dist/TextField.mjs
var import_react183 = __toESM(require_react(), 1);
var $bcdf0525bf22703d$export$2129e27b3ef0d483 = (0, import_react183.createContext)(null);
var $bcdf0525bf22703d$export$2c73285ae9390cec = (0, $f39a9eba43920ace$export$86427a43e3e48ebb)(function TextField(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $bcdf0525bf22703d$export$2129e27b3ef0d483);
  let { validationBehavior: formValidationBehavior } = (0, $64fa3d84918910a7$export$fabf2dc03a41866e)((0, $d3e0e05bdfcf66bd$export$c24727297075ec6a)) || {};
  var _props_validationBehavior, _ref;
  let validationBehavior = (_ref = (_props_validationBehavior = props.validationBehavior) !== null && _props_validationBehavior !== void 0 ? _props_validationBehavior : formValidationBehavior) !== null && _ref !== void 0 ? _ref : "native";
  let inputRef = (0, import_react183.useRef)(null);
  let [inputContextProps, mergedInputRef] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)({}, inputRef, (0, $3985021b0ad6602f$export$37fb8590cf2c088c));
  let [labelRef, label] = (0, $64fa3d84918910a7$export$9d4c57ee4c6ffdd8)(!props["aria-label"] && !props["aria-labelledby"]);
  let [inputElementType, setInputElementType] = (0, import_react183.useState)("input");
  let { labelProps, inputProps, descriptionProps, errorMessageProps, ...validation } = (0, $2d73ec29415bd339$export$712718f7aec83d5)({
    ...(0, $64fa3d84918910a7$export$ef03459518577ad4)(props),
    inputElementType,
    label,
    validationBehavior
  }, mergedInputRef);
  let inputOrTextAreaRef = (0, import_react183.useCallback)((el) => {
    mergedInputRef.current = el;
    if (el) setInputElementType(el instanceof HTMLTextAreaElement ? "textarea" : "input");
  }, [
    mergedInputRef
  ]);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    values: {
      isDisabled: props.isDisabled || false,
      isInvalid: validation.isInvalid,
      isReadOnly: props.isReadOnly || false,
      isRequired: props.isRequired || false
    },
    defaultClassName: "react-aria-TextField"
  });
  let DOMProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  delete DOMProps.id;
  return (0, import_react183.default).createElement("div", {
    ...DOMProps,
    ...renderProps,
    ref,
    slot: props.slot || void 0,
    "data-disabled": props.isDisabled || void 0,
    "data-invalid": validation.isInvalid || void 0,
    "data-readonly": props.isReadOnly || void 0,
    "data-required": props.isRequired || void 0
  }, (0, import_react183.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        (0, $01b77f81d0f07f68$export$75b6ee27786ba447),
        {
          ...labelProps,
          ref: labelRef
        }
      ],
      [
        (0, $3985021b0ad6602f$export$37fb8590cf2c088c),
        {
          ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(inputProps, inputContextProps),
          ref: inputOrTextAreaRef
        }
      ],
      [
        (0, $216918bed6669f72$export$2dc6166a7e65358c),
        {
          ...inputProps,
          ref: inputOrTextAreaRef
        }
      ],
      [
        (0, $514c0188e459b4c0$export$9afb8bc826b033ea),
        {
          slots: {
            description: descriptionProps,
            errorMessage: errorMessageProps
          }
        }
      ],
      [
        (0, $ee014567cb39d3f0$export$ff05c3ac10437e03),
        validation
      ]
    ]
  }, renderProps.children));
});

// node_modules/@react-aria/autocomplete/dist/ar-AE.mjs
var $35cd24659c58727a$exports = {};
$35cd24659c58727a$exports = {
  "collectionLabel": `مقترحات`
};

// node_modules/@react-aria/autocomplete/dist/bg-BG.mjs
var $cf76f2b22038d1dc$exports = {};
$cf76f2b22038d1dc$exports = {
  "collectionLabel": `Предложения`
};

// node_modules/@react-aria/autocomplete/dist/cs-CZ.mjs
var $d0ef36edb6b10634$exports = {};
$d0ef36edb6b10634$exports = {
  "collectionLabel": `Návrhy`
};

// node_modules/@react-aria/autocomplete/dist/da-DK.mjs
var $9746cad167cf365e$exports = {};
$9746cad167cf365e$exports = {
  "collectionLabel": `Forslag`
};

// node_modules/@react-aria/autocomplete/dist/de-DE.mjs
var $e096aa0a23f85b04$exports = {};
$e096aa0a23f85b04$exports = {
  "collectionLabel": `Empfehlungen`
};

// node_modules/@react-aria/autocomplete/dist/el-GR.mjs
var $0e9f1c25f5631e6c$exports = {};
$0e9f1c25f5631e6c$exports = {
  "collectionLabel": `Προτάσεις`
};

// node_modules/@react-aria/autocomplete/dist/en-US.mjs
var $f195635a1f9154fe$exports = {};
$f195635a1f9154fe$exports = {
  "collectionLabel": `Suggestions`
};

// node_modules/@react-aria/autocomplete/dist/es-ES.mjs
var $0ab437f467150cd9$exports = {};
$0ab437f467150cd9$exports = {
  "collectionLabel": `Sugerencias`
};

// node_modules/@react-aria/autocomplete/dist/et-EE.mjs
var $5978f02f4e2f5026$exports = {};
$5978f02f4e2f5026$exports = {
  "collectionLabel": `Soovitused`
};

// node_modules/@react-aria/autocomplete/dist/fi-FI.mjs
var $7ceabaf205d867a4$exports = {};
$7ceabaf205d867a4$exports = {
  "collectionLabel": `Ehdotukset`
};

// node_modules/@react-aria/autocomplete/dist/fr-FR.mjs
var $9153fe570822488b$exports = {};
$9153fe570822488b$exports = {
  "collectionLabel": `Suggestions`
};

// node_modules/@react-aria/autocomplete/dist/he-IL.mjs
var $b353f6056f620327$exports = {};
$b353f6056f620327$exports = {
  "collectionLabel": `הצעות`
};

// node_modules/@react-aria/autocomplete/dist/hr-HR.mjs
var $75f34cf3de3b71c1$exports = {};
$75f34cf3de3b71c1$exports = {
  "collectionLabel": `Prijedlozi`
};

// node_modules/@react-aria/autocomplete/dist/hu-HU.mjs
var $315984f57113734f$exports = {};
$315984f57113734f$exports = {
  "collectionLabel": `Javaslatok`
};

// node_modules/@react-aria/autocomplete/dist/it-IT.mjs
var $f114a6a0dcc9e764$exports = {};
$f114a6a0dcc9e764$exports = {
  "collectionLabel": `Suggerimenti`
};

// node_modules/@react-aria/autocomplete/dist/ja-JP.mjs
var $da9ccdb501807c66$exports = {};
$da9ccdb501807c66$exports = {
  "collectionLabel": `候補`
};

// node_modules/@react-aria/autocomplete/dist/ko-KR.mjs
var $ee4f74cff6d185d7$exports = {};
$ee4f74cff6d185d7$exports = {
  "collectionLabel": `제안`
};

// node_modules/@react-aria/autocomplete/dist/lt-LT.mjs
var $9f921d880c5b9f0f$exports = {};
$9f921d880c5b9f0f$exports = {
  "collectionLabel": `Pasiūlymai`
};

// node_modules/@react-aria/autocomplete/dist/lv-LV.mjs
var $2516f8bc94df6b6f$exports = {};
$2516f8bc94df6b6f$exports = {
  "collectionLabel": `Ieteikumi`
};

// node_modules/@react-aria/autocomplete/dist/nb-NO.mjs
var $2f701b767fa6559c$exports = {};
$2f701b767fa6559c$exports = {
  "collectionLabel": `Forslag`
};

// node_modules/@react-aria/autocomplete/dist/nl-NL.mjs
var $1397b38c000e3e4b$exports = {};
$1397b38c000e3e4b$exports = {
  "collectionLabel": `Suggesties`
};

// node_modules/@react-aria/autocomplete/dist/pl-PL.mjs
var $25bedea7b332a070$exports = {};
$25bedea7b332a070$exports = {
  "collectionLabel": `Sugestie`
};

// node_modules/@react-aria/autocomplete/dist/pt-BR.mjs
var $1e398002a8be3d02$exports = {};
$1e398002a8be3d02$exports = {
  "collectionLabel": `Sugestões`
};

// node_modules/@react-aria/autocomplete/dist/pt-PT.mjs
var $ae2286b176a3af67$exports = {};
$ae2286b176a3af67$exports = {
  "collectionLabel": `Sugestões`
};

// node_modules/@react-aria/autocomplete/dist/ro-RO.mjs
var $42d5bcc619a7aaac$exports = {};
$42d5bcc619a7aaac$exports = {
  "collectionLabel": `Sugestii`
};

// node_modules/@react-aria/autocomplete/dist/ru-RU.mjs
var $bafcc9870f83af97$exports = {};
$bafcc9870f83af97$exports = {
  "collectionLabel": `Предложения`
};

// node_modules/@react-aria/autocomplete/dist/sk-SK.mjs
var $a59a67776704c670$exports = {};
$a59a67776704c670$exports = {
  "collectionLabel": `Návrhy`
};

// node_modules/@react-aria/autocomplete/dist/sl-SI.mjs
var $070e1709fddbf199$exports = {};
$070e1709fddbf199$exports = {
  "collectionLabel": `Predlogi`
};

// node_modules/@react-aria/autocomplete/dist/sr-SP.mjs
var $4ed19d2fc07f94be$exports = {};
$4ed19d2fc07f94be$exports = {
  "collectionLabel": `Predlozi`
};

// node_modules/@react-aria/autocomplete/dist/sv-SE.mjs
var $bb4efe76ac2ad6af$exports = {};
$bb4efe76ac2ad6af$exports = {
  "collectionLabel": `Förslag`
};

// node_modules/@react-aria/autocomplete/dist/tr-TR.mjs
var $ecc6dce838a94ce1$exports = {};
$ecc6dce838a94ce1$exports = {
  "collectionLabel": `Öneriler`
};

// node_modules/@react-aria/autocomplete/dist/uk-UA.mjs
var $61d6a54fe0f4cb76$exports = {};
$61d6a54fe0f4cb76$exports = {
  "collectionLabel": `Пропозиції`
};

// node_modules/@react-aria/autocomplete/dist/zh-CN.mjs
var $e98983e40b8886ed$exports = {};
$e98983e40b8886ed$exports = {
  "collectionLabel": `建议`
};

// node_modules/@react-aria/autocomplete/dist/zh-TW.mjs
var $5bfd172db1a18268$exports = {};
$5bfd172db1a18268$exports = {
  "collectionLabel": `建議`
};

// node_modules/@react-aria/autocomplete/dist/intlStrings.mjs
var $957f4f2fd749edef$exports = {};
$957f4f2fd749edef$exports = {
  "ar-AE": $35cd24659c58727a$exports,
  "bg-BG": $cf76f2b22038d1dc$exports,
  "cs-CZ": $d0ef36edb6b10634$exports,
  "da-DK": $9746cad167cf365e$exports,
  "de-DE": $e096aa0a23f85b04$exports,
  "el-GR": $0e9f1c25f5631e6c$exports,
  "en-US": $f195635a1f9154fe$exports,
  "es-ES": $0ab437f467150cd9$exports,
  "et-EE": $5978f02f4e2f5026$exports,
  "fi-FI": $7ceabaf205d867a4$exports,
  "fr-FR": $9153fe570822488b$exports,
  "he-IL": $b353f6056f620327$exports,
  "hr-HR": $75f34cf3de3b71c1$exports,
  "hu-HU": $315984f57113734f$exports,
  "it-IT": $f114a6a0dcc9e764$exports,
  "ja-JP": $da9ccdb501807c66$exports,
  "ko-KR": $ee4f74cff6d185d7$exports,
  "lt-LT": $9f921d880c5b9f0f$exports,
  "lv-LV": $2516f8bc94df6b6f$exports,
  "nb-NO": $2f701b767fa6559c$exports,
  "nl-NL": $1397b38c000e3e4b$exports,
  "pl-PL": $25bedea7b332a070$exports,
  "pt-BR": $1e398002a8be3d02$exports,
  "pt-PT": $ae2286b176a3af67$exports,
  "ro-RO": $42d5bcc619a7aaac$exports,
  "ru-RU": $bafcc9870f83af97$exports,
  "sk-SK": $a59a67776704c670$exports,
  "sl-SI": $070e1709fddbf199$exports,
  "sr-SP": $4ed19d2fc07f94be$exports,
  "sv-SE": $bb4efe76ac2ad6af$exports,
  "tr-TR": $ecc6dce838a94ce1$exports,
  "uk-UA": $61d6a54fe0f4cb76$exports,
  "zh-CN": $e98983e40b8886ed$exports,
  "zh-TW": $5bfd172db1a18268$exports
};

// node_modules/@react-aria/autocomplete/dist/useAutocomplete.mjs
var import_react184 = __toESM(require_react(), 1);
function $parcel$interopDefault34(a) {
  return a && a.__esModule ? a.default : a;
}
function $48f6ba390f8c5b59$export$1e40b3ca02d92d21(props, state) {
  let { inputRef, collectionRef, filter, disableAutoFocusFirst = false } = props;
  let collectionId = (0, $bdb11010cef70236$export$f680877a34711e37)();
  let timeout = (0, import_react184.useRef)(void 0);
  let delayNextActiveDescendant = (0, import_react184.useRef)(false);
  let queuedActiveDescendant = (0, import_react184.useRef)(null);
  let lastCollectionNode = (0, import_react184.useRef)(null);
  let shouldUseVirtualFocus = (0, $507fabe10e71c6fb$export$630ff653c5ada6a9)() !== "virtual";
  (0, import_react184.useEffect)(() => {
    return () => clearTimeout(timeout.current);
  }, []);
  let updateActiveDescendant = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e) => {
    if (!e.isTrusted && shouldUseVirtualFocus && inputRef.current && (0, $d4ee10de306f2510$export$cd4e5573fbe2b576)((0, $431fbd86ca7dc216$export$b204af158042fbac)(inputRef.current)) !== inputRef.current) inputRef.current.focus();
    let target = e.target;
    if (e.isTrusted || !target || queuedActiveDescendant.current === target.id) return;
    clearTimeout(timeout.current);
    if (target !== collectionRef.current) {
      if (delayNextActiveDescendant.current) {
        queuedActiveDescendant.current = target.id;
        timeout.current = setTimeout(() => {
          state.setFocusedNodeId(target.id);
        }, 500);
      } else {
        queuedActiveDescendant.current = target.id;
        state.setFocusedNodeId(target.id);
      }
    } else {
      queuedActiveDescendant.current = null;
      state.setFocusedNodeId(null);
    }
    delayNextActiveDescendant.current = false;
  });
  let callbackRef = (0, import_react184.useCallback)((collectionNode) => {
    var _lastCollectionNode_current;
    if (collectionNode != null) {
      var _lastCollectionNode_current1;
      (_lastCollectionNode_current1 = lastCollectionNode.current) === null || _lastCollectionNode_current1 === void 0 ? void 0 : _lastCollectionNode_current1.removeEventListener("focusin", updateActiveDescendant);
      lastCollectionNode.current = collectionNode;
      collectionNode.addEventListener("focusin", updateActiveDescendant);
    } else (_lastCollectionNode_current = lastCollectionNode.current) === null || _lastCollectionNode_current === void 0 ? void 0 : _lastCollectionNode_current.removeEventListener("focusin", updateActiveDescendant);
  }, [
    updateActiveDescendant
  ]);
  let mergedCollectionRef = (0, $df56164dff5785e2$export$4338b53315abf666)((0, import_react184.useMemo)(() => (0, $5dc95899b306f630$export$c9058316764c140e)(collectionRef, callbackRef), [
    collectionRef,
    callbackRef
  ]));
  let focusFirstItem = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)(() => {
    var _collectionRef_current;
    delayNextActiveDescendant.current = true;
    (_collectionRef_current = collectionRef.current) === null || _collectionRef_current === void 0 ? void 0 : _collectionRef_current.dispatchEvent(new CustomEvent((0, $5671b20cf9b562b2$export$831c820ad60f9d12), {
      cancelable: true,
      bubbles: true,
      detail: {
        focusStrategy: "first"
      }
    }));
  });
  let clearVirtualFocus = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((clearFocusKey) => {
    var _collectionRef_current;
    (0, $55f9b1ae81f22853$export$76e4e37e5339496d)((0, $d4ee10de306f2510$export$cd4e5573fbe2b576)());
    queuedActiveDescendant.current = null;
    state.setFocusedNodeId(null);
    let clearFocusEvent = new CustomEvent((0, $5671b20cf9b562b2$export$447a38995de2c711), {
      cancelable: true,
      bubbles: true,
      detail: {
        clearFocusKey
      }
    });
    clearTimeout(timeout.current);
    delayNextActiveDescendant.current = false;
    (_collectionRef_current = collectionRef.current) === null || _collectionRef_current === void 0 ? void 0 : _collectionRef_current.dispatchEvent(clearFocusEvent);
  });
  let onChange = (value) => {
    if (state.inputValue !== value && state.inputValue.length <= value.length && !disableAutoFocusFirst) focusFirstItem();
    else
      clearVirtualFocus(true);
    state.setInputValue(value);
  };
  let keyDownTarget = (0, import_react184.useRef)(null);
  let onKeyDown = (e) => {
    var _collectionRef_current;
    keyDownTarget.current = e.target;
    if (e.nativeEvent.isComposing) return;
    let focusedNodeId = queuedActiveDescendant.current;
    switch (e.key) {
      case "a":
        if ((0, $21f1aa98acb08317$export$16792effe837dba3)(e)) return;
        break;
      case "Escape":
        if (e.isDefaultPrevented()) return;
        break;
      case " ":
        return;
      case "Tab":
        if ("continuePropagation" in e) e.continuePropagation();
        return;
      case "Home":
      case "End":
      case "PageDown":
      case "PageUp":
      case "ArrowUp":
      case "ArrowDown": {
        var _collectionRef_current1;
        if ((e.key === "Home" || e.key === "End") && focusedNodeId == null && e.shiftKey) return;
        e.preventDefault();
        let focusCollection = new CustomEvent((0, $5671b20cf9b562b2$export$831c820ad60f9d12), {
          cancelable: true,
          bubbles: true
        });
        (_collectionRef_current1 = collectionRef.current) === null || _collectionRef_current1 === void 0 ? void 0 : _collectionRef_current1.dispatchEvent(focusCollection);
        break;
      }
    }
    if (!e.isPropagationStopped()) e.stopPropagation();
    let shouldPerformDefaultAction = true;
    if (focusedNodeId == null) shouldPerformDefaultAction = ((_collectionRef_current = collectionRef.current) === null || _collectionRef_current === void 0 ? void 0 : _collectionRef_current.dispatchEvent(new KeyboardEvent(e.nativeEvent.type, e.nativeEvent))) || false;
    else {
      let item = document.getElementById(focusedNodeId);
      shouldPerformDefaultAction = (item === null || item === void 0 ? void 0 : item.dispatchEvent(new KeyboardEvent(e.nativeEvent.type, e.nativeEvent))) || false;
    }
    if (shouldPerformDefaultAction) switch (e.key) {
      case "ArrowLeft":
      case "ArrowRight":
        clearVirtualFocus();
        break;
    }
  };
  let onKeyUpCapture = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e) => {
    if (e.target === keyDownTarget.current) {
      var _collectionRef_current;
      e.stopImmediatePropagation();
      let focusedNodeId = queuedActiveDescendant.current;
      if (focusedNodeId == null) (_collectionRef_current = collectionRef.current) === null || _collectionRef_current === void 0 ? void 0 : _collectionRef_current.dispatchEvent(new KeyboardEvent(e.type, e));
      else {
        let item = document.getElementById(focusedNodeId);
        item === null || item === void 0 ? void 0 : item.dispatchEvent(new KeyboardEvent(e.type, e));
      }
    }
  });
  (0, import_react184.useEffect)(() => {
    document.addEventListener("keyup", onKeyUpCapture, true);
    return () => {
      document.removeEventListener("keyup", onKeyUpCapture, true);
    };
  }, [
    onKeyUpCapture
  ]);
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault34($957f4f2fd749edef$exports)), "@react-aria/autocomplete");
  let collectionProps = (0, $313b98861ee5dd6c$export$d6875122194c7b44)({
    id: collectionId,
    "aria-label": stringFormatter.format("collectionLabel")
  });
  let filterFn = (0, import_react184.useCallback)((nodeTextValue) => {
    if (filter) return filter(nodeTextValue, state.inputValue);
    return true;
  }, [
    state.inputValue,
    filter
  ]);
  let onBlur = (e) => {
    if (!e.isTrusted) return;
    let lastFocusedNode = queuedActiveDescendant.current ? document.getElementById(queuedActiveDescendant.current) : null;
    if (lastFocusedNode) (0, $55f9b1ae81f22853$export$6c5dc7e81d2cc29a)(lastFocusedNode, e.relatedTarget);
  };
  let onFocus = (e) => {
    if (!e.isTrusted) return;
    let curFocusedNode = queuedActiveDescendant.current ? document.getElementById(queuedActiveDescendant.current) : null;
    if (curFocusedNode) {
      let target = e.target;
      queueMicrotask(() => {
        (0, $55f9b1ae81f22853$export$6c5dc7e81d2cc29a)(target, curFocusedNode);
        (0, $55f9b1ae81f22853$export$2b35b76d2e30e129)(curFocusedNode, target);
      });
    }
  };
  var _state_focusedNodeId;
  return {
    textFieldProps: {
      value: state.inputValue,
      onChange,
      onKeyDown,
      autoComplete: "off",
      "aria-haspopup": "listbox",
      "aria-controls": collectionId,
      // TODO: readd proper logic for completionMode = complete (aria-autocomplete: both)
      "aria-autocomplete": "list",
      "aria-activedescendant": (_state_focusedNodeId = state.focusedNodeId) !== null && _state_focusedNodeId !== void 0 ? _state_focusedNodeId : void 0,
      // This disable's iOS's autocorrect suggestions, since the autocomplete provides its own suggestions.
      autoCorrect: "off",
      // This disable's the macOS Safari spell check auto corrections.
      spellCheck: "false",
      enterKeyHint: "go",
      onBlur,
      onFocus
    },
    collectionProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(collectionProps, {
      shouldUseVirtualFocus,
      disallowTypeAhead: true
    }),
    collectionRef: mergedCollectionRef,
    filter: filter != null ? filterFn : void 0
  };
}

// node_modules/@react-stately/autocomplete/dist/useAutocompleteState.mjs
var import_react185 = __toESM(require_react(), 1);
function $94680be9a48a8f2d$export$ce1595f6e1a63433(props) {
  let { onInputChange: propsOnInputChange, inputValue: propsInputValue, defaultInputValue: propsDefaultInputValue = "" } = props;
  let onInputChange = (value) => {
    if (propsOnInputChange) propsOnInputChange(value);
  };
  let [focusedNodeId, setFocusedNodeId] = (0, import_react185.useState)(null);
  let [inputValue, setInputValue] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(propsInputValue, propsDefaultInputValue, onInputChange);
  return {
    inputValue,
    setInputValue,
    focusedNodeId,
    setFocusedNodeId
  };
}

// node_modules/react-aria-components/dist/Autocomplete.mjs
var import_react186 = __toESM(require_react(), 1);
var $d2f53cda644affe3$export$36e687af51cd0967 = (0, import_react186.createContext)(null);
var $d2f53cda644affe3$export$68ee3368b6d68148 = (0, import_react186.createContext)(null);
var $d2f53cda644affe3$export$65d2a03b8800d6e3 = (0, import_react186.createContext)(null);
function $d2f53cda644affe3$export$2f2b9559550c7bbc(props) {
  let ctx = (0, $64fa3d84918910a7$export$fabf2dc03a41866e)($d2f53cda644affe3$export$36e687af51cd0967, props.slot);
  props = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(ctx, props);
  let { filter, disableAutoFocusFirst } = props;
  let state = (0, $94680be9a48a8f2d$export$ce1595f6e1a63433)(props);
  let inputRef = (0, import_react186.useRef)(null);
  let collectionRef = (0, import_react186.useRef)(null);
  let { textFieldProps, collectionProps, collectionRef: mergedCollectionRef, filter: filterFn } = (0, $48f6ba390f8c5b59$export$1e40b3ca02d92d21)({
    ...(0, $64fa3d84918910a7$export$ef03459518577ad4)(props),
    filter,
    disableAutoFocusFirst,
    inputRef,
    collectionRef
  }, state);
  return (0, import_react186.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        $d2f53cda644affe3$export$68ee3368b6d68148,
        state
      ],
      [
        (0, $440f4836bcb56932$export$d1c4e4c63cb03a11),
        textFieldProps
      ],
      [
        (0, $bcdf0525bf22703d$export$2129e27b3ef0d483),
        textFieldProps
      ],
      [
        (0, $3985021b0ad6602f$export$37fb8590cf2c088c),
        {
          ref: inputRef
        }
      ],
      [
        $d2f53cda644affe3$export$65d2a03b8800d6e3,
        {
          filter: filterFn,
          collectionProps,
          collectionRef: mergedCollectionRef
        }
      ]
    ]
  }, props.children);
}

// node_modules/react-aria-components/dist/Collection.mjs
var import_react187 = __toESM(require_react(), 1);
var $7135fc7d473fd974$export$d40e14dec8b060a8 = (0, import_react187.createContext)(null);
var $7135fc7d473fd974$export$6e2c8f0811a474ce = (0, $e1995378a142960e$export$e953bb1cd0f19726)("section", (props, ref, section) => {
  let { name, render } = (0, import_react187.useContext)($7135fc7d473fd974$export$d40e14dec8b060a8);
  if (true) console.warn(`<Section> is deprecated. Please use <${name}> instead.`);
  return render(props, ref, section, "react-aria-Section");
});
var $7135fc7d473fd974$export$a164736487e3f0ae = {
  CollectionRoot({ collection, renderDropIndicator }) {
    return $7135fc7d473fd974$var$useCollectionRender(collection, null, renderDropIndicator);
  },
  CollectionBranch({ collection, parent, renderDropIndicator }) {
    return $7135fc7d473fd974$var$useCollectionRender(collection, parent, renderDropIndicator);
  }
};
function $7135fc7d473fd974$var$useCollectionRender(collection, parent, renderDropIndicator) {
  return (0, $e948873055cbafe4$export$727c8fc270210f13)({
    items: parent ? collection.getChildren(parent.key) : collection,
    dependencies: [
      renderDropIndicator
    ],
    children(node) {
      let rendered = node.render(node);
      if (!renderDropIndicator || node.type !== "item") return rendered;
      return (0, import_react187.default).createElement((0, import_react187.default).Fragment, null, renderDropIndicator({
        type: "item",
        key: node.key,
        dropPosition: "before"
      }), rendered, $7135fc7d473fd974$export$2dbbd341daed716d(collection, node, renderDropIndicator));
    }
  });
}
function $7135fc7d473fd974$export$2dbbd341daed716d(collection, node, renderDropIndicator) {
  let key = node.key;
  let keyAfter = collection.getKeyAfter(key);
  let nextItemInFlattenedCollection = keyAfter != null ? collection.getItem(keyAfter) : null;
  while (nextItemInFlattenedCollection != null && nextItemInFlattenedCollection.type !== "item") {
    keyAfter = collection.getKeyAfter(nextItemInFlattenedCollection.key);
    nextItemInFlattenedCollection = keyAfter != null ? collection.getItem(keyAfter) : null;
  }
  let nextItemInSameLevel = node.nextKey != null ? collection.getItem(node.nextKey) : null;
  while (nextItemInSameLevel != null && nextItemInSameLevel.type !== "item") nextItemInSameLevel = nextItemInSameLevel.nextKey != null ? collection.getItem(nextItemInSameLevel.nextKey) : null;
  let afterIndicators = [];
  if (nextItemInSameLevel == null) {
    let current = node;
    while (current && (!nextItemInFlattenedCollection || current.parentKey !== nextItemInFlattenedCollection.parentKey && nextItemInFlattenedCollection.level < current.level)) {
      let indicator = renderDropIndicator({
        type: "item",
        key: current.key,
        dropPosition: "after"
      });
      if ((0, import_react187.isValidElement)(indicator)) afterIndicators.push((0, import_react187.cloneElement)(indicator, {
        key: `${current.key}-after`
      }));
      current = current.parentKey != null ? collection.getItem(current.parentKey) : null;
    }
  }
  return afterIndicators;
}
var $7135fc7d473fd974$export$4feb769f8ddf26c5 = (0, import_react187.createContext)($7135fc7d473fd974$export$a164736487e3f0ae);
function $7135fc7d473fd974$export$90e00781bc59d8f9(focusedKey) {
  return (0, import_react187.useMemo)(() => focusedKey != null ? /* @__PURE__ */ new Set([
    focusedKey
  ]) : null, [
    focusedKey
  ]);
}

// node_modules/react-aria-components/dist/Link.mjs
var import_react188 = __toESM(require_react(), 1);
var $4f118338184dc1d9$export$e2509388b49734e7 = (0, import_react188.createContext)(null);
var $4f118338184dc1d9$export$a6c7ac8248d6e38a = (0, import_react188.forwardRef)(function Link(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $4f118338184dc1d9$export$e2509388b49734e7);
  let ElementType = props.href && !props.isDisabled ? "a" : "span";
  let { linkProps, isPressed } = (0, $298d61e98472621b$export$dcf14c9974fe2767)({
    ...props,
    elementType: ElementType
  }, ref);
  let { hoverProps, isHovered } = (0, $6179b936705e76d3$export$ae780daf29e6d456)(props);
  let { focusProps, isFocused, isFocusVisible } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)();
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    defaultClassName: "react-aria-Link",
    values: {
      isCurrent: !!props["aria-current"],
      isDisabled: props.isDisabled || false,
      isPressed,
      isHovered,
      isFocused,
      isFocusVisible
    }
  });
  return (0, import_react188.default).createElement(ElementType, {
    ref,
    slot: props.slot || void 0,
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(renderProps, linkProps, hoverProps, focusProps),
    "data-focused": isFocused || void 0,
    "data-hovered": isHovered || void 0,
    "data-pressed": isPressed || void 0,
    "data-focus-visible": isFocusVisible || void 0,
    "data-current": !!props["aria-current"] || void 0,
    "data-disabled": props.isDisabled || void 0
  }, renderProps.children);
});

// node_modules/react-aria-components/dist/Breadcrumbs.mjs
var import_react189 = __toESM(require_react(), 1);
var $778035c5624f61e7$export$65596d3621b0a4a0 = (0, import_react189.createContext)(null);
var $778035c5624f61e7$export$2dc68d50d56fbbd = (0, import_react189.forwardRef)(function Breadcrumbs(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $778035c5624f61e7$export$65596d3621b0a4a0);
  let { CollectionRoot } = (0, import_react189.useContext)((0, $7135fc7d473fd974$export$4feb769f8ddf26c5));
  let { navProps } = (0, $848231d7a2b3998e$export$8cefe241bd876ca0)(props);
  return (0, import_react189.default).createElement((0, $e1995378a142960e$export$bf788dd355e3a401), {
    content: (0, import_react189.default).createElement((0, $e1995378a142960e$export$fb8073518f34e6ec), props)
  }, (collection) => {
    var _props_className;
    return (0, import_react189.default).createElement("ol", {
      ref,
      ...navProps,
      slot: props.slot || void 0,
      style: props.style,
      className: (_props_className = props.className) !== null && _props_className !== void 0 ? _props_className : "react-aria-Breadcrumbs"
    }, (0, import_react189.default).createElement($778035c5624f61e7$export$65596d3621b0a4a0.Provider, {
      value: props
    }, (0, import_react189.default).createElement(CollectionRoot, {
      collection
    })));
  });
});
var $778035c5624f61e7$export$dabcc1ec9dd9d1cc = (0, $e1995378a142960e$export$18af5c7a9e9b3664)("item", function Breadcrumb(props, ref, node) {
  let isCurrent = node.nextKey == null;
  let { isDisabled, onAction } = (0, $64fa3d84918910a7$export$fabf2dc03a41866e)($778035c5624f61e7$export$65596d3621b0a4a0);
  let linkProps = {
    "aria-current": isCurrent ? "page" : null,
    isDisabled: isDisabled || isCurrent,
    onPress: () => onAction === null || onAction === void 0 ? void 0 : onAction(node.key)
  };
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...node.props,
    children: node.rendered,
    values: {
      isDisabled: isDisabled || isCurrent,
      isCurrent
    },
    defaultClassName: "react-aria-Breadcrumb"
  });
  return (0, import_react189.default).createElement("li", {
    ...(0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props),
    ...renderProps,
    ref,
    "data-disabled": isDisabled || isCurrent || void 0,
    "data-current": isCurrent || void 0
  }, (0, import_react189.default).createElement((0, $4f118338184dc1d9$export$e2509388b49734e7).Provider, {
    value: linkProps
  }, renderProps.children));
});

// node_modules/react-aria-components/dist/Calendar.mjs
var import_react190 = __toESM(require_react(), 1);
var $dfd62f934fc76fed$export$3b805cea1f178355 = (0, import_react190.createContext)(null);
var $dfd62f934fc76fed$export$233dd9682e1ad64b = (0, import_react190.createContext)(null);
var $dfd62f934fc76fed$export$9e31dcedda1dadc7 = (0, import_react190.createContext)(null);
var $dfd62f934fc76fed$export$5e0fc348c00f87a0 = (0, import_react190.createContext)(null);
var $dfd62f934fc76fed$export$e1aef45b828286de = (0, import_react190.forwardRef)(function Calendar(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $dfd62f934fc76fed$export$3b805cea1f178355);
  let { locale } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let state = (0, $131cf43a05231e1e$export$6d095e787d2b5e1f)({
    ...props,
    locale,
    createCalendar: props.createCalendar || (0, $64244302c3013299$export$dd0bbc9b26defe37)
  });
  let { calendarProps, prevButtonProps, nextButtonProps, errorMessageProps, title } = (0, $9942cad8a072a530$export$3ee915f8151bd4f1)(props, state);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    values: {
      state,
      isDisabled: props.isDisabled || false,
      isInvalid: state.isValueInvalid
    },
    defaultClassName: "react-aria-Calendar"
  });
  return (0, import_react190.default).createElement("div", {
    ...renderProps,
    ...calendarProps,
    ref,
    slot: props.slot || void 0,
    "data-disabled": props.isDisabled || void 0,
    "data-invalid": state.isValueInvalid || void 0
  }, (0, import_react190.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        (0, $d2b4bc8c273e7be6$export$24d547caef80ccd1),
        {
          slots: {
            previous: prevButtonProps,
            next: nextButtonProps
          }
        }
      ],
      [
        (0, $4e85f108e88277b8$export$d688439359537581),
        {
          "aria-hidden": true,
          level: 2,
          children: title
        }
      ],
      [
        $dfd62f934fc76fed$export$9e31dcedda1dadc7,
        state
      ],
      [
        $dfd62f934fc76fed$export$3b805cea1f178355,
        props
      ],
      [
        (0, $514c0188e459b4c0$export$9afb8bc826b033ea),
        {
          slots: {
            errorMessage: errorMessageProps
          }
        }
      ]
    ]
  }, (0, import_react190.default).createElement((0, $5c3e21d68f1c4674$export$439d29a4e110a164), null, (0, import_react190.default).createElement("h2", null, calendarProps["aria-label"])), renderProps.children, (0, import_react190.default).createElement((0, $5c3e21d68f1c4674$export$439d29a4e110a164), null, (0, import_react190.default).createElement("button", {
    "aria-label": nextButtonProps["aria-label"],
    disabled: nextButtonProps.isDisabled,
    onClick: () => state.focusNextPage(),
    tabIndex: -1
  }))));
});
var $dfd62f934fc76fed$export$a4f5c8b89d277a8d = (0, import_react190.forwardRef)(function RangeCalendar(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $dfd62f934fc76fed$export$233dd9682e1ad64b);
  let { locale } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let state = (0, $9a36b6ba2fb1a7c5$export$9a987164d97ecc90)({
    ...props,
    locale,
    createCalendar: props.createCalendar || (0, $64244302c3013299$export$dd0bbc9b26defe37)
  });
  let { calendarProps, prevButtonProps, nextButtonProps, errorMessageProps, title } = (0, $46a4342aab3d8076$export$87e0539f600c24e5)(props, state, ref);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    values: {
      state,
      isDisabled: props.isDisabled || false,
      isInvalid: state.isValueInvalid
    },
    defaultClassName: "react-aria-RangeCalendar"
  });
  return (0, import_react190.default).createElement("div", {
    ...renderProps,
    ...calendarProps,
    ref,
    slot: props.slot || void 0,
    "data-disabled": props.isDisabled || void 0,
    "data-invalid": state.isValueInvalid || void 0
  }, (0, import_react190.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        (0, $d2b4bc8c273e7be6$export$24d547caef80ccd1),
        {
          slots: {
            previous: prevButtonProps,
            next: nextButtonProps
          }
        }
      ],
      [
        (0, $4e85f108e88277b8$export$d688439359537581),
        {
          "aria-hidden": true,
          level: 2,
          children: title
        }
      ],
      [
        $dfd62f934fc76fed$export$5e0fc348c00f87a0,
        state
      ],
      [
        $dfd62f934fc76fed$export$233dd9682e1ad64b,
        props
      ],
      [
        (0, $514c0188e459b4c0$export$9afb8bc826b033ea),
        {
          slots: {
            errorMessage: errorMessageProps
          }
        }
      ]
    ]
  }, (0, import_react190.default).createElement((0, $5c3e21d68f1c4674$export$439d29a4e110a164), null, (0, import_react190.default).createElement("h2", null, calendarProps["aria-label"])), renderProps.children, (0, import_react190.default).createElement((0, $5c3e21d68f1c4674$export$439d29a4e110a164), null, (0, import_react190.default).createElement("button", {
    "aria-label": nextButtonProps["aria-label"],
    disabled: nextButtonProps.isDisabled,
    onClick: () => state.focusNextPage(),
    tabIndex: -1
  }))));
});
var $dfd62f934fc76fed$var$InternalCalendarGridContext = (0, import_react190.createContext)(null);
var $dfd62f934fc76fed$export$5bd780d491cfc46c = (0, import_react190.forwardRef)(function CalendarGrid(props, ref) {
  let calendarState = (0, import_react190.useContext)($dfd62f934fc76fed$export$9e31dcedda1dadc7);
  let rangeCalendarState = (0, import_react190.useContext)($dfd62f934fc76fed$export$5e0fc348c00f87a0);
  let calenderProps = (0, $64fa3d84918910a7$export$fabf2dc03a41866e)($dfd62f934fc76fed$export$3b805cea1f178355);
  let rangeCalenderProps = (0, $64fa3d84918910a7$export$fabf2dc03a41866e)($dfd62f934fc76fed$export$233dd9682e1ad64b);
  let state = calendarState !== null && calendarState !== void 0 ? calendarState : rangeCalendarState;
  let startDate = state.visibleRange.start;
  if (props.offset) startDate = startDate.add(props.offset);
  var _calenderProps_firstDayOfWeek;
  let firstDayOfWeek = (_calenderProps_firstDayOfWeek = calenderProps === null || calenderProps === void 0 ? void 0 : calenderProps.firstDayOfWeek) !== null && _calenderProps_firstDayOfWeek !== void 0 ? _calenderProps_firstDayOfWeek : rangeCalenderProps === null || rangeCalenderProps === void 0 ? void 0 : rangeCalenderProps.firstDayOfWeek;
  let { gridProps, headerProps, weekDays, weeksInMonth } = (0, $e3031d1f8c9d64eb$export$cb95147730a423f5)({
    startDate,
    endDate: (0, $14e0f24ef4ac5c92$export$a2258d9c4118825c)(startDate),
    weekdayStyle: props.weekdayStyle,
    firstDayOfWeek
  }, state);
  var _props_className;
  return (0, import_react190.default).createElement($dfd62f934fc76fed$var$InternalCalendarGridContext.Provider, {
    value: {
      headerProps,
      weekDays,
      startDate,
      weeksInMonth
    }
  }, (0, import_react190.default).createElement("table", {
    ...(0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props),
    ...gridProps,
    ref,
    style: props.style,
    className: (_props_className = props.className) !== null && _props_className !== void 0 ? _props_className : "react-aria-CalendarGrid"
  }, typeof props.children !== "function" ? props.children : (0, import_react190.default).createElement((0, import_react190.default).Fragment, null, (0, import_react190.default).createElement($dfd62f934fc76fed$export$22e2d15eaa4d2377, null, (day) => (0, import_react190.default).createElement($dfd62f934fc76fed$export$ad2135cac3a11b3d, null, day)), (0, import_react190.default).createElement($dfd62f934fc76fed$export$e11f8ba65d857bff, null, props.children))));
});
function $dfd62f934fc76fed$var$CalendarGridHeader(props, ref) {
  let { children, style, className } = props;
  let { headerProps, weekDays } = (0, import_react190.useContext)($dfd62f934fc76fed$var$InternalCalendarGridContext);
  return (0, import_react190.default).createElement("thead", {
    ...(0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props),
    ...headerProps,
    ref,
    style,
    className: className || "react-aria-CalendarGridHeader"
  }, (0, import_react190.default).createElement("tr", null, weekDays.map((day, key) => (0, import_react190.default).cloneElement(children(day), {
    key
  }))));
}
var $dfd62f934fc76fed$export$22e2d15eaa4d2377 = (0, import_react190.forwardRef)($dfd62f934fc76fed$var$CalendarGridHeader);
function $dfd62f934fc76fed$var$CalendarHeaderCell(props, ref) {
  let { children, style, className } = props;
  return (0, import_react190.default).createElement("th", {
    ...(0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props),
    ref,
    style,
    className: className || "react-aria-CalendarHeaderCell"
  }, children);
}
var $dfd62f934fc76fed$export$ad2135cac3a11b3d = (0, import_react190.forwardRef)($dfd62f934fc76fed$var$CalendarHeaderCell);
function $dfd62f934fc76fed$var$CalendarGridBody(props, ref) {
  let { children, style, className } = props;
  let calendarState = (0, import_react190.useContext)($dfd62f934fc76fed$export$9e31dcedda1dadc7);
  let rangeCalendarState = (0, import_react190.useContext)($dfd62f934fc76fed$export$5e0fc348c00f87a0);
  let state = calendarState !== null && calendarState !== void 0 ? calendarState : rangeCalendarState;
  let { startDate, weeksInMonth } = (0, import_react190.useContext)($dfd62f934fc76fed$var$InternalCalendarGridContext);
  return (0, import_react190.default).createElement("tbody", {
    ...(0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props),
    ref,
    style,
    className: className || "react-aria-CalendarGridBody"
  }, [
    ...new Array(weeksInMonth).keys()
  ].map((weekIndex) => (0, import_react190.default).createElement("tr", {
    key: weekIndex
  }, state.getDatesInWeek(weekIndex, startDate).map((date, i) => date ? (0, import_react190.default).cloneElement(children(date), {
    key: i
  }) : (0, import_react190.default).createElement("td", {
    key: i
  })))));
}
var $dfd62f934fc76fed$export$e11f8ba65d857bff = (0, import_react190.forwardRef)($dfd62f934fc76fed$var$CalendarGridBody);
var $dfd62f934fc76fed$export$5d847498420df57b = (0, import_react190.forwardRef)(function CalendarCell({ date, ...otherProps }, ref) {
  let calendarState = (0, import_react190.useContext)($dfd62f934fc76fed$export$9e31dcedda1dadc7);
  let rangeCalendarState = (0, import_react190.useContext)($dfd62f934fc76fed$export$5e0fc348c00f87a0);
  let state = calendarState !== null && calendarState !== void 0 ? calendarState : rangeCalendarState;
  var _useContext;
  let { startDate: currentMonth } = (_useContext = (0, import_react190.useContext)($dfd62f934fc76fed$var$InternalCalendarGridContext)) !== null && _useContext !== void 0 ? _useContext : {
    startDate: state.visibleRange.start
  };
  let buttonRef = (0, import_react190.useRef)(null);
  let { cellProps, buttonProps, ...states } = (0, $36a0ac60f04457c5$export$136073280381448e)({
    date
  }, state, buttonRef);
  let { hoverProps, isHovered } = (0, $6179b936705e76d3$export$ae780daf29e6d456)({
    ...otherProps,
    isDisabled: states.isDisabled
  });
  let { focusProps, isFocusVisible } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)();
  isFocusVisible && (isFocusVisible = states.isFocused);
  let isOutsideMonth = !(0, $14e0f24ef4ac5c92$export$a18c89cbd24170ff)(currentMonth, date);
  let isSelectionStart = false;
  let isSelectionEnd = false;
  if ("highlightedRange" in state && state.highlightedRange) {
    isSelectionStart = (0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(date, state.highlightedRange.start);
    isSelectionEnd = (0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(date, state.highlightedRange.end);
  }
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...otherProps,
    defaultChildren: states.formattedDate,
    defaultClassName: "react-aria-CalendarCell",
    values: {
      date,
      isHovered,
      isOutsideMonth,
      isFocusVisible,
      isSelectionStart,
      isSelectionEnd,
      ...states
    }
  });
  let dataAttrs = {
    "data-focused": states.isFocused || void 0,
    "data-hovered": isHovered || void 0,
    "data-pressed": states.isPressed || void 0,
    "data-unavailable": states.isUnavailable || void 0,
    "data-disabled": states.isDisabled || void 0,
    "data-focus-visible": isFocusVisible || void 0,
    "data-outside-visible-range": states.isOutsideVisibleRange || void 0,
    "data-outside-month": isOutsideMonth || void 0,
    "data-selected": states.isSelected || void 0,
    "data-selection-start": isSelectionStart || void 0,
    "data-selection-end": isSelectionEnd || void 0,
    "data-invalid": states.isInvalid || void 0
  };
  return (0, import_react190.default).createElement("td", {
    ...cellProps,
    ref
  }, (0, import_react190.default).createElement("div", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)((0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(otherProps), buttonProps, focusProps, hoverProps, dataAttrs, renderProps),
    ref: buttonRef
  }));
});

// node_modules/react-aria-components/dist/Checkbox.mjs
var import_react191 = __toESM(require_react(), 1);
var $bc237834342dbd75$export$baf37c4be89255b8 = (0, import_react191.createContext)(null);
var $bc237834342dbd75$export$139c5b8563afc1fc = (0, import_react191.createContext)(null);
var $bc237834342dbd75$export$4aa08d5625cb8ead = (0, import_react191.forwardRef)(function CheckboxGroup(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $bc237834342dbd75$export$baf37c4be89255b8);
  let { validationBehavior: formValidationBehavior } = (0, $64fa3d84918910a7$export$fabf2dc03a41866e)((0, $d3e0e05bdfcf66bd$export$c24727297075ec6a)) || {};
  var _props_validationBehavior, _ref;
  let validationBehavior = (_ref = (_props_validationBehavior = props.validationBehavior) !== null && _props_validationBehavior !== void 0 ? _props_validationBehavior : formValidationBehavior) !== null && _ref !== void 0 ? _ref : "native";
  let state = (0, $587d3ad58be6d31f$export$daff6da51032a415)({
    ...props,
    validationBehavior
  });
  let [labelRef, label] = (0, $64fa3d84918910a7$export$9d4c57ee4c6ffdd8)(!props["aria-label"] && !props["aria-labelledby"]);
  let { groupProps, labelProps, descriptionProps, errorMessageProps, ...validation } = (0, $1e9fce0cfacc738b$export$49ff6f28c54f1cbe)({
    ...props,
    label,
    validationBehavior
  }, state);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    values: {
      isDisabled: state.isDisabled,
      isReadOnly: state.isReadOnly,
      isRequired: props.isRequired || false,
      isInvalid: state.isInvalid,
      state
    },
    defaultClassName: "react-aria-CheckboxGroup"
  });
  return (0, import_react191.default).createElement("div", {
    ...groupProps,
    ...renderProps,
    ref,
    slot: props.slot || void 0,
    "data-readonly": state.isReadOnly || void 0,
    "data-required": props.isRequired || void 0,
    "data-invalid": state.isInvalid || void 0,
    "data-disabled": props.isDisabled || void 0
  }, (0, import_react191.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        $bc237834342dbd75$export$139c5b8563afc1fc,
        state
      ],
      [
        (0, $01b77f81d0f07f68$export$75b6ee27786ba447),
        {
          ...labelProps,
          ref: labelRef,
          elementType: "span"
        }
      ],
      [
        (0, $514c0188e459b4c0$export$9afb8bc826b033ea),
        {
          slots: {
            description: descriptionProps,
            errorMessage: errorMessageProps
          }
        }
      ],
      [
        (0, $ee014567cb39d3f0$export$ff05c3ac10437e03),
        validation
      ]
    ]
  }, renderProps.children));
});
var $bc237834342dbd75$export$48513f6b9f8ce62d = (0, import_react191.forwardRef)(function Checkbox(props, ref) {
  let { inputRef: userProvidedInputRef = null, ...otherProps } = props;
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(otherProps, ref, (0, $4e85f108e88277b8$export$b085522c77523c51));
  let { validationBehavior: formValidationBehavior } = (0, $64fa3d84918910a7$export$fabf2dc03a41866e)((0, $d3e0e05bdfcf66bd$export$c24727297075ec6a)) || {};
  var _props_validationBehavior, _ref;
  let validationBehavior = (_ref = (_props_validationBehavior = props.validationBehavior) !== null && _props_validationBehavior !== void 0 ? _props_validationBehavior : formValidationBehavior) !== null && _ref !== void 0 ? _ref : "native";
  let groupState = (0, import_react191.useContext)($bc237834342dbd75$export$139c5b8563afc1fc);
  let inputRef = (0, $df56164dff5785e2$export$4338b53315abf666)((0, import_react191.useMemo)(() => (0, $5dc95899b306f630$export$c9058316764c140e)(userProvidedInputRef, props.inputRef !== void 0 ? props.inputRef : null), [
    userProvidedInputRef,
    props.inputRef
  ]));
  let { labelProps, inputProps, isSelected, isDisabled, isReadOnly, isPressed, isInvalid } = groupState ? (0, $fba3e38d5ca8983f$export$353b32fc6898d37d)({
    ...(0, $64fa3d84918910a7$export$ef03459518577ad4)(props),
    // Value is optional for standalone checkboxes, but required for CheckboxGroup items;
    // it's passed explicitly here to avoid typescript error (requires ignore).
    // @ts-ignore
    value: props.value,
    // ReactNode type doesn't allow function children.
    children: typeof props.children === "function" ? true : props.children
  }, groupState, inputRef) : (0, $406796ff087fe49b$export$e375f10ce42261c5)({
    ...(0, $64fa3d84918910a7$export$ef03459518577ad4)(props),
    children: typeof props.children === "function" ? true : props.children,
    validationBehavior
  }, (0, $3017fa7ffdddec74$export$8042c6c013fd5226)(props), inputRef);
  let { isFocused, isFocusVisible, focusProps } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)();
  let isInteractionDisabled = isDisabled || isReadOnly;
  let { hoverProps, isHovered } = (0, $6179b936705e76d3$export$ae780daf29e6d456)({
    ...props,
    isDisabled: isInteractionDisabled
  });
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    defaultClassName: "react-aria-Checkbox",
    values: {
      isSelected,
      isIndeterminate: props.isIndeterminate || false,
      isPressed,
      isHovered,
      isFocused,
      isFocusVisible,
      isDisabled,
      isReadOnly,
      isInvalid,
      isRequired: props.isRequired || false
    }
  });
  let DOMProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  delete DOMProps.id;
  return (0, import_react191.default).createElement("label", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(DOMProps, labelProps, hoverProps, renderProps),
    ref,
    slot: props.slot || void 0,
    "data-selected": isSelected || void 0,
    "data-indeterminate": props.isIndeterminate || void 0,
    "data-pressed": isPressed || void 0,
    "data-hovered": isHovered || void 0,
    "data-focused": isFocused || void 0,
    "data-focus-visible": isFocusVisible || void 0,
    "data-disabled": isDisabled || void 0,
    "data-readonly": isReadOnly || void 0,
    "data-invalid": isInvalid || void 0,
    "data-required": props.isRequired || void 0
  }, (0, import_react191.default).createElement((0, $5c3e21d68f1c4674$export$439d29a4e110a164), {
    elementType: "span"
  }, (0, import_react191.default).createElement("input", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(inputProps, focusProps),
    ref: inputRef
  })), renderProps.children);
});

// node_modules/react-aria-components/dist/ColorThumb.mjs
var import_react192 = __toESM(require_react(), 1);
var $e2b71ec1d6016406$export$c80c0ea2ca5cb846 = (0, import_react192.createContext)(null);
var $e2b71ec1d6016406$export$a3cc47cee1c1ccc = (0, import_react192.forwardRef)(function ColorThumb(props, ref) {
  let { state, thumbProps, inputXRef, inputYRef, xInputProps, yInputProps, isDisabled = false } = (0, import_react192.useContext)($e2b71ec1d6016406$export$c80c0ea2ca5cb846);
  let { focusProps, isFocused, isFocusVisible } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)();
  let { hoverProps, isHovered } = (0, $6179b936705e76d3$export$ae780daf29e6d456)(props);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    defaultClassName: "react-aria-ColorThumb",
    defaultStyle: {
      ...thumbProps.style,
      backgroundColor: state.getDisplayColor().toString()
    },
    values: {
      color: state.getDisplayColor(),
      isHovered,
      isDragging: state.isDragging,
      isFocused,
      isFocusVisible,
      isDisabled
    }
  });
  let DOMProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  delete DOMProps.id;
  return (0, import_react192.default).createElement("div", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(thumbProps, hoverProps, DOMProps),
    ...renderProps,
    ref,
    "data-hovered": isHovered || void 0,
    "data-dragging": state.isDragging || void 0,
    "data-focused": isFocused || void 0,
    "data-focus-visible": isFocusVisible || void 0,
    "data-disabled": isDisabled || void 0
  }, (0, import_react192.default).createElement("input", {
    ref: inputXRef,
    ...xInputProps,
    ...focusProps
  }), yInputProps && (0, import_react192.default).createElement("input", {
    ref: inputYRef,
    ...yInputProps,
    ...focusProps
  }), renderProps.children);
});

// node_modules/react-aria-components/dist/ColorArea.mjs
var import_react193 = __toESM(require_react(), 1);
var $0de070065d44825d$export$6b32221de49982e = (0, import_react193.createContext)(null);
var $0de070065d44825d$export$b2103f68a961418e = (0, import_react193.forwardRef)(function ColorArea(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, (0, $4e85f108e88277b8$export$ebe63fadcdce34ed));
  let inputXRef = (0, import_react193.useRef)(null);
  let inputYRef = (0, import_react193.useRef)(null);
  let state = (0, $6e14a98a7f67141d$export$6df7f0e2cabc7eef)(props);
  let { colorAreaProps, xInputProps, yInputProps, thumbProps } = (0, $60bd7d6e45dcddfa$export$2f92a7a615a014f6)({
    ...props,
    inputXRef,
    inputYRef,
    containerRef: ref
  }, state);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    defaultClassName: "react-aria-ColorArea",
    defaultStyle: colorAreaProps.style,
    values: {
      state,
      isDisabled: props.isDisabled || false
    }
  });
  let DOMProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  delete DOMProps.id;
  return (0, import_react193.default).createElement("div", {
    ref,
    ...colorAreaProps,
    ...DOMProps,
    ...renderProps,
    slot: props.slot || void 0,
    "data-disabled": props.isDisabled || void 0
  }, (0, import_react193.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        $0de070065d44825d$export$6b32221de49982e,
        state
      ],
      [
        (0, $e2b71ec1d6016406$export$c80c0ea2ca5cb846),
        {
          state,
          thumbProps,
          inputXRef,
          xInputProps,
          inputYRef,
          yInputProps,
          isDisabled: props.isDisabled
        }
      ]
    ]
  }, renderProps.children));
});

// node_modules/react-aria-components/dist/ColorField.mjs
var import_react194 = __toESM(require_react(), 1);
var $3ada01a82feafb94$export$96b6d32b05a1a8ed = (0, import_react194.createContext)(null);
var $3ada01a82feafb94$export$b865d4358897bb17 = (0, import_react194.forwardRef)(function ColorField(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, (0, $4e85f108e88277b8$export$44644b8a16031b5b));
  if (props.channel) return (0, import_react194.default).createElement($3ada01a82feafb94$var$ColorChannelField, {
    ...props,
    channel: props.channel,
    forwardedRef: ref
  });
  else return (0, import_react194.default).createElement($3ada01a82feafb94$var$HexColorField, {
    ...props,
    forwardedRef: ref
  });
});
function $3ada01a82feafb94$var$ColorChannelField(props) {
  let { locale } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let state = (0, $31a863bb88e75dd6$export$b9fc0d69c9190c4a)({
    ...props,
    locale
  });
  let inputRef = (0, import_react194.useRef)(null);
  let [labelRef, label] = (0, $64fa3d84918910a7$export$9d4c57ee4c6ffdd8)(!props["aria-label"] && !props["aria-labelledby"]);
  var _props_validationBehavior;
  let { labelProps, inputProps, descriptionProps, errorMessageProps, ...validation } = (0, $5e632d1ff0188f00$export$e55dd820142d3131)({
    ...(0, $64fa3d84918910a7$export$ef03459518577ad4)(props),
    label,
    validationBehavior: (_props_validationBehavior = props.validationBehavior) !== null && _props_validationBehavior !== void 0 ? _props_validationBehavior : "native"
  }, state, inputRef);
  return (0, import_react194.default).createElement((0, import_react194.default).Fragment, null, $3ada01a82feafb94$var$useChildren(props, state, props.forwardedRef, inputProps, inputRef, labelProps, labelRef, descriptionProps, errorMessageProps, validation), props.name && (0, import_react194.default).createElement("input", {
    type: "hidden",
    name: props.name,
    value: isNaN(state.numberValue) ? "" : state.numberValue
  }));
}
function $3ada01a82feafb94$var$HexColorField(props) {
  var _props_validationBehavior;
  let state = (0, $b335ada08155d9c0$export$d52a01683abdfcd6)({
    ...props,
    validationBehavior: (_props_validationBehavior = props.validationBehavior) !== null && _props_validationBehavior !== void 0 ? _props_validationBehavior : "native"
  });
  let inputRef = (0, import_react194.useRef)(null);
  let [labelRef, label] = (0, $64fa3d84918910a7$export$9d4c57ee4c6ffdd8)(!props["aria-label"] && !props["aria-labelledby"]);
  var _props_validationBehavior1;
  let { labelProps, inputProps, descriptionProps, errorMessageProps, ...validation } = (0, $f6896b05b2ecad12$export$77e32ca575a28fdf)({
    ...(0, $64fa3d84918910a7$export$ef03459518577ad4)(props),
    label,
    validationBehavior: (_props_validationBehavior1 = props.validationBehavior) !== null && _props_validationBehavior1 !== void 0 ? _props_validationBehavior1 : "native"
  }, state, inputRef);
  return $3ada01a82feafb94$var$useChildren(props, state, props.forwardedRef, inputProps, inputRef, labelProps, labelRef, descriptionProps, errorMessageProps, validation);
}
function $3ada01a82feafb94$var$useChildren(props, state, ref, inputProps, inputRef, labelProps, labelRef, descriptionProps, errorMessageProps, validation) {
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    values: {
      state,
      channel: props.channel || "hex",
      isDisabled: props.isDisabled || false,
      isInvalid: validation.isInvalid || false
    },
    defaultClassName: "react-aria-ColorField"
  });
  let DOMProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  delete DOMProps.id;
  return (0, import_react194.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        $3ada01a82feafb94$export$96b6d32b05a1a8ed,
        state
      ],
      [
        (0, $3985021b0ad6602f$export$37fb8590cf2c088c),
        {
          ...inputProps,
          ref: inputRef
        }
      ],
      [
        (0, $01b77f81d0f07f68$export$75b6ee27786ba447),
        {
          ...labelProps,
          ref: labelRef
        }
      ],
      [
        (0, $514c0188e459b4c0$export$9afb8bc826b033ea),
        {
          slots: {
            description: descriptionProps,
            errorMessage: errorMessageProps
          }
        }
      ],
      [
        (0, $ee014567cb39d3f0$export$ff05c3ac10437e03),
        validation
      ]
    ]
  }, (0, import_react194.default).createElement("div", {
    ...DOMProps,
    ...renderProps,
    ref,
    slot: props.slot || void 0,
    "data-channel": props.channel || "hex",
    "data-disabled": props.isDisabled || void 0,
    "data-invalid": validation.isInvalid || void 0
  }));
}

// node_modules/react-aria-components/dist/ColorSwatch.mjs
var import_react195 = __toESM(require_react(), 1);
var $251c695a52d94a8d$export$83cc445538396800 = (0, import_react195.createContext)(null);
var $251c695a52d94a8d$export$cae13e90592f246a = (0, import_react195.forwardRef)(function ColorSwatch(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $251c695a52d94a8d$export$83cc445538396800);
  let { colorSwatchProps, color } = (0, $2993fcad7650b98d$export$9060ae606178d849)(props);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    defaultClassName: "react-aria-ColorSwatch",
    defaultStyle: colorSwatchProps.style,
    values: {
      color
    }
  });
  return (0, import_react195.default).createElement("div", {
    ...colorSwatchProps,
    ...renderProps,
    slot: props.slot || void 0,
    ref
  });
});

// node_modules/react-aria-components/dist/ar-AE.mjs
var $e038a7e7a6d81989$exports = {};
$e038a7e7a6d81989$exports = {
  "colorSwatchPicker": `تغييرات الألوان`,
  "dropzoneLabel": `DropZone`,
  "selectPlaceholder": `حدد عنصرًا`,
  "tableResizer": `أداة تغيير الحجم`
};

// node_modules/react-aria-components/dist/bg-BG.mjs
var $0ec14741b0133644$exports = {};
$0ec14741b0133644$exports = {
  "colorSwatchPicker": `Цветови мостри`,
  "dropzoneLabel": `DropZone`,
  "selectPlaceholder": `Изберете предмет`,
  "tableResizer": `Преоразмерител`
};

// node_modules/react-aria-components/dist/cs-CZ.mjs
var $642f7badf2405784$exports = {};
$642f7badf2405784$exports = {
  "colorSwatchPicker": `Vzorky barev`,
  "dropzoneLabel": `Místo pro přetažení`,
  "selectPlaceholder": `Vyberte položku`,
  "tableResizer": `Změna velikosti`
};

// node_modules/react-aria-components/dist/da-DK.mjs
var $30cee8d2535734ec$exports = {};
$30cee8d2535734ec$exports = {
  "colorSwatchPicker": `Farveprøver`,
  "dropzoneLabel": `DropZone`,
  "selectPlaceholder": `Vælg et element`,
  "tableResizer": `Størrelsesændring`
};

// node_modules/react-aria-components/dist/de-DE.mjs
var $c302d0504fca332a$exports = {};
$c302d0504fca332a$exports = {
  "colorSwatchPicker": `Farbfelder`,
  "dropzoneLabel": `Ablegebereich`,
  "selectPlaceholder": `Element wählen`,
  "tableResizer": `Größenanpassung`
};

// node_modules/react-aria-components/dist/el-GR.mjs
var $0d0703f2bd7e421c$exports = {};
$0d0703f2bd7e421c$exports = {
  "colorSwatchPicker": `Χρωματικά δείγματα`,
  "dropzoneLabel": `DropZone`,
  "selectPlaceholder": `Επιλέξτε ένα αντικείμενο`,
  "tableResizer": `Αλλαγή μεγέθους`
};

// node_modules/react-aria-components/dist/en-US.mjs
var $cafa55beb2fc5ef3$exports = {};
$cafa55beb2fc5ef3$exports = {
  "selectPlaceholder": `Select an item`,
  "tableResizer": `Resizer`,
  "dropzoneLabel": `DropZone`,
  "colorSwatchPicker": `Color swatches`
};

// node_modules/react-aria-components/dist/es-ES.mjs
var $18ac2ceede598103$exports = {};
$18ac2ceede598103$exports = {
  "colorSwatchPicker": `Muestras de colores`,
  "dropzoneLabel": `DropZone`,
  "selectPlaceholder": `Seleccionar un artículo`,
  "tableResizer": `Cambiador de tamaño`
};

// node_modules/react-aria-components/dist/et-EE.mjs
var $718705a15b8a633a$exports = {};
$718705a15b8a633a$exports = {
  "colorSwatchPicker": `Värvinäidised`,
  "dropzoneLabel": `DropZone`,
  "selectPlaceholder": `Valige üksus`,
  "tableResizer": `Suuruse muutja`
};

// node_modules/react-aria-components/dist/fi-FI.mjs
var $bf36dae9ecc81ce0$exports = {};
$bf36dae9ecc81ce0$exports = {
  "colorSwatchPicker": `Värimallit`,
  "dropzoneLabel": `DropZone`,
  "selectPlaceholder": `Valitse kohde`,
  "tableResizer": `Koon muuttaja`
};

// node_modules/react-aria-components/dist/fr-FR.mjs
var $0b4828edb010b855$exports = {};
$0b4828edb010b855$exports = {
  "colorSwatchPicker": `Échantillons de couleurs`,
  "dropzoneLabel": `DropZone`,
  "selectPlaceholder": `Sélectionner un élément`,
  "tableResizer": `Redimensionneur`
};

// node_modules/react-aria-components/dist/he-IL.mjs
var $0030f210b040e540$exports = {};
$0030f210b040e540$exports = {
  "colorSwatchPicker": `דוגמיות צבע`,
  "dropzoneLabel": `DropZone`,
  "selectPlaceholder": `בחר פריט`,
  "tableResizer": `שינוי גודל`
};

// node_modules/react-aria-components/dist/hr-HR.mjs
var $1f0ebacf5a0c0fa1$exports = {};
$1f0ebacf5a0c0fa1$exports = {
  "colorSwatchPicker": `Uzorci boja`,
  "dropzoneLabel": `Zona spuštanja`,
  "selectPlaceholder": `Odaberite stavku`,
  "tableResizer": `Promjena veličine`
};

// node_modules/react-aria-components/dist/hu-HU.mjs
var $3a706ba61f3d6bba$exports = {};
$3a706ba61f3d6bba$exports = {
  "colorSwatchPicker": `Színtárak`,
  "dropzoneLabel": `DropZone`,
  "selectPlaceholder": `Válasszon ki egy elemet`,
  "tableResizer": `Átméretező`
};

// node_modules/react-aria-components/dist/it-IT.mjs
var $0d17809e74607796$exports = {};
$0d17809e74607796$exports = {
  "colorSwatchPicker": `Campioni di colore`,
  "dropzoneLabel": `Zona di rilascio`,
  "selectPlaceholder": `Seleziona un elemento`,
  "tableResizer": `Ridimensionamento`
};

// node_modules/react-aria-components/dist/ja-JP.mjs
var $65a71f9a56f1398f$exports = {};
$65a71f9a56f1398f$exports = {
  "colorSwatchPicker": `カラースウォッチ`,
  "dropzoneLabel": `ドロップゾーン`,
  "selectPlaceholder": `項目を選択`,
  "tableResizer": `サイズ変更ツール`
};

// node_modules/react-aria-components/dist/ko-KR.mjs
var $e5efad074a74abef$exports = {};
$e5efad074a74abef$exports = {
  "colorSwatchPicker": `색상 견본`,
  "dropzoneLabel": `드롭 영역`,
  "selectPlaceholder": `항목 선택`,
  "tableResizer": `크기 조정기`
};

// node_modules/react-aria-components/dist/lt-LT.mjs
var $d70c2a849e55c607$exports = {};
$d70c2a849e55c607$exports = {
  "colorSwatchPicker": `Spalvų pavyzdžiai`,
  "dropzoneLabel": `„DropZone“`,
  "selectPlaceholder": `Pasirinkite elementą`,
  "tableResizer": `Dydžio keitiklis`
};

// node_modules/react-aria-components/dist/lv-LV.mjs
var $009bbbb440d0e907$exports = {};
$009bbbb440d0e907$exports = {
  "colorSwatchPicker": `Krāsu paraugi`,
  "dropzoneLabel": `DropZone`,
  "selectPlaceholder": `Izvēlēties vienumu`,
  "tableResizer": `Izmēra mainītājs`
};

// node_modules/react-aria-components/dist/nb-NO.mjs
var $9366fe642464ee83$exports = {};
$9366fe642464ee83$exports = {
  "colorSwatchPicker": `Fargekart`,
  "dropzoneLabel": `Droppsone`,
  "selectPlaceholder": `Velg et element`,
  "tableResizer": `Størrelsesendrer`
};

// node_modules/react-aria-components/dist/nl-NL.mjs
var $62f9bc1f98ea21de$exports = {};
$62f9bc1f98ea21de$exports = {
  "colorSwatchPicker": `kleurstalen`,
  "dropzoneLabel": `DropZone`,
  "selectPlaceholder": `Selecteer een item`,
  "tableResizer": `Resizer`
};

// node_modules/react-aria-components/dist/pl-PL.mjs
var $4ec2e5b6623b1b76$exports = {};
$4ec2e5b6623b1b76$exports = {
  "colorSwatchPicker": `Próbki kolorów`,
  "dropzoneLabel": `Strefa upuszczania`,
  "selectPlaceholder": `Wybierz element`,
  "tableResizer": `Zmiana rozmiaru`
};

// node_modules/react-aria-components/dist/pt-BR.mjs
var $e25098e26647cc04$exports = {};
$e25098e26647cc04$exports = {
  "colorSwatchPicker": `Amostras de cores`,
  "dropzoneLabel": `DropZone`,
  "selectPlaceholder": `Selecione um item`,
  "tableResizer": `Redimensionador`
};

// node_modules/react-aria-components/dist/pt-PT.mjs
var $dd39c57d242c8156$exports = {};
$dd39c57d242c8156$exports = {
  "colorSwatchPicker": `Amostras de cores`,
  "dropzoneLabel": `DropZone`,
  "selectPlaceholder": `Selecione um item`,
  "tableResizer": `Redimensionador`
};

// node_modules/react-aria-components/dist/ro-RO.mjs
var $3b4c1ba5afd57b35$exports = {};
$3b4c1ba5afd57b35$exports = {
  "colorSwatchPicker": `Specimene de culoare`,
  "dropzoneLabel": `Zonă de plasare`,
  "selectPlaceholder": `Selectați un element`,
  "tableResizer": `Instrument de redimensionare`
};

// node_modules/react-aria-components/dist/ru-RU.mjs
var $a455b2cda79eb746$exports = {};
$a455b2cda79eb746$exports = {
  "colorSwatchPicker": `Цветовые образцы`,
  "dropzoneLabel": `DropZone`,
  "selectPlaceholder": `Выберите элемент`,
  "tableResizer": `Средство изменения размера`
};

// node_modules/react-aria-components/dist/sk-SK.mjs
var $b983ca1383d5b960$exports = {};
$b983ca1383d5b960$exports = {
  "colorSwatchPicker": `Vzorkovníky farieb`,
  "dropzoneLabel": `DropZone`,
  "selectPlaceholder": `Vyberte položku`,
  "tableResizer": `Nástroj na zmenu veľkosti`
};

// node_modules/react-aria-components/dist/sl-SI.mjs
var $32a515ef673b0655$exports = {};
$32a515ef673b0655$exports = {
  "colorSwatchPicker": `Barvne palete`,
  "dropzoneLabel": `DropZone`,
  "selectPlaceholder": `Izberite element`,
  "tableResizer": `Spreminjanje velikosti`
};

// node_modules/react-aria-components/dist/sr-SP.mjs
var $89434176ab35446b$exports = {};
$89434176ab35446b$exports = {
  "colorSwatchPicker": `Uzorci boje`,
  "dropzoneLabel": `DropZone`,
  "selectPlaceholder": `Izaberite stavku`,
  "tableResizer": `Promena veličine`
};

// node_modules/react-aria-components/dist/sv-SE.mjs
var $727da781aca847f9$exports = {};
$727da781aca847f9$exports = {
  "colorSwatchPicker": `Färgrutor`,
  "dropzoneLabel": `DropZone`,
  "selectPlaceholder": `Välj en artikel`,
  "tableResizer": `Storleksändrare`
};

// node_modules/react-aria-components/dist/tr-TR.mjs
var $fcd2d84b9a2d489c$exports = {};
$fcd2d84b9a2d489c$exports = {
  "colorSwatchPicker": `Renk örnekleri`,
  "dropzoneLabel": `Bırakma Bölgesi`,
  "selectPlaceholder": `Bir öğe seçin`,
  "tableResizer": `Yeniden boyutlandırıcı`
};

// node_modules/react-aria-components/dist/uk-UA.mjs
var $2422ac328687ee23$exports = {};
$2422ac328687ee23$exports = {
  "colorSwatchPicker": `Зразки кольорів`,
  "dropzoneLabel": `DropZone`,
  "selectPlaceholder": `Виберіть елемент`,
  "tableResizer": `Засіб змінення розміру`
};

// node_modules/react-aria-components/dist/zh-CN.mjs
var $c9a532d1c973af61$exports = {};
$c9a532d1c973af61$exports = {
  "colorSwatchPicker": `颜色色板`,
  "dropzoneLabel": `放置区域`,
  "selectPlaceholder": `选择一个项目`,
  "tableResizer": `尺寸调整器`
};

// node_modules/react-aria-components/dist/zh-TW.mjs
var $34de119f14549a4b$exports = {};
$34de119f14549a4b$exports = {
  "colorSwatchPicker": `色票`,
  "dropzoneLabel": `放置區`,
  "selectPlaceholder": `選取項目`,
  "tableResizer": `大小調整器`
};

// node_modules/react-aria-components/dist/intlStrings.mjs
var $df39c1238ae2b5f3$exports = {};
$df39c1238ae2b5f3$exports = {
  "ar-AE": $e038a7e7a6d81989$exports,
  "bg-BG": $0ec14741b0133644$exports,
  "cs-CZ": $642f7badf2405784$exports,
  "da-DK": $30cee8d2535734ec$exports,
  "de-DE": $c302d0504fca332a$exports,
  "el-GR": $0d0703f2bd7e421c$exports,
  "en-US": $cafa55beb2fc5ef3$exports,
  "es-ES": $18ac2ceede598103$exports,
  "et-EE": $718705a15b8a633a$exports,
  "fi-FI": $bf36dae9ecc81ce0$exports,
  "fr-FR": $0b4828edb010b855$exports,
  "he-IL": $0030f210b040e540$exports,
  "hr-HR": $1f0ebacf5a0c0fa1$exports,
  "hu-HU": $3a706ba61f3d6bba$exports,
  "it-IT": $0d17809e74607796$exports,
  "ja-JP": $65a71f9a56f1398f$exports,
  "ko-KR": $e5efad074a74abef$exports,
  "lt-LT": $d70c2a849e55c607$exports,
  "lv-LV": $009bbbb440d0e907$exports,
  "nb-NO": $9366fe642464ee83$exports,
  "nl-NL": $62f9bc1f98ea21de$exports,
  "pl-PL": $4ec2e5b6623b1b76$exports,
  "pt-BR": $e25098e26647cc04$exports,
  "pt-PT": $dd39c57d242c8156$exports,
  "ro-RO": $3b4c1ba5afd57b35$exports,
  "ru-RU": $a455b2cda79eb746$exports,
  "sk-SK": $b983ca1383d5b960$exports,
  "sl-SI": $32a515ef673b0655$exports,
  "sr-SP": $89434176ab35446b$exports,
  "sv-SE": $727da781aca847f9$exports,
  "tr-TR": $fcd2d84b9a2d489c$exports,
  "uk-UA": $2422ac328687ee23$exports,
  "zh-CN": $c9a532d1c973af61$exports,
  "zh-TW": $34de119f14549a4b$exports
};

// node_modules/react-aria-components/dist/DragAndDrop.mjs
var import_react196 = __toESM(require_react(), 1);
var $612b8eb6cb90e02d$export$d188a835a7bc5783 = (0, import_react196.createContext)({});
var $612b8eb6cb90e02d$export$f55761759794cf55 = (0, import_react196.createContext)(null);
var $612b8eb6cb90e02d$export$62ed72bc21f6b8a6 = (0, import_react196.forwardRef)(function DropIndicator(props, ref) {
  let { render } = (0, import_react196.useContext)($612b8eb6cb90e02d$export$f55761759794cf55);
  return (0, import_react196.default).createElement((0, import_react196.default).Fragment, null, render(props, ref));
});
function $612b8eb6cb90e02d$export$971707d8a129a1f7(dragAndDropHooks, dropState) {
  var _dragAndDropHooks_isVirtualDragging;
  let renderDropIndicator = dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : dragAndDropHooks.renderDropIndicator;
  let isVirtualDragging = dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : (_dragAndDropHooks_isVirtualDragging = dragAndDropHooks.isVirtualDragging) === null || _dragAndDropHooks_isVirtualDragging === void 0 ? void 0 : _dragAndDropHooks_isVirtualDragging.call(dragAndDropHooks);
  let fn = (0, import_react196.useCallback)((target) => {
    if (isVirtualDragging || (dropState === null || dropState === void 0 ? void 0 : dropState.isDropTarget(target))) return renderDropIndicator ? renderDropIndicator(target) : (0, import_react196.default).createElement($612b8eb6cb90e02d$export$62ed72bc21f6b8a6, {
      target
    });
  }, [
    dropState === null || dropState === void 0 ? void 0 : dropState.target,
    isVirtualDragging,
    renderDropIndicator
  ]);
  return (dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : dragAndDropHooks.useDropIndicator) ? fn : void 0;
}
function $612b8eb6cb90e02d$export$d1e8e3fbb7461f6(selectionManager, dragAndDropHooks, dropState) {
  var _dragAndDropHooks_isVirtualDragging, _dropState_target;
  let focusedKey = selectionManager.focusedKey;
  let dropTargetKey = null;
  if ((dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : (_dragAndDropHooks_isVirtualDragging = dragAndDropHooks.isVirtualDragging) === null || _dragAndDropHooks_isVirtualDragging === void 0 ? void 0 : _dragAndDropHooks_isVirtualDragging.call(dragAndDropHooks)) && (dropState === null || dropState === void 0 ? void 0 : (_dropState_target = dropState.target) === null || _dropState_target === void 0 ? void 0 : _dropState_target.type) === "item") {
    dropTargetKey = dropState.target.key;
    var _dropState_collection_getKeyAfter;
    if (dropState.target.dropPosition === "after")
      dropTargetKey = (_dropState_collection_getKeyAfter = dropState.collection.getKeyAfter(dropTargetKey)) !== null && _dropState_collection_getKeyAfter !== void 0 ? _dropState_collection_getKeyAfter : dropTargetKey;
  }
  return (0, import_react196.useMemo)(() => {
    return new Set([
      focusedKey,
      dropTargetKey
    ].filter((k) => k != null));
  }, [
    focusedKey,
    dropTargetKey
  ]);
}

// node_modules/react-aria-components/dist/Header.mjs
var import_react197 = __toESM(require_react(), 1);
var $72a5793c14baf454$export$e0e4026c12a8bdbb = (0, import_react197.createContext)({});
var $72a5793c14baf454$export$8b251419efc915eb = (0, $e1995378a142960e$export$18af5c7a9e9b3664)("header", function Header(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $72a5793c14baf454$export$e0e4026c12a8bdbb);
  return (0, import_react197.default).createElement("header", {
    className: "react-aria-Header",
    ...props,
    ref
  }, props.children);
});

// node_modules/react-aria-components/dist/Separator.mjs
var import_react198 = __toESM(require_react(), 1);
var $431f98aba6844401$export$6615d83f6de245ce = (0, import_react198.createContext)({});
var $431f98aba6844401$export$1ff3c3f08ae963c0 = (0, $e1995378a142960e$export$18af5c7a9e9b3664)("separator", function Separator(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $431f98aba6844401$export$6615d83f6de245ce);
  let { elementType, orientation, style, className, slot, ...otherProps } = props;
  let Element2 = elementType || "hr";
  if (Element2 === "hr" && orientation === "vertical") Element2 = "div";
  let { separatorProps } = (0, $f4b273590fab9f93$export$52210f68a14655d0)({
    ...otherProps,
    elementType,
    orientation
  });
  return (0, import_react198.default).createElement(Element2, {
    ...(0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props),
    ...separatorProps,
    style,
    className: className !== null && className !== void 0 ? className : "react-aria-Separator",
    ref,
    slot: slot || void 0
  });
});

// node_modules/react-aria-components/dist/ListBox.mjs
var import_react199 = __toESM(require_react(), 1);
var $eed445e0843c11d0$export$7ff8f37d2d81a48d = (0, import_react199.createContext)(null);
var $eed445e0843c11d0$export$7c5906fe4f1f2af2 = (0, import_react199.createContext)(null);
var $eed445e0843c11d0$export$41f133550aa26f48 = (0, import_react199.forwardRef)(function ListBox(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $eed445e0843c11d0$export$7ff8f37d2d81a48d);
  let state = (0, import_react199.useContext)($eed445e0843c11d0$export$7c5906fe4f1f2af2);
  if (state) return (0, import_react199.default).createElement($eed445e0843c11d0$var$ListBoxInner, {
    state,
    props,
    listBoxRef: ref
  });
  return (0, import_react199.default).createElement((0, $e1995378a142960e$export$bf788dd355e3a401), {
    content: (0, import_react199.default).createElement((0, $e1995378a142960e$export$fb8073518f34e6ec), props)
  }, (collection) => (0, import_react199.default).createElement($eed445e0843c11d0$var$StandaloneListBox, {
    props,
    listBoxRef: ref,
    collection
  }));
});
function $eed445e0843c11d0$var$StandaloneListBox({ props, listBoxRef, collection }) {
  props = {
    ...props,
    collection,
    children: null,
    items: null
  };
  let { layoutDelegate } = (0, import_react199.useContext)((0, $7135fc7d473fd974$export$4feb769f8ddf26c5));
  let state = (0, $e72dd72e1c76a225$export$2f645645f7bca764)({
    ...props,
    layoutDelegate
  });
  return (0, import_react199.default).createElement($eed445e0843c11d0$var$ListBoxInner, {
    state,
    props,
    listBoxRef
  });
}
function $eed445e0843c11d0$var$ListBoxInner({ state: inputState, props, listBoxRef }) {
  var _state_collection_getItem;
  let { filter, collectionProps, collectionRef } = (0, import_react199.useContext)((0, $d2f53cda644affe3$export$65d2a03b8800d6e3)) || {};
  props = (0, import_react199.useMemo)(() => collectionProps ? {
    ...props,
    ...collectionProps
  } : props, [
    props,
    collectionProps
  ]);
  let { dragAndDropHooks, layout = "stack", orientation = "vertical" } = props;
  listBoxRef = (0, $df56164dff5785e2$export$4338b53315abf666)((0, import_react199.useMemo)(() => (0, $5dc95899b306f630$export$c9058316764c140e)(listBoxRef, collectionRef !== void 0 ? collectionRef : null), [
    collectionRef,
    listBoxRef
  ]));
  let state = (0, $e72dd72e1c76a225$export$ba9d38c0f1bf2b36)(inputState, filter);
  let { collection, selectionManager } = state;
  let isListDraggable = !!(dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : dragAndDropHooks.useDraggableCollectionState);
  let isListDroppable = !!(dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : dragAndDropHooks.useDroppableCollectionState);
  let { direction } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let { disabledBehavior, disabledKeys } = selectionManager;
  let collator = (0, $325a3faab7a68acd$export$a16aca283550c30d)({
    usage: "search",
    sensitivity: "base"
  });
  let { isVirtualized, layoutDelegate, dropTargetDelegate: ctxDropTargetDelegate, CollectionRoot } = (0, import_react199.useContext)((0, $7135fc7d473fd974$export$4feb769f8ddf26c5));
  let keyboardDelegate = (0, import_react199.useMemo)(() => props.keyboardDelegate || new (0, $2a25aae57d74318e$export$a05409b8bb224a5a)({
    collection,
    collator,
    ref: listBoxRef,
    disabledKeys,
    disabledBehavior,
    layout,
    orientation,
    direction,
    layoutDelegate
  }), [
    collection,
    collator,
    listBoxRef,
    disabledBehavior,
    disabledKeys,
    orientation,
    direction,
    props.keyboardDelegate,
    layout,
    layoutDelegate
  ]);
  let { listBoxProps } = (0, $c132121280ec012d$export$50eacbbf140a3141)({
    ...props,
    shouldSelectOnPressUp: isListDraggable || props.shouldSelectOnPressUp,
    keyboardDelegate,
    isVirtualized
  }, state, listBoxRef);
  let dragHooksProvided = (0, import_react199.useRef)(isListDraggable);
  let dropHooksProvided = (0, import_react199.useRef)(isListDroppable);
  (0, import_react199.useEffect)(() => {
    if (false) return;
    if (dragHooksProvided.current !== isListDraggable) console.warn("Drag hooks were provided during one render, but not another. This should be avoided as it may produce unexpected behavior.");
    if (dropHooksProvided.current !== isListDroppable) console.warn("Drop hooks were provided during one render, but not another. This should be avoided as it may produce unexpected behavior.");
  }, [
    isListDraggable,
    isListDroppable
  ]);
  let dragState = void 0;
  let dropState = void 0;
  let droppableCollection = void 0;
  let isRootDropTarget = false;
  let dragPreview = null;
  let preview = (0, import_react199.useRef)(null);
  if (isListDraggable && dragAndDropHooks) {
    dragState = dragAndDropHooks.useDraggableCollectionState({
      collection,
      selectionManager,
      preview: dragAndDropHooks.renderDragPreview ? preview : void 0
    });
    dragAndDropHooks.useDraggableCollection({}, dragState, listBoxRef);
    let DragPreview2 = dragAndDropHooks.DragPreview;
    dragPreview = dragAndDropHooks.renderDragPreview ? (0, import_react199.default).createElement(DragPreview2, {
      ref: preview
    }, dragAndDropHooks.renderDragPreview) : null;
  }
  if (isListDroppable && dragAndDropHooks) {
    dropState = dragAndDropHooks.useDroppableCollectionState({
      collection,
      selectionManager
    });
    let dropTargetDelegate = dragAndDropHooks.dropTargetDelegate || ctxDropTargetDelegate || new dragAndDropHooks.ListDropTargetDelegate(collection, listBoxRef, {
      orientation,
      layout,
      direction
    });
    droppableCollection = dragAndDropHooks.useDroppableCollection({
      keyboardDelegate,
      dropTargetDelegate
    }, dropState, listBoxRef);
    isRootDropTarget = dropState.isDropTarget({
      type: "root"
    });
  }
  let { focusProps, isFocused, isFocusVisible } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)();
  let isEmpty = state.collection.size === 0 || state.collection.size === 1 && ((_state_collection_getItem = state.collection.getItem(state.collection.getFirstKey())) === null || _state_collection_getItem === void 0 ? void 0 : _state_collection_getItem.type) === "loader";
  let renderValues = {
    isDropTarget: isRootDropTarget,
    isEmpty,
    isFocused,
    isFocusVisible,
    layout: props.layout || "stack",
    state
  };
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    className: props.className,
    style: props.style,
    defaultClassName: "react-aria-ListBox",
    values: renderValues
  });
  let emptyState = null;
  if (isEmpty && props.renderEmptyState) emptyState = (0, import_react199.default).createElement("div", {
    // eslint-disable-next-line
    role: "option",
    style: {
      display: "contents"
    }
  }, props.renderEmptyState(renderValues));
  return (0, import_react199.default).createElement((0, $9bf71ea28793e738$export$20e40289641fbbb6), null, (0, import_react199.default).createElement("div", {
    ...(0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props),
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(listBoxProps, focusProps, droppableCollection === null || droppableCollection === void 0 ? void 0 : droppableCollection.collectionProps),
    ...renderProps,
    ref: listBoxRef,
    slot: props.slot || void 0,
    onScroll: props.onScroll,
    "data-drop-target": isRootDropTarget || void 0,
    "data-empty": isEmpty || void 0,
    "data-focused": isFocused || void 0,
    "data-focus-visible": isFocusVisible || void 0,
    "data-layout": props.layout || "stack",
    "data-orientation": props.orientation || "vertical"
  }, (0, import_react199.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        $eed445e0843c11d0$export$7ff8f37d2d81a48d,
        props
      ],
      [
        $eed445e0843c11d0$export$7c5906fe4f1f2af2,
        state
      ],
      [
        (0, $612b8eb6cb90e02d$export$d188a835a7bc5783),
        {
          dragAndDropHooks,
          dragState,
          dropState
        }
      ],
      [
        (0, $431f98aba6844401$export$6615d83f6de245ce),
        {
          elementType: "div"
        }
      ],
      [
        (0, $612b8eb6cb90e02d$export$f55761759794cf55),
        {
          render: $eed445e0843c11d0$var$ListBoxDropIndicatorWrapper
        }
      ],
      [
        (0, $7135fc7d473fd974$export$d40e14dec8b060a8),
        {
          name: "ListBoxSection",
          render: $eed445e0843c11d0$var$ListBoxSectionInner
        }
      ]
    ]
  }, (0, import_react199.default).createElement(CollectionRoot, {
    collection,
    scrollRef: listBoxRef,
    persistedKeys: (0, $612b8eb6cb90e02d$export$d1e8e3fbb7461f6)(selectionManager, dragAndDropHooks, dropState),
    renderDropIndicator: (0, $612b8eb6cb90e02d$export$971707d8a129a1f7)(dragAndDropHooks, dropState)
  })), emptyState, dragPreview));
}
function $eed445e0843c11d0$var$ListBoxSectionInner(props, ref, section, className = "react-aria-ListBoxSection") {
  let state = (0, import_react199.useContext)($eed445e0843c11d0$export$7c5906fe4f1f2af2);
  let { dragAndDropHooks, dropState } = (0, import_react199.useContext)((0, $612b8eb6cb90e02d$export$d188a835a7bc5783));
  let { CollectionBranch } = (0, import_react199.useContext)((0, $7135fc7d473fd974$export$4feb769f8ddf26c5));
  let [headingRef, heading] = (0, $64fa3d84918910a7$export$9d4c57ee4c6ffdd8)();
  var _props_arialabel;
  let { headingProps, groupProps } = (0, $af383d3bef1cfdc9$export$c3f9f39876e4bc7)({
    heading,
    "aria-label": (_props_arialabel = props["aria-label"]) !== null && _props_arialabel !== void 0 ? _props_arialabel : void 0
  });
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    defaultClassName: className,
    className: props.className,
    style: props.style,
    values: {}
  });
  return (0, import_react199.default).createElement("section", {
    ...(0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props),
    ...groupProps,
    ...renderProps,
    ref
  }, (0, import_react199.default).createElement((0, $72a5793c14baf454$export$e0e4026c12a8bdbb).Provider, {
    value: {
      ...headingProps,
      ref: headingRef
    }
  }, (0, import_react199.default).createElement(CollectionBranch, {
    collection: state.collection,
    parent: section,
    renderDropIndicator: (0, $612b8eb6cb90e02d$export$971707d8a129a1f7)(dragAndDropHooks, dropState)
  })));
}
var $eed445e0843c11d0$export$dca12b0bb56e4fc = (0, $e1995378a142960e$export$e953bb1cd0f19726)("section", $eed445e0843c11d0$var$ListBoxSectionInner);
var $eed445e0843c11d0$export$a11e76429ed99b4 = (0, $e1995378a142960e$export$18af5c7a9e9b3664)("item", function ListBoxItem(props, forwardedRef, item) {
  let ref = (0, $df56164dff5785e2$export$4338b53315abf666)(forwardedRef);
  let state = (0, import_react199.useContext)($eed445e0843c11d0$export$7c5906fe4f1f2af2);
  let { dragAndDropHooks, dragState, dropState } = (0, import_react199.useContext)((0, $612b8eb6cb90e02d$export$d188a835a7bc5783));
  let { optionProps, labelProps, descriptionProps, ...states } = (0, $293f70390ea03370$export$497855f14858aa34)({
    key: item.key,
    "aria-label": props === null || props === void 0 ? void 0 : props["aria-label"]
  }, state, ref);
  let { hoverProps, isHovered } = (0, $6179b936705e76d3$export$ae780daf29e6d456)({
    isDisabled: !states.allowsSelection && !states.hasAction,
    onHoverStart: item.props.onHoverStart,
    onHoverChange: item.props.onHoverChange,
    onHoverEnd: item.props.onHoverEnd
  });
  let draggableItem = null;
  if (dragState && dragAndDropHooks) draggableItem = dragAndDropHooks.useDraggableItem({
    key: item.key
  }, dragState);
  let droppableItem = null;
  if (dropState && dragAndDropHooks) droppableItem = dragAndDropHooks.useDroppableItem({
    target: {
      type: "item",
      key: item.key,
      dropPosition: "on"
    }
  }, dropState, ref);
  let isDragging = dragState && dragState.isDragging(item.key);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    id: void 0,
    children: props.children,
    defaultClassName: "react-aria-ListBoxItem",
    values: {
      ...states,
      isHovered,
      selectionMode: state.selectionManager.selectionMode,
      selectionBehavior: state.selectionManager.selectionBehavior,
      allowsDragging: !!dragState,
      isDragging,
      isDropTarget: droppableItem === null || droppableItem === void 0 ? void 0 : droppableItem.isDropTarget
    }
  });
  (0, import_react199.useEffect)(() => {
    if (!item.textValue && true) console.warn("A `textValue` prop is required for <ListBoxItem> elements with non-plain text children in order to support accessibility features such as type to select.");
  }, [
    item.textValue
  ]);
  let ElementType = props.href ? "a" : "div";
  return (0, import_react199.default).createElement(ElementType, {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(optionProps, hoverProps, draggableItem === null || draggableItem === void 0 ? void 0 : draggableItem.dragProps, droppableItem === null || droppableItem === void 0 ? void 0 : droppableItem.dropProps),
    ...renderProps,
    ref,
    "data-allows-dragging": !!dragState || void 0,
    "data-selected": states.isSelected || void 0,
    "data-disabled": states.isDisabled || void 0,
    "data-hovered": isHovered || void 0,
    "data-focused": states.isFocused || void 0,
    "data-focus-visible": states.isFocusVisible || void 0,
    "data-pressed": states.isPressed || void 0,
    "data-dragging": isDragging || void 0,
    "data-drop-target": (droppableItem === null || droppableItem === void 0 ? void 0 : droppableItem.isDropTarget) || void 0,
    "data-selection-mode": state.selectionManager.selectionMode === "none" ? void 0 : state.selectionManager.selectionMode
  }, (0, import_react199.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        (0, $514c0188e459b4c0$export$9afb8bc826b033ea),
        {
          slots: {
            [(0, $64fa3d84918910a7$export$c62b8e45d58ddad9)]: labelProps,
            label: labelProps,
            description: descriptionProps
          }
        }
      ]
    ]
  }, renderProps.children));
});
function $eed445e0843c11d0$var$ListBoxDropIndicatorWrapper(props, ref) {
  ref = (0, $df56164dff5785e2$export$4338b53315abf666)(ref);
  let { dragAndDropHooks, dropState } = (0, import_react199.useContext)((0, $612b8eb6cb90e02d$export$d188a835a7bc5783));
  let { dropIndicatorProps, isHidden, isDropTarget } = dragAndDropHooks.useDropIndicator(props, dropState, ref);
  if (isHidden) return null;
  return (0, import_react199.default).createElement($eed445e0843c11d0$var$ListBoxDropIndicatorForwardRef, {
    ...props,
    dropIndicatorProps,
    isDropTarget,
    ref
  });
}
function $eed445e0843c11d0$var$ListBoxDropIndicator(props, ref) {
  let { dropIndicatorProps, isDropTarget, ...otherProps } = props;
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...otherProps,
    defaultClassName: "react-aria-DropIndicator",
    values: {
      isDropTarget
    }
  });
  return (0, import_react199.default).createElement("div", {
    ...dropIndicatorProps,
    ...renderProps,
    // eslint-disable-next-line
    role: "option",
    ref,
    "data-drop-target": isDropTarget || void 0
  });
}
var $eed445e0843c11d0$var$ListBoxDropIndicatorForwardRef = (0, import_react199.forwardRef)($eed445e0843c11d0$var$ListBoxDropIndicator);
var $eed445e0843c11d0$export$e59f0e608576589b = (0, $e1995378a142960e$export$18af5c7a9e9b3664)("loader", function ListBoxLoadingIndicator(props, ref, item) {
  let state = (0, import_react199.useContext)($eed445e0843c11d0$export$7c5906fe4f1f2af2);
  let { isVirtualized } = (0, import_react199.useContext)((0, $7135fc7d473fd974$export$4feb769f8ddf26c5));
  let { isLoading, onLoadMore, scrollOffset, ...otherProps } = props;
  let sentinelRef = (0, import_react199.useRef)(null);
  let memoedLoadMoreProps = (0, import_react199.useMemo)(() => ({
    onLoadMore,
    collection: state === null || state === void 0 ? void 0 : state.collection,
    sentinelRef,
    scrollOffset
  }), [
    onLoadMore,
    scrollOffset,
    state === null || state === void 0 ? void 0 : state.collection
  ]);
  (0, $a5fa973c1850dd36$export$90a12e6abf95cbe0)(memoedLoadMoreProps, sentinelRef);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...otherProps,
    id: void 0,
    children: item.rendered,
    defaultClassName: "react-aria-ListBoxLoadingIndicator",
    values: null
  });
  let optionProps = {
    // For Android talkback
    tabIndex: -1
  };
  if (isVirtualized) {
    optionProps["aria-posinset"] = item.index + 1;
    optionProps["aria-setsize"] = state.collection.size;
  }
  return (0, import_react199.default).createElement((0, import_react199.default).Fragment, null, (0, import_react199.default).createElement("div", {
    style: {
      position: "relative",
      width: 0,
      height: 0
    },
    inert: (0, $cdc5a6778b766db2$export$a9d04c5684123369)(true)
  }, (0, import_react199.default).createElement("div", {
    "data-testid": "loadMoreSentinel",
    ref: sentinelRef,
    style: {
      position: "absolute",
      height: 1,
      width: 1
    }
  })), isLoading && renderProps.children && (0, import_react199.default).createElement("div", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)((0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props), optionProps),
    ...renderProps,
    // aria-selected isn't needed here since this option is not selectable.
    // eslint-disable-next-line jsx-a11y/role-has-required-aria-props
    role: "option",
    ref
  }, renderProps.children));
});

// node_modules/react-aria-components/dist/ColorSwatchPicker.mjs
var import_react200 = __toESM(require_react(), 1);
function $parcel$interopDefault35(a) {
  return a && a.__esModule ? a.default : a;
}
var $0bb41941cfe72bd4$export$7214f50881fc1eaf = (0, import_react200.createContext)(null);
var $0bb41941cfe72bd4$var$ColorMapContext = (0, import_react200.createContext)(null);
var $0bb41941cfe72bd4$export$b46792416e3d8515 = (0, import_react200.forwardRef)(function ColorSwatchPicker(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $0bb41941cfe72bd4$export$7214f50881fc1eaf);
  let state = (0, $309d2b7669014898$export$dc6b73b623f8645f)(props);
  let colorMap = (0, import_react200.useMemo)(() => /* @__PURE__ */ new Map(), []);
  let formatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault35($df39c1238ae2b5f3$exports)), "react-aria-components");
  return (0, import_react200.default).createElement((0, $eed445e0843c11d0$export$41f133550aa26f48), {
    ...(0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props, {
      labelable: true
    }),
    ref,
    className: props.className || "react-aria-ColorSwatchPicker",
    style: props.style,
    "aria-label": props["aria-label"] || (!props["aria-labelledby"] ? formatter.format("colorSwatchPicker") : void 0),
    layout: props.layout || "grid",
    selectionMode: "single",
    selectedKeys: [
      state.color.toString("hexa")
    ],
    onSelectionChange: (keys) => {
      if (keys !== "all") state.setColor(colorMap.get([
        ...keys
      ][0]));
    },
    disallowEmptySelection: true
  }, (0, import_react200.default).createElement($0bb41941cfe72bd4$var$ColorMapContext.Provider, {
    value: colorMap
  }, props.children));
});
var $0bb41941cfe72bd4$export$abcd89c27081c2ef = (0, import_react200.forwardRef)(function ColorSwatchPickerItem(props, ref) {
  let propColor = props.color || "#0000";
  let color = (0, import_react200.useMemo)(() => typeof propColor === "string" ? (0, $799cddbef784668f$export$6e865ea70d7724f)(propColor) : propColor, [
    propColor
  ]);
  let { locale } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let map = (0, import_react200.useContext)($0bb41941cfe72bd4$var$ColorMapContext);
  (0, import_react200.useEffect)(() => {
    let key = color.toString("hexa");
    map.set(key, color);
    return () => {
      map.delete(key);
    };
  }, [
    color,
    map
  ]);
  let wrap = (v) => {
    if (typeof v === "function") return (renderProps) => v({
      ...renderProps,
      color
    });
    return v;
  };
  return (0, import_react200.default).createElement((0, $eed445e0843c11d0$export$a11e76429ed99b4), {
    ...props,
    ref,
    id: color.toString("hexa"),
    textValue: color.getColorName(locale),
    className: wrap(props.className || "react-aria-ColorSwatchPickerItem"),
    style: wrap(props.style)
  }, (0, $64fa3d84918910a7$export$c245e6201fed2f75)(wrap(props.children), (children) => (0, import_react200.default).createElement((0, $251c695a52d94a8d$export$83cc445538396800).Provider, {
    value: {
      color
    }
  }, children)));
});

// node_modules/react-aria-components/dist/ColorPicker.mjs
var import_react201 = __toESM(require_react(), 1);
var $2637d3f5efb23186$export$cfac98503b32f6d6 = (0, import_react201.createContext)(null);
var $2637d3f5efb23186$export$2c14261be40a385f = (0, import_react201.createContext)(null);
function $2637d3f5efb23186$export$9feb1bc2e5f1ccb3(props) {
  let ctx = (0, $64fa3d84918910a7$export$fabf2dc03a41866e)($2637d3f5efb23186$export$cfac98503b32f6d6, props.slot);
  props = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(ctx, props);
  let state = (0, $309d2b7669014898$export$dc6b73b623f8645f)(props);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    values: {
      color: state.color
    }
  });
  return (0, import_react201.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        $2637d3f5efb23186$export$2c14261be40a385f,
        state
      ],
      [
        (0, $4e85f108e88277b8$export$717b2c0a523a0b53),
        {
          value: state.color,
          onChange: state.setColor
        }
      ],
      [
        (0, $4e85f108e88277b8$export$ebe63fadcdce34ed),
        {
          value: state.color,
          onChange: state.setColor
        }
      ],
      [
        (0, $4e85f108e88277b8$export$265015d6dc85bf21),
        {
          value: state.color,
          onChange: state.setColor
        }
      ],
      [
        (0, $4e85f108e88277b8$export$44644b8a16031b5b),
        {
          value: state.color,
          onChange: state.setColor
        }
      ],
      [
        (0, $251c695a52d94a8d$export$83cc445538396800),
        {
          color: state.color
        }
      ],
      [
        (0, $0bb41941cfe72bd4$export$7214f50881fc1eaf),
        {
          value: state.color,
          onChange: state.setColor
        }
      ]
    ]
  }, renderProps.children);
}

// node_modules/react-aria-components/dist/Slider.mjs
var import_react202 = __toESM(require_react(), 1);
var $6f909507e6374d18$export$e99164f0030f3bff = (0, import_react202.createContext)(null);
var $6f909507e6374d18$export$1e7083018727fa60 = (0, import_react202.createContext)(null);
var $6f909507e6374d18$export$f1fce0420cc6d8ee = (0, import_react202.createContext)(null);
var $6f909507e6374d18$export$6189c2744041d8f8 = (0, import_react202.createContext)(null);
var $6f909507e6374d18$export$472062a354075cee = (0, import_react202.forwardRef)(function Slider(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $6f909507e6374d18$export$e99164f0030f3bff);
  let trackRef = (0, import_react202.useRef)(null);
  let numberFormatter = (0, $a916eb452884faea$export$b7a616150fdb9f44)(props.formatOptions);
  let state = (0, $28f99e3e86e6ec45$export$e5fda3247f5d67f9)({
    ...props,
    numberFormatter
  });
  let [labelRef, label] = (0, $64fa3d84918910a7$export$9d4c57ee4c6ffdd8)(!props["aria-label"] && !props["aria-labelledby"]);
  let { groupProps, trackProps, labelProps, outputProps } = (0, $bcca50147b47f54d$export$56b2c08e277f365)({
    ...props,
    label
  }, state, trackRef);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    values: {
      orientation: state.orientation,
      isDisabled: state.isDisabled,
      state
    },
    defaultClassName: "react-aria-Slider"
  });
  let DOMProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  delete DOMProps.id;
  return (0, import_react202.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        $6f909507e6374d18$export$1e7083018727fa60,
        state
      ],
      [
        $6f909507e6374d18$export$f1fce0420cc6d8ee,
        {
          ...trackProps,
          ref: trackRef
        }
      ],
      [
        $6f909507e6374d18$export$6189c2744041d8f8,
        outputProps
      ],
      [
        (0, $01b77f81d0f07f68$export$75b6ee27786ba447),
        {
          ...labelProps,
          ref: labelRef
        }
      ]
    ]
  }, (0, import_react202.default).createElement("div", {
    ...DOMProps,
    ...groupProps,
    ...renderProps,
    ref,
    slot: props.slot || void 0,
    "data-orientation": state.orientation,
    "data-disabled": state.isDisabled || void 0
  }));
});
var $6f909507e6374d18$export$a590f758a961cb5b = (0, import_react202.forwardRef)(function SliderOutput(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $6f909507e6374d18$export$6189c2744041d8f8);
  let { children, style, className, ...otherProps } = props;
  let state = (0, import_react202.useContext)($6f909507e6374d18$export$1e7083018727fa60);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    className,
    style,
    children,
    defaultChildren: state.getThumbValueLabel(0),
    defaultClassName: "react-aria-SliderOutput",
    values: {
      orientation: state.orientation,
      isDisabled: state.isDisabled,
      state
    }
  });
  return (0, import_react202.default).createElement("output", {
    ...otherProps,
    ...renderProps,
    ref,
    "data-orientation": state.orientation || void 0,
    "data-disabled": state.isDisabled || void 0
  });
});
var $6f909507e6374d18$export$105594979f116971 = (0, import_react202.forwardRef)(function SliderTrack(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $6f909507e6374d18$export$f1fce0420cc6d8ee);
  let state = (0, import_react202.useContext)($6f909507e6374d18$export$1e7083018727fa60);
  let { onHoverStart, onHoverEnd, onHoverChange, ...otherProps } = props;
  let { hoverProps, isHovered } = (0, $6179b936705e76d3$export$ae780daf29e6d456)({
    onHoverStart,
    onHoverEnd,
    onHoverChange
  });
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    defaultClassName: "react-aria-SliderTrack",
    values: {
      orientation: state.orientation,
      isDisabled: state.isDisabled,
      isHovered,
      state
    }
  });
  return (0, import_react202.default).createElement("div", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(otherProps, hoverProps),
    ...renderProps,
    ref,
    "data-hovered": isHovered || void 0,
    "data-orientation": state.orientation || void 0,
    "data-disabled": state.isDisabled || void 0
  });
});
var $6f909507e6374d18$export$2c1b491743890dec = (0, import_react202.forwardRef)(function SliderThumb(props, ref) {
  let { inputRef: userInputRef = null } = props;
  let state = (0, import_react202.useContext)($6f909507e6374d18$export$1e7083018727fa60);
  let { ref: trackRef } = (0, $64fa3d84918910a7$export$fabf2dc03a41866e)($6f909507e6374d18$export$f1fce0420cc6d8ee);
  let { index = 0 } = props;
  let defaultInputRef = (0, import_react202.useRef)(null);
  let inputRef = userInputRef || defaultInputRef;
  let [labelRef, label] = (0, $64fa3d84918910a7$export$9d4c57ee4c6ffdd8)(!props["aria-label"] && !props["aria-labelledby"]);
  let { thumbProps, inputProps, labelProps, isDragging, isFocused, isDisabled } = (0, $47b897dc8cdb026b$export$8d15029008292ae)({
    ...props,
    index,
    trackRef,
    inputRef,
    label
  }, state);
  let { focusProps, isFocusVisible } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)();
  let { hoverProps, isHovered } = (0, $6179b936705e76d3$export$ae780daf29e6d456)(props);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    defaultClassName: "react-aria-SliderThumb",
    values: {
      state,
      isHovered,
      isDragging,
      isFocused,
      isFocusVisible,
      isDisabled
    }
  });
  let DOMProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  delete DOMProps.id;
  return (0, import_react202.default).createElement("div", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(DOMProps, thumbProps, hoverProps),
    ...renderProps,
    ref,
    style: {
      ...thumbProps.style,
      ...renderProps.style
    },
    "data-hovered": isHovered || void 0,
    "data-dragging": isDragging || void 0,
    "data-focused": isFocused || void 0,
    "data-focus-visible": isFocusVisible || void 0,
    "data-disabled": isDisabled || void 0
  }, (0, import_react202.default).createElement((0, $5c3e21d68f1c4674$export$439d29a4e110a164), null, (0, import_react202.default).createElement("input", {
    ref: inputRef,
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(inputProps, focusProps)
  })), (0, import_react202.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        (0, $01b77f81d0f07f68$export$75b6ee27786ba447),
        {
          ...labelProps,
          ref: labelRef
        }
      ]
    ]
  }, renderProps.children));
});

// node_modules/react-aria-components/dist/ColorSlider.mjs
var import_react203 = __toESM(require_react(), 1);
var $1cca5300a3c2e7f9$export$c7fad7ea00194428 = (0, import_react203.createContext)(null);
var $1cca5300a3c2e7f9$export$44fd664bcca5b6fb = (0, import_react203.forwardRef)(function ColorSlider(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, (0, $4e85f108e88277b8$export$717b2c0a523a0b53));
  let { locale } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let state = (0, $25a25ac0d1624665$export$57bc203e1c9c6d44)({
    ...props,
    locale
  });
  let trackRef = (0, import_react203.default).useRef(null);
  let inputRef = (0, import_react203.default).useRef(null);
  let [labelRef, label] = (0, $64fa3d84918910a7$export$9d4c57ee4c6ffdd8)(!props["aria-label"] && !props["aria-labelledby"]);
  let { trackProps, thumbProps, inputProps, labelProps, outputProps } = (0, $40af666d6c251e36$export$106b7a4e66508f66)({
    ...props,
    label,
    trackRef,
    inputRef
  }, state);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    values: {
      orientation: state.orientation,
      isDisabled: state.isDisabled,
      state
    },
    defaultClassName: "react-aria-ColorSlider"
  });
  let DOMProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  delete DOMProps.id;
  return (0, import_react203.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        $1cca5300a3c2e7f9$export$c7fad7ea00194428,
        state
      ],
      [
        (0, $6f909507e6374d18$export$1e7083018727fa60),
        state
      ],
      [
        (0, $6f909507e6374d18$export$f1fce0420cc6d8ee),
        {
          ...trackProps,
          ref: trackRef
        }
      ],
      [
        (0, $6f909507e6374d18$export$6189c2744041d8f8),
        outputProps
      ],
      [
        (0, $01b77f81d0f07f68$export$75b6ee27786ba447),
        {
          ...labelProps,
          ref: labelRef,
          children: state.value.getChannelName(props.channel, locale)
        }
      ],
      [
        (0, $e2b71ec1d6016406$export$c80c0ea2ca5cb846),
        {
          state,
          thumbProps,
          inputXRef: inputRef,
          xInputProps: inputProps,
          isDisabled: props.isDisabled
        }
      ]
    ]
  }, (0, import_react203.default).createElement("div", {
    ...DOMProps,
    ...renderProps,
    ref,
    slot: props.slot || void 0,
    "data-orientation": state.orientation,
    "data-disabled": state.isDisabled || void 0
  }));
});

// node_modules/react-aria-components/dist/ColorWheel.mjs
var import_react204 = __toESM(require_react(), 1);
var $66beab92e74e495f$export$f5327df9fc840d47 = (0, import_react204.createContext)(null);
var $66beab92e74e495f$export$f80663f808113381 = (0, import_react204.forwardRef)(function ColorWheel(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, (0, $4e85f108e88277b8$export$265015d6dc85bf21));
  let state = (0, $ee4262c74a467b07$export$f4301076d9336137)(props);
  let inputRef = (0, import_react204.useRef)(null);
  let { trackProps, inputProps, thumbProps } = (0, $b4a0a4fdc900495e$export$9064ff4e44b3729a)(props, state, inputRef);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    values: {
      state,
      isDisabled: props.isDisabled || false
    },
    defaultClassName: "react-aria-ColorWheel",
    defaultStyle: {
      position: "relative"
    }
  });
  let DOMProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  delete DOMProps.id;
  return (0, import_react204.default).createElement("div", {
    ...DOMProps,
    ...renderProps,
    ref,
    slot: props.slot || void 0,
    "data-disabled": props.isDisabled || void 0
  }, (0, import_react204.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        $66beab92e74e495f$export$f5327df9fc840d47,
        state
      ],
      [
        $66beab92e74e495f$export$aec8299548648839,
        trackProps
      ],
      [
        (0, $e2b71ec1d6016406$export$c80c0ea2ca5cb846),
        {
          state,
          thumbProps,
          inputXRef: inputRef,
          xInputProps: inputProps,
          isDisabled: props.isDisabled
        }
      ]
    ]
  }, renderProps.children));
});
var $66beab92e74e495f$export$aec8299548648839 = (0, import_react204.createContext)(null);
var $66beab92e74e495f$export$aaae3dd1f909c692 = (0, import_react204.forwardRef)(function ColorWheelTrack(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $66beab92e74e495f$export$aec8299548648839);
  let state = (0, import_react204.useContext)($66beab92e74e495f$export$f5327df9fc840d47);
  let { className, style, ...rest } = props;
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    defaultClassName: "react-aria-ColorWheelTrack",
    values: {
      isDisabled: state.isDisabled,
      state
    }
  });
  return (0, import_react204.default).createElement("div", {
    ...rest,
    ...renderProps,
    ref,
    "data-disabled": state.isDisabled || void 0
  });
});

// node_modules/react-aria-components/dist/OverlayArrow.mjs
var import_react205 = __toESM(require_react(), 1);
var $44f671af83e7d9e0$export$2de4954e8ae13b9f = (0, import_react205.createContext)({
  placement: "bottom"
});
var $44f671af83e7d9e0$export$746d02f47f4d381 = (0, import_react205.forwardRef)(function OverlayArrow(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $44f671af83e7d9e0$export$2de4954e8ae13b9f);
  let placement = props.placement;
  let style = {
    position: "absolute",
    transform: placement === "top" || placement === "bottom" ? "translateX(-50%)" : "translateY(-50%)"
  };
  if (placement != null) style[placement] = "100%";
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    defaultClassName: "react-aria-OverlayArrow",
    values: {
      placement
    }
  });
  if (renderProps.style) Object.keys(renderProps.style).forEach((key) => renderProps.style[key] === void 0 && delete renderProps.style[key]);
  let DOMProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  return (0, import_react205.default).createElement("div", {
    ...DOMProps,
    ...renderProps,
    style: {
      ...style,
      ...renderProps.style
    },
    ref,
    "data-placement": placement
  });
});

// node_modules/react-aria-components/dist/Popover.mjs
var import_react206 = __toESM(require_react(), 1);
var $07b14b47974efb58$export$9b9a0cd73afb7ca4 = (0, import_react206.createContext)(null);
var $07b14b47974efb58$var$PopoverGroupContext = (0, import_react206.createContext)(null);
var $07b14b47974efb58$export$5b6b19405a83ff9d = (0, import_react206.forwardRef)(function Popover(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $07b14b47974efb58$export$9b9a0cd73afb7ca4);
  let contextState = (0, import_react206.useContext)((0, $de32f1b87079253c$export$d2f961adcb0afbe));
  let localState = (0, $fc909762b330b746$export$61c6a8c84e605fb6)(props);
  let state = props.isOpen != null || props.defaultOpen != null || !contextState ? localState : contextState;
  let isExiting = (0, $d3f049242431219c$export$45fda7c47f93fd48)(ref, state.isOpen) || props.isExiting || false;
  let isHidden = (0, $f39a9eba43920ace$export$b5d7cc18bb8d2b59)();
  let { direction } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  if (isHidden) {
    let children = props.children;
    if (typeof children === "function") children = children({
      trigger: props.trigger || null,
      placement: "bottom",
      isEntering: false,
      isExiting: false,
      defaultChildren: null
    });
    return (0, import_react206.default).createElement((0, import_react206.default).Fragment, null, children);
  }
  if (state && !state.isOpen && !isExiting) return null;
  return (0, import_react206.default).createElement($07b14b47974efb58$var$PopoverInner, {
    ...props,
    triggerRef: props.triggerRef,
    state,
    popoverRef: ref,
    isExiting,
    dir: direction
  });
});
function $07b14b47974efb58$var$PopoverInner({ state, isExiting, UNSTABLE_portalContainer, clearContexts, ...props }) {
  let arrowRef = (0, import_react206.useRef)(null);
  let [arrowWidth, setArrowWidth] = (0, import_react206.useState)(0);
  let containerRef = (0, import_react206.useRef)(null);
  let groupCtx = (0, import_react206.useContext)($07b14b47974efb58$var$PopoverGroupContext);
  let isSubPopover = groupCtx && props.trigger === "SubmenuTrigger";
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    if (arrowRef.current && state.isOpen) setArrowWidth(arrowRef.current.getBoundingClientRect().width);
  }, [
    state.isOpen,
    arrowRef
  ]);
  var _props_offset;
  let { popoverProps, underlayProps, arrowProps, placement } = (0, $f2f8a6077418541e$export$542a6fd13ac93354)({
    ...props,
    offset: (_props_offset = props.offset) !== null && _props_offset !== void 0 ? _props_offset : 8,
    arrowSize: arrowWidth,
    // If this is a submenu/subdialog, use the root popover's container
    // to detect outside interaction and add aria-hidden.
    groupRef: isSubPopover ? groupCtx : containerRef
  }, state);
  let ref = props.popoverRef;
  let isEntering = (0, $d3f049242431219c$export$6d3443f2c48bfc20)(ref, !!placement) || props.isEntering || false;
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    defaultClassName: "react-aria-Popover",
    values: {
      trigger: props.trigger || null,
      placement,
      isEntering,
      isExiting
    }
  });
  let shouldBeDialog = !props.isNonModal || props.trigger === "SubmenuTrigger";
  let [isDialog, setDialog] = (0, import_react206.useState)(false);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    if (ref.current) setDialog(shouldBeDialog && !ref.current.querySelector("[role=dialog]"));
  }, [
    ref,
    shouldBeDialog
  ]);
  (0, import_react206.useEffect)(() => {
    if (isDialog && ref.current && !ref.current.contains(document.activeElement)) (0, $3ad3f6e1647bc98d$export$80f3e147d781571c)(ref.current);
  }, [
    isDialog,
    ref
  ]);
  let children = (0, import_react206.useMemo)(() => {
    let children2 = renderProps.children;
    if (clearContexts) for (let Context of clearContexts) children2 = (0, import_react206.default).createElement(Context.Provider, {
      value: null
    }, children2);
    return children2;
  }, [
    renderProps.children,
    clearContexts
  ]);
  let style = {
    ...popoverProps.style,
    ...renderProps.style
  };
  let overlay = (0, import_react206.default).createElement("div", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)((0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props), popoverProps),
    ...renderProps,
    role: isDialog ? "dialog" : void 0,
    tabIndex: isDialog ? -1 : void 0,
    "aria-label": props["aria-label"],
    "aria-labelledby": props["aria-labelledby"],
    ref,
    slot: props.slot || void 0,
    style,
    dir: props.dir,
    "data-trigger": props.trigger,
    "data-placement": placement,
    "data-entering": isEntering || void 0,
    "data-exiting": isExiting || void 0
  }, !props.isNonModal && (0, import_react206.default).createElement((0, $86ea4cb521eb2e37$export$2317d149ed6f78c4), {
    onDismiss: state.close
  }), (0, import_react206.default).createElement((0, $44f671af83e7d9e0$export$2de4954e8ae13b9f).Provider, {
    value: {
      ...arrowProps,
      placement,
      ref: arrowRef
    }
  }, children), (0, import_react206.default).createElement((0, $86ea4cb521eb2e37$export$2317d149ed6f78c4), {
    onDismiss: state.close
  }));
  if (!isSubPopover) return (0, import_react206.default).createElement((0, $337b884510726a0d$export$c6fdb837b070b4ff), {
    ...props,
    shouldContainFocus: isDialog,
    isExiting,
    portalContainer: UNSTABLE_portalContainer
  }, !props.isNonModal && state.isOpen && (0, import_react206.default).createElement("div", {
    "data-testid": "underlay",
    ...underlayProps,
    style: {
      position: "fixed",
      inset: 0
    }
  }), (0, import_react206.default).createElement("div", {
    ref: containerRef,
    style: {
      display: "contents"
    }
  }, (0, import_react206.default).createElement($07b14b47974efb58$var$PopoverGroupContext.Provider, {
    value: containerRef
  }, overlay)));
  var _ref;
  return (0, import_react206.default).createElement((0, $337b884510726a0d$export$c6fdb837b070b4ff), {
    ...props,
    shouldContainFocus: isDialog,
    isExiting,
    portalContainer: (_ref = UNSTABLE_portalContainer !== null && UNSTABLE_portalContainer !== void 0 ? UNSTABLE_portalContainer : groupCtx === null || groupCtx === void 0 ? void 0 : groupCtx.current) !== null && _ref !== void 0 ? _ref : void 0
  }, overlay);
}

// node_modules/react-aria-components/dist/Keyboard.mjs
var import_react207 = __toESM(require_react(), 1);
var $63df2425e2108aa8$export$744d98a3b8a94e1c = (0, import_react207.createContext)({});
var $63df2425e2108aa8$export$16e4d70cc375e707 = (0, import_react207.forwardRef)(function Keyboard(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $63df2425e2108aa8$export$744d98a3b8a94e1c);
  return (0, import_react207.default).createElement("kbd", {
    dir: "ltr",
    ...props,
    ref
  });
});

// node_modules/react-aria-components/dist/Menu.mjs
var import_react208 = __toESM(require_react(), 1);
var $3674c52c6b3c5bce$export$c7e742effb1c51e2 = (0, import_react208.createContext)(null);
var $3674c52c6b3c5bce$export$24aad8519b95b41b = (0, import_react208.createContext)(null);
var $3674c52c6b3c5bce$export$795aec4671cbae19 = (0, import_react208.createContext)(null);
var $3674c52c6b3c5bce$var$SelectionManagerContext = (0, import_react208.createContext)(null);
function $3674c52c6b3c5bce$export$27d2ad3c5815583e(props) {
  let state = (0, $a28c903ee9ad8dc5$export$79fefeb1c2091ac3)(props);
  let ref = (0, import_react208.useRef)(null);
  let { menuTriggerProps, menuProps } = (0, $168583247155ddda$export$dc9c12ed27dd1b49)({
    ...props,
    type: "menu"
  }, state, ref);
  let [buttonWidth, setButtonWidth] = (0, import_react208.useState)(null);
  let onResize = (0, import_react208.useCallback)(() => {
    if (ref.current) setButtonWidth(ref.current.offsetWidth + "px");
  }, [
    ref
  ]);
  (0, $9daab02d461809db$export$683480f191c0e3ea)({
    ref,
    onResize
  });
  let scrollRef = (0, import_react208.useRef)(null);
  return (0, import_react208.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        $3674c52c6b3c5bce$export$c7e742effb1c51e2,
        {
          ...menuProps,
          ref: scrollRef
        }
      ],
      [
        (0, $de32f1b87079253c$export$d2f961adcb0afbe),
        state
      ],
      [
        $3674c52c6b3c5bce$export$795aec4671cbae19,
        state
      ],
      [
        (0, $07b14b47974efb58$export$9b9a0cd73afb7ca4),
        {
          trigger: "MenuTrigger",
          triggerRef: ref,
          scrollRef,
          placement: "bottom start",
          style: {
            "--trigger-width": buttonWidth
          },
          "aria-labelledby": menuProps["aria-labelledby"]
        }
      ]
    ]
  }, (0, import_react208.default).createElement((0, $f1ab8c75478c6f73$export$3351871ee4b288b8), {
    ...menuTriggerProps,
    ref,
    isPressed: state.isOpen
  }, props.children));
}
var $3674c52c6b3c5bce$var$SubmenuTriggerContext = (0, import_react208.createContext)(null);
var $3674c52c6b3c5bce$export$ecabc99eeffab7ca = (0, $e1995378a142960e$export$e953bb1cd0f19726)("submenutrigger", (props, ref, item) => {
  let { CollectionBranch } = (0, import_react208.useContext)((0, $7135fc7d473fd974$export$4feb769f8ddf26c5));
  let state = (0, import_react208.useContext)($3674c52c6b3c5bce$export$24aad8519b95b41b);
  let rootMenuTriggerState = (0, import_react208.useContext)($3674c52c6b3c5bce$export$795aec4671cbae19);
  let submenuTriggerState = (0, $e5614764aa47eb35$export$cfc51cf86138bf98)({
    triggerKey: item.key
  }, rootMenuTriggerState);
  let submenuRef = (0, import_react208.useRef)(null);
  let itemRef = (0, $df56164dff5785e2$export$4338b53315abf666)(ref);
  let { parentMenuRef, shouldUseVirtualFocus } = (0, import_react208.useContext)($3674c52c6b3c5bce$var$SubmenuTriggerContext);
  let { submenuTriggerProps, submenuProps, popoverProps } = (0, $0065b146e7192841$export$7138b0d059a6e743)({
    parentMenuRef,
    submenuRef,
    delay: props.delay,
    shouldUseVirtualFocus
  }, submenuTriggerState, itemRef);
  return (0, import_react208.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        $3674c52c6b3c5bce$var$MenuItemContext,
        {
          ...submenuTriggerProps,
          onAction: void 0,
          ref: itemRef
        }
      ],
      [
        $3674c52c6b3c5bce$export$c7e742effb1c51e2,
        submenuProps
      ],
      [
        (0, $de32f1b87079253c$export$d2f961adcb0afbe),
        submenuTriggerState
      ],
      [
        (0, $07b14b47974efb58$export$9b9a0cd73afb7ca4),
        {
          ref: submenuRef,
          trigger: "SubmenuTrigger",
          triggerRef: itemRef,
          placement: "end top",
          "aria-labelledby": submenuProps["aria-labelledby"],
          ...popoverProps
        }
      ]
    ]
  }, (0, import_react208.default).createElement(CollectionBranch, {
    collection: state.collection,
    parent: item
  }), props.children[1]);
}, (props) => props.children[0]);
var $3674c52c6b3c5bce$export$d9b273488cd8ce6f = (0, import_react208.forwardRef)(function Menu(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $3674c52c6b3c5bce$export$c7e742effb1c51e2);
  return (0, import_react208.default).createElement((0, $e1995378a142960e$export$bf788dd355e3a401), {
    content: (0, import_react208.default).createElement((0, $e1995378a142960e$export$fb8073518f34e6ec), props)
  }, (collection) => (0, import_react208.default).createElement($3674c52c6b3c5bce$var$MenuInner, {
    props,
    collection,
    menuRef: ref
  }));
});
function $3674c52c6b3c5bce$var$MenuInner({ props, collection, menuRef: ref }) {
  let { filter, collectionProps: autocompleteMenuProps, collectionRef } = (0, import_react208.useContext)((0, $d2f53cda644affe3$export$65d2a03b8800d6e3)) || {};
  ref = (0, $df56164dff5785e2$export$4338b53315abf666)((0, import_react208.useMemo)(() => (0, $5dc95899b306f630$export$c9058316764c140e)(ref, collectionRef !== void 0 ? collectionRef : null), [
    collectionRef,
    ref
  ]));
  let filteredCollection = (0, import_react208.useMemo)(() => filter ? collection.UNSTABLE_filter(filter) : collection, [
    collection,
    filter
  ]);
  let state = (0, $875d6693e12af071$export$728d6ba534403756)({
    ...props,
    collection: filteredCollection,
    children: void 0
  });
  let triggerState = (0, import_react208.useContext)($3674c52c6b3c5bce$export$795aec4671cbae19);
  let { isVirtualized, CollectionRoot } = (0, import_react208.useContext)((0, $7135fc7d473fd974$export$4feb769f8ddf26c5));
  let { menuProps } = (0, $d5336fe17ce95402$export$38eaa17faae8f579)({
    ...props,
    ...autocompleteMenuProps,
    isVirtualized,
    onClose: props.onClose || (triggerState === null || triggerState === void 0 ? void 0 : triggerState.close)
  }, state, ref);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    defaultClassName: "react-aria-Menu",
    className: props.className,
    style: props.style,
    values: {
      isEmpty: state.collection.size === 0
    }
  });
  let emptyState = null;
  if (state.collection.size === 0 && props.renderEmptyState) emptyState = (0, import_react208.default).createElement("div", {
    role: "menuitem",
    style: {
      display: "contents"
    }
  }, props.renderEmptyState());
  return (0, import_react208.default).createElement((0, $9bf71ea28793e738$export$20e40289641fbbb6), null, (0, import_react208.default).createElement("div", {
    ...(0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props),
    ...menuProps,
    ...renderProps,
    ref,
    slot: props.slot || void 0,
    "data-empty": state.collection.size === 0 || void 0,
    onScroll: props.onScroll
  }, (0, import_react208.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        $3674c52c6b3c5bce$export$24aad8519b95b41b,
        state
      ],
      [
        (0, $431f98aba6844401$export$6615d83f6de245ce),
        {
          elementType: "div"
        }
      ],
      [
        (0, $7135fc7d473fd974$export$d40e14dec8b060a8),
        {
          name: "MenuSection",
          render: $3674c52c6b3c5bce$var$MenuSectionInner
        }
      ],
      [
        $3674c52c6b3c5bce$var$SubmenuTriggerContext,
        {
          parentMenuRef: ref,
          shouldUseVirtualFocus: autocompleteMenuProps === null || autocompleteMenuProps === void 0 ? void 0 : autocompleteMenuProps.shouldUseVirtualFocus
        }
      ],
      [
        $3674c52c6b3c5bce$var$MenuItemContext,
        null
      ],
      [
        (0, $d2f53cda644affe3$export$65d2a03b8800d6e3),
        null
      ],
      [
        $3674c52c6b3c5bce$var$SelectionManagerContext,
        state.selectionManager
      ],
      /* Ensure root MenuTriggerState is defined, in case Menu is rendered outside a MenuTrigger. */
      /* We assume the context can never change between defined and undefined. */
      /* eslint-disable-next-line react-hooks/rules-of-hooks */
      [
        $3674c52c6b3c5bce$export$795aec4671cbae19,
        triggerState !== null && triggerState !== void 0 ? triggerState : (0, $a28c903ee9ad8dc5$export$79fefeb1c2091ac3)({})
      ]
    ]
  }, (0, import_react208.default).createElement(CollectionRoot, {
    collection: state.collection,
    persistedKeys: (0, $7135fc7d473fd974$export$90e00781bc59d8f9)(state.selectionManager.focusedKey),
    scrollRef: ref
  })), emptyState));
}
var $3674c52c6b3c5bce$var$GroupSelectionManager = class extends (0, $d496c0a20b6e58ec$export$6c8a5aaad13c9852) {
  get focusedKey() {
    return this.parent.focusedKey;
  }
  get isFocused() {
    return this.parent.isFocused;
  }
  setFocusedKey(key, childFocusStrategy) {
    return this.parent.setFocusedKey(key, childFocusStrategy);
  }
  setFocused(isFocused) {
    this.parent.setFocused(isFocused);
  }
  get childFocusStrategy() {
    return this.parent.childFocusStrategy;
  }
  constructor(parent, state) {
    super(parent.collection, state);
    this.parent = parent;
  }
};
function $3674c52c6b3c5bce$var$MenuSectionInner(props, ref, section, className = "react-aria-MenuSection") {
  var _section_props, _section_props1;
  let state = (0, import_react208.useContext)($3674c52c6b3c5bce$export$24aad8519b95b41b);
  let { CollectionBranch } = (0, import_react208.useContext)((0, $7135fc7d473fd974$export$4feb769f8ddf26c5));
  let [headingRef, heading] = (0, $64fa3d84918910a7$export$9d4c57ee4c6ffdd8)();
  var _section_props_arialabel;
  let { headingProps, groupProps } = (0, $3e5eb2498db5b506$export$73f7a44322579622)({
    heading,
    "aria-label": (_section_props_arialabel = section.props["aria-label"]) !== null && _section_props_arialabel !== void 0 ? _section_props_arialabel : void 0
  });
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    defaultClassName: className,
    className: (_section_props = section.props) === null || _section_props === void 0 ? void 0 : _section_props.className,
    style: (_section_props1 = section.props) === null || _section_props1 === void 0 ? void 0 : _section_props1.style,
    values: {}
  });
  let parent = (0, import_react208.useContext)($3674c52c6b3c5bce$var$SelectionManagerContext);
  let selectionState = (0, $7af3f5b51489e0b5$export$253fe78d46329472)(props);
  let manager = props.selectionMode != null ? new $3674c52c6b3c5bce$var$GroupSelectionManager(parent, selectionState) : parent;
  return (0, import_react208.default).createElement("section", {
    ...(0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props),
    ...groupProps,
    ...renderProps,
    ref
  }, (0, import_react208.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        (0, $72a5793c14baf454$export$e0e4026c12a8bdbb),
        {
          ...headingProps,
          ref: headingRef
        }
      ],
      [
        $3674c52c6b3c5bce$var$SelectionManagerContext,
        manager
      ]
    ]
  }, (0, import_react208.default).createElement(CollectionBranch, {
    collection: state.collection,
    parent: section
  })));
}
var $3674c52c6b3c5bce$export$4b1545b4f2016d26 = (0, $e1995378a142960e$export$e953bb1cd0f19726)("section", $3674c52c6b3c5bce$var$MenuSectionInner);
var $3674c52c6b3c5bce$var$MenuItemContext = (0, import_react208.createContext)(null);
var $3674c52c6b3c5bce$export$2ce376c2cc3355c8 = (0, $e1995378a142960e$export$18af5c7a9e9b3664)("item", function MenuItem(props, forwardedRef, item) {
  var _useSlottedContext;
  [props, forwardedRef] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, forwardedRef, $3674c52c6b3c5bce$var$MenuItemContext);
  let id = (_useSlottedContext = (0, $64fa3d84918910a7$export$fabf2dc03a41866e)($3674c52c6b3c5bce$var$MenuItemContext)) === null || _useSlottedContext === void 0 ? void 0 : _useSlottedContext.id;
  let state = (0, import_react208.useContext)($3674c52c6b3c5bce$export$24aad8519b95b41b);
  let ref = (0, $df56164dff5785e2$export$4338b53315abf666)(forwardedRef);
  let selectionManager = (0, import_react208.useContext)($3674c52c6b3c5bce$var$SelectionManagerContext);
  let { menuItemProps, labelProps, descriptionProps, keyboardShortcutProps, ...states } = (0, $a2e5df62f93c7633$export$9d32628fc2aea7da)({
    ...props,
    id,
    key: item.key,
    selectionManager
  }, state, ref);
  let { hoverProps, isHovered } = (0, $6179b936705e76d3$export$ae780daf29e6d456)({
    isDisabled: states.isDisabled
  });
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    id: void 0,
    children: item.rendered,
    defaultClassName: "react-aria-MenuItem",
    values: {
      ...states,
      isHovered,
      isFocusVisible: states.isFocusVisible,
      selectionMode: selectionManager.selectionMode,
      selectionBehavior: selectionManager.selectionBehavior,
      hasSubmenu: !!props["aria-haspopup"],
      isOpen: props["aria-expanded"] === "true"
    }
  });
  let ElementType = props.href ? "a" : "div";
  return (0, import_react208.default).createElement(ElementType, {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(menuItemProps, hoverProps),
    ...renderProps,
    ref,
    "data-disabled": states.isDisabled || void 0,
    "data-hovered": isHovered || void 0,
    "data-focused": states.isFocused || void 0,
    "data-focus-visible": states.isFocusVisible || void 0,
    "data-pressed": states.isPressed || void 0,
    "data-selected": states.isSelected || void 0,
    "data-selection-mode": selectionManager.selectionMode === "none" ? void 0 : selectionManager.selectionMode,
    "data-has-submenu": !!props["aria-haspopup"] || void 0,
    "data-open": props["aria-expanded"] === "true" || void 0
  }, (0, import_react208.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        (0, $514c0188e459b4c0$export$9afb8bc826b033ea),
        {
          slots: {
            [(0, $64fa3d84918910a7$export$c62b8e45d58ddad9)]: labelProps,
            label: labelProps,
            description: descriptionProps
          }
        }
      ],
      [
        (0, $63df2425e2108aa8$export$744d98a3b8a94e1c),
        keyboardShortcutProps
      ]
    ]
  }, renderProps.children));
});

// node_modules/react-aria-components/dist/Dialog.mjs
var import_react209 = __toESM(require_react(), 1);
var $de32f1b87079253c$export$8b93a07348a7730c = (0, import_react209.createContext)(null);
var $de32f1b87079253c$export$d2f961adcb0afbe = (0, import_react209.createContext)(null);
function $de32f1b87079253c$export$2e1e1122cf0cba88(props) {
  let state = (0, $a28c903ee9ad8dc5$export$79fefeb1c2091ac3)(props);
  let buttonRef = (0, import_react209.useRef)(null);
  let { triggerProps, overlayProps } = (0, $628037886ba31236$export$f9d5c8beee7d008d)({
    type: "dialog"
  }, state, buttonRef);
  let [buttonWidth, setButtonWidth] = (0, import_react209.useState)(null);
  let onResize = (0, import_react209.useCallback)(() => {
    if (buttonRef.current) setButtonWidth(buttonRef.current.offsetWidth + "px");
  }, [
    buttonRef
  ]);
  (0, $9daab02d461809db$export$683480f191c0e3ea)({
    ref: buttonRef,
    onResize
  });
  triggerProps.id = (0, $bdb11010cef70236$export$f680877a34711e37)();
  overlayProps["aria-labelledby"] = triggerProps.id;
  return (0, import_react209.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        $de32f1b87079253c$export$d2f961adcb0afbe,
        state
      ],
      [
        (0, $3674c52c6b3c5bce$export$795aec4671cbae19),
        state
      ],
      [
        $de32f1b87079253c$export$8b93a07348a7730c,
        overlayProps
      ],
      [
        (0, $07b14b47974efb58$export$9b9a0cd73afb7ca4),
        {
          trigger: "DialogTrigger",
          triggerRef: buttonRef,
          "aria-labelledby": overlayProps["aria-labelledby"],
          style: {
            "--trigger-width": buttonWidth
          }
        }
      ]
    ]
  }, (0, import_react209.default).createElement((0, $f1ab8c75478c6f73$export$3351871ee4b288b8), {
    ...triggerProps,
    ref: buttonRef,
    isPressed: state.isOpen
  }, props.children));
}
var $de32f1b87079253c$export$3ddf2d174ce01153 = (0, import_react209.forwardRef)(function Dialog(props, ref) {
  let originalAriaLabelledby = props["aria-labelledby"];
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $de32f1b87079253c$export$8b93a07348a7730c);
  let { dialogProps, titleProps } = (0, $40df3f8667284809$export$d55e7ee900f34e93)({
    ...props,
    // Only pass aria-labelledby from props, not context.
    // Context is used as a fallback below.
    "aria-labelledby": originalAriaLabelledby
  }, ref);
  let state = (0, import_react209.useContext)($de32f1b87079253c$export$d2f961adcb0afbe);
  if (!dialogProps["aria-label"] && !dialogProps["aria-labelledby"]) {
    if (props["aria-labelledby"]) dialogProps["aria-labelledby"] = props["aria-labelledby"];
    else if (true) console.warn('If a Dialog does not contain a <Heading slot="title">, it must have an aria-label or aria-labelledby attribute for accessibility.');
  }
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    defaultClassName: "react-aria-Dialog",
    className: props.className,
    style: props.style,
    children: props.children,
    values: {
      close: (state === null || state === void 0 ? void 0 : state.close) || (() => {
      })
    }
  });
  return (0, import_react209.default).createElement("section", {
    ...(0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props),
    ...dialogProps,
    ...renderProps,
    ref,
    slot: props.slot || void 0
  }, (0, import_react209.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        (0, $4e85f108e88277b8$export$d688439359537581),
        {
          slots: {
            [(0, $64fa3d84918910a7$export$c62b8e45d58ddad9)]: {},
            title: {
              ...titleProps,
              level: 2
            }
          }
        }
      ],
      [
        (0, $d2b4bc8c273e7be6$export$24d547caef80ccd1),
        {
          slots: {
            [(0, $64fa3d84918910a7$export$c62b8e45d58ddad9)]: {},
            close: {
              onPress: () => state === null || state === void 0 ? void 0 : state.close()
            }
          }
        }
      ]
    ]
  }, renderProps.children));
});

// node_modules/react-aria-components/dist/ComboBox.mjs
var import_react210 = __toESM(require_react(), 1);
var $d01f2c01039c0eec$export$d414ccceff7063c3 = (0, import_react210.createContext)(null);
var $d01f2c01039c0eec$export$c02625b26074192c = (0, import_react210.createContext)(null);
var $d01f2c01039c0eec$export$72b9695b8216309a = (0, import_react210.forwardRef)(function ComboBox(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $d01f2c01039c0eec$export$d414ccceff7063c3);
  let { children, isDisabled = false, isInvalid = false, isRequired = false } = props;
  let content = (0, import_react210.useMemo)(() => {
    var _props_items;
    return (0, import_react210.default).createElement((0, $eed445e0843c11d0$export$7ff8f37d2d81a48d).Provider, {
      value: {
        items: (_props_items = props.items) !== null && _props_items !== void 0 ? _props_items : props.defaultItems
      }
    }, typeof children === "function" ? children({
      isOpen: false,
      isDisabled,
      isInvalid,
      isRequired,
      defaultChildren: null
    }) : children);
  }, [
    children,
    isDisabled,
    isInvalid,
    isRequired,
    props.items,
    props.defaultItems
  ]);
  return (0, import_react210.default).createElement((0, $e1995378a142960e$export$bf788dd355e3a401), {
    content
  }, (collection) => (0, import_react210.default).createElement($d01f2c01039c0eec$var$ComboBoxInner, {
    props,
    collection,
    comboBoxRef: ref
  }));
});
var $d01f2c01039c0eec$var$CLEAR_CONTEXTS = [
  (0, $01b77f81d0f07f68$export$75b6ee27786ba447),
  (0, $d2b4bc8c273e7be6$export$24d547caef80ccd1),
  (0, $3985021b0ad6602f$export$37fb8590cf2c088c),
  (0, $a049562f99e7db0e$export$f9c6924e160136d1),
  (0, $514c0188e459b4c0$export$9afb8bc826b033ea)
];
function $d01f2c01039c0eec$var$ComboBoxInner({ props, collection, comboBoxRef: ref }) {
  let { name, formValue = "key", allowsCustomValue } = props;
  if (allowsCustomValue) formValue = "text";
  let { validationBehavior: formValidationBehavior } = (0, $64fa3d84918910a7$export$fabf2dc03a41866e)((0, $d3e0e05bdfcf66bd$export$c24727297075ec6a)) || {};
  var _props_validationBehavior, _ref;
  let validationBehavior = (_ref = (_props_validationBehavior = props.validationBehavior) !== null && _props_validationBehavior !== void 0 ? _props_validationBehavior : formValidationBehavior) !== null && _ref !== void 0 ? _ref : "native";
  let { contains } = (0, $bb77f239b46e8c72$export$3274cf84b703fff)({
    sensitivity: "base"
  });
  let state = (0, $a9e7382a7d111cb5$export$b453a3bfd4a5fa9e)({
    defaultFilter: props.defaultFilter || contains,
    ...props,
    // If props.items isn't provided, rely on collection filtering (aka listbox.items is provided or defaultItems provided to Combobox)
    items: props.items,
    children: void 0,
    collection,
    validationBehavior
  });
  let buttonRef = (0, import_react210.useRef)(null);
  let inputRef = (0, import_react210.useRef)(null);
  let listBoxRef = (0, import_react210.useRef)(null);
  let popoverRef = (0, import_react210.useRef)(null);
  let [labelRef, label] = (0, $64fa3d84918910a7$export$9d4c57ee4c6ffdd8)(!props["aria-label"] && !props["aria-labelledby"]);
  let { buttonProps, inputProps, listBoxProps, labelProps, descriptionProps, errorMessageProps, ...validation } = (0, $c350ade66beef0af$export$8c18d1b4f7232bbf)({
    ...(0, $64fa3d84918910a7$export$ef03459518577ad4)(props),
    label,
    inputRef,
    buttonRef,
    listBoxRef,
    popoverRef,
    name: formValue === "text" ? name : void 0,
    validationBehavior
  }, state);
  let [menuWidth, setMenuWidth] = (0, import_react210.useState)(null);
  let onResize = (0, import_react210.useCallback)(() => {
    if (inputRef.current) {
      var _buttonRef_current;
      let buttonRect = (_buttonRef_current = buttonRef.current) === null || _buttonRef_current === void 0 ? void 0 : _buttonRef_current.getBoundingClientRect();
      let inputRect = inputRef.current.getBoundingClientRect();
      let minX = buttonRect ? Math.min(buttonRect.left, inputRect.left) : inputRect.left;
      let maxX = buttonRect ? Math.max(buttonRect.right, inputRect.right) : inputRect.right;
      setMenuWidth(maxX - minX + "px");
    }
  }, [
    buttonRef,
    inputRef,
    setMenuWidth
  ]);
  (0, $9daab02d461809db$export$683480f191c0e3ea)({
    ref: inputRef,
    onResize
  });
  let renderPropsState = (0, import_react210.useMemo)(() => ({
    isOpen: state.isOpen,
    isDisabled: props.isDisabled || false,
    isInvalid: validation.isInvalid || false,
    isRequired: props.isRequired || false
  }), [
    state.isOpen,
    props.isDisabled,
    validation.isInvalid,
    props.isRequired
  ]);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    values: renderPropsState,
    defaultClassName: "react-aria-ComboBox"
  });
  let DOMProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  delete DOMProps.id;
  var _state_selectedKey;
  return (0, import_react210.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        $d01f2c01039c0eec$export$c02625b26074192c,
        state
      ],
      [
        (0, $01b77f81d0f07f68$export$75b6ee27786ba447),
        {
          ...labelProps,
          ref: labelRef
        }
      ],
      [
        (0, $d2b4bc8c273e7be6$export$24d547caef80ccd1),
        {
          ...buttonProps,
          ref: buttonRef,
          isPressed: state.isOpen
        }
      ],
      [
        (0, $3985021b0ad6602f$export$37fb8590cf2c088c),
        {
          ...inputProps,
          ref: inputRef
        }
      ],
      [
        (0, $de32f1b87079253c$export$d2f961adcb0afbe),
        state
      ],
      [
        (0, $07b14b47974efb58$export$9b9a0cd73afb7ca4),
        {
          ref: popoverRef,
          triggerRef: inputRef,
          scrollRef: listBoxRef,
          placement: "bottom start",
          isNonModal: true,
          trigger: "ComboBox",
          style: {
            "--trigger-width": menuWidth
          },
          clearContexts: $d01f2c01039c0eec$var$CLEAR_CONTEXTS
        }
      ],
      [
        (0, $eed445e0843c11d0$export$7ff8f37d2d81a48d),
        {
          ...listBoxProps,
          ref: listBoxRef
        }
      ],
      [
        (0, $eed445e0843c11d0$export$7c5906fe4f1f2af2),
        state
      ],
      [
        (0, $514c0188e459b4c0$export$9afb8bc826b033ea),
        {
          slots: {
            description: descriptionProps,
            errorMessage: errorMessageProps
          }
        }
      ],
      [
        (0, $a049562f99e7db0e$export$f9c6924e160136d1),
        {
          isInvalid: validation.isInvalid,
          isDisabled: props.isDisabled || false
        }
      ],
      [
        (0, $ee014567cb39d3f0$export$ff05c3ac10437e03),
        validation
      ]
    ]
  }, (0, import_react210.default).createElement("div", {
    ...DOMProps,
    ...renderProps,
    ref,
    slot: props.slot || void 0,
    "data-focused": state.isFocused || void 0,
    "data-open": state.isOpen || void 0,
    "data-disabled": props.isDisabled || void 0,
    "data-invalid": validation.isInvalid || void 0,
    "data-required": props.isRequired || void 0
  }), name && formValue === "key" && (0, import_react210.default).createElement("input", {
    type: "hidden",
    name,
    value: (_state_selectedKey = state.selectedKey) !== null && _state_selectedKey !== void 0 ? _state_selectedKey : ""
  }));
}

// node_modules/react-aria-components/dist/DateField.mjs
var import_react211 = __toESM(require_react(), 1);
var $40825cdb76e74f70$export$7b3e670c86da5fe8 = (0, import_react211.createContext)(null);
var $40825cdb76e74f70$export$8e17ddc448e87c1e = (0, import_react211.createContext)(null);
var $40825cdb76e74f70$export$3b08bebcf796eea0 = (0, import_react211.createContext)(null);
var $40825cdb76e74f70$export$5d8dc44abd10a920 = (0, import_react211.createContext)(null);
var $40825cdb76e74f70$export$d9781c7894a82487 = (0, import_react211.forwardRef)(function DateField(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $40825cdb76e74f70$export$7b3e670c86da5fe8);
  let { validationBehavior: formValidationBehavior } = (0, $64fa3d84918910a7$export$fabf2dc03a41866e)((0, $d3e0e05bdfcf66bd$export$c24727297075ec6a)) || {};
  var _props_validationBehavior, _ref;
  let validationBehavior = (_ref = (_props_validationBehavior = props.validationBehavior) !== null && _props_validationBehavior !== void 0 ? _props_validationBehavior : formValidationBehavior) !== null && _ref !== void 0 ? _ref : "native";
  let { locale } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let state = (0, $3c0fc76039f1c516$export$60e84778edff6d26)({
    ...props,
    locale,
    createCalendar: $64244302c3013299$export$dd0bbc9b26defe37,
    validationBehavior
  });
  let fieldRef = (0, import_react211.useRef)(null);
  let [labelRef, label] = (0, $64fa3d84918910a7$export$9d4c57ee4c6ffdd8)(!props["aria-label"] && !props["aria-labelledby"]);
  let inputRef = (0, import_react211.useRef)(null);
  let { labelProps, fieldProps, inputProps, descriptionProps, errorMessageProps, ...validation } = (0, $16f0b7bb276bc17e$export$5591b0b878c1a989)({
    ...(0, $64fa3d84918910a7$export$ef03459518577ad4)(props),
    label,
    inputRef,
    validationBehavior
  }, state, fieldRef);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...(0, $64fa3d84918910a7$export$ef03459518577ad4)(props),
    values: {
      state,
      isInvalid: state.isInvalid,
      isDisabled: state.isDisabled
    },
    defaultClassName: "react-aria-DateField"
  });
  let DOMProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  delete DOMProps.id;
  return (0, import_react211.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        $40825cdb76e74f70$export$3b08bebcf796eea0,
        state
      ],
      [
        (0, $a049562f99e7db0e$export$f9c6924e160136d1),
        {
          ...fieldProps,
          ref: fieldRef,
          isInvalid: state.isInvalid,
          isDisabled: state.isDisabled
        }
      ],
      [
        (0, $3985021b0ad6602f$export$37fb8590cf2c088c),
        {
          ...inputProps,
          ref: inputRef
        }
      ],
      [
        (0, $01b77f81d0f07f68$export$75b6ee27786ba447),
        {
          ...labelProps,
          ref: labelRef,
          elementType: "span"
        }
      ],
      [
        (0, $514c0188e459b4c0$export$9afb8bc826b033ea),
        {
          slots: {
            description: descriptionProps,
            errorMessage: errorMessageProps
          }
        }
      ],
      [
        (0, $ee014567cb39d3f0$export$ff05c3ac10437e03),
        validation
      ]
    ]
  }, (0, import_react211.default).createElement("div", {
    ...DOMProps,
    ...renderProps,
    ref,
    slot: props.slot || void 0,
    "data-invalid": state.isInvalid || void 0,
    "data-disabled": state.isDisabled || void 0
  }));
});
var $40825cdb76e74f70$export$5eaee2322dd727eb = (0, import_react211.forwardRef)(function TimeField(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $40825cdb76e74f70$export$8e17ddc448e87c1e);
  let { validationBehavior: formValidationBehavior } = (0, $64fa3d84918910a7$export$fabf2dc03a41866e)((0, $d3e0e05bdfcf66bd$export$c24727297075ec6a)) || {};
  var _props_validationBehavior, _ref;
  let validationBehavior = (_ref = (_props_validationBehavior = props.validationBehavior) !== null && _props_validationBehavior !== void 0 ? _props_validationBehavior : formValidationBehavior) !== null && _ref !== void 0 ? _ref : "native";
  let { locale } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let state = (0, $eff5d8ee529ac4bb$export$fd53cef0cc796101)({
    ...props,
    locale,
    validationBehavior
  });
  let fieldRef = (0, import_react211.useRef)(null);
  let [labelRef, label] = (0, $64fa3d84918910a7$export$9d4c57ee4c6ffdd8)(!props["aria-label"] && !props["aria-labelledby"]);
  let inputRef = (0, import_react211.useRef)(null);
  let { labelProps, fieldProps, inputProps, descriptionProps, errorMessageProps, ...validation } = (0, $16f0b7bb276bc17e$export$4c842f6a241dc825)({
    ...(0, $64fa3d84918910a7$export$ef03459518577ad4)(props),
    label,
    inputRef,
    validationBehavior
  }, state, fieldRef);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    values: {
      state,
      isInvalid: state.isInvalid,
      isDisabled: state.isDisabled
    },
    defaultClassName: "react-aria-TimeField"
  });
  let DOMProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  delete DOMProps.id;
  return (0, import_react211.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        $40825cdb76e74f70$export$5d8dc44abd10a920,
        state
      ],
      [
        (0, $a049562f99e7db0e$export$f9c6924e160136d1),
        {
          ...fieldProps,
          ref: fieldRef,
          isInvalid: state.isInvalid,
          isDisabled: state.isDisabled
        }
      ],
      [
        (0, $3985021b0ad6602f$export$37fb8590cf2c088c),
        {
          ...inputProps,
          ref: inputRef
        }
      ],
      [
        (0, $01b77f81d0f07f68$export$75b6ee27786ba447),
        {
          ...labelProps,
          ref: labelRef,
          elementType: "span"
        }
      ],
      [
        (0, $514c0188e459b4c0$export$9afb8bc826b033ea),
        {
          slots: {
            description: descriptionProps,
            errorMessage: errorMessageProps
          }
        }
      ],
      [
        (0, $ee014567cb39d3f0$export$ff05c3ac10437e03),
        validation
      ]
    ]
  }, (0, import_react211.default).createElement("div", {
    ...DOMProps,
    ...renderProps,
    ref,
    slot: props.slot || void 0,
    "data-invalid": state.isInvalid || void 0,
    "data-disabled": state.isDisabled || void 0
  }));
});
var $40825cdb76e74f70$export$7edc06cf1783b30f = (0, import_react211.forwardRef)(function DateInput(props, ref) {
  let dateFieldState = (0, import_react211.useContext)($40825cdb76e74f70$export$3b08bebcf796eea0);
  let timeFieldState = (0, import_react211.useContext)($40825cdb76e74f70$export$5d8dc44abd10a920);
  return dateFieldState || timeFieldState ? (0, import_react211.default).createElement($40825cdb76e74f70$var$DateInputInner, {
    ...props,
    ref
  }) : (0, import_react211.default).createElement($40825cdb76e74f70$var$DateInputStandalone, {
    ...props,
    ref
  });
});
var $40825cdb76e74f70$var$DateInputStandalone = (0, import_react211.forwardRef)((props, ref) => {
  let [dateFieldProps, fieldRef] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)({
    slot: props.slot
  }, ref, $40825cdb76e74f70$export$7b3e670c86da5fe8);
  let { locale } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let state = (0, $3c0fc76039f1c516$export$60e84778edff6d26)({
    ...dateFieldProps,
    locale,
    createCalendar: $64244302c3013299$export$dd0bbc9b26defe37
  });
  let inputRef = (0, import_react211.useRef)(null);
  let { fieldProps, inputProps } = (0, $16f0b7bb276bc17e$export$5591b0b878c1a989)({
    ...dateFieldProps,
    inputRef
  }, state, fieldRef);
  return (0, import_react211.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        $40825cdb76e74f70$export$3b08bebcf796eea0,
        state
      ],
      [
        (0, $3985021b0ad6602f$export$37fb8590cf2c088c),
        {
          ...inputProps,
          ref: inputRef
        }
      ],
      [
        (0, $a049562f99e7db0e$export$f9c6924e160136d1),
        {
          ...fieldProps,
          ref: fieldRef,
          isInvalid: state.isInvalid,
          isDisabled: state.isDisabled
        }
      ]
    ]
  }, (0, import_react211.default).createElement($40825cdb76e74f70$var$DateInputInner, props));
});
var $40825cdb76e74f70$var$DateInputInner = (0, import_react211.forwardRef)((props, ref) => {
  let { className, children } = props;
  let dateFieldState = (0, import_react211.useContext)($40825cdb76e74f70$export$3b08bebcf796eea0);
  let timeFieldState = (0, import_react211.useContext)($40825cdb76e74f70$export$5d8dc44abd10a920);
  let state = dateFieldState !== null && dateFieldState !== void 0 ? dateFieldState : timeFieldState;
  return (0, import_react211.default).createElement((0, import_react211.default).Fragment, null, (0, import_react211.default).createElement((0, $a049562f99e7db0e$export$eb2fcfdbd7ba97d4), {
    ...props,
    ref,
    slot: props.slot || void 0,
    className: className !== null && className !== void 0 ? className : "react-aria-DateInput",
    isInvalid: state.isInvalid,
    isDisabled: state.isDisabled
  }, state.segments.map((segment, i) => (0, import_react211.cloneElement)(children(segment), {
    key: i
  }))), (0, import_react211.default).createElement((0, $3985021b0ad6602f$export$f5b8910cec6cf069), null));
});
var $40825cdb76e74f70$export$336ab7fa954c4b5f = (0, import_react211.forwardRef)(function DateSegment({ segment, ...otherProps }, ref) {
  let dateFieldState = (0, import_react211.useContext)($40825cdb76e74f70$export$3b08bebcf796eea0);
  let timeFieldState = (0, import_react211.useContext)($40825cdb76e74f70$export$5d8dc44abd10a920);
  let state = dateFieldState !== null && dateFieldState !== void 0 ? dateFieldState : timeFieldState;
  let domRef = (0, $df56164dff5785e2$export$4338b53315abf666)(ref);
  let { segmentProps } = (0, $32489daedd52963e$export$1315d136e6f7581)(segment, state, domRef);
  let { focusProps, isFocused, isFocusVisible } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)();
  let { hoverProps, isHovered } = (0, $6179b936705e76d3$export$ae780daf29e6d456)({
    ...otherProps,
    isDisabled: state.isDisabled || segment.type === "literal"
  });
  let { isEditable, ...segmentRest } = segment;
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...otherProps,
    values: {
      ...segmentRest,
      isReadOnly: !isEditable,
      isInvalid: state.isInvalid,
      isDisabled: state.isDisabled,
      isHovered,
      isFocused,
      isFocusVisible
    },
    defaultChildren: segment.text,
    defaultClassName: "react-aria-DateSegment"
  });
  return (0, import_react211.default).createElement("span", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)((0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(otherProps), segmentProps, focusProps, hoverProps),
    ...renderProps,
    style: segmentProps.style,
    ref: domRef,
    "data-placeholder": segment.isPlaceholder || void 0,
    "data-invalid": state.isInvalid || void 0,
    "data-readonly": !isEditable || void 0,
    "data-disabled": state.isDisabled || void 0,
    "data-type": segment.type,
    "data-hovered": isHovered || void 0,
    "data-focused": isFocused || void 0,
    "data-focus-visible": isFocusVisible || void 0
  });
});

// node_modules/react-aria-components/dist/DatePicker.mjs
var import_react212 = __toESM(require_react(), 1);
var $06d5b8ec9ee5d538$export$cf316c7f3b44c11e = (0, import_react212.createContext)(null);
var $06d5b8ec9ee5d538$export$8282edba42ee28a = (0, import_react212.createContext)(null);
var $06d5b8ec9ee5d538$export$50a10c048fdcdee9 = (0, import_react212.createContext)(null);
var $06d5b8ec9ee5d538$export$80d7ae1f804790be = (0, import_react212.createContext)(null);
var $06d5b8ec9ee5d538$var$CLEAR_CONTEXTS = [
  (0, $a049562f99e7db0e$export$f9c6924e160136d1),
  (0, $d2b4bc8c273e7be6$export$24d547caef80ccd1),
  (0, $01b77f81d0f07f68$export$75b6ee27786ba447),
  (0, $514c0188e459b4c0$export$9afb8bc826b033ea)
];
var $06d5b8ec9ee5d538$export$5109c6dd95d8fb00 = (0, import_react212.forwardRef)(function DatePicker(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $06d5b8ec9ee5d538$export$cf316c7f3b44c11e);
  let { validationBehavior: formValidationBehavior } = (0, $64fa3d84918910a7$export$fabf2dc03a41866e)((0, $d3e0e05bdfcf66bd$export$c24727297075ec6a)) || {};
  var _props_validationBehavior, _ref;
  let validationBehavior = (_ref = (_props_validationBehavior = props.validationBehavior) !== null && _props_validationBehavior !== void 0 ? _props_validationBehavior : formValidationBehavior) !== null && _ref !== void 0 ? _ref : "native";
  let state = (0, $ab5bf3f618090389$export$87194bb378cc3ac2)({
    ...props,
    validationBehavior
  });
  let groupRef = (0, import_react212.useRef)(null);
  let [labelRef, label] = (0, $64fa3d84918910a7$export$9d4c57ee4c6ffdd8)(!props["aria-label"] && !props["aria-labelledby"]);
  let { groupProps, labelProps, fieldProps, buttonProps, dialogProps, calendarProps, descriptionProps, errorMessageProps, ...validation } = (0, $6057a3d2a53a12fd$export$42df105a73306d51)({
    ...(0, $64fa3d84918910a7$export$ef03459518577ad4)(props),
    label,
    validationBehavior
  }, state, groupRef);
  let [groupWidth, setGroupWidth] = (0, import_react212.useState)(null);
  let onResize = (0, import_react212.useCallback)(() => {
    if (groupRef.current) setGroupWidth(groupRef.current.offsetWidth + "px");
  }, []);
  (0, $9daab02d461809db$export$683480f191c0e3ea)({
    ref: groupRef,
    onResize
  });
  let { focusProps, isFocused, isFocusVisible } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)({
    within: true
  });
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    values: {
      state,
      isFocusWithin: isFocused,
      isFocusVisible,
      isDisabled: props.isDisabled || false,
      isInvalid: state.isInvalid,
      isOpen: state.isOpen
    },
    defaultClassName: "react-aria-DatePicker"
  });
  let DOMProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  delete DOMProps.id;
  return (0, import_react212.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        $06d5b8ec9ee5d538$export$50a10c048fdcdee9,
        state
      ],
      [
        (0, $a049562f99e7db0e$export$f9c6924e160136d1),
        {
          ...groupProps,
          ref: groupRef,
          isInvalid: state.isInvalid
        }
      ],
      [
        (0, $40825cdb76e74f70$export$7b3e670c86da5fe8),
        fieldProps
      ],
      [
        (0, $d2b4bc8c273e7be6$export$24d547caef80ccd1),
        {
          ...buttonProps,
          isPressed: state.isOpen
        }
      ],
      [
        (0, $01b77f81d0f07f68$export$75b6ee27786ba447),
        {
          ...labelProps,
          ref: labelRef,
          elementType: "span"
        }
      ],
      [
        (0, $dfd62f934fc76fed$export$3b805cea1f178355),
        calendarProps
      ],
      [
        (0, $de32f1b87079253c$export$d2f961adcb0afbe),
        state
      ],
      [
        (0, $07b14b47974efb58$export$9b9a0cd73afb7ca4),
        {
          trigger: "DatePicker",
          triggerRef: groupRef,
          placement: "bottom start",
          style: {
            "--trigger-width": groupWidth
          },
          clearContexts: $06d5b8ec9ee5d538$var$CLEAR_CONTEXTS
        }
      ],
      [
        (0, $de32f1b87079253c$export$8b93a07348a7730c),
        dialogProps
      ],
      [
        (0, $514c0188e459b4c0$export$9afb8bc826b033ea),
        {
          slots: {
            description: descriptionProps,
            errorMessage: errorMessageProps
          }
        }
      ],
      [
        (0, $ee014567cb39d3f0$export$ff05c3ac10437e03),
        validation
      ]
    ]
  }, (0, import_react212.default).createElement("div", {
    ...focusProps,
    ...DOMProps,
    ...renderProps,
    ref,
    slot: props.slot || void 0,
    "data-focus-within": isFocused || void 0,
    "data-invalid": state.isInvalid || void 0,
    "data-focus-visible": isFocusVisible || void 0,
    "data-disabled": props.isDisabled || void 0,
    "data-open": state.isOpen || void 0
  }));
});
var $06d5b8ec9ee5d538$export$17334619f3ac2224 = (0, import_react212.forwardRef)(function DateRangePicker(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $06d5b8ec9ee5d538$export$8282edba42ee28a);
  let { validationBehavior: formValidationBehavior } = (0, $64fa3d84918910a7$export$fabf2dc03a41866e)((0, $d3e0e05bdfcf66bd$export$c24727297075ec6a)) || {};
  var _props_validationBehavior, _ref;
  let validationBehavior = (_ref = (_props_validationBehavior = props.validationBehavior) !== null && _props_validationBehavior !== void 0 ? _props_validationBehavior : formValidationBehavior) !== null && _ref !== void 0 ? _ref : "native";
  let state = (0, $93c38a5e28be6249$export$e50a61c1de9f574)({
    ...props,
    validationBehavior
  });
  let groupRef = (0, import_react212.useRef)(null);
  let [labelRef, label] = (0, $64fa3d84918910a7$export$9d4c57ee4c6ffdd8)(!props["aria-label"] && !props["aria-labelledby"]);
  let { groupProps, labelProps, startFieldProps, endFieldProps, buttonProps, dialogProps, calendarProps, descriptionProps, errorMessageProps, ...validation } = (0, $887cac91b7cc8801$export$12fd5f0e9f4bb192)({
    ...(0, $64fa3d84918910a7$export$ef03459518577ad4)(props),
    label,
    validationBehavior
  }, state, groupRef);
  let [groupWidth, setGroupWidth] = (0, import_react212.useState)(null);
  let onResize = (0, import_react212.useCallback)(() => {
    if (groupRef.current) setGroupWidth(groupRef.current.offsetWidth + "px");
  }, []);
  (0, $9daab02d461809db$export$683480f191c0e3ea)({
    ref: groupRef,
    onResize
  });
  let { focusProps, isFocused, isFocusVisible } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)({
    within: true
  });
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    values: {
      state,
      isFocusWithin: isFocused,
      isFocusVisible,
      isDisabled: props.isDisabled || false,
      isInvalid: state.isInvalid,
      isOpen: state.isOpen
    },
    defaultClassName: "react-aria-DateRangePicker"
  });
  let DOMProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  delete DOMProps.id;
  return (0, import_react212.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        $06d5b8ec9ee5d538$export$80d7ae1f804790be,
        state
      ],
      [
        (0, $a049562f99e7db0e$export$f9c6924e160136d1),
        {
          ...groupProps,
          ref: groupRef,
          isInvalid: state.isInvalid
        }
      ],
      [
        (0, $d2b4bc8c273e7be6$export$24d547caef80ccd1),
        {
          ...buttonProps,
          isPressed: state.isOpen
        }
      ],
      [
        (0, $01b77f81d0f07f68$export$75b6ee27786ba447),
        {
          ...labelProps,
          ref: labelRef,
          elementType: "span"
        }
      ],
      [
        (0, $dfd62f934fc76fed$export$233dd9682e1ad64b),
        calendarProps
      ],
      [
        (0, $de32f1b87079253c$export$d2f961adcb0afbe),
        state
      ],
      [
        (0, $07b14b47974efb58$export$9b9a0cd73afb7ca4),
        {
          trigger: "DateRangePicker",
          triggerRef: groupRef,
          placement: "bottom start",
          style: {
            "--trigger-width": groupWidth
          },
          clearContexts: $06d5b8ec9ee5d538$var$CLEAR_CONTEXTS
        }
      ],
      [
        (0, $de32f1b87079253c$export$8b93a07348a7730c),
        dialogProps
      ],
      [
        (0, $40825cdb76e74f70$export$7b3e670c86da5fe8),
        {
          slots: {
            start: startFieldProps,
            end: endFieldProps
          }
        }
      ],
      [
        (0, $514c0188e459b4c0$export$9afb8bc826b033ea),
        {
          slots: {
            description: descriptionProps,
            errorMessage: errorMessageProps
          }
        }
      ],
      [
        (0, $ee014567cb39d3f0$export$ff05c3ac10437e03),
        validation
      ]
    ]
  }, (0, import_react212.default).createElement("div", {
    ...focusProps,
    ...DOMProps,
    ...renderProps,
    ref,
    slot: props.slot || void 0,
    "data-focus-within": isFocused || void 0,
    "data-invalid": state.isInvalid || void 0,
    "data-focus-visible": isFocusVisible || void 0,
    "data-disabled": props.isDisabled || void 0,
    "data-open": state.isOpen || void 0
  }));
});

// node_modules/react-aria-components/dist/Disclosure.mjs
var import_react213 = __toESM(require_react(), 1);
var $28f4fd908f0de97f$export$1d40e3e0cc4d5de = (0, import_react213.createContext)(null);
var $28f4fd908f0de97f$export$944aceb4f8c89f10 = (0, import_react213.forwardRef)(function DisclosureGroup(props, ref) {
  let state = (0, $9385b3affbdec831$export$f36461af0ef4707d)(props);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    defaultClassName: "react-aria-DisclosureGroup",
    values: {
      isDisabled: state.isDisabled,
      state
    }
  });
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  return (0, import_react213.default).createElement("div", {
    ...domProps,
    ...renderProps,
    ref,
    "data-disabled": props.isDisabled || void 0
  }, (0, import_react213.default).createElement($28f4fd908f0de97f$export$1d40e3e0cc4d5de.Provider, {
    value: state
  }, renderProps.children));
});
var $28f4fd908f0de97f$export$d665dd135a51b28a = (0, import_react213.createContext)(null);
var $28f4fd908f0de97f$export$dab3ea4a6ef094da = (0, import_react213.createContext)(null);
var $28f4fd908f0de97f$var$InternalDisclosureContext = (0, import_react213.createContext)(null);
var $28f4fd908f0de97f$export$74a362b31437ec83 = (0, import_react213.forwardRef)(function Disclosure(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $28f4fd908f0de97f$export$d665dd135a51b28a);
  let groupState = (0, import_react213.useContext)($28f4fd908f0de97f$export$1d40e3e0cc4d5de);
  let { id, ...otherProps } = props;
  let defaultId = (0, $bdb11010cef70236$export$f680877a34711e37)();
  id || (id = defaultId);
  let isExpanded = groupState ? groupState.expandedKeys.has(id) : props.isExpanded;
  let state = (0, $bf996d45f4a36925$export$3fcbf6e4407997e0)({
    ...props,
    isExpanded,
    onExpandedChange(isExpanded2) {
      var _props_onExpandedChange;
      if (groupState) groupState.toggleKey(id);
      (_props_onExpandedChange = props.onExpandedChange) === null || _props_onExpandedChange === void 0 ? void 0 : _props_onExpandedChange.call(props, isExpanded2);
    }
  });
  let panelRef = (0, import_react213.default).useRef(null);
  let isDisabled = props.isDisabled || (groupState === null || groupState === void 0 ? void 0 : groupState.isDisabled) || false;
  let { buttonProps, panelProps } = (0, $5e910fae8e128ead$export$6e3e27031a30522f)({
    ...props,
    isExpanded,
    isDisabled
  }, state, panelRef);
  let { isFocusVisible: isFocusVisibleWithin, focusProps: focusWithinProps } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)({
    within: true
  });
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    id: void 0,
    defaultClassName: "react-aria-Disclosure",
    values: {
      isExpanded: state.isExpanded,
      isDisabled,
      isFocusVisibleWithin,
      state
    }
  });
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(otherProps);
  return (0, import_react213.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        (0, $d2b4bc8c273e7be6$export$24d547caef80ccd1),
        {
          slots: {
            [(0, $64fa3d84918910a7$export$c62b8e45d58ddad9)]: {},
            trigger: buttonProps
          }
        }
      ],
      [
        $28f4fd908f0de97f$var$InternalDisclosureContext,
        {
          panelProps,
          panelRef
        }
      ],
      [
        $28f4fd908f0de97f$export$dab3ea4a6ef094da,
        state
      ]
    ]
  }, (0, import_react213.default).createElement("div", {
    ref,
    "data-expanded": state.isExpanded || void 0,
    "data-disabled": isDisabled || void 0,
    "data-focus-visible-within": isFocusVisibleWithin || void 0,
    ...domProps,
    ...focusWithinProps,
    ...renderProps
  }, renderProps.children));
});
var $28f4fd908f0de97f$export$feabaa331e1d464c = (0, import_react213.forwardRef)(function DisclosurePanel(props, ref) {
  let { role = "group" } = props;
  let { panelProps, panelRef } = (0, import_react213.useContext)($28f4fd908f0de97f$var$InternalDisclosureContext);
  let { isFocusVisible: isFocusVisibleWithin, focusProps: focusWithinProps } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)({
    within: true
  });
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    defaultClassName: "react-aria-DisclosurePanel",
    values: {
      isFocusVisibleWithin
    }
  });
  let DOMProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  return (0, import_react213.default).createElement("div", {
    ...DOMProps,
    ref: (0, $5dc95899b306f630$export$c9058316764c140e)(ref, panelRef),
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(panelProps, focusWithinProps),
    ...renderProps,
    role,
    "data-focus-visible-within": isFocusVisibleWithin || void 0
  }, (0, import_react213.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        (0, $d2b4bc8c273e7be6$export$24d547caef80ccd1),
        null
      ]
    ]
  }, props.children));
});

// node_modules/react-aria-components/dist/DropZone.mjs
var import_react214 = __toESM(require_react(), 1);
function $parcel$interopDefault36(a) {
  return a && a.__esModule ? a.default : a;
}
var $cb088e721efb9218$export$14a72053295ff9a6 = (0, import_react214.createContext)(null);
var $cb088e721efb9218$export$3c6489d84dc98b6 = (0, import_react214.forwardRef)(function DropZone(props, ref) {
  let { isDisabled = false } = props;
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $cb088e721efb9218$export$14a72053295ff9a6);
  let dropzoneRef = (0, $df56164dff5785e2$export$4338b53315abf666)(ref);
  let buttonRef = (0, import_react214.useRef)(null);
  let { dropProps, dropButtonProps, isDropTarget } = (0, $5c06e4929e123553$export$ccdee5eaf73cf661)({
    ...props,
    ref: buttonRef,
    hasDropButton: true
  });
  let { buttonProps } = (0, $701a24aa0da5b062$export$ea18c227d4417cc3)(dropButtonProps || {}, buttonRef);
  let { hoverProps, isHovered } = (0, $6179b936705e76d3$export$ae780daf29e6d456)(props);
  let { focusProps, isFocused, isFocusVisible } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)();
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault36($df39c1238ae2b5f3$exports)), "react-aria-components");
  let textId = (0, $bdb11010cef70236$export$b4cc09c592e8fdb8)();
  let ariaLabel = props["aria-label"] || stringFormatter.format("dropzoneLabel");
  let messageId = props["aria-labelledby"];
  let ariaLabelledby = [
    textId,
    messageId
  ].filter(Boolean).join(" ");
  let labelProps = (0, $313b98861ee5dd6c$export$d6875122194c7b44)({
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledby
  });
  let { clipboardProps } = (0, $9fcc7f0d70d084ee$export$2314ca2a3e892862)({
    isDisabled,
    onPaste: (items) => {
      var _props_onDrop;
      return (_props_onDrop = props.onDrop) === null || _props_onDrop === void 0 ? void 0 : _props_onDrop.call(props, {
        type: "drop",
        items,
        x: 0,
        y: 0,
        dropOperation: "copy"
      });
    }
  });
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    values: {
      isHovered,
      isFocused,
      isFocusVisible,
      isDropTarget,
      isDisabled
    },
    defaultClassName: "react-aria-DropZone"
  });
  let DOMProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  delete DOMProps.id;
  return (0, import_react214.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        (0, $514c0188e459b4c0$export$9afb8bc826b033ea),
        {
          id: textId,
          slot: "label"
        }
      ]
    ]
  }, (0, import_react214.default).createElement("div", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(dropProps, hoverProps, DOMProps),
    ...renderProps,
    slot: props.slot || void 0,
    ref: dropzoneRef,
    onClick: (e) => {
      var _dropzoneRef_current;
      let target = e.target;
      while (target && ((_dropzoneRef_current = dropzoneRef.current) === null || _dropzoneRef_current === void 0 ? void 0 : _dropzoneRef_current.contains(target))) {
        if ((0, $b4b717babfbb907b$export$4c063cf1350e6fed)(target)) break;
        else if (target === dropzoneRef.current) {
          var _buttonRef_current;
          (_buttonRef_current = buttonRef.current) === null || _buttonRef_current === void 0 ? void 0 : _buttonRef_current.focus();
          break;
        }
        target = target.parentElement;
      }
    },
    "data-hovered": isHovered || void 0,
    "data-focused": isFocused || void 0,
    "data-focus-visible": isFocusVisible || void 0,
    "data-drop-target": isDropTarget || void 0,
    "data-disabled": isDisabled || void 0
  }, (0, import_react214.default).createElement((0, $5c3e21d68f1c4674$export$439d29a4e110a164), null, (0, import_react214.default).createElement("button", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(buttonProps, focusProps, clipboardProps, labelProps),
    ref: buttonRef
  })), renderProps.children));
});

// node_modules/react-aria-components/dist/FileTrigger.mjs
var import_react215 = __toESM(require_react(), 1);
var $1e2864c73f66a4da$export$6fb4a10d2c950550 = (0, import_react215.forwardRef)(function FileTrigger(props, ref) {
  let { onSelect, acceptedFileTypes, allowsMultiple, defaultCamera, children, acceptDirectory, ...rest } = props;
  let inputRef = (0, $df56164dff5785e2$export$4338b53315abf666)(ref);
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(rest);
  return (0, import_react215.default).createElement((0, import_react215.default).Fragment, null, (0, import_react215.default).createElement((0, $f1ab8c75478c6f73$export$3351871ee4b288b8), {
    onPress: () => {
      var _inputRef_current, _inputRef_current1;
      if ((_inputRef_current = inputRef.current) === null || _inputRef_current === void 0 ? void 0 : _inputRef_current.value) inputRef.current.value = "";
      (_inputRef_current1 = inputRef.current) === null || _inputRef_current1 === void 0 ? void 0 : _inputRef_current1.click();
    }
  }, children), (0, import_react215.default).createElement((0, $3985021b0ad6602f$export$f5b8910cec6cf069), {
    ...domProps,
    type: "file",
    ref: inputRef,
    style: {
      display: "none"
    },
    accept: acceptedFileTypes === null || acceptedFileTypes === void 0 ? void 0 : acceptedFileTypes.toString(),
    onChange: (e) => onSelect === null || onSelect === void 0 ? void 0 : onSelect(e.target.files),
    capture: defaultCamera,
    multiple: allowsMultiple,
    // @ts-expect-error
    webkitdirectory: acceptDirectory ? "" : void 0
  }));
});

// node_modules/react-aria-components/dist/GridList.mjs
var import_react216 = __toESM(require_react(), 1);
var $72e60046c03fbe42$export$54fe942636b6416d = (0, import_react216.createContext)(null);
var $72e60046c03fbe42$export$a7bfbda1311ca015 = (0, import_react216.forwardRef)(function GridList(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $72e60046c03fbe42$export$54fe942636b6416d);
  return (0, import_react216.default).createElement((0, $e1995378a142960e$export$bf788dd355e3a401), {
    content: (0, import_react216.default).createElement((0, $e1995378a142960e$export$fb8073518f34e6ec), props)
  }, (collection) => (0, import_react216.default).createElement($72e60046c03fbe42$var$GridListInner, {
    props,
    collection,
    gridListRef: ref
  }));
});
function $72e60046c03fbe42$var$GridListInner({ props, collection, gridListRef: ref }) {
  var _state_collection_getItem;
  let { dragAndDropHooks, keyboardNavigationBehavior = "arrow", layout = "stack" } = props;
  let { CollectionRoot, isVirtualized, layoutDelegate, dropTargetDelegate: ctxDropTargetDelegate } = (0, import_react216.useContext)((0, $7135fc7d473fd974$export$4feb769f8ddf26c5));
  let state = (0, $e72dd72e1c76a225$export$2f645645f7bca764)({
    ...props,
    collection,
    children: void 0,
    layoutDelegate
  });
  let collator = (0, $325a3faab7a68acd$export$a16aca283550c30d)({
    usage: "search",
    sensitivity: "base"
  });
  let { disabledBehavior, disabledKeys } = state.selectionManager;
  let { direction } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let keyboardDelegate = (0, import_react216.useMemo)(() => new (0, $2a25aae57d74318e$export$a05409b8bb224a5a)({
    collection,
    collator,
    ref,
    disabledKeys,
    disabledBehavior,
    layoutDelegate,
    layout,
    direction
  }), [
    collection,
    ref,
    layout,
    disabledKeys,
    disabledBehavior,
    layoutDelegate,
    collator,
    direction
  ]);
  let { gridProps } = (0, $f47efb0c3a859cf2$export$664f9155035607eb)({
    ...props,
    keyboardDelegate,
    // Only tab navigation is supported in grid layout.
    keyboardNavigationBehavior: layout === "grid" ? "tab" : keyboardNavigationBehavior,
    isVirtualized,
    shouldSelectOnPressUp: props.shouldSelectOnPressUp
  }, state, ref);
  let selectionManager = state.selectionManager;
  let isListDraggable = !!(dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : dragAndDropHooks.useDraggableCollectionState);
  let isListDroppable = !!(dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : dragAndDropHooks.useDroppableCollectionState);
  let dragHooksProvided = (0, import_react216.useRef)(isListDraggable);
  let dropHooksProvided = (0, import_react216.useRef)(isListDroppable);
  (0, import_react216.useEffect)(() => {
    if (false) return;
    if (dragHooksProvided.current !== isListDraggable) console.warn("Drag hooks were provided during one render, but not another. This should be avoided as it may produce unexpected behavior.");
    if (dropHooksProvided.current !== isListDroppable) console.warn("Drop hooks were provided during one render, but not another. This should be avoided as it may produce unexpected behavior.");
  }, [
    isListDraggable,
    isListDroppable
  ]);
  let dragState = void 0;
  let dropState = void 0;
  let droppableCollection = void 0;
  let isRootDropTarget = false;
  let dragPreview = null;
  let preview = (0, import_react216.useRef)(null);
  if (isListDraggable && dragAndDropHooks) {
    dragState = dragAndDropHooks.useDraggableCollectionState({
      collection,
      selectionManager,
      preview: dragAndDropHooks.renderDragPreview ? preview : void 0
    });
    dragAndDropHooks.useDraggableCollection({}, dragState, ref);
    let DragPreview2 = dragAndDropHooks.DragPreview;
    dragPreview = dragAndDropHooks.renderDragPreview ? (0, import_react216.default).createElement(DragPreview2, {
      ref: preview
    }, dragAndDropHooks.renderDragPreview) : null;
  }
  if (isListDroppable && dragAndDropHooks) {
    dropState = dragAndDropHooks.useDroppableCollectionState({
      collection,
      selectionManager
    });
    let keyboardDelegate2 = new (0, $2a25aae57d74318e$export$a05409b8bb224a5a)({
      collection,
      disabledKeys: selectionManager.disabledKeys,
      disabledBehavior: selectionManager.disabledBehavior,
      ref
    });
    let dropTargetDelegate = dragAndDropHooks.dropTargetDelegate || ctxDropTargetDelegate || new dragAndDropHooks.ListDropTargetDelegate(collection, ref, {
      layout,
      direction
    });
    droppableCollection = dragAndDropHooks.useDroppableCollection({
      keyboardDelegate: keyboardDelegate2,
      dropTargetDelegate
    }, dropState, ref);
    isRootDropTarget = dropState.isDropTarget({
      type: "root"
    });
  }
  let { focusProps, isFocused, isFocusVisible } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)();
  let isEmpty = state.collection.size === 0 || state.collection.size === 1 && ((_state_collection_getItem = state.collection.getItem(state.collection.getFirstKey())) === null || _state_collection_getItem === void 0 ? void 0 : _state_collection_getItem.type) === "loader";
  let renderValues = {
    isDropTarget: isRootDropTarget,
    isEmpty,
    isFocused,
    isFocusVisible,
    layout,
    state
  };
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    className: props.className,
    style: props.style,
    defaultClassName: "react-aria-GridList",
    values: renderValues
  });
  let emptyState = null;
  let emptyStatePropOverrides = null;
  if (isEmpty && props.renderEmptyState) {
    let content = props.renderEmptyState(renderValues);
    emptyState = (0, import_react216.default).createElement("div", {
      role: "row",
      "aria-rowindex": 1,
      style: {
        display: "contents"
      }
    }, (0, import_react216.default).createElement("div", {
      role: "gridcell",
      style: {
        display: "contents"
      }
    }, content));
  }
  return (0, import_react216.default).createElement((0, $9bf71ea28793e738$export$20e40289641fbbb6), null, (0, import_react216.default).createElement("div", {
    ...(0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props),
    ...renderProps,
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(gridProps, focusProps, droppableCollection === null || droppableCollection === void 0 ? void 0 : droppableCollection.collectionProps, emptyStatePropOverrides),
    ref,
    slot: props.slot || void 0,
    onScroll: props.onScroll,
    "data-drop-target": isRootDropTarget || void 0,
    "data-empty": isEmpty || void 0,
    "data-focused": isFocused || void 0,
    "data-focus-visible": isFocusVisible || void 0,
    "data-layout": layout
  }, (0, import_react216.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        (0, $eed445e0843c11d0$export$7c5906fe4f1f2af2),
        state
      ],
      [
        (0, $612b8eb6cb90e02d$export$d188a835a7bc5783),
        {
          dragAndDropHooks,
          dragState,
          dropState
        }
      ],
      [
        (0, $612b8eb6cb90e02d$export$f55761759794cf55),
        {
          render: $72e60046c03fbe42$var$GridListDropIndicatorWrapper
        }
      ]
    ]
  }, isListDroppable && (0, import_react216.default).createElement($72e60046c03fbe42$var$RootDropIndicator, null), (0, import_react216.default).createElement(CollectionRoot, {
    collection,
    scrollRef: ref,
    persistedKeys: (0, $612b8eb6cb90e02d$export$d1e8e3fbb7461f6)(selectionManager, dragAndDropHooks, dropState),
    renderDropIndicator: (0, $612b8eb6cb90e02d$export$971707d8a129a1f7)(dragAndDropHooks, dropState)
  })), emptyState, dragPreview));
}
var $72e60046c03fbe42$export$e96fc9a8407faa6b = (0, $e1995378a142960e$export$18af5c7a9e9b3664)("item", function GridListItem(props, forwardedRef, item) {
  let state = (0, import_react216.useContext)((0, $eed445e0843c11d0$export$7c5906fe4f1f2af2));
  let { dragAndDropHooks, dragState, dropState } = (0, import_react216.useContext)((0, $612b8eb6cb90e02d$export$d188a835a7bc5783));
  let ref = (0, $df56164dff5785e2$export$4338b53315abf666)(forwardedRef);
  let { isVirtualized } = (0, import_react216.useContext)((0, $7135fc7d473fd974$export$4feb769f8ddf26c5));
  let { rowProps, gridCellProps, descriptionProps, ...states } = (0, $4e8b0456ef72939f$export$9610e69494fadfd2)({
    node: item,
    shouldSelectOnPressUp: !!dragState,
    isVirtualized
  }, state, ref);
  let { hoverProps, isHovered } = (0, $6179b936705e76d3$export$ae780daf29e6d456)({
    isDisabled: !states.allowsSelection && !states.hasAction,
    onHoverStart: item.props.onHoverStart,
    onHoverChange: item.props.onHoverChange,
    onHoverEnd: item.props.onHoverEnd
  });
  let { isFocusVisible, focusProps } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)();
  let { checkboxProps } = (0, $e52ffc04a4adbd52$export$e29f2573fabbf7b9)({
    key: item.key
  }, state);
  let buttonProps = state.selectionManager.disabledBehavior === "all" && states.isDisabled ? {
    isDisabled: true
  } : {};
  let draggableItem = null;
  if (dragState && dragAndDropHooks) draggableItem = dragAndDropHooks.useDraggableItem({
    key: item.key,
    hasDragButton: true
  }, dragState);
  let dropIndicator = null;
  let dropIndicatorRef = (0, import_react216.useRef)(null);
  let { visuallyHiddenProps } = (0, $5c3e21d68f1c4674$export$a966af930f325cab)();
  if (dropState && dragAndDropHooks) dropIndicator = dragAndDropHooks.useDropIndicator({
    target: {
      type: "item",
      key: item.key,
      dropPosition: "on"
    }
  }, dropState, dropIndicatorRef);
  let isDragging = dragState && dragState.isDragging(item.key);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    id: void 0,
    children: item.rendered,
    defaultClassName: "react-aria-GridListItem",
    values: {
      ...states,
      isHovered,
      isFocusVisible,
      selectionMode: state.selectionManager.selectionMode,
      selectionBehavior: state.selectionManager.selectionBehavior,
      allowsDragging: !!dragState,
      isDragging,
      isDropTarget: dropIndicator === null || dropIndicator === void 0 ? void 0 : dropIndicator.isDropTarget
    }
  });
  let dragButtonRef = (0, import_react216.useRef)(null);
  (0, import_react216.useEffect)(() => {
    if (dragState && !dragButtonRef.current) console.warn('Draggable items in a GridList must contain a <Button slot="drag"> element so that keyboard and screen reader users can drag them.');
  }, []);
  (0, import_react216.useEffect)(() => {
    if (!item.textValue && true) console.warn("A `textValue` prop is required for <GridListItem> elements with non-plain text children in order to support accessibility features such as type to select.");
  }, [
    item.textValue
  ]);
  return (0, import_react216.default).createElement((0, import_react216.default).Fragment, null, dropIndicator && !dropIndicator.isHidden && (0, import_react216.default).createElement("div", {
    role: "row",
    style: {
      position: "absolute"
    }
  }, (0, import_react216.default).createElement("div", {
    role: "gridcell"
  }, (0, import_react216.default).createElement("div", {
    role: "button",
    ...visuallyHiddenProps,
    ...dropIndicator === null || dropIndicator === void 0 ? void 0 : dropIndicator.dropIndicatorProps,
    ref: dropIndicatorRef
  }))), (0, import_react216.default).createElement("div", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)((0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props), rowProps, focusProps, hoverProps, draggableItem === null || draggableItem === void 0 ? void 0 : draggableItem.dragProps),
    ...renderProps,
    ref,
    "data-selected": states.isSelected || void 0,
    "data-disabled": states.isDisabled || void 0,
    "data-hovered": isHovered || void 0,
    "data-focused": states.isFocused || void 0,
    "data-focus-visible": isFocusVisible || void 0,
    "data-pressed": states.isPressed || void 0,
    "data-allows-dragging": !!dragState || void 0,
    "data-dragging": isDragging || void 0,
    "data-drop-target": (dropIndicator === null || dropIndicator === void 0 ? void 0 : dropIndicator.isDropTarget) || void 0,
    "data-selection-mode": state.selectionManager.selectionMode === "none" ? void 0 : state.selectionManager.selectionMode
  }, (0, import_react216.default).createElement("div", {
    ...gridCellProps,
    style: {
      display: "contents"
    }
  }, (0, import_react216.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        (0, $4e85f108e88277b8$export$b085522c77523c51),
        {
          slots: {
            [(0, $64fa3d84918910a7$export$c62b8e45d58ddad9)]: {},
            selection: checkboxProps
          }
        }
      ],
      [
        (0, $d2b4bc8c273e7be6$export$24d547caef80ccd1),
        {
          slots: {
            [(0, $64fa3d84918910a7$export$c62b8e45d58ddad9)]: buttonProps,
            drag: {
              ...draggableItem === null || draggableItem === void 0 ? void 0 : draggableItem.dragButtonProps,
              ref: dragButtonRef,
              style: {
                pointerEvents: "none"
              }
            }
          }
        }
      ],
      [
        (0, $514c0188e459b4c0$export$9afb8bc826b033ea),
        {
          slots: {
            [(0, $64fa3d84918910a7$export$c62b8e45d58ddad9)]: {},
            description: descriptionProps
          }
        }
      ],
      [
        (0, $7135fc7d473fd974$export$4feb769f8ddf26c5),
        (0, $7135fc7d473fd974$export$a164736487e3f0ae)
      ],
      [
        (0, $eed445e0843c11d0$export$7c5906fe4f1f2af2),
        null
      ]
    ]
  }, renderProps.children))));
});
function $72e60046c03fbe42$var$GridListDropIndicatorWrapper(props, ref) {
  ref = (0, $df56164dff5785e2$export$4338b53315abf666)(ref);
  let { dragAndDropHooks, dropState } = (0, import_react216.useContext)((0, $612b8eb6cb90e02d$export$d188a835a7bc5783));
  let buttonRef = (0, import_react216.useRef)(null);
  let { dropIndicatorProps, isHidden, isDropTarget } = dragAndDropHooks.useDropIndicator(props, dropState, buttonRef);
  if (isHidden) return null;
  return (0, import_react216.default).createElement($72e60046c03fbe42$var$GridListDropIndicatorForwardRef, {
    ...props,
    dropIndicatorProps,
    isDropTarget,
    buttonRef,
    ref
  });
}
function $72e60046c03fbe42$var$GridListDropIndicator(props, ref) {
  let { dropIndicatorProps, isDropTarget, buttonRef, ...otherProps } = props;
  let { visuallyHiddenProps } = (0, $5c3e21d68f1c4674$export$a966af930f325cab)();
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...otherProps,
    defaultClassName: "react-aria-DropIndicator",
    values: {
      isDropTarget
    }
  });
  return (0, import_react216.default).createElement("div", {
    ...renderProps,
    role: "row",
    ref,
    "data-drop-target": isDropTarget || void 0
  }, (0, import_react216.default).createElement("div", {
    role: "gridcell"
  }, (0, import_react216.default).createElement("div", {
    ...visuallyHiddenProps,
    role: "button",
    ...dropIndicatorProps,
    ref: buttonRef
  }), renderProps.children));
}
var $72e60046c03fbe42$var$GridListDropIndicatorForwardRef = (0, import_react216.forwardRef)($72e60046c03fbe42$var$GridListDropIndicator);
function $72e60046c03fbe42$var$RootDropIndicator() {
  let { dragAndDropHooks, dropState } = (0, import_react216.useContext)((0, $612b8eb6cb90e02d$export$d188a835a7bc5783));
  let ref = (0, import_react216.useRef)(null);
  let { dropIndicatorProps } = dragAndDropHooks.useDropIndicator({
    target: {
      type: "root"
    }
  }, dropState, ref);
  let isDropTarget = dropState.isDropTarget({
    type: "root"
  });
  let { visuallyHiddenProps } = (0, $5c3e21d68f1c4674$export$a966af930f325cab)();
  if (!isDropTarget && dropIndicatorProps["aria-hidden"]) return null;
  return (0, import_react216.default).createElement("div", {
    role: "row",
    "aria-hidden": dropIndicatorProps["aria-hidden"],
    style: {
      position: "absolute"
    }
  }, (0, import_react216.default).createElement("div", {
    role: "gridcell"
  }, (0, import_react216.default).createElement("div", {
    role: "button",
    ...visuallyHiddenProps,
    ...dropIndicatorProps,
    ref
  })));
}
var $72e60046c03fbe42$export$74653c2d94c32cc3 = (0, $e1995378a142960e$export$18af5c7a9e9b3664)("loader", function GridListLoadingIndicator(props, ref, item) {
  let state = (0, import_react216.useContext)((0, $eed445e0843c11d0$export$7c5906fe4f1f2af2));
  let { isVirtualized } = (0, import_react216.useContext)((0, $7135fc7d473fd974$export$4feb769f8ddf26c5));
  let { isLoading, onLoadMore, scrollOffset, ...otherProps } = props;
  let sentinelRef = (0, import_react216.useRef)(null);
  let memoedLoadMoreProps = (0, import_react216.useMemo)(() => ({
    onLoadMore,
    collection: state === null || state === void 0 ? void 0 : state.collection,
    sentinelRef,
    scrollOffset
  }), [
    onLoadMore,
    scrollOffset,
    state === null || state === void 0 ? void 0 : state.collection
  ]);
  (0, $a5fa973c1850dd36$export$90a12e6abf95cbe0)(memoedLoadMoreProps, sentinelRef);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...otherProps,
    id: void 0,
    children: item.rendered,
    defaultClassName: "react-aria-GridListLoadingIndicator",
    values: null
  });
  return (0, import_react216.default).createElement((0, import_react216.default).Fragment, null, (0, import_react216.default).createElement("div", {
    style: {
      position: "relative",
      width: 0,
      height: 0
    },
    inert: (0, $cdc5a6778b766db2$export$a9d04c5684123369)(true)
  }, (0, import_react216.default).createElement("div", {
    "data-testid": "loadMoreSentinel",
    ref: sentinelRef,
    style: {
      position: "absolute",
      height: 1,
      width: 1
    }
  })), isLoading && renderProps.children && (0, import_react216.default).createElement("div", {
    ...renderProps,
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)((0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props)),
    role: "row",
    "aria-rowindex": isVirtualized ? item.index + 1 : void 0,
    ref
  }, (0, import_react216.default).createElement("div", {
    "aria-colindex": isVirtualized ? 1 : void 0,
    role: "gridcell"
  }, renderProps.children)));
});

// node_modules/react-aria-components/dist/Heading.mjs
var import_react217 = __toESM(require_react(), 1);
var $5cb03073d3f54797$export$a8a3e93435678ff9 = (0, import_react217.forwardRef)(function Heading(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, (0, $4e85f108e88277b8$export$d688439359537581));
  let { children, level = 3, className, ...domProps } = props;
  let Element2 = `h${level}`;
  return (0, import_react217.default).createElement(Element2, {
    ...domProps,
    ref,
    className: className !== null && className !== void 0 ? className : "react-aria-Heading"
  }, children);
});

// node_modules/react-aria-components/dist/Meter.mjs
var import_react218 = __toESM(require_react(), 1);
var $c0c9ced265f3594c$export$8b645da15a96b44f = (0, import_react218.createContext)(null);
var $c0c9ced265f3594c$export$62e3ae2a4090b879 = (0, import_react218.forwardRef)(function Meter(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $c0c9ced265f3594c$export$8b645da15a96b44f);
  let { value = 0, minValue = 0, maxValue = 100 } = props;
  value = (0, $9446cca9a3875146$export$7d15b64cf5a3a4c4)(value, minValue, maxValue);
  let [labelRef, label] = (0, $64fa3d84918910a7$export$9d4c57ee4c6ffdd8)(!props["aria-label"] && !props["aria-labelledby"]);
  let { meterProps, labelProps } = (0, $0002d7e1d16de204$export$e969dbfa146870ff)({
    ...props,
    label
  });
  let percentage = (value - minValue) / (maxValue - minValue) * 100;
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    defaultClassName: "react-aria-Meter",
    values: {
      percentage,
      valueText: meterProps["aria-valuetext"]
    }
  });
  return (0, import_react218.default).createElement("div", {
    ...meterProps,
    ...renderProps,
    ref,
    slot: props.slot || void 0
  }, (0, import_react218.default).createElement((0, $01b77f81d0f07f68$export$75b6ee27786ba447).Provider, {
    value: {
      ...labelProps,
      ref: labelRef,
      elementType: "span"
    }
  }, renderProps.children));
});

// node_modules/react-aria-components/dist/Modal.mjs
var import_react219 = __toESM(require_react(), 1);
var $f3f84453ead64de5$export$ab57792b9b6974a6 = (0, import_react219.createContext)(null);
var $f3f84453ead64de5$var$InternalModalContext = (0, import_react219.createContext)(null);
var $f3f84453ead64de5$export$2b77a92f1a5ad772 = (0, import_react219.forwardRef)(function Modal(props, ref) {
  let ctx = (0, import_react219.useContext)($f3f84453ead64de5$var$InternalModalContext);
  if (ctx) return (0, import_react219.default).createElement($f3f84453ead64de5$var$ModalContent, {
    ...props,
    modalRef: ref
  }, props.children);
  let { isDismissable, isKeyboardDismissDisabled, isOpen, defaultOpen, onOpenChange, children, isEntering, isExiting, UNSTABLE_portalContainer, shouldCloseOnInteractOutside, ...otherProps } = props;
  return (0, import_react219.default).createElement($f3f84453ead64de5$export$8948f78d83984c69, {
    isDismissable,
    isKeyboardDismissDisabled,
    isOpen,
    defaultOpen,
    onOpenChange,
    isEntering,
    isExiting,
    UNSTABLE_portalContainer,
    shouldCloseOnInteractOutside
  }, (0, import_react219.default).createElement($f3f84453ead64de5$var$ModalContent, {
    ...otherProps,
    modalRef: ref
  }, children));
});
function $f3f84453ead64de5$var$ModalOverlayWithForwardRef(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $f3f84453ead64de5$export$ab57792b9b6974a6);
  let contextState = (0, import_react219.useContext)((0, $de32f1b87079253c$export$d2f961adcb0afbe));
  let localState = (0, $fc909762b330b746$export$61c6a8c84e605fb6)(props);
  let state = props.isOpen != null || props.defaultOpen != null || !contextState ? localState : contextState;
  let objectRef = (0, $df56164dff5785e2$export$4338b53315abf666)(ref);
  let modalRef = (0, import_react219.useRef)(null);
  let isOverlayExiting = (0, $d3f049242431219c$export$45fda7c47f93fd48)(objectRef, state.isOpen);
  let isModalExiting = (0, $d3f049242431219c$export$45fda7c47f93fd48)(modalRef, state.isOpen);
  let isExiting = isOverlayExiting || isModalExiting || props.isExiting || false;
  let isSSR = (0, $b5e257d569688ac6$export$535bd6ca7f90a273)();
  if (!state.isOpen && !isExiting || isSSR) return null;
  return (0, import_react219.default).createElement($f3f84453ead64de5$var$ModalOverlayInner, {
    ...props,
    state,
    isExiting,
    overlayRef: objectRef,
    modalRef
  });
}
var $f3f84453ead64de5$export$8948f78d83984c69 = (0, import_react219.forwardRef)($f3f84453ead64de5$var$ModalOverlayWithForwardRef);
function $f3f84453ead64de5$var$ModalOverlayInner({ UNSTABLE_portalContainer, ...props }) {
  let modalRef = props.modalRef;
  let { state } = props;
  let { modalProps, underlayProps } = (0, $8ac8429251c45e4b$export$dbc0f175b25fb0fb)(props, state, modalRef);
  let entering = (0, $d3f049242431219c$export$6d3443f2c48bfc20)(props.overlayRef) || props.isEntering || false;
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    defaultClassName: "react-aria-ModalOverlay",
    values: {
      isEntering: entering,
      isExiting: props.isExiting,
      state
    }
  });
  let viewport = (0, $5df64b3807dc15ee$export$d699905dd57c73ca)();
  let style = {
    ...renderProps.style,
    "--visual-viewport-height": viewport.height + "px"
  };
  return (0, import_react219.default).createElement((0, $337b884510726a0d$export$c6fdb837b070b4ff), {
    isExiting: props.isExiting,
    portalContainer: UNSTABLE_portalContainer
  }, (0, import_react219.default).createElement("div", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)((0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props), underlayProps),
    ...renderProps,
    style,
    ref: props.overlayRef,
    "data-entering": entering || void 0,
    "data-exiting": props.isExiting || void 0
  }, (0, import_react219.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        $f3f84453ead64de5$var$InternalModalContext,
        {
          modalProps,
          modalRef,
          isExiting: props.isExiting,
          isDismissable: props.isDismissable
        }
      ],
      [
        (0, $de32f1b87079253c$export$d2f961adcb0afbe),
        state
      ]
    ]
  }, renderProps.children)));
}
function $f3f84453ead64de5$var$ModalContent(props) {
  let { modalProps, modalRef, isExiting, isDismissable } = (0, import_react219.useContext)($f3f84453ead64de5$var$InternalModalContext);
  let state = (0, import_react219.useContext)((0, $de32f1b87079253c$export$d2f961adcb0afbe));
  let mergedRefs = (0, import_react219.useMemo)(() => (0, $5dc95899b306f630$export$c9058316764c140e)(props.modalRef, modalRef), [
    props.modalRef,
    modalRef
  ]);
  let ref = (0, $df56164dff5785e2$export$4338b53315abf666)(mergedRefs);
  let entering = (0, $d3f049242431219c$export$6d3443f2c48bfc20)(ref);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    defaultClassName: "react-aria-Modal",
    values: {
      isEntering: entering,
      isExiting,
      state
    }
  });
  return (0, import_react219.default).createElement("div", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)((0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props), modalProps),
    ...renderProps,
    ref,
    "data-entering": entering || void 0,
    "data-exiting": isExiting || void 0
  }, isDismissable && (0, import_react219.default).createElement((0, $86ea4cb521eb2e37$export$2317d149ed6f78c4), {
    onDismiss: state.close
  }), renderProps.children);
}

// node_modules/react-aria-components/dist/NumberField.mjs
var import_react220 = __toESM(require_react(), 1);
var $b91743d66a0ed188$export$b414a48cf5dcbc11 = (0, import_react220.createContext)(null);
var $b91743d66a0ed188$export$6cc906c6cff9bec5 = (0, import_react220.createContext)(null);
var $b91743d66a0ed188$export$63c5fa0b2fdccd2e = (0, import_react220.forwardRef)(function NumberField(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $b91743d66a0ed188$export$b414a48cf5dcbc11);
  let { validationBehavior: formValidationBehavior } = (0, $64fa3d84918910a7$export$fabf2dc03a41866e)((0, $d3e0e05bdfcf66bd$export$c24727297075ec6a)) || {};
  var _props_validationBehavior, _ref;
  let validationBehavior = (_ref = (_props_validationBehavior = props.validationBehavior) !== null && _props_validationBehavior !== void 0 ? _props_validationBehavior : formValidationBehavior) !== null && _ref !== void 0 ? _ref : "native";
  let { locale } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let state = (0, $de67e98908f0c6ee$export$7f629e9dc1ecf37c)({
    ...props,
    locale,
    validationBehavior
  });
  let inputRef = (0, import_react220.useRef)(null);
  let [labelRef, label] = (0, $64fa3d84918910a7$export$9d4c57ee4c6ffdd8)(!props["aria-label"] && !props["aria-labelledby"]);
  let { labelProps, groupProps, inputProps, incrementButtonProps, decrementButtonProps, descriptionProps, errorMessageProps, ...validation } = (0, $81397a9303501bda$export$23f548e970bdf099)({
    ...(0, $64fa3d84918910a7$export$ef03459518577ad4)(props),
    label,
    validationBehavior
  }, state, inputRef);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    values: {
      state,
      isDisabled: props.isDisabled || false,
      isInvalid: validation.isInvalid || false,
      isRequired: props.isRequired || false
    },
    defaultClassName: "react-aria-NumberField"
  });
  let DOMProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  delete DOMProps.id;
  return (0, import_react220.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        $b91743d66a0ed188$export$6cc906c6cff9bec5,
        state
      ],
      [
        (0, $a049562f99e7db0e$export$f9c6924e160136d1),
        groupProps
      ],
      [
        (0, $3985021b0ad6602f$export$37fb8590cf2c088c),
        {
          ...inputProps,
          ref: inputRef
        }
      ],
      [
        (0, $01b77f81d0f07f68$export$75b6ee27786ba447),
        {
          ...labelProps,
          ref: labelRef
        }
      ],
      [
        (0, $d2b4bc8c273e7be6$export$24d547caef80ccd1),
        {
          slots: {
            increment: incrementButtonProps,
            decrement: decrementButtonProps
          }
        }
      ],
      [
        (0, $514c0188e459b4c0$export$9afb8bc826b033ea),
        {
          slots: {
            description: descriptionProps,
            errorMessage: errorMessageProps
          }
        }
      ],
      [
        (0, $ee014567cb39d3f0$export$ff05c3ac10437e03),
        validation
      ]
    ]
  }, (0, import_react220.default).createElement("div", {
    ...DOMProps,
    ...renderProps,
    ref,
    slot: props.slot || void 0,
    "data-disabled": props.isDisabled || void 0,
    "data-required": props.isRequired || void 0,
    "data-invalid": validation.isInvalid || void 0
  }), props.name && (0, import_react220.default).createElement("input", {
    type: "hidden",
    name: props.name,
    value: isNaN(state.numberValue) ? "" : state.numberValue
  }));
});

// node_modules/react-aria-components/dist/RadioGroup.mjs
var import_react221 = __toESM(require_react(), 1);
var $b6c3ddc6086f204d$export$a79eda4ff50e30b6 = (0, import_react221.createContext)(null);
var $b6c3ddc6086f204d$export$b118023277d4a5c3 = (0, import_react221.createContext)(null);
var $b6c3ddc6086f204d$export$29d84393af70866c = (0, import_react221.createContext)(null);
var $b6c3ddc6086f204d$export$a98f0dcb43a68a25 = (0, import_react221.forwardRef)(function RadioGroup(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $b6c3ddc6086f204d$export$a79eda4ff50e30b6);
  let { validationBehavior: formValidationBehavior } = (0, $64fa3d84918910a7$export$fabf2dc03a41866e)((0, $d3e0e05bdfcf66bd$export$c24727297075ec6a)) || {};
  var _props_validationBehavior, _ref;
  let validationBehavior = (_ref = (_props_validationBehavior = props.validationBehavior) !== null && _props_validationBehavior !== void 0 ? _props_validationBehavior : formValidationBehavior) !== null && _ref !== void 0 ? _ref : "native";
  let state = (0, $a54cdc5c1942b639$export$bca9d026f8e704eb)({
    ...props,
    validationBehavior
  });
  let [labelRef, label] = (0, $64fa3d84918910a7$export$9d4c57ee4c6ffdd8)(!props["aria-label"] && !props["aria-labelledby"]);
  let { radioGroupProps, labelProps, descriptionProps, errorMessageProps, ...validation } = (0, $430f30ed08ec25fa$export$62b9571f283ff5c2)({
    ...props,
    label,
    validationBehavior
  }, state);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    values: {
      orientation: props.orientation || "vertical",
      isDisabled: state.isDisabled,
      isReadOnly: state.isReadOnly,
      isRequired: state.isRequired,
      isInvalid: state.isInvalid,
      state
    },
    defaultClassName: "react-aria-RadioGroup"
  });
  return (0, import_react221.default).createElement("div", {
    ...radioGroupProps,
    ...renderProps,
    ref,
    slot: props.slot || void 0,
    "data-orientation": props.orientation || "vertical",
    "data-invalid": state.isInvalid || void 0,
    "data-disabled": state.isDisabled || void 0,
    "data-readonly": state.isReadOnly || void 0,
    "data-required": state.isRequired || void 0
  }, (0, import_react221.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        $b6c3ddc6086f204d$export$29d84393af70866c,
        state
      ],
      [
        (0, $01b77f81d0f07f68$export$75b6ee27786ba447),
        {
          ...labelProps,
          ref: labelRef,
          elementType: "span"
        }
      ],
      [
        (0, $514c0188e459b4c0$export$9afb8bc826b033ea),
        {
          slots: {
            description: descriptionProps,
            errorMessage: errorMessageProps
          }
        }
      ],
      [
        (0, $ee014567cb39d3f0$export$ff05c3ac10437e03),
        validation
      ]
    ]
  }, renderProps.children));
});
var $b6c3ddc6086f204d$export$d7b12c4107be0d61 = (0, import_react221.forwardRef)(function Radio(props, ref) {
  let { inputRef: userProvidedInputRef = null, ...otherProps } = props;
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(otherProps, ref, $b6c3ddc6086f204d$export$b118023277d4a5c3);
  let state = (0, import_react221.default).useContext($b6c3ddc6086f204d$export$29d84393af70866c);
  let inputRef = (0, $df56164dff5785e2$export$4338b53315abf666)((0, import_react221.useMemo)(() => (0, $5dc95899b306f630$export$c9058316764c140e)(userProvidedInputRef, props.inputRef !== void 0 ? props.inputRef : null), [
    userProvidedInputRef,
    props.inputRef
  ]));
  let { labelProps, inputProps, isSelected, isDisabled, isPressed } = (0, $0d5c49892c1215da$export$37b0961d2f4751e2)({
    ...(0, $64fa3d84918910a7$export$ef03459518577ad4)(props),
    // ReactNode type doesn't allow function children.
    children: typeof props.children === "function" ? true : props.children
  }, state, inputRef);
  let { isFocused, isFocusVisible, focusProps } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)();
  let interactionDisabled = isDisabled || state.isReadOnly;
  let { hoverProps, isHovered } = (0, $6179b936705e76d3$export$ae780daf29e6d456)({
    ...props,
    isDisabled: interactionDisabled
  });
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    defaultClassName: "react-aria-Radio",
    values: {
      isSelected,
      isPressed,
      isHovered,
      isFocused,
      isFocusVisible,
      isDisabled,
      isReadOnly: state.isReadOnly,
      isInvalid: state.isInvalid,
      isRequired: state.isRequired
    }
  });
  let DOMProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  delete DOMProps.id;
  return (0, import_react221.default).createElement("label", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(DOMProps, labelProps, hoverProps, renderProps),
    ref,
    "data-selected": isSelected || void 0,
    "data-pressed": isPressed || void 0,
    "data-hovered": isHovered || void 0,
    "data-focused": isFocused || void 0,
    "data-focus-visible": isFocusVisible || void 0,
    "data-disabled": isDisabled || void 0,
    "data-readonly": state.isReadOnly || void 0,
    "data-invalid": state.isInvalid || void 0,
    "data-required": state.isRequired || void 0
  }, (0, import_react221.default).createElement((0, $5c3e21d68f1c4674$export$439d29a4e110a164), {
    elementType: "span"
  }, (0, import_react221.default).createElement("input", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(inputProps, focusProps),
    ref: inputRef
  })), renderProps.children);
});

// node_modules/react-aria-components/dist/Select.mjs
var import_react222 = __toESM(require_react(), 1);
function $parcel$interopDefault37(a) {
  return a && a.__esModule ? a.default : a;
}
var $82d7e5349645de74$export$7540cee5be7dc19b = (0, import_react222.createContext)(null);
var $82d7e5349645de74$export$ef445b55be0601bd = (0, import_react222.createContext)(null);
var $82d7e5349645de74$export$ef9b1a59e592288f = (0, import_react222.forwardRef)(function Select(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $82d7e5349645de74$export$7540cee5be7dc19b);
  let { children, isDisabled = false, isInvalid = false, isRequired = false } = props;
  let content = (0, import_react222.useMemo)(() => typeof children === "function" ? children({
    isOpen: false,
    isDisabled,
    isInvalid,
    isRequired,
    isFocused: false,
    isFocusVisible: false,
    defaultChildren: null
  }) : children, [
    children,
    isDisabled,
    isInvalid,
    isRequired
  ]);
  return (0, import_react222.default).createElement((0, $e1995378a142960e$export$bf788dd355e3a401), {
    content
  }, (collection) => (0, import_react222.default).createElement($82d7e5349645de74$var$SelectInner, {
    props,
    collection,
    selectRef: ref
  }));
});
var $82d7e5349645de74$var$CLEAR_CONTEXTS = [
  (0, $01b77f81d0f07f68$export$75b6ee27786ba447),
  (0, $d2b4bc8c273e7be6$export$24d547caef80ccd1),
  (0, $514c0188e459b4c0$export$9afb8bc826b033ea)
];
function $82d7e5349645de74$var$SelectInner({ props, selectRef: ref, collection }) {
  let { validationBehavior: formValidationBehavior } = (0, $64fa3d84918910a7$export$fabf2dc03a41866e)((0, $d3e0e05bdfcf66bd$export$c24727297075ec6a)) || {};
  var _props_validationBehavior, _ref;
  let validationBehavior = (_ref = (_props_validationBehavior = props.validationBehavior) !== null && _props_validationBehavior !== void 0 ? _props_validationBehavior : formValidationBehavior) !== null && _ref !== void 0 ? _ref : "native";
  let state = (0, $2bc3a590c5373a4e$export$5159ec8b34d4ec12)({
    ...props,
    collection,
    children: void 0,
    validationBehavior
  });
  let { isFocusVisible, focusProps } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)({
    within: true
  });
  let buttonRef = (0, import_react222.useRef)(null);
  let [labelRef, label] = (0, $64fa3d84918910a7$export$9d4c57ee4c6ffdd8)(!props["aria-label"] && !props["aria-labelledby"]);
  let { labelProps, triggerProps, valueProps, menuProps, descriptionProps, errorMessageProps, ...validation } = (0, $58aed456727eb0f3$export$e64b2f635402ca43)({
    ...(0, $64fa3d84918910a7$export$ef03459518577ad4)(props),
    label,
    validationBehavior
  }, state, buttonRef);
  let [buttonWidth, setButtonWidth] = (0, import_react222.useState)(null);
  let onResize = (0, import_react222.useCallback)(() => {
    if (buttonRef.current) setButtonWidth(buttonRef.current.offsetWidth + "px");
  }, [
    buttonRef
  ]);
  (0, $9daab02d461809db$export$683480f191c0e3ea)({
    ref: buttonRef,
    onResize
  });
  let renderPropsState = (0, import_react222.useMemo)(() => ({
    isOpen: state.isOpen,
    isFocused: state.isFocused,
    isFocusVisible,
    isDisabled: props.isDisabled || false,
    isInvalid: validation.isInvalid || false,
    isRequired: props.isRequired || false
  }), [
    state.isOpen,
    state.isFocused,
    isFocusVisible,
    props.isDisabled,
    validation.isInvalid,
    props.isRequired
  ]);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    values: renderPropsState,
    defaultClassName: "react-aria-Select"
  });
  let DOMProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  delete DOMProps.id;
  let scrollRef = (0, import_react222.useRef)(null);
  return (0, import_react222.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        $82d7e5349645de74$export$7540cee5be7dc19b,
        props
      ],
      [
        $82d7e5349645de74$export$ef445b55be0601bd,
        state
      ],
      [
        $82d7e5349645de74$export$f8f745c04421623f,
        valueProps
      ],
      [
        (0, $01b77f81d0f07f68$export$75b6ee27786ba447),
        {
          ...labelProps,
          ref: labelRef,
          elementType: "span"
        }
      ],
      [
        (0, $d2b4bc8c273e7be6$export$24d547caef80ccd1),
        {
          ...triggerProps,
          ref: buttonRef,
          isPressed: state.isOpen,
          autoFocus: props.autoFocus
        }
      ],
      [
        (0, $de32f1b87079253c$export$d2f961adcb0afbe),
        state
      ],
      [
        (0, $07b14b47974efb58$export$9b9a0cd73afb7ca4),
        {
          trigger: "Select",
          triggerRef: buttonRef,
          scrollRef,
          placement: "bottom start",
          style: {
            "--trigger-width": buttonWidth
          },
          "aria-labelledby": menuProps["aria-labelledby"],
          clearContexts: $82d7e5349645de74$var$CLEAR_CONTEXTS
        }
      ],
      [
        (0, $eed445e0843c11d0$export$7ff8f37d2d81a48d),
        {
          ...menuProps,
          ref: scrollRef
        }
      ],
      [
        (0, $eed445e0843c11d0$export$7c5906fe4f1f2af2),
        state
      ],
      [
        (0, $514c0188e459b4c0$export$9afb8bc826b033ea),
        {
          slots: {
            description: descriptionProps,
            errorMessage: errorMessageProps
          }
        }
      ],
      [
        (0, $ee014567cb39d3f0$export$ff05c3ac10437e03),
        validation
      ]
    ]
  }, (0, import_react222.default).createElement("div", {
    ...DOMProps,
    ...renderProps,
    ...focusProps,
    ref,
    slot: props.slot || void 0,
    "data-focused": state.isFocused || void 0,
    "data-focus-visible": isFocusVisible || void 0,
    "data-open": state.isOpen || void 0,
    "data-disabled": props.isDisabled || void 0,
    "data-invalid": validation.isInvalid || void 0,
    "data-required": props.isRequired || void 0
  }), (0, import_react222.default).createElement((0, $bdd25dc72710631f$export$cbd84cdb2e668835), {
    autoComplete: props.autoComplete,
    state,
    triggerRef: buttonRef,
    label,
    name: props.name,
    isDisabled: props.isDisabled
  }));
}
var $82d7e5349645de74$export$f8f745c04421623f = (0, import_react222.createContext)(null);
var $82d7e5349645de74$export$e288731fd71264f0 = (0, import_react222.forwardRef)(function SelectValue(props, ref) {
  var _state_selectedItem, _state_selectedItem1;
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $82d7e5349645de74$export$f8f745c04421623f);
  let state = (0, import_react222.useContext)($82d7e5349645de74$export$ef445b55be0601bd);
  let { placeholder } = (0, $64fa3d84918910a7$export$fabf2dc03a41866e)($82d7e5349645de74$export$7540cee5be7dc19b);
  let selectedItem = state.selectedKey != null ? state.collection.getItem(state.selectedKey) : null;
  let rendered = selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.props.children;
  if (typeof rendered === "function") {
    let fn = rendered;
    rendered = fn({
      isHovered: false,
      isPressed: false,
      isSelected: false,
      isFocused: false,
      isFocusVisible: false,
      isDisabled: false,
      selectionMode: "single",
      selectionBehavior: "toggle"
    });
  }
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault37($df39c1238ae2b5f3$exports)), "react-aria-components");
  var _ref, _state_selectedItem_value, _state_selectedItem_textValue;
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    defaultChildren: (_ref = rendered !== null && rendered !== void 0 ? rendered : placeholder) !== null && _ref !== void 0 ? _ref : stringFormatter.format("selectPlaceholder"),
    defaultClassName: "react-aria-SelectValue",
    values: {
      selectedItem: (_state_selectedItem_value = (_state_selectedItem = state.selectedItem) === null || _state_selectedItem === void 0 ? void 0 : _state_selectedItem.value) !== null && _state_selectedItem_value !== void 0 ? _state_selectedItem_value : null,
      selectedText: (_state_selectedItem_textValue = (_state_selectedItem1 = state.selectedItem) === null || _state_selectedItem1 === void 0 ? void 0 : _state_selectedItem1.textValue) !== null && _state_selectedItem_textValue !== void 0 ? _state_selectedItem_textValue : null,
      isPlaceholder: !selectedItem
    }
  });
  let DOMProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  return (0, import_react222.default).createElement("span", {
    ref,
    ...DOMProps,
    ...renderProps,
    "data-placeholder": !selectedItem || void 0
  }, (0, import_react222.default).createElement((0, $514c0188e459b4c0$export$9afb8bc826b033ea).Provider, {
    value: void 0
  }, renderProps.children));
});

// node_modules/react-aria-components/dist/Switch.mjs
var import_react223 = __toESM(require_react(), 1);
var $8e59e948500a8fe1$export$8699e3b644d5a28a = (0, import_react223.createContext)(null);
var $8e59e948500a8fe1$export$b5d5cf8927ab7262 = (0, import_react223.forwardRef)(function Switch(props, ref) {
  let { inputRef: userProvidedInputRef = null, ...otherProps } = props;
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(otherProps, ref, $8e59e948500a8fe1$export$8699e3b644d5a28a);
  let inputRef = (0, $df56164dff5785e2$export$4338b53315abf666)((0, $5dc95899b306f630$export$c9058316764c140e)(userProvidedInputRef, props.inputRef !== void 0 ? props.inputRef : null));
  let state = (0, $3017fa7ffdddec74$export$8042c6c013fd5226)(props);
  let { labelProps, inputProps, isSelected, isDisabled, isReadOnly, isPressed } = (0, $b418ec0c85c52f27$export$d853f7095ae95f88)({
    ...(0, $64fa3d84918910a7$export$ef03459518577ad4)(props),
    // ReactNode type doesn't allow function children.
    children: typeof props.children === "function" ? true : props.children
  }, state, inputRef);
  let { isFocused, isFocusVisible, focusProps } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)();
  let isInteractionDisabled = props.isDisabled || props.isReadOnly;
  let { hoverProps, isHovered } = (0, $6179b936705e76d3$export$ae780daf29e6d456)({
    ...props,
    isDisabled: isInteractionDisabled
  });
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    defaultClassName: "react-aria-Switch",
    values: {
      isSelected,
      isPressed,
      isHovered,
      isFocused,
      isFocusVisible,
      isDisabled,
      isReadOnly,
      state
    }
  });
  let DOMProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  delete DOMProps.id;
  return (0, import_react223.default).createElement("label", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(DOMProps, labelProps, hoverProps, renderProps),
    ref,
    slot: props.slot || void 0,
    "data-selected": isSelected || void 0,
    "data-pressed": isPressed || void 0,
    "data-hovered": isHovered || void 0,
    "data-focused": isFocused || void 0,
    "data-focus-visible": isFocusVisible || void 0,
    "data-disabled": isDisabled || void 0,
    "data-readonly": isReadOnly || void 0
  }, (0, import_react223.default).createElement((0, $5c3e21d68f1c4674$export$439d29a4e110a164), {
    elementType: "span"
  }, (0, import_react223.default).createElement("input", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(inputProps, focusProps),
    ref: inputRef
  })), renderProps.children);
});

// node_modules/react-aria-components/dist/Table.mjs
var import_react224 = __toESM(require_react(), 1);
var import_react_dom9 = __toESM(require_react_dom(), 1);
function $parcel$interopDefault38(a) {
  return a && a.__esModule ? a.default : a;
}
var $1910c06f0ca9905e$var$TableCollection = class extends (0, $23b9f4fcf0fe224b$export$408d25a4e12db025) {
  addNode(node) {
    super.addNode(node);
    this.columnsDirty || (this.columnsDirty = node.type === "column");
    if (node.type === "tableheader") this.head = node;
    if (node.type === "tablebody") this.body = node;
  }
  commit(firstKey, lastKey, isSSR = false) {
    this.updateColumns(isSSR);
    this.rows = [];
    for (let row of this.getChildren(this.body.key)) {
      let lastChildKey = row.lastChildKey;
      if (lastChildKey != null) {
        let lastCell = this.getItem(lastChildKey);
        var _lastCell_colIndex, _lastCell_colSpan;
        let numberOfCellsInRow = ((_lastCell_colIndex = lastCell.colIndex) !== null && _lastCell_colIndex !== void 0 ? _lastCell_colIndex : lastCell.index) + ((_lastCell_colSpan = lastCell.colSpan) !== null && _lastCell_colSpan !== void 0 ? _lastCell_colSpan : 1);
        if (numberOfCellsInRow !== this.columns.length && !isSSR) throw new Error(`Cell count must match column count. Found ${numberOfCellsInRow} cells and ${this.columns.length} columns.`);
      }
      this.rows.push(row);
    }
    super.commit(firstKey, lastKey, isSSR);
  }
  updateColumns(isSSR) {
    if (!this.columnsDirty) return;
    this.rowHeaderColumnKeys = /* @__PURE__ */ new Set();
    this.columns = [];
    let columnKeyMap = /* @__PURE__ */ new Map();
    let visit = (node) => {
      switch (node.type) {
        case "column":
          columnKeyMap.set(node.key, node);
          if (!node.hasChildNodes) {
            node.index = this.columns.length;
            this.columns.push(node);
            if (node.props.isRowHeader) this.rowHeaderColumnKeys.add(node.key);
          }
          break;
      }
      for (let child of this.getChildren(node.key)) visit(child);
    };
    for (let node of this.getChildren(this.head.key)) visit(node);
    this.headerRows = (0, $788781baa30117fa$export$7c127db850d4e81e)(columnKeyMap, this.columns);
    this.columnsDirty = false;
    if (this.rowHeaderColumnKeys.size === 0 && this.columns.length > 0 && !isSSR) throw new Error("A table must have at least one Column with the isRowHeader prop set to true");
  }
  get columnCount() {
    return this.columns.length;
  }
  *[Symbol.iterator]() {
    if (this.head.key === -1) return;
    yield this.head;
    yield this.body;
  }
  get size() {
    return this.rows.length;
  }
  getFirstKey() {
    return this.body.firstChildKey;
  }
  getLastKey() {
    return this.body.lastChildKey;
  }
  getKeyAfter(key) {
    let node = this.getItem(key);
    var _node_nextKey;
    if ((node === null || node === void 0 ? void 0 : node.type) === "column") return (_node_nextKey = node.nextKey) !== null && _node_nextKey !== void 0 ? _node_nextKey : null;
    return super.getKeyAfter(key);
  }
  getKeyBefore(key) {
    var _this_getItem;
    let node = this.getItem(key);
    var _node_prevKey;
    if ((node === null || node === void 0 ? void 0 : node.type) === "column") return (_node_prevKey = node.prevKey) !== null && _node_prevKey !== void 0 ? _node_prevKey : null;
    let k = super.getKeyBefore(key);
    if (k != null && ((_this_getItem = this.getItem(k)) === null || _this_getItem === void 0 ? void 0 : _this_getItem.type) === "tablebody") return null;
    return k;
  }
  getChildren(key) {
    if (!this.getItem(key)) for (let row of this.headerRows) {
      if (row.key === key) return row.childNodes;
    }
    return super.getChildren(key);
  }
  clone() {
    let collection = super.clone();
    collection.headerRows = this.headerRows;
    collection.columns = this.columns;
    collection.rowHeaderColumnKeys = this.rowHeaderColumnKeys;
    collection.head = this.head;
    collection.body = this.body;
    return collection;
  }
  getTextValue(key) {
    let row = this.getItem(key);
    if (!row) return "";
    if (row.textValue) return row.textValue;
    let rowHeaderColumnKeys = this.rowHeaderColumnKeys;
    let text = [];
    for (let cell of this.getChildren(key)) {
      let column = this.columns[cell.index];
      if (rowHeaderColumnKeys.has(column.key) && cell.textValue) text.push(cell.textValue);
      if (text.length === rowHeaderColumnKeys.size) break;
    }
    return text.join(" ");
  }
  constructor(...args) {
    super(...args), this.headerRows = [], this.columns = [], this.rows = [], this.rowHeaderColumnKeys = /* @__PURE__ */ new Set(), this.head = new (0, $23b9f4fcf0fe224b$export$d68d59712b04d9d1)("tableheader", -1), this.body = new (0, $23b9f4fcf0fe224b$export$d68d59712b04d9d1)("tablebody", -2), this.columnsDirty = true;
  }
};
var $1910c06f0ca9905e$var$ResizableTableContainerContext = (0, import_react224.createContext)(null);
var $1910c06f0ca9905e$export$7063e69b8a954175 = (0, import_react224.forwardRef)(function ResizableTableContainer(props, ref) {
  let containerRef = (0, $df56164dff5785e2$export$4338b53315abf666)(ref);
  let tableRef = (0, import_react224.useRef)(null);
  let scrollRef = (0, import_react224.useRef)(null);
  let [width, setWidth] = (0, import_react224.useState)(0);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    let table = tableRef.current;
    while (table && table !== containerRef.current && !(0, $cc38e7bd3fc7b213$export$2bb74740c4e19def)(table)) table = table.parentElement;
    scrollRef.current = table;
  }, [
    containerRef
  ]);
  (0, $9daab02d461809db$export$683480f191c0e3ea)({
    ref: scrollRef,
    box: "border-box",
    onResize() {
      var _scrollRef_current;
      var _scrollRef_current_clientWidth;
      setWidth((_scrollRef_current_clientWidth = (_scrollRef_current = scrollRef.current) === null || _scrollRef_current === void 0 ? void 0 : _scrollRef_current.clientWidth) !== null && _scrollRef_current_clientWidth !== void 0 ? _scrollRef_current_clientWidth : 0);
    }
  });
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    var _scrollRef_current;
    var _scrollRef_current_clientWidth;
    setWidth((_scrollRef_current_clientWidth = (_scrollRef_current = scrollRef.current) === null || _scrollRef_current === void 0 ? void 0 : _scrollRef_current.clientWidth) !== null && _scrollRef_current_clientWidth !== void 0 ? _scrollRef_current_clientWidth : 0);
  }, []);
  let ctx = (0, import_react224.useMemo)(() => ({
    tableRef,
    scrollRef,
    tableWidth: width,
    useTableColumnResizeState: $292bc4e09cd0eb62$export$cb895dcf85db1319,
    onResizeStart: props.onResizeStart,
    onResize: props.onResize,
    onResizeEnd: props.onResizeEnd
  }), [
    tableRef,
    width,
    props.onResizeStart,
    props.onResize,
    props.onResizeEnd
  ]);
  return (0, import_react224.default).createElement("div", {
    ...(0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props),
    ref: containerRef,
    className: props.className || "react-aria-ResizableTableContainer",
    style: props.style,
    onScroll: props.onScroll
  }, (0, import_react224.default).createElement($1910c06f0ca9905e$var$ResizableTableContainerContext.Provider, {
    value: ctx
  }, props.children));
});
var $1910c06f0ca9905e$export$93e4b0b2cc49b648 = (0, import_react224.createContext)(null);
var $1910c06f0ca9905e$export$38de1cb0526c21fb = (0, import_react224.createContext)(null);
var $1910c06f0ca9905e$export$a2680a798823803c = (0, import_react224.createContext)(null);
var $1910c06f0ca9905e$export$54ec01a60f47d33d = (0, import_react224.forwardRef)(function Table(props, ref) {
  var _props_dragAndDropHooks;
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $1910c06f0ca9905e$export$93e4b0b2cc49b648);
  let selectionState = (0, $7af3f5b51489e0b5$export$253fe78d46329472)(props);
  let { selectionBehavior, selectionMode, disallowEmptySelection } = selectionState;
  let hasDragHooks = !!((_props_dragAndDropHooks = props.dragAndDropHooks) === null || _props_dragAndDropHooks === void 0 ? void 0 : _props_dragAndDropHooks.useDraggableCollectionState);
  let ctx = (0, import_react224.useMemo)(() => ({
    selectionBehavior: selectionMode === "none" ? null : selectionBehavior,
    selectionMode,
    disallowEmptySelection,
    allowsDragging: hasDragHooks
  }), [
    selectionBehavior,
    selectionMode,
    disallowEmptySelection,
    hasDragHooks
  ]);
  let content = (0, import_react224.default).createElement($1910c06f0ca9905e$var$TableOptionsContext.Provider, {
    value: ctx
  }, (0, import_react224.default).createElement((0, $e1995378a142960e$export$fb8073518f34e6ec), props));
  return (0, import_react224.default).createElement((0, $e1995378a142960e$export$bf788dd355e3a401), {
    content,
    createCollection: () => new $1910c06f0ca9905e$var$TableCollection()
  }, (collection) => (0, import_react224.default).createElement($1910c06f0ca9905e$var$TableInner, {
    props,
    forwardedRef: ref,
    selectionState,
    collection
  }));
});
function $1910c06f0ca9905e$var$TableInner({ props, forwardedRef: ref, selectionState, collection }) {
  let tableContainerContext = (0, import_react224.useContext)($1910c06f0ca9905e$var$ResizableTableContainerContext);
  ref = (0, $df56164dff5785e2$export$4338b53315abf666)((0, import_react224.useMemo)(() => (0, $5dc95899b306f630$export$c9058316764c140e)(ref, tableContainerContext === null || tableContainerContext === void 0 ? void 0 : tableContainerContext.tableRef), [
    ref,
    tableContainerContext === null || tableContainerContext === void 0 ? void 0 : tableContainerContext.tableRef
  ]));
  let state = (0, $4a0dd036d492cee4$export$907bcc6c48325fd6)({
    ...props,
    collection,
    children: void 0,
    UNSAFE_selectionState: selectionState
  });
  let { isVirtualized, layoutDelegate, dropTargetDelegate: ctxDropTargetDelegate, CollectionRoot } = (0, import_react224.useContext)((0, $7135fc7d473fd974$export$4feb769f8ddf26c5));
  let { dragAndDropHooks } = props;
  let { gridProps } = (0, $6e31608fbba75bab$export$25bceaac3c7e4dc7)({
    ...props,
    layoutDelegate,
    isVirtualized
  }, state, ref);
  let selectionManager = state.selectionManager;
  let hasDragHooks = !!(dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : dragAndDropHooks.useDraggableCollectionState);
  let hasDropHooks = !!(dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : dragAndDropHooks.useDroppableCollectionState);
  let dragHooksProvided = (0, import_react224.useRef)(hasDragHooks);
  let dropHooksProvided = (0, import_react224.useRef)(hasDropHooks);
  (0, import_react224.useEffect)(() => {
    if (false) return;
    if (dragHooksProvided.current !== hasDragHooks) console.warn("Drag hooks were provided during one render, but not another. This should be avoided as it may produce unexpected behavior.");
    if (dropHooksProvided.current !== hasDropHooks) console.warn("Drop hooks were provided during one render, but not another. This should be avoided as it may produce unexpected behavior.");
  }, [
    hasDragHooks,
    hasDropHooks
  ]);
  let dragState = void 0;
  let dropState = void 0;
  let droppableCollection = void 0;
  let isRootDropTarget = false;
  let dragPreview = null;
  let preview = (0, import_react224.useRef)(null);
  if (hasDragHooks && dragAndDropHooks) {
    dragState = dragAndDropHooks.useDraggableCollectionState({
      collection,
      selectionManager,
      preview: dragAndDropHooks.renderDragPreview ? preview : void 0
    });
    dragAndDropHooks.useDraggableCollection({}, dragState, ref);
    let DragPreview2 = dragAndDropHooks.DragPreview;
    dragPreview = dragAndDropHooks.renderDragPreview ? (0, import_react224.default).createElement(DragPreview2, {
      ref: preview
    }, dragAndDropHooks.renderDragPreview) : null;
  }
  if (hasDropHooks && dragAndDropHooks) {
    dropState = dragAndDropHooks.useDroppableCollectionState({
      collection,
      selectionManager
    });
    let keyboardDelegate = new (0, $2a25aae57d74318e$export$a05409b8bb224a5a)({
      collection,
      disabledKeys: selectionManager.disabledKeys,
      disabledBehavior: selectionManager.disabledBehavior,
      ref,
      layoutDelegate
    });
    let dropTargetDelegate = dragAndDropHooks.dropTargetDelegate || ctxDropTargetDelegate || new dragAndDropHooks.ListDropTargetDelegate(collection.rows, ref);
    droppableCollection = dragAndDropHooks.useDroppableCollection({
      keyboardDelegate,
      dropTargetDelegate
    }, dropState, ref);
    isRootDropTarget = dropState.isDropTarget({
      type: "root"
    });
  }
  let { focusProps, isFocused, isFocusVisible } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)();
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    className: props.className,
    style: props.style,
    defaultClassName: "react-aria-Table",
    values: {
      isDropTarget: isRootDropTarget,
      isFocused,
      isFocusVisible,
      state
    }
  });
  let isListDraggable = !!(hasDragHooks && !(dragState === null || dragState === void 0 ? void 0 : dragState.isDisabled));
  let style = renderProps.style;
  let layoutState = null;
  if (tableContainerContext) {
    layoutState = tableContainerContext.useTableColumnResizeState({
      tableWidth: tableContainerContext.tableWidth
    }, state);
    if (!isVirtualized) style = {
      ...style,
      tableLayout: "fixed",
      width: "fit-content"
    };
  }
  let ElementType = $1910c06f0ca9905e$var$useElementType("table");
  var _tableContainerContext_scrollRef;
  return (0, import_react224.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        $1910c06f0ca9905e$export$38de1cb0526c21fb,
        state
      ],
      [
        $1910c06f0ca9905e$export$a2680a798823803c,
        layoutState
      ],
      [
        (0, $612b8eb6cb90e02d$export$d188a835a7bc5783),
        {
          dragAndDropHooks,
          dragState,
          dropState
        }
      ],
      [
        (0, $612b8eb6cb90e02d$export$f55761759794cf55),
        {
          render: $1910c06f0ca9905e$var$TableDropIndicatorWrapper
        }
      ]
    ]
  }, (0, import_react224.default).createElement((0, $9bf71ea28793e738$export$20e40289641fbbb6), null, (0, import_react224.default).createElement(ElementType, {
    ...(0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props),
    ...renderProps,
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(gridProps, focusProps, droppableCollection === null || droppableCollection === void 0 ? void 0 : droppableCollection.collectionProps),
    style,
    ref,
    slot: props.slot || void 0,
    onScroll: props.onScroll,
    "data-allows-dragging": isListDraggable || void 0,
    "data-drop-target": isRootDropTarget || void 0,
    "data-focused": isFocused || void 0,
    "data-focus-visible": isFocusVisible || void 0
  }, (0, import_react224.default).createElement(CollectionRoot, {
    collection,
    scrollRef: (_tableContainerContext_scrollRef = tableContainerContext === null || tableContainerContext === void 0 ? void 0 : tableContainerContext.scrollRef) !== null && _tableContainerContext_scrollRef !== void 0 ? _tableContainerContext_scrollRef : ref,
    persistedKeys: (0, $612b8eb6cb90e02d$export$d1e8e3fbb7461f6)(selectionManager, dragAndDropHooks, dropState)
  }))), dragPreview);
}
function $1910c06f0ca9905e$var$useElementType(element) {
  let { isVirtualized } = (0, import_react224.useContext)((0, $7135fc7d473fd974$export$4feb769f8ddf26c5));
  return isVirtualized ? "div" : element;
}
var $1910c06f0ca9905e$var$TableOptionsContext = (0, import_react224.createContext)(null);
function $1910c06f0ca9905e$export$fddc468cd8cb4db9() {
  return (0, import_react224.useContext)($1910c06f0ca9905e$var$TableOptionsContext);
}
var $1910c06f0ca9905e$export$f850895b287ef28e = (0, $e1995378a142960e$export$e953bb1cd0f19726)("tableheader", (props, ref) => {
  let collection = (0, import_react224.useContext)($1910c06f0ca9905e$export$38de1cb0526c21fb).collection;
  let headerRows = (0, $e948873055cbafe4$export$727c8fc270210f13)({
    items: collection.headerRows,
    children: (0, import_react224.useCallback)((item) => {
      switch (item.type) {
        case "headerrow":
          return (0, import_react224.default).createElement($1910c06f0ca9905e$var$TableHeaderRow, {
            item
          });
        default:
          throw new Error("Unsupported node type in TableHeader: " + item.type);
      }
    }, [])
  });
  let THead = $1910c06f0ca9905e$var$useElementType("thead");
  let { rowGroupProps } = (0, $0047e6c294ea075f$export$6fb1613bd7b28198)();
  let { hoverProps, isHovered } = (0, $6179b936705e76d3$export$ae780daf29e6d456)({
    onHoverStart: props.onHoverStart,
    onHoverChange: props.onHoverChange,
    onHoverEnd: props.onHoverEnd
  });
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    className: props.className,
    style: props.style,
    defaultClassName: "react-aria-TableHeader",
    values: {
      isHovered
    }
  });
  return (0, import_react224.default).createElement(THead, {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)((0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props), rowGroupProps, hoverProps),
    ...renderProps,
    ref,
    "data-hovered": isHovered || void 0
  }, headerRows);
}, (props) => (0, import_react224.default).createElement((0, $e1995378a142960e$export$fb8073518f34e6ec), {
  dependencies: props.dependencies,
  items: props.columns
}, props.children));
function $1910c06f0ca9905e$var$TableHeaderRow({ item }) {
  let ref = (0, import_react224.useRef)(null);
  let state = (0, import_react224.useContext)($1910c06f0ca9905e$export$38de1cb0526c21fb);
  let { isVirtualized, CollectionBranch } = (0, import_react224.useContext)((0, $7135fc7d473fd974$export$4feb769f8ddf26c5));
  let { rowProps } = (0, $f917ee10f4c32dab$export$1b95a7d2d517b841)({
    node: item,
    isVirtualized
  }, state, ref);
  let { checkboxProps } = (0, $2a795c53a101c542$export$1003db6a7e384b99)(state);
  let TR = $1910c06f0ca9905e$var$useElementType("tr");
  return (0, import_react224.default).createElement(TR, {
    ...rowProps,
    ref
  }, (0, import_react224.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        (0, $4e85f108e88277b8$export$b085522c77523c51),
        {
          slots: {
            selection: checkboxProps
          }
        }
      ]
    ]
  }, (0, import_react224.default).createElement(CollectionBranch, {
    collection: state.collection,
    parent: item
  })));
}
var $1910c06f0ca9905e$export$816b5d811295e6bc = (0, $e1995378a142960e$export$18af5c7a9e9b3664)("column", (props, forwardedRef, column) => {
  var _state_sortDescriptor, _state_sortDescriptor1;
  let ref = (0, $df56164dff5785e2$export$4338b53315abf666)(forwardedRef);
  let state = (0, import_react224.useContext)($1910c06f0ca9905e$export$38de1cb0526c21fb);
  let { isVirtualized } = (0, import_react224.useContext)((0, $7135fc7d473fd974$export$4feb769f8ddf26c5));
  let { columnHeaderProps } = (0, $f329116d8ad0aba0$export$9514819a8c81e960)({
    node: column,
    isVirtualized
  }, state, ref);
  let { isFocused, isFocusVisible, focusProps } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)();
  let layoutState = (0, import_react224.useContext)($1910c06f0ca9905e$export$a2680a798823803c);
  let isResizing = false;
  if (layoutState) isResizing = layoutState.resizingColumn === column.key;
  else if (true) {
    for (let prop in [
      "width",
      "defaultWidth",
      "minWidth",
      "maxWidth"
    ]) if (prop in column.props) console.warn(`The ${prop} prop on a <Column> only applies when a <Table> is wrapped in a <ResizableTableContainer>. If you aren't using column resizing, you can set the width of a column with CSS.`);
  }
  let { hoverProps, isHovered } = (0, $6179b936705e76d3$export$ae780daf29e6d456)({
    isDisabled: !props.allowsSorting
  });
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    id: void 0,
    children: column.rendered,
    defaultClassName: "react-aria-Column",
    values: {
      isHovered,
      isFocused,
      isFocusVisible,
      allowsSorting: column.props.allowsSorting,
      sortDirection: ((_state_sortDescriptor = state.sortDescriptor) === null || _state_sortDescriptor === void 0 ? void 0 : _state_sortDescriptor.column) === column.key ? state.sortDescriptor.direction : void 0,
      isResizing,
      startResize: () => {
        if (layoutState) {
          layoutState.startResize(column.key);
          state.setKeyboardNavigationDisabled(true);
        } else throw new Error("Wrap your <Table> in a <ResizableTableContainer> to enable column resizing");
      },
      sort: (direction) => {
        state.sort(column.key, direction);
      }
    }
  });
  let style = renderProps.style;
  if (layoutState) style = {
    ...style,
    width: layoutState.getColumnWidth(column.key)
  };
  let TH = $1910c06f0ca9905e$var$useElementType("th");
  return (0, import_react224.default).createElement(TH, {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)((0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props), columnHeaderProps, focusProps, hoverProps),
    ...renderProps,
    style,
    ref,
    "data-hovered": isHovered || void 0,
    "data-focused": isFocused || void 0,
    "data-focus-visible": isFocusVisible || void 0,
    "data-resizing": isResizing || void 0,
    "data-allows-sorting": column.props.allowsSorting || void 0,
    "data-sort-direction": ((_state_sortDescriptor1 = state.sortDescriptor) === null || _state_sortDescriptor1 === void 0 ? void 0 : _state_sortDescriptor1.column) === column.key ? state.sortDescriptor.direction : void 0
  }, (0, import_react224.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        $1910c06f0ca9905e$var$ColumnResizerContext,
        {
          column,
          triggerRef: ref
        }
      ],
      [
        (0, $7135fc7d473fd974$export$4feb769f8ddf26c5),
        (0, $7135fc7d473fd974$export$a164736487e3f0ae)
      ]
    ]
  }, renderProps.children));
});
var $1910c06f0ca9905e$var$ColumnResizerContext = (0, import_react224.createContext)(null);
var $1910c06f0ca9905e$export$ee689e97a7664bfd = (0, import_react224.forwardRef)(function ColumnResizer(props, ref) {
  let layoutState = (0, import_react224.useContext)($1910c06f0ca9905e$export$a2680a798823803c);
  if (!layoutState) throw new Error("Wrap your <Table> in a <ResizableTableContainer> to enable column resizing");
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault38($df39c1238ae2b5f3$exports)), "react-aria-components");
  let { onResizeStart, onResize, onResizeEnd } = (0, import_react224.useContext)($1910c06f0ca9905e$var$ResizableTableContainerContext);
  let { column, triggerRef } = (0, import_react224.useContext)($1910c06f0ca9905e$var$ColumnResizerContext);
  let inputRef = (0, import_react224.useRef)(null);
  let { resizerProps, inputProps, isResizing } = (0, $e91ef4e5004e3774$export$52994e973806c219)({
    column,
    "aria-label": props["aria-label"] || stringFormatter.format("tableResizer"),
    onResizeStart,
    onResize,
    onResizeEnd,
    triggerRef
  }, layoutState, inputRef);
  let { focusProps, isFocused, isFocusVisible } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)();
  let { hoverProps, isHovered } = (0, $6179b936705e76d3$export$ae780daf29e6d456)(props);
  let isEResizable = layoutState.getColumnMinWidth(column.key) >= layoutState.getColumnWidth(column.key);
  let isWResizable = layoutState.getColumnMaxWidth(column.key) <= layoutState.getColumnWidth(column.key);
  let { direction } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let resizableDirection = "both";
  if (isEResizable) resizableDirection = direction === "rtl" ? "right" : "left";
  else if (isWResizable) resizableDirection = direction === "rtl" ? "left" : "right";
  else resizableDirection = "both";
  let objectRef = (0, $df56164dff5785e2$export$4338b53315abf666)(ref);
  let [cursor, setCursor] = (0, import_react224.useState)("");
  (0, import_react224.useEffect)(() => {
    if (!objectRef.current) return;
    let style = window.getComputedStyle(objectRef.current);
    setCursor(style.cursor);
  }, [
    objectRef,
    resizableDirection
  ]);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    defaultClassName: "react-aria-ColumnResizer",
    values: {
      isFocused,
      isFocusVisible,
      isResizing,
      isHovered,
      resizableDirection
    }
  });
  let [isMouseDown, setMouseDown] = (0, import_react224.useState)(false);
  let onPointerDown = (e) => {
    if (e.pointerType === "mouse") setMouseDown(true);
  };
  if (!isResizing && isMouseDown) setMouseDown(false);
  return (0, import_react224.default).createElement("div", {
    ref: objectRef,
    role: "presentation",
    ...(0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props),
    ...renderProps,
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(resizerProps, {
      onPointerDown
    }, hoverProps),
    "data-hovered": isHovered || void 0,
    "data-focused": isFocused || void 0,
    "data-focus-visible": isFocusVisible || void 0,
    "data-resizing": isResizing || void 0,
    "data-resizable-direction": resizableDirection
  }, renderProps.children, (0, import_react224.default).createElement("input", {
    ref: inputRef,
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(inputProps, focusProps)
  }), isResizing && isMouseDown && (0, import_react_dom9.default).createPortal((0, import_react224.default).createElement("div", {
    style: {
      position: "fixed",
      top: 0,
      left: 0,
      bottom: 0,
      right: 0,
      cursor
    }
  }), document.body));
});
var $1910c06f0ca9905e$export$76ccd210b9029917 = (0, $e1995378a142960e$export$e953bb1cd0f19726)("tablebody", (props, ref) => {
  let state = (0, import_react224.useContext)($1910c06f0ca9905e$export$38de1cb0526c21fb);
  let { isVirtualized } = (0, import_react224.useContext)((0, $7135fc7d473fd974$export$4feb769f8ddf26c5));
  let collection = state.collection;
  let { CollectionBranch } = (0, import_react224.useContext)((0, $7135fc7d473fd974$export$4feb769f8ddf26c5));
  let { dragAndDropHooks, dropState } = (0, import_react224.useContext)((0, $612b8eb6cb90e02d$export$d188a835a7bc5783));
  let isDroppable = !!(dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : dragAndDropHooks.useDroppableCollectionState) && !(dropState === null || dropState === void 0 ? void 0 : dropState.isDisabled);
  var _dropState_isDropTarget;
  let isRootDropTarget = isDroppable && !!dropState && ((_dropState_isDropTarget = dropState.isDropTarget({
    type: "root"
  })) !== null && _dropState_isDropTarget !== void 0 ? _dropState_isDropTarget : false);
  let isEmpty = collection.size === 0 || collection.rows.length === 1 && collection.rows[0].type === "loader";
  let renderValues = {
    isDropTarget: isRootDropTarget,
    isEmpty
  };
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    id: void 0,
    children: void 0,
    defaultClassName: "react-aria-TableBody",
    values: renderValues
  });
  let emptyState;
  let TR = $1910c06f0ca9905e$var$useElementType("tr");
  let TD = $1910c06f0ca9905e$var$useElementType("td");
  let numColumns = collection.columnCount;
  if (isEmpty && props.renderEmptyState && state) {
    let rowProps = {};
    let rowHeaderProps = {};
    let style = {};
    if (isVirtualized) {
      rowProps["aria-rowindex"] = collection.headerRows.length + 1;
      rowHeaderProps["aria-colspan"] = numColumns;
      style = {
        display: "contents"
      };
    } else rowHeaderProps["colSpan"] = numColumns;
    emptyState = (0, import_react224.default).createElement(TR, {
      role: "row",
      ...rowProps,
      style
    }, (0, import_react224.default).createElement(TD, {
      role: "rowheader",
      ...rowHeaderProps,
      style
    }, props.renderEmptyState(renderValues)));
  }
  let { rowGroupProps } = (0, $0047e6c294ea075f$export$6fb1613bd7b28198)();
  let TBody = $1910c06f0ca9905e$var$useElementType("tbody");
  return (0, import_react224.default).createElement(TBody, {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)((0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props), rowGroupProps),
    ...renderProps,
    ref,
    "data-empty": isEmpty || void 0
  }, isDroppable && (0, import_react224.default).createElement($1910c06f0ca9905e$var$RootDropIndicator, null), (0, import_react224.default).createElement(CollectionBranch, {
    collection,
    parent: collection.body,
    renderDropIndicator: (0, $612b8eb6cb90e02d$export$971707d8a129a1f7)(dragAndDropHooks, dropState)
  }), emptyState);
});
var $1910c06f0ca9905e$export$b59bdbef9ce70de2 = (0, $e1995378a142960e$export$e953bb1cd0f19726)("item", (props, forwardedRef, item) => {
  let ref = (0, $df56164dff5785e2$export$4338b53315abf666)(forwardedRef);
  let state = (0, import_react224.useContext)($1910c06f0ca9905e$export$38de1cb0526c21fb);
  let { dragAndDropHooks, dragState, dropState } = (0, import_react224.useContext)((0, $612b8eb6cb90e02d$export$d188a835a7bc5783));
  let { isVirtualized, CollectionBranch } = (0, import_react224.useContext)((0, $7135fc7d473fd974$export$4feb769f8ddf26c5));
  let { rowProps, ...states } = (0, $b2db214c022798eb$export$7f2f6ae19e707aa5)({
    node: item,
    shouldSelectOnPressUp: !!dragState,
    isVirtualized
  }, state, ref);
  let { isFocused, isFocusVisible, focusProps } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)();
  let { isFocusVisible: isFocusVisibleWithin, focusProps: focusWithinProps } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)({
    within: true
  });
  let { hoverProps, isHovered } = (0, $6179b936705e76d3$export$ae780daf29e6d456)({
    isDisabled: !states.allowsSelection && !states.hasAction,
    onHoverStart: props.onHoverStart,
    onHoverChange: props.onHoverChange,
    onHoverEnd: props.onHoverEnd
  });
  let { checkboxProps } = (0, $2a795c53a101c542$export$16ea7f650bd7c1bb)({
    key: item.key
  }, state);
  let draggableItem = void 0;
  if (dragState && dragAndDropHooks) draggableItem = dragAndDropHooks.useDraggableItem({
    key: item.key,
    hasDragButton: true
  }, dragState);
  let dropIndicator = void 0;
  let dropIndicatorRef = (0, import_react224.useRef)(null);
  let { visuallyHiddenProps } = (0, $5c3e21d68f1c4674$export$a966af930f325cab)();
  if (dropState && dragAndDropHooks) dropIndicator = dragAndDropHooks.useDropIndicator({
    target: {
      type: "item",
      key: item.key,
      dropPosition: "on"
    }
  }, dropState, dropIndicatorRef);
  let dragButtonRef = (0, import_react224.useRef)(null);
  (0, import_react224.useEffect)(() => {
    if (dragState && !dragButtonRef.current && true) console.warn('Draggable items in a Table must contain a <Button slot="drag"> element so that keyboard and screen reader users can drag them.');
  }, []);
  let isDragging = dragState && dragState.isDragging(item.key);
  let { children: _, ...restProps } = props;
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...restProps,
    id: void 0,
    defaultClassName: "react-aria-Row",
    values: {
      ...states,
      isHovered,
      isFocused,
      isFocusVisible,
      selectionMode: state.selectionManager.selectionMode,
      selectionBehavior: state.selectionManager.selectionBehavior,
      isDragging,
      isDropTarget: dropIndicator === null || dropIndicator === void 0 ? void 0 : dropIndicator.isDropTarget,
      isFocusVisibleWithin,
      id: item.key
    }
  });
  let TR = $1910c06f0ca9905e$var$useElementType("tr");
  let TD = $1910c06f0ca9905e$var$useElementType("td");
  return (0, import_react224.default).createElement((0, import_react224.default).Fragment, null, dropIndicator && !dropIndicator.isHidden && (0, import_react224.default).createElement(TR, {
    role: "row",
    style: {
      height: 0
    }
  }, (0, import_react224.default).createElement(TD, {
    role: "gridcell",
    colSpan: state.collection.columnCount,
    style: {
      padding: 0
    }
  }, (0, import_react224.default).createElement("div", {
    role: "button",
    ...visuallyHiddenProps,
    ...dropIndicator.dropIndicatorProps,
    ref: dropIndicatorRef
  }))), (0, import_react224.default).createElement(TR, {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)((0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props), rowProps, focusProps, hoverProps, draggableItem === null || draggableItem === void 0 ? void 0 : draggableItem.dragProps, focusWithinProps),
    ...renderProps,
    ref,
    "data-disabled": states.isDisabled || void 0,
    "data-selected": states.isSelected || void 0,
    "data-hovered": isHovered || void 0,
    "data-focused": states.isFocused || void 0,
    "data-focus-visible": isFocusVisible || void 0,
    "data-pressed": states.isPressed || void 0,
    "data-dragging": isDragging || void 0,
    "data-drop-target": (dropIndicator === null || dropIndicator === void 0 ? void 0 : dropIndicator.isDropTarget) || void 0,
    "data-selection-mode": state.selectionManager.selectionMode === "none" ? void 0 : state.selectionManager.selectionMode,
    "data-focus-visible-within": isFocusVisibleWithin || void 0
  }, (0, import_react224.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        (0, $4e85f108e88277b8$export$b085522c77523c51),
        {
          slots: {
            [(0, $64fa3d84918910a7$export$c62b8e45d58ddad9)]: {},
            selection: checkboxProps
          }
        }
      ],
      [
        (0, $d2b4bc8c273e7be6$export$24d547caef80ccd1),
        {
          slots: {
            [(0, $64fa3d84918910a7$export$c62b8e45d58ddad9)]: {},
            drag: {
              ...draggableItem === null || draggableItem === void 0 ? void 0 : draggableItem.dragButtonProps,
              ref: dragButtonRef,
              style: {
                pointerEvents: "none"
              }
            }
          }
        }
      ]
    ]
  }, (0, import_react224.default).createElement(CollectionBranch, {
    collection: state.collection,
    parent: item
  }))));
}, (props) => {
  if (props.id == null && typeof props.children === "function") throw new Error("No id detected for the Row element. The Row element requires a id to be provided to it when the cells are rendered dynamically.");
  let dependencies = [
    props.value
  ].concat(props.dependencies);
  return (0, import_react224.default).createElement((0, $e1995378a142960e$export$fb8073518f34e6ec), {
    dependencies,
    items: props.columns,
    idScope: props.id
  }, props.children);
});
var $1910c06f0ca9905e$export$f6f0c3fe4ec306ea = (0, $e1995378a142960e$export$18af5c7a9e9b3664)("cell", (props, forwardedRef, cell) => {
  let ref = (0, $df56164dff5785e2$export$4338b53315abf666)(forwardedRef);
  let state = (0, import_react224.useContext)($1910c06f0ca9905e$export$38de1cb0526c21fb);
  let { dragState } = (0, import_react224.useContext)((0, $612b8eb6cb90e02d$export$d188a835a7bc5783));
  let { isVirtualized } = (0, import_react224.useContext)((0, $7135fc7d473fd974$export$4feb769f8ddf26c5));
  cell.column = state.collection.columns[cell.index];
  let { gridCellProps, isPressed } = (0, $7713593715703b24$export$49571c903d73624c)({
    node: cell,
    shouldSelectOnPressUp: !!dragState,
    isVirtualized
  }, state, ref);
  let { isFocused, isFocusVisible, focusProps } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)();
  let { hoverProps, isHovered } = (0, $6179b936705e76d3$export$ae780daf29e6d456)({});
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    id: void 0,
    defaultClassName: "react-aria-Cell",
    values: {
      isFocused,
      isFocusVisible,
      isPressed,
      isHovered,
      id: cell.key
    }
  });
  let TD = $1910c06f0ca9905e$var$useElementType("td");
  return (0, import_react224.default).createElement(TD, {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)((0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props), gridCellProps, focusProps, hoverProps),
    ...renderProps,
    ref,
    "data-focused": isFocused || void 0,
    "data-focus-visible": isFocusVisible || void 0,
    "data-pressed": isPressed || void 0
  }, (0, import_react224.default).createElement((0, $7135fc7d473fd974$export$4feb769f8ddf26c5).Provider, {
    value: (0, $7135fc7d473fd974$export$a164736487e3f0ae)
  }, renderProps.children));
});
function $1910c06f0ca9905e$var$TableDropIndicatorWrapper(props, ref) {
  ref = (0, $df56164dff5785e2$export$4338b53315abf666)(ref);
  let { dragAndDropHooks, dropState } = (0, import_react224.useContext)((0, $612b8eb6cb90e02d$export$d188a835a7bc5783));
  let buttonRef = (0, import_react224.useRef)(null);
  let { dropIndicatorProps, isHidden, isDropTarget } = dragAndDropHooks.useDropIndicator(props, dropState, buttonRef);
  if (isHidden) return null;
  return (0, import_react224.default).createElement($1910c06f0ca9905e$var$TableDropIndicatorForwardRef, {
    ...props,
    dropIndicatorProps,
    isDropTarget,
    buttonRef,
    ref
  });
}
function $1910c06f0ca9905e$var$TableDropIndicator(props, ref) {
  let { dropIndicatorProps, isDropTarget, buttonRef, ...otherProps } = props;
  let state = (0, import_react224.useContext)($1910c06f0ca9905e$export$38de1cb0526c21fb);
  let { visuallyHiddenProps } = (0, $5c3e21d68f1c4674$export$a966af930f325cab)();
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...otherProps,
    defaultClassName: "react-aria-DropIndicator",
    values: {
      isDropTarget
    }
  });
  let TR = $1910c06f0ca9905e$var$useElementType("tr");
  let TD = $1910c06f0ca9905e$var$useElementType("td");
  return (0, import_react224.default).createElement(TR, {
    ...(0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props),
    ...renderProps,
    role: "row",
    ref,
    "data-drop-target": isDropTarget || void 0
  }, (0, import_react224.default).createElement(TD, {
    role: "gridcell",
    colSpan: state.collection.columnCount,
    style: {
      padding: 0
    }
  }, (0, import_react224.default).createElement("div", {
    ...visuallyHiddenProps,
    role: "button",
    ...dropIndicatorProps,
    ref: buttonRef
  }), renderProps.children));
}
var $1910c06f0ca9905e$var$TableDropIndicatorForwardRef = (0, import_react224.forwardRef)($1910c06f0ca9905e$var$TableDropIndicator);
function $1910c06f0ca9905e$var$RootDropIndicator() {
  let state = (0, import_react224.useContext)($1910c06f0ca9905e$export$38de1cb0526c21fb);
  let { dragAndDropHooks, dropState } = (0, import_react224.useContext)((0, $612b8eb6cb90e02d$export$d188a835a7bc5783));
  let ref = (0, import_react224.useRef)(null);
  let { dropIndicatorProps } = dragAndDropHooks.useDropIndicator({
    target: {
      type: "root"
    }
  }, dropState, ref);
  let isDropTarget = dropState.isDropTarget({
    type: "root"
  });
  let { visuallyHiddenProps } = (0, $5c3e21d68f1c4674$export$a966af930f325cab)();
  let TR = $1910c06f0ca9905e$var$useElementType("tr");
  let TD = $1910c06f0ca9905e$var$useElementType("td");
  if (!isDropTarget && dropIndicatorProps["aria-hidden"]) return null;
  return (0, import_react224.default).createElement(TR, {
    role: "row",
    "aria-hidden": dropIndicatorProps["aria-hidden"],
    style: {
      height: 0
    }
  }, (0, import_react224.default).createElement(TD, {
    role: "gridcell",
    colSpan: state.collection.columnCount,
    style: {
      padding: 0
    }
  }, (0, import_react224.default).createElement("div", {
    role: "button",
    ...visuallyHiddenProps,
    ...dropIndicatorProps,
    ref
  })));
}
var $1910c06f0ca9905e$export$92aad1076056e17a = (0, $e1995378a142960e$export$18af5c7a9e9b3664)("loader", function TableLoadingIndicator(props, ref, item) {
  let state = (0, import_react224.useContext)($1910c06f0ca9905e$export$38de1cb0526c21fb);
  let { isVirtualized } = (0, import_react224.useContext)((0, $7135fc7d473fd974$export$4feb769f8ddf26c5));
  let { isLoading, onLoadMore, scrollOffset, ...otherProps } = props;
  let numColumns = state.collection.columns.length;
  let sentinelRef = (0, import_react224.useRef)(null);
  let memoedLoadMoreProps = (0, import_react224.useMemo)(() => ({
    onLoadMore,
    collection: state === null || state === void 0 ? void 0 : state.collection,
    sentinelRef,
    scrollOffset
  }), [
    onLoadMore,
    scrollOffset,
    state === null || state === void 0 ? void 0 : state.collection
  ]);
  (0, $a5fa973c1850dd36$export$90a12e6abf95cbe0)(memoedLoadMoreProps, sentinelRef);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...otherProps,
    id: void 0,
    children: item.rendered,
    defaultClassName: "react-aria-TableLoadingIndicator",
    values: null
  });
  let TR = $1910c06f0ca9905e$var$useElementType("tr");
  let TD = $1910c06f0ca9905e$var$useElementType("td");
  let rowProps = {};
  let rowHeaderProps = {};
  let style = {};
  if (isVirtualized) {
    rowProps["aria-rowindex"] = item.index + 1 + state.collection.headerRows.length;
    rowHeaderProps["aria-colspan"] = numColumns;
    style = {
      display: "contents"
    };
  } else rowHeaderProps["colSpan"] = numColumns;
  return (0, import_react224.default).createElement((0, import_react224.default).Fragment, null, (0, import_react224.default).createElement(TR, {
    style: {
      height: 0
    },
    inert: (0, $cdc5a6778b766db2$export$a9d04c5684123369)(true)
  }, (0, import_react224.default).createElement(TD, {
    style: {
      padding: 0,
      border: 0
    }
  }, (0, import_react224.default).createElement("div", {
    "data-testid": "loadMoreSentinel",
    ref: sentinelRef,
    style: {
      position: "relative",
      height: 1,
      width: 1
    }
  }))), isLoading && renderProps.children && (0, import_react224.default).createElement(TR, {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)((0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props), rowProps),
    ...renderProps,
    role: "row",
    ref
  }, (0, import_react224.default).createElement(TD, {
    role: "rowheader",
    ...rowHeaderProps,
    style
  }, renderProps.children)));
});

// node_modules/@react-stately/virtualizer/dist/Layout.mjs
var $c74cda7d31af1253$export$c84671f46d6a1ca = class {
  /**
  * Returns whether the layout should invalidate in response to
  * visible rectangle changes. By default, it only invalidates
  * when the virtualizer's size changes. Return true always
  * to make the layout invalidate while scrolling (e.g. sticky headers).
  */
  shouldInvalidate(newRect, oldRect) {
    return newRect.width !== oldRect.width || newRect.height !== oldRect.height;
  }
  /**
  * Returns whether the layout should invalidate when the layout options change.
  * By default it invalidates when the object identity changes. Override this
  * method to optimize layout updates based on specific option changes.
  */
  shouldInvalidateLayoutOptions(newOptions, oldOptions) {
    return newOptions !== oldOptions;
  }
  /**
  * This method allows the layout to perform any pre-computation
  * it needs to in order to prepare LayoutInfos for retrieval.
  * Called by the virtualizer before `getVisibleLayoutInfos`
  * or `getLayoutInfo` are called.
  */
  update(invalidationContext) {
  }
  /** @private */
  getItemRect(key) {
    var _this_getLayoutInfo;
    var _this_getLayoutInfo_rect;
    return (_this_getLayoutInfo_rect = (_this_getLayoutInfo = this.getLayoutInfo(key)) === null || _this_getLayoutInfo === void 0 ? void 0 : _this_getLayoutInfo.rect) !== null && _this_getLayoutInfo_rect !== void 0 ? _this_getLayoutInfo_rect : null;
  }
  /** @private */
  getVisibleRect() {
    return this.virtualizer.visibleRect;
  }
  constructor() {
    this.virtualizer = null;
  }
};

// node_modules/@react-stately/virtualizer/dist/LayoutInfo.mjs
var $d7fd61009c21d0bb$export$7e0eeb9da702a085 = class _$d7fd61009c21d0bb$export$7e0eeb9da702a085 {
  /**
  * Returns a copy of the LayoutInfo.
  */
  copy() {
    let res = new _$d7fd61009c21d0bb$export$7e0eeb9da702a085(this.type, this.key, this.rect.copy());
    res.estimatedSize = this.estimatedSize;
    res.opacity = this.opacity;
    res.transform = this.transform;
    res.parentKey = this.parentKey;
    res.content = this.content;
    res.isSticky = this.isSticky;
    res.zIndex = this.zIndex;
    res.allowOverflow = this.allowOverflow;
    return res;
  }
  /**
  * @param type The type of element represented by this LayoutInfo. Should match the `type` of the corresponding collection node.
  * @param key A unique key for this LayoutInfo. Should match the `key` of the corresponding collection node.
  * @param rect The rectangle describing the size and position of this element.
  */
  constructor(type, key, rect) {
    this.type = type;
    this.key = key;
    this.parentKey = null;
    this.content = null;
    this.rect = rect;
    this.estimatedSize = false;
    this.isSticky = false;
    this.opacity = 1;
    this.transform = null;
    this.zIndex = 0;
    this.allowOverflow = false;
  }
};

// node_modules/@react-stately/virtualizer/dist/Point.mjs
var $3041db3296945e6e$export$baf26146a414f24a = class _$3041db3296945e6e$export$baf26146a414f24a {
  /**
  * Returns a copy of this point.
  */
  copy() {
    return new _$3041db3296945e6e$export$baf26146a414f24a(this.x, this.y);
  }
  /**
  * Checks if two points are equal.
  */
  equals(point) {
    return this.x === point.x && this.y === point.y;
  }
  /**
  * Returns true if this point is the origin.
  */
  isOrigin() {
    return this.x === 0 && this.y === 0;
  }
  constructor(x = 0, y = 0) {
    this.x = x;
    this.y = y;
  }
};

// node_modules/@react-stately/virtualizer/dist/Rect.mjs
var $60423f92c7f9ad87$export$c79fc6492f3af13d = class _$60423f92c7f9ad87$export$c79fc6492f3af13d {
  /**
  * The maximum x-coordinate in the rectangle.
  */
  get maxX() {
    return this.x + this.width;
  }
  /**
  * The maximum y-coordinate in the rectangle.
  */
  get maxY() {
    return this.y + this.height;
  }
  /**
  * The area of the rectangle.
  */
  get area() {
    return this.width * this.height;
  }
  /**
  * The top left corner of the rectangle.
  */
  get topLeft() {
    return new (0, $3041db3296945e6e$export$baf26146a414f24a)(this.x, this.y);
  }
  /**
  * The top right corner of the rectangle.
  */
  get topRight() {
    return new (0, $3041db3296945e6e$export$baf26146a414f24a)(this.maxX, this.y);
  }
  /**
  * The bottom left corner of the rectangle.
  */
  get bottomLeft() {
    return new (0, $3041db3296945e6e$export$baf26146a414f24a)(this.x, this.maxY);
  }
  /**
  * The bottom right corner of the rectangle.
  */
  get bottomRight() {
    return new (0, $3041db3296945e6e$export$baf26146a414f24a)(this.maxX, this.maxY);
  }
  /**
  * Returns whether this rectangle intersects another rectangle.
  * @param rect - The rectangle to check.
  */
  intersects(rect) {
    return this.area > 0 && rect.area > 0 && this.x <= rect.x + rect.width && rect.x <= this.x + this.width && this.y <= rect.y + rect.height && rect.y <= this.y + this.height;
  }
  /**
  * Returns whether this rectangle fully contains another rectangle.
  * @param rect - The rectangle to check.
  */
  containsRect(rect) {
    return this.x <= rect.x && this.y <= rect.y && this.maxX >= rect.maxX && this.maxY >= rect.maxY;
  }
  /**
  * Returns whether the rectangle contains the given point.
  * @param point - The point to check.
  */
  containsPoint(point) {
    return this.x <= point.x && this.y <= point.y && this.maxX >= point.x && this.maxY >= point.y;
  }
  /**
  * Returns the first corner of this rectangle (from top to bottom, left to right)
  * that is contained in the given rectangle, or null of the rectangles do not intersect.
  * @param rect - The rectangle to check.
  */
  getCornerInRect(rect) {
    for (let key of [
      "topLeft",
      "topRight",
      "bottomLeft",
      "bottomRight"
    ]) {
      if (rect.containsPoint(this[key])) return key;
    }
    return null;
  }
  equals(rect) {
    return rect.x === this.x && rect.y === this.y && rect.width === this.width && rect.height === this.height;
  }
  pointEquals(point) {
    return this.x === point.x && this.y === point.y;
  }
  sizeEquals(size) {
    return this.width === size.width && this.height === size.height;
  }
  /**
  * Returns the union of this Rect and another.
  */
  union(other) {
    let x = Math.min(this.x, other.x);
    let y = Math.min(this.y, other.y);
    let width = Math.max(this.maxX, other.maxX) - x;
    let height = Math.max(this.maxY, other.maxY) - y;
    return new _$60423f92c7f9ad87$export$c79fc6492f3af13d(x, y, width, height);
  }
  /**
  * Returns the intersection of this Rect with another.
  * If the rectangles do not intersect, an all zero Rect is returned.
  */
  intersection(other) {
    if (!this.intersects(other)) return new _$60423f92c7f9ad87$export$c79fc6492f3af13d(0, 0, 0, 0);
    let x = Math.max(this.x, other.x);
    let y = Math.max(this.y, other.y);
    return new _$60423f92c7f9ad87$export$c79fc6492f3af13d(x, y, Math.min(this.maxX, other.maxX) - x, Math.min(this.maxY, other.maxY) - y);
  }
  /**
  * Returns a copy of this rectangle.
  */
  copy() {
    return new _$60423f92c7f9ad87$export$c79fc6492f3af13d(this.x, this.y, this.width, this.height);
  }
  constructor(x = 0, y = 0, width = 0, height = 0) {
    this.x = x;
    this.y = y;
    this.width = width;
    this.height = height;
  }
};

// node_modules/@react-stately/virtualizer/dist/Size.mjs
var $ee1bfa90a957fb8a$export$cb6da89c6af1a8ec = class _$ee1bfa90a957fb8a$export$cb6da89c6af1a8ec {
  /**
  * Returns a copy of this size.
  */
  copy() {
    return new _$ee1bfa90a957fb8a$export$cb6da89c6af1a8ec(this.width, this.height);
  }
  /**
  * Returns whether this size is equal to another one.
  */
  equals(other) {
    return this.width === other.width && this.height === other.height;
  }
  /**
  * The total area of the Size.
  */
  get area() {
    return this.width * this.height;
  }
  constructor(width = 0, height = 0) {
    this.width = Math.max(width, 0);
    this.height = Math.max(height, 0);
  }
};

// node_modules/@react-stately/virtualizer/dist/ReusableView.mjs
var $ad1d98aa8f0c31b4$var$KEY = 0;
var $ad1d98aa8f0c31b4$export$1a5223887c560441 = class {
  /**
  * Prepares the view for reuse. Called just before the view is removed from the DOM.
  */
  prepareForReuse() {
    this.content = null;
    this.rendered = null;
    this.layoutInfo = null;
  }
  getReusableView(reuseType) {
    let reusable = this.reusableViews.get(reuseType);
    let view = reusable && reusable.length > 0 ? reusable.shift() : new $ad1d98aa8f0c31b4$export$7a41b6f219e61634(this.virtualizer, this, reuseType);
    return view;
  }
  reuseChild(child) {
    child.prepareForReuse();
    let reusable = this.reusableViews.get(child.viewType);
    if (!reusable) {
      reusable = [];
      this.reusableViews.set(child.viewType, reusable);
    }
    reusable.push(child);
  }
  constructor(virtualizer, viewType) {
    this.virtualizer = virtualizer;
    this.key = ++$ad1d98aa8f0c31b4$var$KEY;
    this.viewType = viewType;
    this.children = /* @__PURE__ */ new Set();
    this.reusableViews = /* @__PURE__ */ new Map();
    this.layoutInfo = null;
    this.content = null;
    this.rendered = null;
  }
};
var $ad1d98aa8f0c31b4$export$e21886a4eef6b29a = class extends $ad1d98aa8f0c31b4$export$1a5223887c560441 {
  constructor(virtualizer) {
    super(virtualizer, "root");
  }
};
var $ad1d98aa8f0c31b4$export$7a41b6f219e61634 = class extends $ad1d98aa8f0c31b4$export$1a5223887c560441 {
  constructor(virtualizer, parent, viewType) {
    super(virtualizer, viewType);
    this.parent = parent;
  }
};

// node_modules/@react-stately/virtualizer/dist/utils.mjs
function $fc36f9a046a9ce79$export$a8d0d0c8d1c5df64(a, b) {
  if (a === b) return true;
  if (a.size !== b.size) return false;
  for (let key of a) {
    if (!b.has(key)) return false;
  }
  return true;
}

// node_modules/@react-stately/virtualizer/dist/OverscanManager.mjs
var $364191b3decf3697$export$4455ee6afb38dcbb = class {
  setVisibleRect(rect) {
    let time = performance.now() - this.startTime;
    if (time < 500) {
      if (rect.x !== this.visibleRect.x && time > 0) this.velocity.x = (rect.x - this.visibleRect.x) / time;
      if (rect.y !== this.visibleRect.y && time > 0) this.velocity.y = (rect.y - this.visibleRect.y) / time;
    }
    this.startTime = performance.now();
    this.visibleRect = rect;
  }
  getOverscannedRect() {
    let overscanned = this.visibleRect.copy();
    let overscanY = this.visibleRect.height / 3;
    overscanned.height += overscanY;
    if (this.velocity.y < 0) overscanned.y -= overscanY;
    if (this.velocity.x !== 0) {
      let overscanX = this.visibleRect.width / 3;
      overscanned.width += overscanX;
      if (this.velocity.x < 0) overscanned.x -= overscanX;
    }
    return overscanned;
  }
  constructor() {
    this.startTime = 0;
    this.velocity = new (0, $3041db3296945e6e$export$baf26146a414f24a)(0, 0);
    this.visibleRect = new (0, $60423f92c7f9ad87$export$c79fc6492f3af13d)();
  }
};

// node_modules/@react-stately/virtualizer/dist/Virtualizer.mjs
var $38b9490c1cca8fc4$export$89be5a243e59c4b2 = class {
  /** Returns whether the given key, or an ancestor, is persisted. */
  isPersistedKey(key) {
    if (this.persistedKeys.has(key)) return true;
    for (let k of this.persistedKeys) while (k != null) {
      let layoutInfo = this.layout.getLayoutInfo(k);
      if (!layoutInfo || layoutInfo.parentKey == null) break;
      k = layoutInfo.parentKey;
      if (k === key) return true;
    }
    return false;
  }
  getParentView(layoutInfo) {
    return layoutInfo.parentKey != null ? this._visibleViews.get(layoutInfo.parentKey) : this._rootView;
  }
  getReusableView(layoutInfo) {
    let parentView = this.getParentView(layoutInfo);
    let view = parentView.getReusableView(layoutInfo.type);
    view.layoutInfo = layoutInfo;
    this._renderView(view);
    return view;
  }
  _renderView(reusableView) {
    if (reusableView.layoutInfo) {
      let { type, key, content } = reusableView.layoutInfo;
      reusableView.content = content || this.collection.getItem(key);
      reusableView.rendered = this._renderContent(type, reusableView.content);
    }
  }
  _renderContent(type, content) {
    let cached = content != null ? this._renderedContent.get(content) : null;
    if (cached != null) return cached;
    let rendered = this.delegate.renderView(type, content);
    if (content) this._renderedContent.set(content, rendered);
    return rendered;
  }
  /**
  * Returns the key for the item view currently at the given point.
  */
  keyAtPoint(point) {
    let rect = new (0, $60423f92c7f9ad87$export$c79fc6492f3af13d)(point.x, point.y, 1, 1);
    let layoutInfos = rect.area === 0 ? [] : this.layout.getVisibleLayoutInfos(rect);
    for (let layoutInfo of layoutInfos) {
      if (layoutInfo.rect.intersects(rect)) return layoutInfo.key;
    }
    return null;
  }
  relayout(context = {}) {
    this.layout.update(context);
    this.contentSize = this.layout.getContentSize();
    let visibleRect = this.visibleRect;
    let contentOffsetX = context.contentChanged ? 0 : visibleRect.x;
    let contentOffsetY = context.contentChanged ? 0 : visibleRect.y;
    contentOffsetX = Math.max(0, Math.min(this.contentSize.width - visibleRect.width, contentOffsetX));
    contentOffsetY = Math.max(0, Math.min(this.contentSize.height - visibleRect.height, contentOffsetY));
    if (contentOffsetX !== visibleRect.x || contentOffsetY !== visibleRect.y) {
      let rect = new (0, $60423f92c7f9ad87$export$c79fc6492f3af13d)(contentOffsetX, contentOffsetY, visibleRect.width, visibleRect.height);
      this.delegate.setVisibleRect(rect);
    } else this.updateSubviews();
  }
  getVisibleLayoutInfos() {
    let isTestEnv = false;
    let isClientWidthMocked = isTestEnv && typeof HTMLElement !== "undefined" && Object.getOwnPropertyNames(HTMLElement.prototype).includes("clientWidth");
    let isClientHeightMocked = isTestEnv && typeof HTMLElement !== "undefined" && Object.getOwnPropertyNames(HTMLElement.prototype).includes("clientHeight");
    let rect;
    if (isTestEnv && !(isClientWidthMocked && isClientHeightMocked)) rect = new (0, $60423f92c7f9ad87$export$c79fc6492f3af13d)(0, 0, this.contentSize.width, this.contentSize.height);
    else rect = this._overscanManager.getOverscannedRect();
    let layoutInfos = this.layout.getVisibleLayoutInfos(rect);
    let map = /* @__PURE__ */ new Map();
    for (let layoutInfo of layoutInfos) map.set(layoutInfo.key, layoutInfo);
    return map;
  }
  updateSubviews() {
    let visibleLayoutInfos = this.getVisibleLayoutInfos();
    let removed = /* @__PURE__ */ new Set();
    for (let [key, view] of this._visibleViews) {
      let layoutInfo = visibleLayoutInfos.get(key);
      if (!layoutInfo || view.parent !== this.getParentView(layoutInfo)) {
        this._visibleViews.delete(key);
        view.parent.reuseChild(view);
        removed.add(view);
      }
    }
    for (let [key, layoutInfo] of visibleLayoutInfos) {
      let view = this._visibleViews.get(key);
      if (!view) {
        view = this.getReusableView(layoutInfo);
        view.parent.children.add(view);
        this._visibleViews.set(key, view);
        removed.delete(view);
      } else {
        view.layoutInfo = layoutInfo;
        let item = this.collection.getItem(layoutInfo.key);
        if (view.content !== item) {
          if (view.content != null) this._renderedContent.delete(view.content);
          this._renderView(view);
        }
      }
    }
    for (let view of removed) {
      view.parent.children.delete(view);
      view.parent.reusableViews.clear();
    }
    if (!this._isScrolling)
      for (let key of visibleLayoutInfos.keys()) {
        let view = this._visibleViews.get(key);
        view.parent.children.delete(view);
        view.parent.children.add(view);
      }
  }
  /** Performs layout and updates visible views as needed. */
  render(opts) {
    let mutableThis = this;
    let needsLayout = false;
    let offsetChanged = false;
    let sizeChanged = false;
    let itemSizeChanged = false;
    let layoutOptionsChanged = false;
    let needsUpdate = false;
    if (opts.collection !== this.collection) {
      mutableThis.collection = opts.collection;
      needsLayout = true;
    }
    if (opts.layout !== this.layout || this.layout.virtualizer !== this) {
      if (this.layout) this.layout.virtualizer = null;
      opts.layout.virtualizer = this;
      mutableThis.layout = opts.layout;
      needsLayout = true;
    }
    if (opts.persistedKeys && !(0, $fc36f9a046a9ce79$export$a8d0d0c8d1c5df64)(opts.persistedKeys, this.persistedKeys)) {
      mutableThis.persistedKeys = opts.persistedKeys;
      needsUpdate = true;
    }
    if (!this.visibleRect.equals(opts.visibleRect)) {
      this._overscanManager.setVisibleRect(opts.visibleRect);
      let shouldInvalidate = this.layout.shouldInvalidate(opts.visibleRect, this.visibleRect);
      if (shouldInvalidate) {
        offsetChanged = !opts.visibleRect.pointEquals(this.visibleRect);
        sizeChanged = !opts.visibleRect.sizeEquals(this.visibleRect);
        needsLayout = true;
      } else needsUpdate = true;
      mutableThis.visibleRect = opts.visibleRect;
    }
    if (opts.invalidationContext !== this._invalidationContext) {
      if (opts.invalidationContext) {
        sizeChanged || (sizeChanged = opts.invalidationContext.sizeChanged || false);
        offsetChanged || (offsetChanged = opts.invalidationContext.offsetChanged || false);
        itemSizeChanged || (itemSizeChanged = opts.invalidationContext.itemSizeChanged || false);
        layoutOptionsChanged || (layoutOptionsChanged = opts.invalidationContext.layoutOptions != null && this._invalidationContext.layoutOptions != null && opts.invalidationContext.layoutOptions !== this._invalidationContext.layoutOptions && this.layout.shouldInvalidateLayoutOptions(opts.invalidationContext.layoutOptions, this._invalidationContext.layoutOptions));
        needsLayout || (needsLayout = itemSizeChanged || sizeChanged || offsetChanged || layoutOptionsChanged);
      }
      this._invalidationContext = opts.invalidationContext;
    }
    if (opts.isScrolling !== this._isScrolling) {
      this._isScrolling = opts.isScrolling;
      if (!opts.isScrolling)
        needsUpdate = true;
    }
    if (needsLayout) this.relayout({
      offsetChanged,
      sizeChanged,
      itemSizeChanged,
      layoutOptionsChanged,
      layoutOptions: this._invalidationContext.layoutOptions
    });
    else if (needsUpdate) this.updateSubviews();
    return Array.from(this._rootView.children);
  }
  getVisibleView(key) {
    return this._visibleViews.get(key);
  }
  invalidate(context) {
    this.delegate.invalidate(context);
  }
  updateItemSize(key, size) {
    if (!this.layout.updateItemSize) return;
    let changed = this.layout.updateItemSize(key, size);
    if (changed) this.invalidate({
      itemSizeChanged: true
    });
  }
  constructor(options) {
    this.delegate = options.delegate;
    this.collection = options.collection;
    this.layout = options.layout;
    this.contentSize = new (0, $ee1bfa90a957fb8a$export$cb6da89c6af1a8ec)();
    this.visibleRect = new (0, $60423f92c7f9ad87$export$c79fc6492f3af13d)();
    this.persistedKeys = /* @__PURE__ */ new Set();
    this._visibleViews = /* @__PURE__ */ new Map();
    this._renderedContent = /* @__PURE__ */ new WeakMap();
    this._rootView = new (0, $ad1d98aa8f0c31b4$export$e21886a4eef6b29a)(this);
    this._isScrolling = false;
    this._invalidationContext = {};
    this._overscanManager = new (0, $364191b3decf3697$export$4455ee6afb38dcbb)();
  }
};

// node_modules/@react-stately/virtualizer/dist/useVirtualizerState.mjs
var import_react225 = __toESM(require_react(), 1);
function $fc0b13b484ac1194$export$1505db82fe357e65(opts) {
  let [visibleRect, setVisibleRect] = (0, import_react225.useState)(new (0, $60423f92c7f9ad87$export$c79fc6492f3af13d)(0, 0, 0, 0));
  let [isScrolling, setScrolling] = (0, import_react225.useState)(false);
  let [invalidationContext, setInvalidationContext] = (0, import_react225.useState)({});
  let visibleRectChanged = (0, import_react225.useRef)(false);
  let [virtualizer] = (0, import_react225.useState)(() => new (0, $38b9490c1cca8fc4$export$89be5a243e59c4b2)({
    collection: opts.collection,
    layout: opts.layout,
    delegate: {
      setVisibleRect(rect) {
        setVisibleRect(rect);
        visibleRectChanged.current = true;
      },
      // TODO: should changing these invalidate the entire cache?
      renderView: opts.renderView,
      invalidate: setInvalidationContext
    }
  }));
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    if (visibleRectChanged.current) {
      visibleRectChanged.current = false;
      opts.onVisibleRectChange(visibleRect);
    }
  });
  let mergedInvalidationContext = (0, import_react225.useMemo)(() => {
    if (opts.layoutOptions != null) return {
      ...invalidationContext,
      layoutOptions: opts.layoutOptions
    };
    return invalidationContext;
  }, [
    invalidationContext,
    opts.layoutOptions
  ]);
  let visibleViews = virtualizer.render({
    layout: opts.layout,
    collection: opts.collection,
    persistedKeys: opts.persistedKeys,
    layoutOptions: opts.layoutOptions,
    visibleRect,
    invalidationContext: mergedInvalidationContext,
    isScrolling
  });
  let contentSize = virtualizer.contentSize;
  let startScrolling = (0, import_react225.useCallback)(() => {
    setScrolling(true);
  }, []);
  let endScrolling = (0, import_react225.useCallback)(() => {
    setScrolling(false);
  }, []);
  let state = (0, import_react225.useMemo)(() => ({
    virtualizer,
    visibleViews,
    setVisibleRect,
    contentSize,
    isScrolling,
    startScrolling,
    endScrolling
  }), [
    virtualizer,
    visibleViews,
    setVisibleRect,
    contentSize,
    isScrolling,
    startScrolling,
    endScrolling
  ]);
  return state;
}

// node_modules/@react-stately/layout/dist/GridLayout.mjs
var $a58592d295a170a4$var$DEFAULT_OPTIONS = {
  minItemSize: new (0, $ee1bfa90a957fb8a$export$cb6da89c6af1a8ec)(200, 200),
  maxItemSize: new (0, $ee1bfa90a957fb8a$export$cb6da89c6af1a8ec)(Infinity, Infinity),
  preserveAspectRatio: false,
  minSpace: new (0, $ee1bfa90a957fb8a$export$cb6da89c6af1a8ec)(18, 18),
  maxColumns: Infinity,
  dropIndicatorThickness: 2
};
var $a58592d295a170a4$export$7d2b12578154a735 = class extends (0, $c74cda7d31af1253$export$c84671f46d6a1ca) {
  shouldInvalidateLayoutOptions(newOptions, oldOptions) {
    return newOptions.maxColumns !== oldOptions.maxColumns || newOptions.dropIndicatorThickness !== oldOptions.dropIndicatorThickness || newOptions.preserveAspectRatio !== oldOptions.preserveAspectRatio || !(newOptions.minItemSize || $a58592d295a170a4$var$DEFAULT_OPTIONS.minItemSize).equals(oldOptions.minItemSize || $a58592d295a170a4$var$DEFAULT_OPTIONS.minItemSize) || !(newOptions.maxItemSize || $a58592d295a170a4$var$DEFAULT_OPTIONS.maxItemSize).equals(oldOptions.maxItemSize || $a58592d295a170a4$var$DEFAULT_OPTIONS.maxItemSize) || !(newOptions.minSpace || $a58592d295a170a4$var$DEFAULT_OPTIONS.minSpace).equals(oldOptions.minSpace || $a58592d295a170a4$var$DEFAULT_OPTIONS.minSpace);
  }
  update(invalidationContext) {
    let { minItemSize = $a58592d295a170a4$var$DEFAULT_OPTIONS.minItemSize, maxItemSize = $a58592d295a170a4$var$DEFAULT_OPTIONS.maxItemSize, preserveAspectRatio = $a58592d295a170a4$var$DEFAULT_OPTIONS.preserveAspectRatio, minSpace = $a58592d295a170a4$var$DEFAULT_OPTIONS.minSpace, maxColumns = $a58592d295a170a4$var$DEFAULT_OPTIONS.maxColumns, dropIndicatorThickness = $a58592d295a170a4$var$DEFAULT_OPTIONS.dropIndicatorThickness } = invalidationContext.layoutOptions || {};
    this.dropIndicatorThickness = dropIndicatorThickness;
    let visibleWidth = this.virtualizer.visibleRect.width;
    let maxItemWidth = Math.min(maxItemSize.width, visibleWidth);
    let maxItemHeight = Number.isFinite(maxItemSize.height) ? maxItemSize.height : Math.floor(minItemSize.height / minItemSize.width * maxItemWidth);
    let columns = Math.floor(visibleWidth / (minItemSize.width + minSpace.width));
    let numColumns = Math.max(1, Math.min(maxColumns, columns));
    this.numColumns = numColumns;
    let width = visibleWidth - minSpace.width * Math.max(0, numColumns);
    let itemWidth = Math.floor(width / numColumns);
    itemWidth = Math.max(minItemSize.width, Math.min(maxItemWidth, itemWidth));
    let t = (itemWidth - minItemSize.width) / Math.max(1, maxItemWidth - minItemSize.width);
    let itemHeight = minItemSize.height + Math.floor((maxItemHeight - minItemSize.height) * t);
    itemHeight = Math.max(minItemSize.height, Math.min(maxItemHeight, itemHeight));
    let horizontalSpacing = Math.floor((visibleWidth - numColumns * itemWidth) / (numColumns + 1));
    this.gap = new (0, $ee1bfa90a957fb8a$export$cb6da89c6af1a8ec)(horizontalSpacing, minSpace.height);
    let collection = this.virtualizer.collection;
    let isEmptyOrLoading = (collection === null || collection === void 0 ? void 0 : collection.size) === 0 || collection.size === 1 && collection.getItem(collection.getFirstKey()).type === "loader";
    let rows = isEmptyOrLoading ? 0 : Math.ceil(collection.size / numColumns);
    let iterator = collection[Symbol.iterator]();
    let y = rows > 0 ? minSpace.height : 0;
    let newLayoutInfos = /* @__PURE__ */ new Map();
    let skeleton = null;
    let skeletonCount = 0;
    for (let row = 0; row < rows; row++) {
      let maxHeight = 0;
      let rowLayoutInfos = [];
      for (let col = 0; col < numColumns; col++) {
        let node = skeleton || iterator.next().value;
        if (!node) break;
        if (node.type === "loader") continue;
        if (node.type === "skeleton") skeleton = node;
        let key = skeleton ? `${skeleton.key}-${skeletonCount++}` : node.key;
        let oldLayoutInfo = this.layoutInfos.get(key);
        let content = node;
        if (skeleton) content = oldLayoutInfo && oldLayoutInfo.content.key === key ? oldLayoutInfo.content : {
          ...skeleton,
          key
        };
        let x = horizontalSpacing + col * (itemWidth + horizontalSpacing);
        let height = itemHeight;
        let estimatedSize = !preserveAspectRatio;
        if (oldLayoutInfo && estimatedSize) {
          height = oldLayoutInfo.rect.height;
          estimatedSize = invalidationContext.layoutOptionsChanged || invalidationContext.sizeChanged || oldLayoutInfo.estimatedSize || oldLayoutInfo.content !== content;
        }
        let rect = new (0, $60423f92c7f9ad87$export$c79fc6492f3af13d)(x, y, itemWidth, height);
        let layoutInfo = new (0, $d7fd61009c21d0bb$export$7e0eeb9da702a085)(node.type, key, rect);
        layoutInfo.estimatedSize = estimatedSize;
        layoutInfo.allowOverflow = true;
        layoutInfo.content = content;
        newLayoutInfos.set(key, layoutInfo);
        rowLayoutInfos.push(layoutInfo);
        maxHeight = Math.max(maxHeight, layoutInfo.rect.height);
      }
      for (let layoutInfo of rowLayoutInfos) layoutInfo.rect.height = maxHeight;
      y += maxHeight + minSpace.height;
      if (skeleton && row === rows - 1 && y < this.virtualizer.visibleRect.height) rows++;
    }
    let lastNode = collection.getItem(collection.getLastKey());
    if ((lastNode === null || lastNode === void 0 ? void 0 : lastNode.type) === "loader") {
      let rect = new (0, $60423f92c7f9ad87$export$c79fc6492f3af13d)(horizontalSpacing, y, itemWidth, 0);
      let layoutInfo = new (0, $d7fd61009c21d0bb$export$7e0eeb9da702a085)("loader", lastNode.key, rect);
      newLayoutInfos.set(lastNode.key, layoutInfo);
    }
    this.layoutInfos = newLayoutInfos;
    this.contentSize = new (0, $ee1bfa90a957fb8a$export$cb6da89c6af1a8ec)(this.virtualizer.visibleRect.width, y);
  }
  getLayoutInfo(key) {
    return this.layoutInfos.get(key) || null;
  }
  getContentSize() {
    return this.contentSize;
  }
  getVisibleLayoutInfos(rect) {
    let layoutInfos = [];
    for (let layoutInfo of this.layoutInfos.values()) if (layoutInfo.rect.intersects(rect) || this.virtualizer.isPersistedKey(layoutInfo.key) || layoutInfo.type === "loader") layoutInfos.push(layoutInfo);
    return layoutInfos;
  }
  updateItemSize(key, size) {
    let layoutInfo = this.layoutInfos.get(key);
    if (!size || !layoutInfo) return false;
    if (size.height !== layoutInfo.rect.height) {
      let newLayoutInfo = layoutInfo.copy();
      newLayoutInfo.rect.height = size.height;
      newLayoutInfo.estimatedSize = false;
      this.layoutInfos.set(key, newLayoutInfo);
      return true;
    }
    return false;
  }
  getDropTargetFromPoint(x, y, isValidDropTarget) {
    if (this.layoutInfos.size === 0) return {
      type: "root"
    };
    x += this.virtualizer.visibleRect.x;
    y += this.virtualizer.visibleRect.y;
    let key = null;
    if (this.numColumns === 1) {
      let searchRect = new (0, $60423f92c7f9ad87$export$c79fc6492f3af13d)(x, Math.max(0, y - this.gap.height), 1, Math.max(1, this.gap.height * 2));
      let candidates = this.getVisibleLayoutInfos(searchRect);
      let minDistance = Infinity;
      for (let candidate of candidates) {
        if (!candidate.rect.intersects(searchRect)) continue;
        let yDist = Math.abs(candidate.rect.y - y);
        let maxYDist = Math.abs(candidate.rect.maxY - y);
        let dist = Math.min(yDist, maxYDist);
        if (dist < minDistance) {
          minDistance = dist;
          key = candidate.key;
        }
      }
    } else {
      let searchRect = new (0, $60423f92c7f9ad87$export$c79fc6492f3af13d)(Math.max(0, x - this.gap.width), y, this.gap.width * 2, 1);
      let candidates = this.getVisibleLayoutInfos(searchRect);
      let minDistance = Infinity;
      for (let candidate of candidates) {
        if (!candidate.rect.intersects(searchRect)) continue;
        let xDist = Math.abs(candidate.rect.x - x);
        let maxXDist = Math.abs(candidate.rect.maxX - x);
        let dist = Math.min(xDist, maxXDist);
        if (dist < minDistance) {
          minDistance = dist;
          key = candidate.key;
        }
      }
    }
    let layoutInfo = key != null ? this.getLayoutInfo(key) : null;
    if (!layoutInfo) return {
      type: "root"
    };
    let target = {
      type: "item",
      key: layoutInfo.key,
      dropPosition: "on"
    };
    let pos = this.numColumns === 1 ? y : x;
    let layoutInfoPos = this.numColumns === 1 ? layoutInfo.rect.y : layoutInfo.rect.x;
    let size = this.numColumns === 1 ? layoutInfo.rect.height : layoutInfo.rect.width;
    if (isValidDropTarget(target)) {
      if (pos < layoutInfoPos + 5) target.dropPosition = "before";
      else if (pos > layoutInfoPos + size - 5) target.dropPosition = "after";
    } else {
      let mid = layoutInfoPos + size / 2;
      if (pos <= mid && isValidDropTarget({
        ...target,
        dropPosition: "before"
      })) target.dropPosition = "before";
      else if (pos >= mid && isValidDropTarget({
        ...target,
        dropPosition: "after"
      })) target.dropPosition = "after";
    }
    return target;
  }
  getDropTargetLayoutInfo(target) {
    let layoutInfo = this.getLayoutInfo(target.key);
    let rect;
    if (this.numColumns === 1)
      rect = new (0, $60423f92c7f9ad87$export$c79fc6492f3af13d)(layoutInfo.rect.x, target.dropPosition === "before" ? layoutInfo.rect.y - this.gap.height / 2 - this.dropIndicatorThickness / 2 : layoutInfo.rect.maxY + this.gap.height / 2 - this.dropIndicatorThickness / 2, layoutInfo.rect.width, this.dropIndicatorThickness);
    else rect = new (0, $60423f92c7f9ad87$export$c79fc6492f3af13d)(target.dropPosition === "before" ? layoutInfo.rect.x - this.gap.width / 2 - this.dropIndicatorThickness / 2 : layoutInfo.rect.maxX + this.gap.width / 2 - this.dropIndicatorThickness / 2, layoutInfo.rect.y, this.dropIndicatorThickness, layoutInfo.rect.height);
    return new (0, $d7fd61009c21d0bb$export$7e0eeb9da702a085)("dropIndicator", target.key + ":" + target.dropPosition, rect);
  }
  constructor(...args) {
    super(...args), this.gap = $a58592d295a170a4$var$DEFAULT_OPTIONS.minSpace, this.dropIndicatorThickness = 2, this.numColumns = 0, this.contentSize = new (0, $ee1bfa90a957fb8a$export$cb6da89c6af1a8ec)(), this.layoutInfos = /* @__PURE__ */ new Map();
  }
};

// node_modules/@react-stately/layout/dist/ListLayout.mjs
var $61ef60fc9b1041f4$var$DEFAULT_HEIGHT = 48;
var $61ef60fc9b1041f4$export$cacbb3924155d68e = class extends (0, $c74cda7d31af1253$export$c84671f46d6a1ca) {
  // Backward compatibility for subclassing.
  get collection() {
    return this.virtualizer.collection;
  }
  getLayoutInfo(key) {
    var _this_layoutNodes_get;
    this.ensureLayoutInfo(key);
    return ((_this_layoutNodes_get = this.layoutNodes.get(key)) === null || _this_layoutNodes_get === void 0 ? void 0 : _this_layoutNodes_get.layoutInfo) || null;
  }
  getVisibleLayoutInfos(rect) {
    if (rect.height > 1) {
      var _this_rowHeight, _ref;
      let rowHeight = ((_ref = (_this_rowHeight = this.rowHeight) !== null && _this_rowHeight !== void 0 ? _this_rowHeight : this.estimatedRowHeight) !== null && _ref !== void 0 ? _ref : $61ef60fc9b1041f4$var$DEFAULT_HEIGHT) + this.gap;
      rect.y = Math.floor(rect.y / rowHeight) * rowHeight;
      rect.height = Math.ceil(rect.height / rowHeight) * rowHeight;
    }
    this.layoutIfNeeded(rect);
    let res = [];
    let addNodes = (nodes) => {
      for (let node of nodes) if (this.isVisible(node, rect)) {
        res.push(node.layoutInfo);
        if (node.children) addNodes(node.children);
      }
    };
    addNodes(this.rootNodes);
    return res;
  }
  layoutIfNeeded(rect) {
    if (!this.lastCollection) return;
    if (!this.requestedRect.containsRect(rect)) {
      this.requestedRect = this.requestedRect.union(rect);
      this.rootNodes = this.buildCollection();
    }
    for (let key of this.virtualizer.persistedKeys) {
      if (this.ensureLayoutInfo(key)) return;
    }
  }
  ensureLayoutInfo(key) {
    if (!this.layoutNodes.has(key) && this.requestedRect.area < this.contentSize.area && this.lastCollection) {
      this.requestedRect = new (0, $60423f92c7f9ad87$export$c79fc6492f3af13d)(0, 0, Infinity, Infinity);
      this.rootNodes = this.buildCollection();
      this.requestedRect = new (0, $60423f92c7f9ad87$export$c79fc6492f3af13d)(0, 0, this.contentSize.width, this.contentSize.height);
      return true;
    }
    return false;
  }
  isVisible(node, rect) {
    return node.layoutInfo.rect.intersects(rect) || node.layoutInfo.isSticky || node.layoutInfo.type === "header" || node.layoutInfo.type === "loader" || this.virtualizer.isPersistedKey(node.layoutInfo.key);
  }
  shouldInvalidateEverything(invalidationContext) {
    let options = invalidationContext.layoutOptions;
    var _options_rowHeight, _options_headingHeight, _options_loaderHeight, _options_gap, _options_padding;
    return invalidationContext.sizeChanged || this.rowHeight !== ((_options_rowHeight = options === null || options === void 0 ? void 0 : options.rowHeight) !== null && _options_rowHeight !== void 0 ? _options_rowHeight : this.rowHeight) || this.headingHeight !== ((_options_headingHeight = options === null || options === void 0 ? void 0 : options.headingHeight) !== null && _options_headingHeight !== void 0 ? _options_headingHeight : this.headingHeight) || this.loaderHeight !== ((_options_loaderHeight = options === null || options === void 0 ? void 0 : options.loaderHeight) !== null && _options_loaderHeight !== void 0 ? _options_loaderHeight : this.loaderHeight) || this.gap !== ((_options_gap = options === null || options === void 0 ? void 0 : options.gap) !== null && _options_gap !== void 0 ? _options_gap : this.gap) || this.padding !== ((_options_padding = options === null || options === void 0 ? void 0 : options.padding) !== null && _options_padding !== void 0 ? _options_padding : this.padding);
  }
  shouldInvalidateLayoutOptions(newOptions, oldOptions) {
    return newOptions.rowHeight !== oldOptions.rowHeight || newOptions.estimatedRowHeight !== oldOptions.estimatedRowHeight || newOptions.headingHeight !== oldOptions.headingHeight || newOptions.estimatedHeadingHeight !== oldOptions.estimatedHeadingHeight || newOptions.loaderHeight !== oldOptions.loaderHeight || newOptions.dropIndicatorThickness !== oldOptions.dropIndicatorThickness || newOptions.gap !== oldOptions.gap || newOptions.padding !== oldOptions.padding;
  }
  update(invalidationContext) {
    let collection = this.virtualizer.collection;
    this.invalidateEverything = this.shouldInvalidateEverything(invalidationContext);
    if (this.invalidateEverything) {
      this.requestedRect = this.virtualizer.visibleRect.copy();
      this.layoutNodes.clear();
    }
    let options = invalidationContext.layoutOptions;
    var _options_rowHeight;
    this.rowHeight = (_options_rowHeight = options === null || options === void 0 ? void 0 : options.rowHeight) !== null && _options_rowHeight !== void 0 ? _options_rowHeight : this.rowHeight;
    var _options_estimatedRowHeight;
    this.estimatedRowHeight = (_options_estimatedRowHeight = options === null || options === void 0 ? void 0 : options.estimatedRowHeight) !== null && _options_estimatedRowHeight !== void 0 ? _options_estimatedRowHeight : this.estimatedRowHeight;
    var _options_headingHeight;
    this.headingHeight = (_options_headingHeight = options === null || options === void 0 ? void 0 : options.headingHeight) !== null && _options_headingHeight !== void 0 ? _options_headingHeight : this.headingHeight;
    var _options_estimatedHeadingHeight;
    this.estimatedHeadingHeight = (_options_estimatedHeadingHeight = options === null || options === void 0 ? void 0 : options.estimatedHeadingHeight) !== null && _options_estimatedHeadingHeight !== void 0 ? _options_estimatedHeadingHeight : this.estimatedHeadingHeight;
    var _options_loaderHeight;
    this.loaderHeight = (_options_loaderHeight = options === null || options === void 0 ? void 0 : options.loaderHeight) !== null && _options_loaderHeight !== void 0 ? _options_loaderHeight : this.loaderHeight;
    var _options_dropIndicatorThickness;
    this.dropIndicatorThickness = (_options_dropIndicatorThickness = options === null || options === void 0 ? void 0 : options.dropIndicatorThickness) !== null && _options_dropIndicatorThickness !== void 0 ? _options_dropIndicatorThickness : this.dropIndicatorThickness;
    var _options_gap;
    this.gap = (_options_gap = options === null || options === void 0 ? void 0 : options.gap) !== null && _options_gap !== void 0 ? _options_gap : this.gap;
    var _options_padding;
    this.padding = (_options_padding = options === null || options === void 0 ? void 0 : options.padding) !== null && _options_padding !== void 0 ? _options_padding : this.padding;
    this.rootNodes = this.buildCollection();
    if (this.lastCollection && collection !== this.lastCollection) {
      for (let key of this.lastCollection.getKeys()) if (!collection.getItem(key)) {
        let layoutNode = this.layoutNodes.get(key);
        if (layoutNode) this.layoutNodes.delete(key);
      }
    }
    this.lastCollection = collection;
    this.invalidateEverything = false;
    this.validRect = this.requestedRect.copy();
  }
  buildCollection(y = this.padding) {
    let collection = this.virtualizer.collection;
    let skipped = 0;
    let nodes = [];
    let isEmptyOrLoading = (collection === null || collection === void 0 ? void 0 : collection.size) === 0 || collection.size === 1 && collection.getItem(collection.getFirstKey()).type === "loader";
    if (isEmptyOrLoading) y = 0;
    for (let node of collection) {
      var _this_rowHeight, _ref;
      let rowHeight = ((_ref = (_this_rowHeight = this.rowHeight) !== null && _this_rowHeight !== void 0 ? _this_rowHeight : this.estimatedRowHeight) !== null && _ref !== void 0 ? _ref : $61ef60fc9b1041f4$var$DEFAULT_HEIGHT) + this.gap;
      if (node.type === "item" && y + rowHeight < this.requestedRect.y && !this.isValid(node, y)) {
        y += rowHeight;
        skipped++;
        continue;
      }
      let layoutNode = this.buildChild(node, this.padding, y, null);
      y = layoutNode.layoutInfo.rect.maxY + this.gap;
      nodes.push(layoutNode);
      if (node.type === "item" && y > this.requestedRect.maxY) {
        var _nodes_at;
        let itemsAfterRect = collection.size - (nodes.length + skipped);
        let lastNode = collection.getItem(collection.getLastKey());
        if ((lastNode === null || lastNode === void 0 ? void 0 : lastNode.type) === "loader") itemsAfterRect--;
        y += itemsAfterRect * rowHeight;
        if ((lastNode === null || lastNode === void 0 ? void 0 : lastNode.type) === "loader" && ((_nodes_at = nodes.at(-1)) === null || _nodes_at === void 0 ? void 0 : _nodes_at.layoutInfo.type) !== "loader") {
          let loader = this.buildChild(lastNode, this.padding, y, null);
          nodes.push(loader);
          y = loader.layoutInfo.rect.maxY;
        }
        break;
      }
    }
    y -= this.gap;
    y += isEmptyOrLoading ? 0 : this.padding;
    this.contentSize = new (0, $ee1bfa90a957fb8a$export$cb6da89c6af1a8ec)(this.virtualizer.visibleRect.width, y);
    return nodes;
  }
  isValid(node, y) {
    let cached = this.layoutNodes.get(node.key);
    return !this.invalidateEverything && !!cached && cached.node === node && y === cached.layoutInfo.rect.y && cached.layoutInfo.rect.intersects(this.validRect) && cached.validRect.containsRect(cached.layoutInfo.rect.intersection(this.requestedRect));
  }
  buildChild(node, x, y, parentKey) {
    if (this.isValid(node, y)) return this.layoutNodes.get(node.key);
    let layoutNode = this.buildNode(node, x, y);
    layoutNode.layoutInfo.parentKey = parentKey !== null && parentKey !== void 0 ? parentKey : null;
    layoutNode.layoutInfo.allowOverflow = true;
    this.layoutNodes.set(node.key, layoutNode);
    return layoutNode;
  }
  buildNode(node, x, y) {
    switch (node.type) {
      case "section":
        return this.buildSection(node, x, y);
      case "item":
        return this.buildItem(node, x, y);
      case "header":
        return this.buildSectionHeader(node, x, y);
      case "loader":
        return this.buildLoader(node, x, y);
      case "separator":
        return this.buildItem(node, x, y);
      default:
        throw new Error("Unsupported node type: " + node.type);
    }
  }
  buildLoader(node, x, y) {
    let rect = new (0, $60423f92c7f9ad87$export$c79fc6492f3af13d)(x, y, this.padding, 0);
    let layoutInfo = new (0, $d7fd61009c21d0bb$export$7e0eeb9da702a085)("loader", node.key, rect);
    rect.width = this.virtualizer.contentSize.width - this.padding - x;
    var _this_loaderHeight, _ref, _ref1;
    rect.height = node.props.isLoading ? (_ref1 = (_ref = (_this_loaderHeight = this.loaderHeight) !== null && _this_loaderHeight !== void 0 ? _this_loaderHeight : this.rowHeight) !== null && _ref !== void 0 ? _ref : this.estimatedRowHeight) !== null && _ref1 !== void 0 ? _ref1 : $61ef60fc9b1041f4$var$DEFAULT_HEIGHT : 0;
    return {
      layoutInfo,
      validRect: rect.intersection(this.requestedRect)
    };
  }
  buildSection(node, x, y) {
    let collection = this.virtualizer.collection;
    let width = this.virtualizer.visibleRect.width - this.padding;
    let rect = new (0, $60423f92c7f9ad87$export$c79fc6492f3af13d)(x, y, width - x, 0);
    let layoutInfo = new (0, $d7fd61009c21d0bb$export$7e0eeb9da702a085)(node.type, node.key, rect);
    let startY = y;
    let skipped = 0;
    let children = [];
    for (let child of (0, $c5a24bc478652b5f$export$1005530eda016c13)(node, collection)) {
      var _this_rowHeight, _ref;
      let rowHeight = ((_ref = (_this_rowHeight = this.rowHeight) !== null && _this_rowHeight !== void 0 ? _this_rowHeight : this.estimatedRowHeight) !== null && _ref !== void 0 ? _ref : $61ef60fc9b1041f4$var$DEFAULT_HEIGHT) + this.gap;
      if (y + rowHeight < this.requestedRect.y && !this.isValid(node, y)) {
        y += rowHeight;
        skipped++;
        continue;
      }
      let layoutNode = this.buildChild(child, x, y, layoutInfo.key);
      y = layoutNode.layoutInfo.rect.maxY + this.gap;
      children.push(layoutNode);
      if (y > this.requestedRect.maxY) {
        y += ([
          ...(0, $c5a24bc478652b5f$export$1005530eda016c13)(node, collection)
        ].length - (children.length + skipped)) * rowHeight;
        break;
      }
    }
    y -= this.gap;
    rect.height = y - startY;
    return {
      layoutInfo,
      children,
      validRect: layoutInfo.rect.intersection(this.requestedRect),
      node
    };
  }
  buildSectionHeader(node, x, y) {
    let width = this.virtualizer.visibleRect.width - this.padding;
    let rectHeight = this.headingHeight;
    let isEstimated = false;
    if (rectHeight == null) {
      let previousLayoutNode = this.layoutNodes.get(node.key);
      let previousLayoutInfo = previousLayoutNode === null || previousLayoutNode === void 0 ? void 0 : previousLayoutNode.layoutInfo;
      if (previousLayoutInfo) {
        let curNode = this.virtualizer.collection.getItem(node.key);
        let lastNode = this.lastCollection ? this.lastCollection.getItem(node.key) : null;
        rectHeight = previousLayoutInfo.rect.height;
        isEstimated = width !== previousLayoutInfo.rect.width || curNode !== lastNode || previousLayoutInfo.estimatedSize;
      } else {
        rectHeight = node.rendered ? this.estimatedHeadingHeight : 0;
        isEstimated = true;
      }
    }
    if (rectHeight == null) rectHeight = $61ef60fc9b1041f4$var$DEFAULT_HEIGHT;
    let headerRect = new (0, $60423f92c7f9ad87$export$c79fc6492f3af13d)(x, y, width - x, rectHeight);
    let header = new (0, $d7fd61009c21d0bb$export$7e0eeb9da702a085)("header", node.key, headerRect);
    header.estimatedSize = isEstimated;
    return {
      layoutInfo: header,
      children: [],
      validRect: header.rect.intersection(this.requestedRect),
      node
    };
  }
  buildItem(node, x, y) {
    let width = this.virtualizer.visibleRect.width - this.padding - x;
    let rectHeight = this.rowHeight;
    let isEstimated = false;
    if (rectHeight == null) {
      let previousLayoutNode = this.layoutNodes.get(node.key);
      if (previousLayoutNode) {
        rectHeight = previousLayoutNode.layoutInfo.rect.height;
        isEstimated = width !== previousLayoutNode.layoutInfo.rect.width || node !== previousLayoutNode.node || previousLayoutNode.layoutInfo.estimatedSize;
      } else {
        rectHeight = this.estimatedRowHeight;
        isEstimated = true;
      }
    }
    if (rectHeight == null) rectHeight = $61ef60fc9b1041f4$var$DEFAULT_HEIGHT;
    let rect = new (0, $60423f92c7f9ad87$export$c79fc6492f3af13d)(x, y, width, rectHeight);
    let layoutInfo = new (0, $d7fd61009c21d0bb$export$7e0eeb9da702a085)(node.type, node.key, rect);
    layoutInfo.estimatedSize = isEstimated;
    return {
      layoutInfo,
      children: [],
      validRect: layoutInfo.rect,
      node
    };
  }
  updateItemSize(key, size) {
    let layoutNode = this.layoutNodes.get(key);
    if (!layoutNode) return false;
    let collection = this.virtualizer.collection;
    let layoutInfo = layoutNode.layoutInfo;
    layoutInfo.estimatedSize = false;
    if (layoutInfo.rect.height !== size.height) {
      let newLayoutInfo = layoutInfo.copy();
      newLayoutInfo.rect.height = size.height;
      layoutNode.layoutInfo = newLayoutInfo;
      this.validRect.height = Math.min(this.validRect.height, layoutInfo.rect.y - this.validRect.y);
      this.requestedRect.height += newLayoutInfo.rect.height - layoutInfo.rect.height;
      this.updateLayoutNode(key, layoutInfo, newLayoutInfo);
      let node = layoutInfo.parentKey != null ? collection.getItem(layoutInfo.parentKey) : null;
      while (node) {
        this.updateLayoutNode(node.key, layoutInfo, newLayoutInfo);
        node = node.parentKey != null ? collection.getItem(node.parentKey) : null;
      }
      return true;
    }
    return false;
  }
  updateLayoutNode(key, oldLayoutInfo, newLayoutInfo) {
    let n = this.layoutNodes.get(key);
    if (n) {
      n.validRect = n.validRect.intersection(this.validRect);
      if (n.layoutInfo === oldLayoutInfo) n.layoutInfo = newLayoutInfo;
    }
  }
  getContentSize() {
    return this.contentSize;
  }
  getDropTargetFromPoint(x, y, isValidDropTarget) {
    x += this.virtualizer.visibleRect.x;
    y += this.virtualizer.visibleRect.y;
    let searchRect = new (0, $60423f92c7f9ad87$export$c79fc6492f3af13d)(x, Math.max(0, y - this.gap), 1, Math.max(1, this.gap * 2));
    let candidates = this.getVisibleLayoutInfos(searchRect);
    let key = null;
    let minDistance = Infinity;
    for (let candidate of candidates) {
      if (!candidate.rect.intersects(searchRect)) continue;
      let yDist = Math.abs(candidate.rect.y - y);
      let maxYDist = Math.abs(candidate.rect.maxY - y);
      let dist = Math.min(yDist, maxYDist);
      if (dist < minDistance) {
        minDistance = dist;
        key = candidate.key;
      }
    }
    if (key == null || this.virtualizer.collection.size === 0) return {
      type: "root"
    };
    let layoutInfo = this.getLayoutInfo(key);
    if (!layoutInfo) return null;
    let rect = layoutInfo.rect;
    let target = {
      type: "item",
      key: layoutInfo.key,
      dropPosition: "on"
    };
    if (!isValidDropTarget(target)) {
      if (y <= rect.y + rect.height / 2 && isValidDropTarget({
        ...target,
        dropPosition: "before"
      })) target.dropPosition = "before";
      else if (isValidDropTarget({
        ...target,
        dropPosition: "after"
      })) target.dropPosition = "after";
    } else if (y <= rect.y + 10 && isValidDropTarget({
      ...target,
      dropPosition: "before"
    })) target.dropPosition = "before";
    else if (y >= rect.maxY - 10 && isValidDropTarget({
      ...target,
      dropPosition: "after"
    })) target.dropPosition = "after";
    return target;
  }
  getDropTargetLayoutInfo(target) {
    let layoutInfo = this.getLayoutInfo(target.key);
    let rect;
    if (target.dropPosition === "before") rect = new (0, $60423f92c7f9ad87$export$c79fc6492f3af13d)(layoutInfo.rect.x, layoutInfo.rect.y - this.dropIndicatorThickness / 2, layoutInfo.rect.width, this.dropIndicatorThickness);
    else if (target.dropPosition === "after") rect = new (0, $60423f92c7f9ad87$export$c79fc6492f3af13d)(layoutInfo.rect.x, layoutInfo.rect.maxY - this.dropIndicatorThickness / 2, layoutInfo.rect.width, this.dropIndicatorThickness);
    else rect = layoutInfo.rect;
    return new (0, $d7fd61009c21d0bb$export$7e0eeb9da702a085)("dropIndicator", target.key + ":" + target.dropPosition, rect);
  }
  /**
  * Creates a new ListLayout with options. See the list of properties below for a description
  * of the options that can be provided.
  */
  constructor(options = {}) {
    super();
    var _options_rowHeight;
    this.rowHeight = (_options_rowHeight = options.rowHeight) !== null && _options_rowHeight !== void 0 ? _options_rowHeight : null;
    var _options_estimatedRowHeight;
    this.estimatedRowHeight = (_options_estimatedRowHeight = options.estimatedRowHeight) !== null && _options_estimatedRowHeight !== void 0 ? _options_estimatedRowHeight : null;
    var _options_headingHeight;
    this.headingHeight = (_options_headingHeight = options.headingHeight) !== null && _options_headingHeight !== void 0 ? _options_headingHeight : null;
    var _options_estimatedHeadingHeight;
    this.estimatedHeadingHeight = (_options_estimatedHeadingHeight = options.estimatedHeadingHeight) !== null && _options_estimatedHeadingHeight !== void 0 ? _options_estimatedHeadingHeight : null;
    var _options_loaderHeight;
    this.loaderHeight = (_options_loaderHeight = options.loaderHeight) !== null && _options_loaderHeight !== void 0 ? _options_loaderHeight : null;
    this.dropIndicatorThickness = options.dropIndicatorThickness || 2;
    this.gap = options.gap || 0;
    this.padding = options.padding || 0;
    this.layoutNodes = /* @__PURE__ */ new Map();
    this.rootNodes = [];
    this.lastCollection = null;
    this.invalidateEverything = false;
    this.validRect = new (0, $60423f92c7f9ad87$export$c79fc6492f3af13d)();
    this.requestedRect = new (0, $60423f92c7f9ad87$export$c79fc6492f3af13d)();
    this.contentSize = new (0, $ee1bfa90a957fb8a$export$cb6da89c6af1a8ec)();
  }
};

// node_modules/@react-stately/layout/dist/TableLayout.mjs
var $a152112e902709bf$var$DEFAULT_ROW_HEIGHT = 48;
var $a152112e902709bf$export$62444c3c724b1b20 = class extends (0, $61ef60fc9b1041f4$export$cacbb3924155d68e) {
  // Backward compatibility for subclassing.
  get collection() {
    return this.virtualizer.collection;
  }
  columnsChanged(newCollection, oldCollection) {
    return !oldCollection || newCollection.columns !== oldCollection.columns && newCollection.columns.length !== oldCollection.columns.length || newCollection.columns.some((c, i) => c.key !== oldCollection.columns[i].key || c.props.width !== oldCollection.columns[i].props.width || c.props.minWidth !== oldCollection.columns[i].props.minWidth || c.props.maxWidth !== oldCollection.columns[i].props.maxWidth);
  }
  shouldInvalidateLayoutOptions(newOptions, oldOptions) {
    return newOptions.columnWidths !== oldOptions.columnWidths || super.shouldInvalidateLayoutOptions(newOptions, oldOptions);
  }
  update(invalidationContext) {
    var _invalidationContext_layoutOptions;
    let newCollection = this.virtualizer.collection;
    if ((_invalidationContext_layoutOptions = invalidationContext.layoutOptions) === null || _invalidationContext_layoutOptions === void 0 ? void 0 : _invalidationContext_layoutOptions.columnWidths) {
      if (invalidationContext.layoutOptions.columnWidths !== this.columnWidths) {
        this.columnWidths = invalidationContext.layoutOptions.columnWidths;
        invalidationContext.sizeChanged = true;
      }
    } else if (invalidationContext.sizeChanged || this.columnsChanged(newCollection, this.lastCollection)) {
      let columnLayout = new (0, $a9e7ae544a4e41dd$export$7ff77a162970b30e)({});
      this.columnWidths = columnLayout.buildColumnWidths(this.virtualizer.visibleRect.width - this.padding * 2, newCollection, /* @__PURE__ */ new Map());
      invalidationContext.sizeChanged = true;
    }
    super.update(invalidationContext);
  }
  buildCollection() {
    var _collection_head;
    this.stickyColumnIndices = [];
    let collection = this.virtualizer.collection;
    if (((_collection_head = collection.head) === null || _collection_head === void 0 ? void 0 : _collection_head.key) === -1) return [];
    for (let column of collection.columns)
      if (this.isStickyColumn(column) || collection.rowHeaderColumnKeys.has(column.key)) this.stickyColumnIndices.push(column.index);
    let header = this.buildTableHeader();
    this.layoutNodes.set(header.layoutInfo.key, header);
    let body = this.buildBody(header.layoutInfo.rect.maxY + this.gap);
    this.lastPersistedKeys = null;
    body.layoutInfo.rect.width = Math.max(header.layoutInfo.rect.width, body.layoutInfo.rect.width);
    this.contentSize = new (0, $ee1bfa90a957fb8a$export$cb6da89c6af1a8ec)(body.layoutInfo.rect.width + this.padding * 2, body.layoutInfo.rect.maxY + this.padding);
    return [
      header,
      body
    ];
  }
  buildTableHeader() {
    var _collection_head;
    let collection = this.virtualizer.collection;
    let rect = new (0, $60423f92c7f9ad87$export$c79fc6492f3af13d)(this.padding, this.padding, 0, 0);
    var _collection_head_key;
    let layoutInfo = new (0, $d7fd61009c21d0bb$export$7e0eeb9da702a085)("header", (_collection_head_key = (_collection_head = collection.head) === null || _collection_head === void 0 ? void 0 : _collection_head.key) !== null && _collection_head_key !== void 0 ? _collection_head_key : "header", rect);
    layoutInfo.isSticky = true;
    layoutInfo.zIndex = 1;
    let y = this.padding;
    let width = 0;
    let children = [];
    for (let headerRow of collection.headerRows) {
      let layoutNode = this.buildChild(headerRow, this.padding, y, layoutInfo.key);
      layoutNode.layoutInfo.parentKey = layoutInfo.key;
      y = layoutNode.layoutInfo.rect.maxY;
      width = Math.max(width, layoutNode.layoutInfo.rect.width);
      layoutNode.index = children.length;
      children.push(layoutNode);
    }
    rect.width = width;
    rect.height = y - this.padding;
    return {
      layoutInfo,
      children,
      validRect: layoutInfo.rect,
      node: collection.head
    };
  }
  buildHeaderRow(headerRow, x, y) {
    let rect = new (0, $60423f92c7f9ad87$export$c79fc6492f3af13d)(x, y, 0, 0);
    let row = new (0, $d7fd61009c21d0bb$export$7e0eeb9da702a085)("headerrow", headerRow.key, rect);
    let height = 0;
    let columns = [];
    for (let cell of (0, $c5a24bc478652b5f$export$1005530eda016c13)(headerRow, this.virtualizer.collection)) {
      let layoutNode = this.buildChild(cell, x, y, row.key);
      layoutNode.layoutInfo.parentKey = row.key;
      x = layoutNode.layoutInfo.rect.maxX;
      height = Math.max(height, layoutNode.layoutInfo.rect.height);
      layoutNode.index = columns.length;
      columns.push(layoutNode);
    }
    for (let [i, layout] of columns.entries()) layout.layoutInfo.zIndex = columns.length - i + 1;
    this.setChildHeights(columns, height);
    rect.height = height;
    rect.width = x - rect.x;
    return {
      layoutInfo: row,
      children: columns,
      validRect: rect,
      node: headerRow
    };
  }
  setChildHeights(children, height) {
    for (let child of children) if (child.layoutInfo.rect.height !== height) {
      child.layoutInfo = child.layoutInfo.copy();
      child.layoutInfo.rect.height = height;
    }
  }
  // used to get the column widths when rendering to the DOM
  getRenderedColumnWidth(node) {
    let collection = this.virtualizer.collection;
    var _node_colSpan;
    let colSpan = (_node_colSpan = node.colSpan) !== null && _node_colSpan !== void 0 ? _node_colSpan : 1;
    var _node_colIndex;
    let colIndex = (_node_colIndex = node.colIndex) !== null && _node_colIndex !== void 0 ? _node_colIndex : node.index;
    let width = 0;
    for (let i = colIndex; i < colIndex + colSpan; i++) {
      let column = collection.columns[i];
      var _this_columnWidths_get;
      if ((column === null || column === void 0 ? void 0 : column.key) != null) width += (_this_columnWidths_get = this.columnWidths.get(column.key)) !== null && _this_columnWidths_get !== void 0 ? _this_columnWidths_get : 0;
    }
    return width;
  }
  getEstimatedHeight(node, width, height, estimatedHeight) {
    let isEstimated = false;
    if (height == null) {
      let previousLayoutNode = this.layoutNodes.get(node.key);
      if (previousLayoutNode) {
        height = previousLayoutNode.layoutInfo.rect.height;
        isEstimated = node !== previousLayoutNode.node || width !== previousLayoutNode.layoutInfo.rect.width || previousLayoutNode.layoutInfo.estimatedSize;
      } else {
        height = estimatedHeight !== null && estimatedHeight !== void 0 ? estimatedHeight : $a152112e902709bf$var$DEFAULT_ROW_HEIGHT;
        isEstimated = true;
      }
    }
    return {
      height,
      isEstimated
    };
  }
  getEstimatedRowHeight() {
    var _this_rowHeight, _ref;
    return (_ref = (_this_rowHeight = this.rowHeight) !== null && _this_rowHeight !== void 0 ? _this_rowHeight : this.estimatedRowHeight) !== null && _ref !== void 0 ? _ref : $a152112e902709bf$var$DEFAULT_ROW_HEIGHT;
  }
  buildColumn(node, x, y) {
    let width = this.getRenderedColumnWidth(node);
    var _this_headingHeight, _this_estimatedHeadingHeight;
    let { height, isEstimated } = this.getEstimatedHeight(node, width, (_this_headingHeight = this.headingHeight) !== null && _this_headingHeight !== void 0 ? _this_headingHeight : this.rowHeight, (_this_estimatedHeadingHeight = this.estimatedHeadingHeight) !== null && _this_estimatedHeadingHeight !== void 0 ? _this_estimatedHeadingHeight : this.estimatedRowHeight);
    let rect = new (0, $60423f92c7f9ad87$export$c79fc6492f3af13d)(x, y, width, height);
    let layoutInfo = new (0, $d7fd61009c21d0bb$export$7e0eeb9da702a085)(node.type, node.key, rect);
    layoutInfo.isSticky = this.isStickyColumn(node);
    layoutInfo.zIndex = layoutInfo.isSticky ? 2 : 1;
    layoutInfo.estimatedSize = isEstimated;
    return {
      layoutInfo,
      children: [],
      validRect: layoutInfo.rect,
      node
    };
  }
  // For subclasses.
  // eslint-disable-next-line
  isStickyColumn(node) {
    return false;
  }
  buildBody(y) {
    let collection = this.virtualizer.collection;
    let rect = new (0, $60423f92c7f9ad87$export$c79fc6492f3af13d)(this.padding, y, 0, 0);
    let layoutInfo = new (0, $d7fd61009c21d0bb$export$7e0eeb9da702a085)("rowgroup", collection.body.key, rect);
    let startY = y;
    let skipped = 0;
    let width = 0;
    let children = [];
    let rowHeight = this.getEstimatedRowHeight() + this.gap;
    let childNodes = (0, $c5a24bc478652b5f$export$1005530eda016c13)(collection.body, collection);
    for (let node of childNodes) {
      if (y + rowHeight < this.requestedRect.y && !this.isValid(node, y)) {
        y += rowHeight;
        skipped++;
        continue;
      }
      let layoutNode = this.buildChild(node, this.padding, y, layoutInfo.key);
      layoutNode.layoutInfo.parentKey = layoutInfo.key;
      layoutNode.index = children.length;
      y = layoutNode.layoutInfo.rect.maxY + this.gap;
      width = Math.max(width, layoutNode.layoutInfo.rect.width);
      children.push(layoutNode);
      if (y > this.requestedRect.maxY) {
        var _children_at;
        let rowsAfterRect = collection.size - (children.length + skipped);
        let lastNode = (0, $c5a24bc478652b5f$export$7475b2c64539e4cf)(childNodes);
        if ((lastNode === null || lastNode === void 0 ? void 0 : lastNode.type) === "loader") rowsAfterRect--;
        y += rowsAfterRect * rowHeight;
        if ((lastNode === null || lastNode === void 0 ? void 0 : lastNode.type) === "loader" && ((_children_at = children.at(-1)) === null || _children_at === void 0 ? void 0 : _children_at.layoutInfo.type) !== "loader") {
          let loader = this.buildChild(lastNode, this.padding, y, layoutInfo.key);
          loader.layoutInfo.parentKey = layoutInfo.key;
          loader.index = collection.size;
          width = Math.max(width, loader.layoutInfo.rect.width);
          children.push(loader);
          y = loader.layoutInfo.rect.maxY;
        }
        break;
      }
    }
    let isEmptyOrLoading = (collection === null || collection === void 0 ? void 0 : collection.size) === 0 || collection.size === 1 && collection.getItem(collection.getFirstKey()).type === "loader";
    if (isEmptyOrLoading) y = this.virtualizer.visibleRect.maxY;
    else y -= this.gap;
    rect.width = width;
    rect.height = y - startY;
    return {
      layoutInfo,
      children,
      validRect: layoutInfo.rect.intersection(this.requestedRect),
      node: collection.body
    };
  }
  buildNode(node, x, y) {
    switch (node.type) {
      case "headerrow":
        return this.buildHeaderRow(node, x, y);
      case "item":
        return this.buildRow(node, x, y);
      case "column":
      case "placeholder":
        return this.buildColumn(node, x, y);
      case "cell":
        return this.buildCell(node, x, y);
      case "loader":
        return this.buildLoader(node, x, y);
      default:
        throw new Error("Unknown node type " + node.type);
    }
  }
  buildRow(node, x, y) {
    var _collection_head;
    let collection = this.virtualizer.collection;
    let rect = new (0, $60423f92c7f9ad87$export$c79fc6492f3af13d)(x, y, 0, 0);
    let layoutInfo = new (0, $d7fd61009c21d0bb$export$7e0eeb9da702a085)("row", node.key, rect);
    let children = [];
    let height = 0;
    for (let child of (0, $c5a24bc478652b5f$export$1005530eda016c13)(node, collection)) if (child.type === "cell") {
      if (x > this.requestedRect.maxX) {
        let layoutNode = this.layoutNodes.get(child.key);
        if (layoutNode) {
          layoutNode.layoutInfo.rect.x = x;
          x += layoutNode.layoutInfo.rect.width;
        } else break;
      } else {
        let layoutNode = this.buildChild(child, x, y, layoutInfo.key);
        x = layoutNode.layoutInfo.rect.maxX;
        height = Math.max(height, layoutNode.layoutInfo.rect.height);
        layoutNode.index = children.length;
        children.push(layoutNode);
      }
    }
    this.setChildHeights(children, height);
    var _collection_head_key;
    rect.width = this.layoutNodes.get((_collection_head_key = (_collection_head = collection.head) === null || _collection_head === void 0 ? void 0 : _collection_head.key) !== null && _collection_head_key !== void 0 ? _collection_head_key : "header").layoutInfo.rect.width;
    rect.height = height;
    return {
      layoutInfo,
      children,
      validRect: rect.intersection(this.requestedRect),
      node
    };
  }
  buildCell(node, x, y) {
    let width = this.getRenderedColumnWidth(node);
    let { height, isEstimated } = this.getEstimatedHeight(node, width, this.rowHeight, this.estimatedRowHeight);
    let rect = new (0, $60423f92c7f9ad87$export$c79fc6492f3af13d)(x, y, width, height);
    let layoutInfo = new (0, $d7fd61009c21d0bb$export$7e0eeb9da702a085)(node.type, node.key, rect);
    layoutInfo.isSticky = this.isStickyColumn(node);
    layoutInfo.zIndex = layoutInfo.isSticky ? 2 : 1;
    layoutInfo.estimatedSize = isEstimated;
    return {
      layoutInfo,
      children: [],
      validRect: rect,
      node
    };
  }
  getVisibleLayoutInfos(rect) {
    if (rect.height > 1) {
      let rowHeight = this.getEstimatedRowHeight();
      rect.y = Math.floor(rect.y / rowHeight) * rowHeight;
      rect.height = Math.ceil(rect.height / rowHeight) * rowHeight;
    }
    this.layoutIfNeeded(rect);
    let res = [];
    this.buildPersistedIndices();
    for (let node of this.rootNodes) {
      res.push(node.layoutInfo);
      this.addVisibleLayoutInfos(res, node, rect);
    }
    return res;
  }
  addVisibleLayoutInfos(res, node, rect) {
    if (!node.children || node.children.length === 0) return;
    switch (node.layoutInfo.type) {
      case "header":
        for (let child of node.children) {
          res.push(child.layoutInfo);
          this.addVisibleLayoutInfos(res, child, rect);
        }
        break;
      case "rowgroup": {
        let firstVisibleRow = this.binarySearch(node.children, rect.topLeft, "y");
        let lastVisibleRow = this.binarySearch(node.children, rect.bottomRight, "y");
        let persistedRowIndices = this.persistedIndices.get(node.layoutInfo.key);
        let persistIndex = 0;
        while (persistedRowIndices && persistIndex < persistedRowIndices.length && persistedRowIndices[persistIndex] < firstVisibleRow) {
          let idx = persistedRowIndices[persistIndex];
          if (idx < node.children.length) {
            res.push(node.children[idx].layoutInfo);
            this.addVisibleLayoutInfos(res, node.children[idx], rect);
          }
          persistIndex++;
        }
        for (let i = firstVisibleRow; i <= lastVisibleRow; i++) {
          while (persistedRowIndices && persistIndex < persistedRowIndices.length && persistedRowIndices[persistIndex] < i) persistIndex++;
          res.push(node.children[i].layoutInfo);
          this.addVisibleLayoutInfos(res, node.children[i], rect);
        }
        while (persistedRowIndices && persistIndex < persistedRowIndices.length) {
          let idx = persistedRowIndices[persistIndex++];
          if (idx < node.children.length) {
            res.push(node.children[idx].layoutInfo);
            this.addVisibleLayoutInfos(res, node.children[idx], rect);
          }
        }
        let lastRow = node.children.at(-1);
        if ((lastRow === null || lastRow === void 0 ? void 0 : lastRow.layoutInfo.type) === "loader") res.push(lastRow.layoutInfo);
        break;
      }
      case "headerrow":
      case "row": {
        let firstVisibleCell = this.binarySearch(node.children, rect.topLeft, "x");
        let lastVisibleCell = this.binarySearch(node.children, rect.topRight, "x");
        let stickyIndex = 0;
        let persistedCellIndices = this.persistedIndices.get(node.layoutInfo.key) || this.stickyColumnIndices;
        while (stickyIndex < persistedCellIndices.length && persistedCellIndices[stickyIndex] < firstVisibleCell) {
          let idx = persistedCellIndices[stickyIndex];
          if (idx < node.children.length) res.push(node.children[idx].layoutInfo);
          stickyIndex++;
        }
        for (let i = firstVisibleCell; i <= lastVisibleCell; i++) {
          while (stickyIndex < persistedCellIndices.length && persistedCellIndices[stickyIndex] < i) stickyIndex++;
          res.push(node.children[i].layoutInfo);
        }
        while (stickyIndex < persistedCellIndices.length) {
          let idx = persistedCellIndices[stickyIndex++];
          if (idx < node.children.length) res.push(node.children[idx].layoutInfo);
        }
        break;
      }
      default:
        throw new Error("Unknown node type " + node.layoutInfo.type);
    }
  }
  binarySearch(items, point, axis) {
    let low = 0;
    let high = items.length - 1;
    while (low <= high) {
      let mid = low + high >> 1;
      let item = items[mid];
      if (axis === "x" && item.layoutInfo.rect.maxX <= point.x || axis === "y" && item.layoutInfo.rect.maxY <= point.y) low = mid + 1;
      else if (axis === "x" && item.layoutInfo.rect.x > point.x || axis === "y" && item.layoutInfo.rect.y > point.y) high = mid - 1;
      else return mid;
    }
    return Math.max(0, Math.min(items.length - 1, low));
  }
  buildPersistedIndices() {
    if (this.virtualizer.persistedKeys === this.lastPersistedKeys) return;
    this.lastPersistedKeys = this.virtualizer.persistedKeys;
    this.persistedIndices.clear();
    for (let key of this.virtualizer.persistedKeys) {
      var _this_layoutNodes_get;
      let layoutInfo = (_this_layoutNodes_get = this.layoutNodes.get(key)) === null || _this_layoutNodes_get === void 0 ? void 0 : _this_layoutNodes_get.layoutInfo;
      while (layoutInfo && layoutInfo.parentKey) {
        var _this_layoutNodes_get1, _this_layoutNodes_get2;
        let collectionNode = this.virtualizer.collection.getItem(layoutInfo.key);
        let indices = this.persistedIndices.get(layoutInfo.parentKey);
        if (!indices) {
          indices = (collectionNode === null || collectionNode === void 0 ? void 0 : collectionNode.type) === "cell" || (collectionNode === null || collectionNode === void 0 ? void 0 : collectionNode.type) === "column" ? [
            ...this.stickyColumnIndices
          ] : [];
          this.persistedIndices.set(layoutInfo.parentKey, indices);
        }
        let index = (_this_layoutNodes_get1 = this.layoutNodes.get(layoutInfo.key)) === null || _this_layoutNodes_get1 === void 0 ? void 0 : _this_layoutNodes_get1.index;
        if (index != null && !indices.includes(index)) indices.push(index);
        layoutInfo = (_this_layoutNodes_get2 = this.layoutNodes.get(layoutInfo.parentKey)) === null || _this_layoutNodes_get2 === void 0 ? void 0 : _this_layoutNodes_get2.layoutInfo;
      }
    }
    for (let indices of this.persistedIndices.values()) indices.sort((a, b) => a - b);
  }
  getDropTargetFromPoint(x, y, isValidDropTarget) {
    x += this.virtualizer.visibleRect.x;
    y += this.virtualizer.visibleRect.y;
    let searchRect = new (0, $60423f92c7f9ad87$export$c79fc6492f3af13d)(x, Math.max(0, y - this.gap), 1, Math.max(1, this.gap * 2));
    let candidates = this.getVisibleLayoutInfos(searchRect);
    let key = null;
    let minDistance = Infinity;
    for (let candidate of candidates) {
      if (candidate.type !== "row" || !candidate.rect.intersects(searchRect)) continue;
      let yDist = Math.abs(candidate.rect.y - y);
      let maxYDist = Math.abs(candidate.rect.maxY - y);
      let dist = Math.min(yDist, maxYDist);
      if (dist < minDistance) {
        minDistance = dist;
        key = candidate.key;
      }
    }
    if (key == null || this.virtualizer.collection.size === 0) return {
      type: "root"
    };
    let layoutInfo = this.getLayoutInfo(key);
    if (!layoutInfo) return null;
    let rect = layoutInfo.rect;
    let target = {
      type: "item",
      key: layoutInfo.key,
      dropPosition: "on"
    };
    if (!isValidDropTarget(target)) {
      if (y <= rect.y + rect.height / 2 && isValidDropTarget({
        ...target,
        dropPosition: "before"
      })) target.dropPosition = "before";
      else if (isValidDropTarget({
        ...target,
        dropPosition: "after"
      })) target.dropPosition = "after";
    } else if (y <= rect.y + 10 && isValidDropTarget({
      ...target,
      dropPosition: "before"
    })) target.dropPosition = "before";
    else if (y >= rect.maxY - 10 && isValidDropTarget({
      ...target,
      dropPosition: "after"
    })) target.dropPosition = "after";
    return target;
  }
  getDropTargetLayoutInfo(target) {
    let layoutInfo = super.getDropTargetLayoutInfo(target);
    layoutInfo.parentKey = this.virtualizer.collection.body.key;
    return layoutInfo;
  }
  constructor(options) {
    super(options), this.lastCollection = null, this.columnWidths = /* @__PURE__ */ new Map(), this.lastPersistedKeys = null, this.persistedIndices = /* @__PURE__ */ new Map();
    this.stickyColumnIndices = [];
  }
};

// node_modules/@react-stately/layout/dist/WaterfallLayout.mjs
var $f483179558aa907f$var$WaterfallLayoutInfo = class extends (0, $d7fd61009c21d0bb$export$7e0eeb9da702a085) {
  copy() {
    let res = super.copy();
    res.column = this.column;
    return res;
  }
  constructor(...args) {
    super(...args), this.column = 0;
  }
};
var $f483179558aa907f$var$DEFAULT_OPTIONS = {
  minItemSize: new (0, $ee1bfa90a957fb8a$export$cb6da89c6af1a8ec)(200, 200),
  maxItemSize: new (0, $ee1bfa90a957fb8a$export$cb6da89c6af1a8ec)(Infinity, Infinity),
  minSpace: new (0, $ee1bfa90a957fb8a$export$cb6da89c6af1a8ec)(18, 18),
  maxColumns: Infinity,
  dropIndicatorThickness: 2
};
var $f483179558aa907f$export$e9f7cda058ba8df8 = class extends (0, $c74cda7d31af1253$export$c84671f46d6a1ca) {
  shouldInvalidateLayoutOptions(newOptions, oldOptions) {
    return newOptions.maxColumns !== oldOptions.maxColumns || newOptions.dropIndicatorThickness !== oldOptions.dropIndicatorThickness || !(newOptions.minItemSize || $f483179558aa907f$var$DEFAULT_OPTIONS.minItemSize).equals(oldOptions.minItemSize || $f483179558aa907f$var$DEFAULT_OPTIONS.minItemSize) || !(newOptions.maxItemSize || $f483179558aa907f$var$DEFAULT_OPTIONS.maxItemSize).equals(oldOptions.maxItemSize || $f483179558aa907f$var$DEFAULT_OPTIONS.maxItemSize) || !(newOptions.minSpace || $f483179558aa907f$var$DEFAULT_OPTIONS.minSpace).equals(oldOptions.minSpace || $f483179558aa907f$var$DEFAULT_OPTIONS.minSpace);
  }
  update(invalidationContext) {
    let { minItemSize = $f483179558aa907f$var$DEFAULT_OPTIONS.minItemSize, maxItemSize = $f483179558aa907f$var$DEFAULT_OPTIONS.maxItemSize, minSpace = $f483179558aa907f$var$DEFAULT_OPTIONS.minSpace, maxColumns = $f483179558aa907f$var$DEFAULT_OPTIONS.maxColumns, dropIndicatorThickness = $f483179558aa907f$var$DEFAULT_OPTIONS.dropIndicatorThickness } = invalidationContext.layoutOptions || {};
    this.dropIndicatorThickness = dropIndicatorThickness;
    let visibleWidth = this.virtualizer.visibleRect.width;
    let maxItemWidth = Math.min(maxItemSize.width, visibleWidth);
    let maxItemHeight = Number.isFinite(maxItemSize.height) ? maxItemSize.height : Math.floor(minItemSize.height / minItemSize.width * maxItemWidth);
    let columns = Math.floor(visibleWidth / (minItemSize.width + minSpace.width));
    let numColumns = Math.max(1, Math.min(maxColumns, columns));
    let width = visibleWidth - minSpace.width * Math.max(0, numColumns);
    let itemWidth = Math.floor(width / numColumns);
    itemWidth = Math.max(minItemSize.width, Math.min(maxItemWidth, itemWidth));
    let t = (itemWidth - minItemSize.width) / Math.max(1, maxItemWidth - minItemSize.width);
    let itemHeight = minItemSize.height + Math.floor((maxItemHeight - minItemSize.height) * t);
    itemHeight = Math.max(minItemSize.height, Math.min(maxItemHeight, itemHeight));
    let horizontalSpacing = Math.floor((visibleWidth - numColumns * itemWidth) / (numColumns + 1));
    let columnHeights = Array(numColumns).fill(minSpace.height);
    let newLayoutInfos = /* @__PURE__ */ new Map();
    let addNode = (key, node) => {
      let oldLayoutInfo = this.layoutInfos.get(key);
      let height = itemHeight;
      let estimatedSize = true;
      if (oldLayoutInfo) {
        height = oldLayoutInfo.rect.height;
        estimatedSize = invalidationContext.sizeChanged || oldLayoutInfo.estimatedSize || oldLayoutInfo.content !== node;
      }
      let prevColumn = numColumns === this.numColumns && oldLayoutInfo && oldLayoutInfo.rect.y < this.virtualizer.visibleRect.maxY ? oldLayoutInfo.column : void 0;
      let column = prevColumn !== null && prevColumn !== void 0 ? prevColumn : columnHeights.reduce((minIndex, h, i) => h < columnHeights[minIndex] ? i : minIndex, 0);
      let x = horizontalSpacing + column * (itemWidth + horizontalSpacing);
      let y = columnHeights[column];
      let rect = new (0, $60423f92c7f9ad87$export$c79fc6492f3af13d)(x, y, itemWidth, height);
      let layoutInfo = new $f483179558aa907f$var$WaterfallLayoutInfo(node.type, key, rect);
      layoutInfo.estimatedSize = estimatedSize;
      layoutInfo.allowOverflow = true;
      layoutInfo.content = node;
      layoutInfo.column = column;
      newLayoutInfos.set(key, layoutInfo);
      columnHeights[column] += layoutInfo.rect.height + minSpace.height;
    };
    let collection = this.virtualizer.collection;
    let skeletonCount = 0;
    for (let node of collection) {
      if (node.type === "skeleton") {
        let startingHeights = [
          ...columnHeights
        ];
        while (!columnHeights.every((h, i) => h !== startingHeights[i]) || Math.min(...columnHeights) < this.virtualizer.visibleRect.height) {
          var _this_layoutInfos_get;
          let key = `${node.key}-${skeletonCount++}`;
          let content = ((_this_layoutInfos_get = this.layoutInfos.get(key)) === null || _this_layoutInfos_get === void 0 ? void 0 : _this_layoutInfos_get.content) || {
            ...node
          };
          addNode(key, content);
        }
        break;
      } else if (node.type !== "loader") addNode(node.key, node);
    }
    let lastNode = collection.getItem(collection.getLastKey());
    if ((lastNode === null || lastNode === void 0 ? void 0 : lastNode.type) === "loader") {
      let rect = new (0, $60423f92c7f9ad87$export$c79fc6492f3af13d)(horizontalSpacing, columnHeights[0], itemWidth, 0);
      let layoutInfo = new (0, $d7fd61009c21d0bb$export$7e0eeb9da702a085)("loader", lastNode.key, rect);
      newLayoutInfos.set(lastNode.key, layoutInfo);
    }
    let isEmptyOrLoading = (collection === null || collection === void 0 ? void 0 : collection.size) === 0 || collection.size === 1 && collection.getItem(collection.getFirstKey()).type === "loader";
    let maxHeight = isEmptyOrLoading ? 0 : Math.max(...columnHeights);
    this.contentSize = new (0, $ee1bfa90a957fb8a$export$cb6da89c6af1a8ec)(this.virtualizer.visibleRect.width, maxHeight);
    this.layoutInfos = newLayoutInfos;
    this.numColumns = numColumns;
  }
  getLayoutInfo(key) {
    return this.layoutInfos.get(key);
  }
  getContentSize() {
    return this.contentSize;
  }
  getVisibleLayoutInfos(rect) {
    let layoutInfos = [];
    for (let layoutInfo of this.layoutInfos.values()) if (layoutInfo.rect.intersects(rect) || this.virtualizer.isPersistedKey(layoutInfo.key) || layoutInfo.type === "loader") layoutInfos.push(layoutInfo);
    return layoutInfos;
  }
  updateItemSize(key, size) {
    let layoutInfo = this.layoutInfos.get(key);
    if (!size || !layoutInfo) return false;
    if (size.height !== layoutInfo.rect.height) {
      let newLayoutInfo = layoutInfo.copy();
      newLayoutInfo.rect.height = size.height;
      newLayoutInfo.estimatedSize = false;
      this.layoutInfos.set(key, newLayoutInfo);
      return true;
    }
    return false;
  }
  // Override keyboard navigation to work spatially.
  getKeyRightOf(key) {
    let layoutInfo = this.getLayoutInfo(key);
    if (!layoutInfo) return null;
    let rect = new (0, $60423f92c7f9ad87$export$c79fc6492f3af13d)(layoutInfo.rect.maxX, layoutInfo.rect.y, this.virtualizer.visibleRect.maxX - layoutInfo.rect.maxX, layoutInfo.rect.height);
    let layoutInfos = this.getVisibleLayoutInfos(rect);
    let bestKey = null;
    let bestDistance = Infinity;
    for (let candidate of layoutInfos) {
      if (candidate.key === key) continue;
      let deltaX = candidate.rect.x - rect.x;
      let overlapY = Math.min(candidate.rect.maxY, rect.maxY) - Math.max(candidate.rect.y, rect.y);
      let distance = deltaX - overlapY;
      if (distance < bestDistance) {
        bestDistance = distance;
        bestKey = candidate.key;
      }
    }
    return bestKey;
  }
  getKeyLeftOf(key) {
    let layoutInfo = this.getLayoutInfo(key);
    if (!layoutInfo) return null;
    let rect = new (0, $60423f92c7f9ad87$export$c79fc6492f3af13d)(0, layoutInfo.rect.y, layoutInfo.rect.x, layoutInfo.rect.height);
    let layoutInfos = this.getVisibleLayoutInfos(rect);
    let bestKey = null;
    let bestDistance = Infinity;
    for (let candidate of layoutInfos) {
      if (candidate.key === key) continue;
      let deltaX = rect.maxX - candidate.rect.maxX;
      let overlapY = Math.min(candidate.rect.maxY, rect.maxY) - Math.max(candidate.rect.y, rect.y);
      let distance = deltaX - overlapY;
      if (distance < bestDistance) {
        bestDistance = distance;
        bestKey = candidate.key;
      }
    }
    return bestKey;
  }
  // This overrides the default behavior of shift selection to work spatially
  // rather than following the order of the items in the collection (which may appear unpredictable).
  getKeyRange(from, to) {
    let fromLayoutInfo = this.getLayoutInfo(from);
    let toLayoutInfo = this.getLayoutInfo(to);
    if (!fromLayoutInfo || !toLayoutInfo) return [];
    let rect = fromLayoutInfo.rect.union(toLayoutInfo.rect);
    let keys = [];
    for (let layoutInfo of this.layoutInfos.values()) if (rect.intersection(layoutInfo.rect).area > layoutInfo.rect.area / 2) keys.push(layoutInfo.key);
    return keys;
  }
  getDropTargetFromPoint(x, y) {
    if (this.layoutInfos.size === 0) return {
      type: "root"
    };
    x += this.virtualizer.visibleRect.x;
    y += this.virtualizer.visibleRect.y;
    let key = this.virtualizer.keyAtPoint(new (0, $3041db3296945e6e$export$baf26146a414f24a)(x, y));
    if (key == null) return {
      type: "root"
    };
    return {
      type: "item",
      key,
      dropPosition: "on"
    };
  }
  constructor(...args) {
    super(...args), this.contentSize = new (0, $ee1bfa90a957fb8a$export$cb6da89c6af1a8ec)(), this.layoutInfos = /* @__PURE__ */ new Map(), this.numColumns = 0, this.dropIndicatorThickness = 2;
  }
};

// node_modules/react-aria-components/dist/TableLayout.mjs
var import_react226 = __toESM(require_react(), 1);
var $2f9e0b0e857fd9ba$export$62444c3c724b1b20 = class extends (0, $a152112e902709bf$export$62444c3c724b1b20) {
  // Invalidate the layout whenever the column widths change.
  useLayoutOptions() {
    let colResizeState = (0, import_react226.useContext)((0, $1910c06f0ca9905e$export$a2680a798823803c));
    return (0, import_react226.useMemo)(() => ({
      columnWidths: colResizeState === null || colResizeState === void 0 ? void 0 : colResizeState.columnWidths
    }), [
      colResizeState === null || colResizeState === void 0 ? void 0 : colResizeState.columnWidths
    ]);
  }
};

// node_modules/react-aria-components/dist/Tabs.mjs
var import_react227 = __toESM(require_react(), 1);
var $5e8ad37a45e1c704$export$cfa7aa87c26e7d1f = (0, import_react227.createContext)(null);
var $5e8ad37a45e1c704$export$364712098d2aa57c = (0, import_react227.createContext)(null);
var $5e8ad37a45e1c704$export$b2539bed5023c21c = (0, import_react227.forwardRef)(function Tabs(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $5e8ad37a45e1c704$export$cfa7aa87c26e7d1f);
  let { children, orientation = "horizontal" } = props;
  children = (0, import_react227.useMemo)(() => typeof children === "function" ? children({
    orientation,
    defaultChildren: null
  }) : children, [
    children,
    orientation
  ]);
  return (0, import_react227.default).createElement((0, $e1995378a142960e$export$bf788dd355e3a401), {
    content: children
  }, (collection) => (0, import_react227.default).createElement($5e8ad37a45e1c704$var$TabsInner, {
    props,
    collection,
    tabsRef: ref
  }));
});
function $5e8ad37a45e1c704$var$TabsInner({ props, tabsRef: ref, collection }) {
  let { orientation = "horizontal" } = props;
  let state = (0, $76f919a04c5a7d14$export$4ba071daf4e486)({
    ...props,
    collection,
    children: void 0
  });
  let { focusProps, isFocused, isFocusVisible } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)({
    within: true
  });
  let values = (0, import_react227.useMemo)(() => ({
    orientation,
    isFocusWithin: isFocused,
    isFocusVisible
  }), [
    orientation,
    isFocused,
    isFocusVisible
  ]);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    defaultClassName: "react-aria-Tabs",
    values
  });
  return (0, import_react227.default).createElement("div", {
    ...(0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props),
    ...focusProps,
    ...renderProps,
    ref,
    slot: props.slot || void 0,
    "data-focused": isFocused || void 0,
    "data-orientation": orientation,
    "data-focus-visible": isFocusVisible || void 0,
    "data-disabled": state.isDisabled || void 0
  }, (0, import_react227.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        $5e8ad37a45e1c704$export$cfa7aa87c26e7d1f,
        props
      ],
      [
        $5e8ad37a45e1c704$export$364712098d2aa57c,
        state
      ]
    ]
  }, renderProps.children));
}
var $5e8ad37a45e1c704$export$e51a686c67fdaa2d = (0, import_react227.forwardRef)(function TabList(props, ref) {
  let state = (0, import_react227.useContext)($5e8ad37a45e1c704$export$364712098d2aa57c);
  return state ? (0, import_react227.default).createElement($5e8ad37a45e1c704$var$TabListInner, {
    props,
    forwardedRef: ref
  }) : (0, import_react227.default).createElement((0, $e1995378a142960e$export$fb8073518f34e6ec), props);
});
function $5e8ad37a45e1c704$var$TabListInner({ props, forwardedRef: ref }) {
  let state = (0, import_react227.useContext)($5e8ad37a45e1c704$export$364712098d2aa57c);
  let { CollectionRoot } = (0, import_react227.useContext)((0, $7135fc7d473fd974$export$4feb769f8ddf26c5));
  let { orientation = "horizontal", keyboardActivation = "automatic" } = (0, $64fa3d84918910a7$export$fabf2dc03a41866e)($5e8ad37a45e1c704$export$cfa7aa87c26e7d1f);
  let objectRef = (0, $df56164dff5785e2$export$4338b53315abf666)(ref);
  let { tabListProps } = (0, $58d314389b21fa3f$export$773e389e644c5874)({
    ...props,
    orientation,
    keyboardActivation
  }, state, objectRef);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    children: null,
    defaultClassName: "react-aria-TabList",
    values: {
      orientation,
      state
    }
  });
  let DOMProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  delete DOMProps.id;
  return (0, import_react227.default).createElement("div", {
    ...DOMProps,
    ...tabListProps,
    ref: objectRef,
    ...renderProps,
    "data-orientation": orientation || void 0
  }, (0, import_react227.default).createElement(CollectionRoot, {
    collection: state.collection,
    persistedKeys: (0, $7135fc7d473fd974$export$90e00781bc59d8f9)(state.selectionManager.focusedKey)
  }));
}
var $5e8ad37a45e1c704$export$3e41faf802a29e71 = (0, $e1995378a142960e$export$18af5c7a9e9b3664)("item", (props, forwardedRef, item) => {
  let state = (0, import_react227.useContext)($5e8ad37a45e1c704$export$364712098d2aa57c);
  let ref = (0, $df56164dff5785e2$export$4338b53315abf666)(forwardedRef);
  let { tabProps, isSelected, isDisabled, isPressed } = (0, $0175d55c2a017ebc$export$fdf4756d5b8ef90a)({
    key: item.key,
    ...props
  }, state, ref);
  let { focusProps, isFocused, isFocusVisible } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)();
  let { hoverProps, isHovered } = (0, $6179b936705e76d3$export$ae780daf29e6d456)({
    isDisabled,
    onHoverStart: props.onHoverStart,
    onHoverEnd: props.onHoverEnd,
    onHoverChange: props.onHoverChange
  });
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    id: void 0,
    children: item.rendered,
    defaultClassName: "react-aria-Tab",
    values: {
      isSelected,
      isDisabled,
      isFocused,
      isFocusVisible,
      isPressed,
      isHovered
    }
  });
  let ElementType = item.props.href ? "a" : "div";
  return (0, import_react227.default).createElement(ElementType, {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(tabProps, focusProps, hoverProps, renderProps),
    ref,
    "data-selected": isSelected || void 0,
    "data-disabled": isDisabled || void 0,
    "data-focused": isFocused || void 0,
    "data-focus-visible": isFocusVisible || void 0,
    "data-pressed": isPressed || void 0,
    "data-hovered": isHovered || void 0
  }, renderProps.children);
});
var $5e8ad37a45e1c704$export$3d96ec278d3efce4 = (0, $f39a9eba43920ace$export$86427a43e3e48ebb)(function TabPanel(props, forwardedRef) {
  const state = (0, import_react227.useContext)($5e8ad37a45e1c704$export$364712098d2aa57c);
  let ref = (0, $df56164dff5785e2$export$4338b53315abf666)(forwardedRef);
  let { tabPanelProps } = (0, $34bce698202e07cb$export$fae0121b5afe572d)(props, state, ref);
  let { focusProps, isFocused, isFocusVisible } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)();
  let isSelected = state.selectedKey === props.id;
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    defaultClassName: "react-aria-TabPanel",
    values: {
      isFocused,
      isFocusVisible,
      // @ts-ignore - compatibility with React < 19
      isInert: (0, $cdc5a6778b766db2$export$a9d04c5684123369)(!isSelected),
      state
    }
  });
  if (!isSelected && !props.shouldForceMount) return null;
  let DOMProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  delete DOMProps.id;
  let domProps = isSelected ? (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(DOMProps, tabPanelProps, focusProps, renderProps) : renderProps;
  return (0, import_react227.default).createElement("div", {
    ...domProps,
    ref,
    "data-focused": isFocused || void 0,
    "data-focus-visible": isFocusVisible || void 0,
    // @ts-ignore
    inert: (0, $cdc5a6778b766db2$export$a9d04c5684123369)(!isSelected),
    "data-inert": !isSelected ? "true" : void 0
  }, (0, import_react227.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        $5e8ad37a45e1c704$export$cfa7aa87c26e7d1f,
        null
      ],
      [
        $5e8ad37a45e1c704$export$364712098d2aa57c,
        null
      ]
    ]
  }, (0, import_react227.default).createElement((0, $7135fc7d473fd974$export$4feb769f8ddf26c5).Provider, {
    value: (0, $7135fc7d473fd974$export$a164736487e3f0ae)
  }, renderProps.children)));
});

// node_modules/react-aria-components/dist/TagGroup.mjs
var import_react228 = __toESM(require_react(), 1);
var $eaf9e70818b436db$export$5b07b5dd2cbd96e3 = (0, import_react228.createContext)(null);
var $eaf9e70818b436db$export$e755ce3685dd0ca9 = (0, import_react228.createContext)(null);
var $eaf9e70818b436db$export$67ea30858aaf75e3 = (0, import_react228.forwardRef)(function TagGroup(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $eaf9e70818b436db$export$5b07b5dd2cbd96e3);
  return (0, import_react228.default).createElement((0, $e1995378a142960e$export$bf788dd355e3a401), {
    content: props.children
  }, (collection) => (0, import_react228.default).createElement($eaf9e70818b436db$var$TagGroupInner, {
    props,
    forwardedRef: ref,
    collection
  }));
});
function $eaf9e70818b436db$var$TagGroupInner({ props, forwardedRef: ref, collection }) {
  let tagListRef = (0, import_react228.useRef)(null);
  let [labelRef, label] = (0, $64fa3d84918910a7$export$9d4c57ee4c6ffdd8)(!props["aria-label"] && !props["aria-labelledby"]);
  let state = (0, $e72dd72e1c76a225$export$2f645645f7bca764)({
    ...props,
    children: void 0,
    collection
  });
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  let domPropOverrides = Object.fromEntries(Object.entries(domProps).map(([k]) => [
    k,
    void 0
  ]));
  let { gridProps, labelProps, descriptionProps, errorMessageProps } = (0, $d7323bca8d074eeb$export$4f8b5cda58b7e8ff)({
    ...props,
    ...domPropOverrides,
    label
  }, state, tagListRef);
  var _props_className;
  return (0, import_react228.default).createElement("div", {
    ...domProps,
    ref,
    slot: props.slot || void 0,
    className: (_props_className = props.className) !== null && _props_className !== void 0 ? _props_className : "react-aria-TagGroup",
    style: props.style
  }, (0, import_react228.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        (0, $01b77f81d0f07f68$export$75b6ee27786ba447),
        {
          ...labelProps,
          elementType: "span",
          ref: labelRef
        }
      ],
      [
        $eaf9e70818b436db$export$e755ce3685dd0ca9,
        {
          ...gridProps,
          ref: tagListRef
        }
      ],
      [
        (0, $eed445e0843c11d0$export$7c5906fe4f1f2af2),
        state
      ],
      [
        (0, $514c0188e459b4c0$export$9afb8bc826b033ea),
        {
          slots: {
            description: descriptionProps,
            errorMessage: errorMessageProps
          }
        }
      ]
    ]
  }, props.children));
}
var $eaf9e70818b436db$export$f9fef0f55402315b = (0, import_react228.forwardRef)(function TagList(props, ref) {
  let state = (0, import_react228.useContext)((0, $eed445e0843c11d0$export$7c5906fe4f1f2af2));
  return state ? (0, import_react228.default).createElement($eaf9e70818b436db$var$TagListInner, {
    props,
    forwardedRef: ref
  }) : (0, import_react228.default).createElement((0, $e1995378a142960e$export$fb8073518f34e6ec), props);
});
function $eaf9e70818b436db$var$TagListInner({ props, forwardedRef }) {
  let state = (0, import_react228.useContext)((0, $eed445e0843c11d0$export$7c5906fe4f1f2af2));
  let { CollectionRoot } = (0, import_react228.useContext)((0, $7135fc7d473fd974$export$4feb769f8ddf26c5));
  let [gridProps, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, forwardedRef, $eaf9e70818b436db$export$e755ce3685dd0ca9);
  delete gridProps.items;
  delete gridProps.renderEmptyState;
  let { focusProps, isFocused, isFocusVisible } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)();
  let renderValues = {
    isEmpty: state.collection.size === 0,
    isFocused,
    isFocusVisible,
    state
  };
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    className: props.className,
    style: props.style,
    defaultClassName: "react-aria-TagList",
    values: renderValues
  });
  let persistedKeys = (0, $7135fc7d473fd974$export$90e00781bc59d8f9)(state.selectionManager.focusedKey);
  return (0, import_react228.default).createElement("div", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(gridProps, focusProps),
    ...renderProps,
    ref,
    "data-empty": state.collection.size === 0 || void 0,
    "data-focused": isFocused || void 0,
    "data-focus-visible": isFocusVisible || void 0
  }, state.collection.size === 0 && props.renderEmptyState ? props.renderEmptyState(renderValues) : (0, import_react228.default).createElement(CollectionRoot, {
    collection: state.collection,
    persistedKeys
  }));
}
var $eaf9e70818b436db$export$3288d34c523a1192 = (0, $e1995378a142960e$export$18af5c7a9e9b3664)("item", (props, forwardedRef, item) => {
  let state = (0, import_react228.useContext)((0, $eed445e0843c11d0$export$7c5906fe4f1f2af2));
  let ref = (0, $df56164dff5785e2$export$4338b53315abf666)(forwardedRef);
  let { focusProps, isFocusVisible } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)({
    within: false
  });
  let { rowProps, gridCellProps, removeButtonProps, ...states } = (0, $fc6126c82a4601f1$export$3f568fff7dff2f03)({
    item
  }, state, ref);
  let { hoverProps, isHovered } = (0, $6179b936705e76d3$export$ae780daf29e6d456)({
    isDisabled: !states.allowsSelection,
    onHoverStart: item.props.onHoverStart,
    onHoverChange: item.props.onHoverChange,
    onHoverEnd: item.props.onHoverEnd
  });
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    id: void 0,
    children: item.rendered,
    defaultClassName: "react-aria-Tag",
    values: {
      ...states,
      isFocusVisible,
      isHovered,
      selectionMode: state.selectionManager.selectionMode,
      selectionBehavior: state.selectionManager.selectionBehavior
    }
  });
  (0, import_react228.useEffect)(() => {
    if (!item.textValue && true) console.warn("A `textValue` prop is required for <Tag> elements with non-plain text children for accessibility.");
  }, [
    item.textValue
  ]);
  return (0, import_react228.default).createElement("div", {
    ref,
    ...renderProps,
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)((0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props), rowProps, focusProps, hoverProps),
    "data-selected": states.isSelected || void 0,
    "data-disabled": states.isDisabled || void 0,
    "data-hovered": isHovered || void 0,
    "data-focused": states.isFocused || void 0,
    "data-focus-visible": isFocusVisible || void 0,
    "data-pressed": states.isPressed || void 0,
    "data-allows-removing": states.allowsRemoving || void 0,
    "data-selection-mode": state.selectionManager.selectionMode === "none" ? void 0 : state.selectionManager.selectionMode
  }, (0, import_react228.default).createElement("div", {
    ...gridCellProps,
    style: {
      display: "contents"
    }
  }, (0, import_react228.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        (0, $d2b4bc8c273e7be6$export$24d547caef80ccd1),
        {
          slots: {
            remove: removeButtonProps
          }
        }
      ],
      [
        (0, $7135fc7d473fd974$export$4feb769f8ddf26c5),
        (0, $7135fc7d473fd974$export$a164736487e3f0ae)
      ]
    ]
  }, renderProps.children)));
});

// node_modules/react-aria-components/dist/Toast.mjs
var import_react_dom10 = __toESM(require_react_dom(), 1);
var import_react229 = __toESM(require_react(), 1);
var $692df8403b6ac2c7$export$e9e2a1fc7373c1e1 = (0, import_react229.createContext)(null);
var $692df8403b6ac2c7$export$2cbf5519fbeaa538 = (0, import_react229.forwardRef)(function ToastRegion(props, ref) {
  let isSSR = (0, $b5e257d569688ac6$export$535bd6ca7f90a273)();
  let state = (0, $77b352cf12efcf73$export$84726ef35ca2129a)(props.queue);
  let objectRef = (0, $df56164dff5785e2$export$4338b53315abf666)(ref);
  let { regionProps } = (0, $6cc546b19ee7130a$export$b8cbbb20a51697de)(props, state, objectRef);
  let { focusProps, isFocused, isFocusVisible } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)();
  let { hoverProps, isHovered } = (0, $6179b936705e76d3$export$ae780daf29e6d456)({});
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    children: void 0,
    defaultClassName: "react-aria-ToastRegion",
    values: {
      visibleToasts: state.visibleToasts,
      isHovered,
      isFocused,
      isFocusVisible
    }
  });
  let { direction } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let portalContainer;
  let { getContainer } = (0, $96b38030c423d352$export$9fc1347d4195ccb3)();
  if (!isSSR) {
    portalContainer = document.body;
    if (getContainer) portalContainer = getContainer();
  }
  let region = (0, import_react229.default).createElement($692df8403b6ac2c7$export$e9e2a1fc7373c1e1.Provider, {
    value: state
  }, (0, import_react229.default).createElement("div", {
    ...renderProps,
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(regionProps, focusProps, hoverProps),
    dir: direction,
    ref: objectRef,
    "data-hovered": isHovered || void 0,
    "data-focused": isFocused || void 0,
    "data-focus-visible": isFocusVisible || void 0
  }, typeof props.children === "function" ? (0, import_react229.default).createElement($692df8403b6ac2c7$export$c20d626a86a69756, {
    ...props,
    className: void 0,
    style: {
      display: "contents"
    }
  }, props.children) : props.children));
  return state.visibleToasts.length > 0 && portalContainer ? (0, import_react_dom10.createPortal)(region, portalContainer) : null;
});
var $692df8403b6ac2c7$export$c20d626a86a69756 = (0, import_react229.forwardRef)(function ToastList(props, ref) {
  let state = (0, import_react229.useContext)($692df8403b6ac2c7$export$e9e2a1fc7373c1e1);
  let { hoverProps, isHovered } = (0, $6179b936705e76d3$export$ae780daf29e6d456)({});
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    children: void 0,
    defaultClassName: "react-aria-ToastList",
    values: {
      visibleToasts: state.visibleToasts,
      isFocused: false,
      isFocusVisible: false,
      isHovered
    }
  });
  return (0, import_react229.default).createElement("ol", {
    ...hoverProps,
    ...renderProps,
    ref
  }, state.visibleToasts.map((toast) => (0, import_react229.default).createElement("li", {
    key: toast.key,
    style: {
      display: "contents"
    }
  }, props.children({
    toast
  }))));
});
var $692df8403b6ac2c7$export$8d8dc7d5f743331b = (0, import_react229.forwardRef)(function Toast(props, ref) {
  let state = (0, import_react229.useContext)($692df8403b6ac2c7$export$e9e2a1fc7373c1e1);
  let objectRef = (0, $df56164dff5785e2$export$4338b53315abf666)(ref);
  let { toastProps, contentProps, titleProps, descriptionProps, closeButtonProps } = (0, $d6542812f0669241$export$a407b657d3044108)(props, state, objectRef);
  let { focusProps, isFocused, isFocusVisible } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)();
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    defaultClassName: "react-aria-Toast",
    values: {
      toast: props.toast,
      isFocused,
      isFocusVisible
    }
  });
  return (0, import_react229.default).createElement("div", {
    ...renderProps,
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(toastProps, focusProps),
    ref: objectRef,
    "data-focused": isFocused || void 0,
    "data-focus-visible": isFocusVisible || void 0
  }, (0, import_react229.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        $692df8403b6ac2c7$export$3a0d85872d9f73f2,
        contentProps
      ],
      [
        (0, $514c0188e459b4c0$export$9afb8bc826b033ea),
        {
          slots: {
            [(0, $64fa3d84918910a7$export$c62b8e45d58ddad9)]: {},
            title: titleProps,
            description: descriptionProps
          }
        }
      ],
      [
        (0, $d2b4bc8c273e7be6$export$24d547caef80ccd1),
        {
          slots: {
            [(0, $64fa3d84918910a7$export$c62b8e45d58ddad9)]: {},
            close: closeButtonProps
          }
        }
      ]
    ]
  }, renderProps.children));
});
var $692df8403b6ac2c7$export$3a0d85872d9f73f2 = (0, import_react229.createContext)({});
var $692df8403b6ac2c7$export$b134a6cc89b08851 = (0, import_react229.forwardRef)(function ToastContent(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $692df8403b6ac2c7$export$3a0d85872d9f73f2);
  return (0, import_react229.default).createElement("div", {
    className: "react-aria-ToastContent",
    ...props,
    ref
  }, props.children);
});

// node_modules/react-aria-components/dist/ToggleButtonGroup.mjs
var import_react230 = __toESM(require_react(), 1);
var $84b7d8702d4ff4a8$export$298258635ae0dd97 = (0, import_react230.createContext)({});
var $84b7d8702d4ff4a8$export$a8a71863db173133 = (0, import_react230.createContext)(null);
var $84b7d8702d4ff4a8$export$40258cc1d95ff477 = (0, import_react230.forwardRef)(function ToggleButtonGroup(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $84b7d8702d4ff4a8$export$298258635ae0dd97);
  let state = (0, $ad999b7f496648d1$export$8deac67f4addf270)(props);
  let { groupProps } = (0, $4547d1bf40011fdf$export$dd5580ae642f110f)(props, state, ref);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    values: {
      isDisabled: state.isDisabled,
      state
    },
    defaultClassName: "react-aria-ToggleButtonGroup"
  });
  return (0, import_react230.default).createElement("div", {
    ...groupProps,
    ...renderProps,
    ref,
    slot: props.slot || void 0,
    "data-orientation": props.orientation || "horizontal",
    "data-disabled": props.isDisabled || void 0
  }, (0, import_react230.default).createElement($84b7d8702d4ff4a8$export$a8a71863db173133.Provider, {
    value: state
  }, renderProps.children));
});

// node_modules/react-aria-components/dist/ToggleButton.mjs
var import_react231 = __toESM(require_react(), 1);
var $efde0372d7a700fe$export$43506d75ebd2e218 = (0, import_react231.createContext)({});
var $efde0372d7a700fe$export$d2b052e7b4be1756 = (0, import_react231.forwardRef)(function ToggleButton(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $efde0372d7a700fe$export$43506d75ebd2e218);
  let groupState = (0, import_react231.useContext)((0, $84b7d8702d4ff4a8$export$a8a71863db173133));
  let state = (0, $3017fa7ffdddec74$export$8042c6c013fd5226)(groupState && props.id != null ? {
    isSelected: groupState.selectedKeys.has(props.id),
    onChange(isSelected2) {
      groupState.setSelected(props.id, isSelected2);
    }
  } : props);
  let { buttonProps, isPressed, isSelected, isDisabled } = groupState && props.id != null ? (0, $4547d1bf40011fdf$export$bc53712daae3d6e6)({
    ...props,
    id: props.id
  }, groupState, ref) : (0, $55f54f7887471b58$export$51e84d46ca0bc451)({
    ...props,
    id: props.id != null ? String(props.id) : void 0
  }, state, ref);
  let { focusProps, isFocused, isFocusVisible } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)(props);
  let { hoverProps, isHovered } = (0, $6179b936705e76d3$export$ae780daf29e6d456)(props);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    id: void 0,
    values: {
      isHovered,
      isPressed,
      isFocused,
      isSelected: state.isSelected,
      isFocusVisible,
      isDisabled,
      state
    },
    defaultClassName: "react-aria-ToggleButton"
  });
  return (0, import_react231.default).createElement("button", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(buttonProps, focusProps, hoverProps),
    ...renderProps,
    ref,
    slot: props.slot || void 0,
    "data-focused": isFocused || void 0,
    "data-disabled": isDisabled || void 0,
    "data-pressed": isPressed || void 0,
    "data-selected": isSelected || void 0,
    "data-hovered": isHovered || void 0,
    "data-focus-visible": isFocusVisible || void 0
  });
});

// node_modules/react-aria-components/dist/Toolbar.mjs
var import_react232 = __toESM(require_react(), 1);
var $13c3c67164f4d5be$export$6311e7ab80ef752f = (0, import_react232.createContext)({});
var $13c3c67164f4d5be$export$4c260019440d418f = (0, import_react232.forwardRef)(function Toolbar(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $13c3c67164f4d5be$export$6311e7ab80ef752f);
  let { toolbarProps } = (0, $2680b1829e803644$export$fa142eb1681c520)(props, ref);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    values: {
      orientation: props.orientation || "horizontal"
    },
    defaultClassName: "react-aria-Toolbar"
  });
  let DOMProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  delete DOMProps.id;
  return (0, import_react232.default).createElement("div", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(toolbarProps, DOMProps),
    ...renderProps,
    ref,
    slot: props.slot || void 0,
    "data-orientation": props.orientation || "horizontal"
  }, renderProps.children);
});

// node_modules/react-aria-components/dist/Tooltip.mjs
var import_react233 = __toESM(require_react(), 1);
var $4e3b923658d69c60$export$7a7623236eec67fa = (0, import_react233.createContext)(null);
var $4e3b923658d69c60$export$39ae08fa83328b12 = (0, import_react233.createContext)(null);
function $4e3b923658d69c60$export$8c610744efcf8a1d(props) {
  let state = (0, $8796f90736e175cb$export$4d40659c25ecb50b)(props);
  let ref = (0, import_react233.useRef)(null);
  let { triggerProps, tooltipProps } = (0, $4e1b34546679e357$export$a6da6c504e4bba8b)(props, state, ref);
  return (0, import_react233.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        $4e3b923658d69c60$export$7a7623236eec67fa,
        state
      ],
      [
        $4e3b923658d69c60$export$39ae08fa83328b12,
        {
          ...tooltipProps,
          triggerRef: ref
        }
      ]
    ]
  }, (0, import_react233.default).createElement((0, $f645667febf57a63$export$13f3202a3e5ddd5), {
    ...triggerProps,
    ref
  }, props.children));
}
var $4e3b923658d69c60$export$28c660c63b792dea = (0, import_react233.forwardRef)(function Tooltip({ UNSTABLE_portalContainer, ...props }, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $4e3b923658d69c60$export$39ae08fa83328b12);
  let contextState = (0, import_react233.useContext)($4e3b923658d69c60$export$7a7623236eec67fa);
  let localState = (0, $8796f90736e175cb$export$4d40659c25ecb50b)(props);
  let state = props.isOpen != null || props.defaultOpen != null || !contextState ? localState : contextState;
  let isExiting = (0, $d3f049242431219c$export$45fda7c47f93fd48)(ref, state.isOpen) || props.isExiting || false;
  if (!state.isOpen && !isExiting) return null;
  return (0, import_react233.default).createElement((0, $f57aed4a881a3485$export$b47c3594eab58386), {
    portalContainer: UNSTABLE_portalContainer
  }, (0, import_react233.default).createElement($4e3b923658d69c60$var$TooltipInner, {
    ...props,
    tooltipRef: ref,
    isExiting
  }));
});
function $4e3b923658d69c60$var$TooltipInner(props) {
  let state = (0, import_react233.useContext)($4e3b923658d69c60$export$7a7623236eec67fa);
  let arrowRef = (0, import_react233.useRef)(null);
  let [arrowWidth, setArrowWidth] = (0, import_react233.useState)(0);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    if (arrowRef.current && state.isOpen) setArrowWidth(arrowRef.current.getBoundingClientRect().width);
  }, [
    state.isOpen,
    arrowRef
  ]);
  let { overlayProps, arrowProps, placement } = (0, $2a41e45df1593e64$export$d39e1813b3bdd0e1)({
    placement: props.placement || "top",
    targetRef: props.triggerRef,
    overlayRef: props.tooltipRef,
    offset: props.offset,
    crossOffset: props.crossOffset,
    isOpen: state.isOpen,
    arrowSize: arrowWidth,
    arrowBoundaryOffset: props.arrowBoundaryOffset,
    shouldFlip: props.shouldFlip,
    onClose: () => state.close(true)
  });
  let isEntering = (0, $d3f049242431219c$export$6d3443f2c48bfc20)(props.tooltipRef, !!placement) || props.isEntering || false;
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    defaultClassName: "react-aria-Tooltip",
    values: {
      placement,
      isEntering,
      isExiting: props.isExiting,
      state
    }
  });
  props = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(props, overlayProps);
  let { tooltipProps } = (0, $326e436e94273fe1$export$1c4b08e0eca38426)(props, state);
  return (0, import_react233.default).createElement("div", {
    ...tooltipProps,
    ref: props.tooltipRef,
    ...renderProps,
    style: {
      ...overlayProps.style,
      ...renderProps.style
    },
    "data-placement": placement !== null && placement !== void 0 ? placement : void 0,
    "data-entering": isEntering || void 0,
    "data-exiting": props.isExiting || void 0
  }, (0, import_react233.default).createElement((0, $44f671af83e7d9e0$export$2de4954e8ae13b9f).Provider, {
    value: {
      ...arrowProps,
      placement,
      ref: arrowRef
    }
  }, renderProps.children));
}

// node_modules/react-aria-components/dist/TreeDropTargetDelegate.mjs
var $7e0f784ed4e400df$var$X_SWITCH_THRESHOLD = 10;
var $7e0f784ed4e400df$var$Y_SWITCH_THRESHOLD = 5;
var $7e0f784ed4e400df$export$82c13862611c034e = class {
  setup(delegate, state, direction) {
    this.delegate = delegate;
    this.state = state;
    this.direction = direction;
  }
  getDropTargetFromPoint(x, y, isValidDropTarget) {
    let baseTarget = this.delegate.getDropTargetFromPoint(x, y, isValidDropTarget);
    if (!baseTarget || baseTarget.type === "root") return baseTarget;
    return this.resolveDropTarget(baseTarget, x, y, isValidDropTarget);
  }
  resolveDropTarget(target, x, y, isValidDropTarget) {
    let tracking = this.pointerTracking;
    let deltaY = y - tracking.lastY;
    let deltaX = x - tracking.lastX;
    let currentYMovement = tracking.yDirection;
    let currentXMovement = tracking.xDirection;
    if (Math.abs(deltaY) > $7e0f784ed4e400df$var$Y_SWITCH_THRESHOLD) {
      currentYMovement = deltaY > 0 ? "down" : "up";
      tracking.yDirection = currentYMovement;
      tracking.lastY = y;
    }
    if (Math.abs(deltaX) > $7e0f784ed4e400df$var$X_SWITCH_THRESHOLD) {
      currentXMovement = deltaX > 0 ? "right" : "left";
      tracking.xDirection = currentXMovement;
      tracking.lastX = x;
    }
    if (target.dropPosition === "before") {
      let keyBefore = this.state.collection.getKeyBefore(target.key);
      if (keyBefore != null) target = {
        type: "item",
        key: keyBefore,
        dropPosition: "after"
      };
    }
    let potentialTargets = this.getPotentialTargets(target, isValidDropTarget);
    if (potentialTargets.length === 0) return {
      type: "root"
    };
    let resolvedItemTarget;
    if (potentialTargets.length > 1) resolvedItemTarget = this.selectTarget(potentialTargets, target, x, y, currentYMovement, currentXMovement);
    else {
      resolvedItemTarget = potentialTargets[0];
      tracking.boundaryContext = null;
    }
    return resolvedItemTarget;
  }
  // Returns potential targets for an ambiguous drop position (e.g. after the last child of a parent, or after the parent itself)
  // Ordered by level, from innermost to outermost.
  getPotentialTargets(originalTarget, isValidDropTarget) {
    if (originalTarget.dropPosition === "on") return [
      originalTarget
    ];
    let target = originalTarget;
    let collection = this.state.collection;
    let currentItem = collection.getItem(target.key);
    while (currentItem && (currentItem === null || currentItem === void 0 ? void 0 : currentItem.type) !== "item" && currentItem.nextKey != null) {
      target.key = currentItem.nextKey;
      currentItem = collection.getItem(currentItem.nextKey);
    }
    let potentialTargets = [
      target
    ];
    if (currentItem && currentItem.hasChildNodes && this.state.expandedKeys.has(currentItem.key) && collection.getChildren && target.dropPosition === "after") {
      let firstChildItemNode = null;
      for (let child of collection.getChildren(currentItem.key)) if (child.type === "item") {
        firstChildItemNode = child;
        break;
      }
      if (firstChildItemNode) {
        const beforeFirstChildTarget = {
          type: "item",
          key: firstChildItemNode.key,
          dropPosition: "before"
        };
        if (isValidDropTarget(beforeFirstChildTarget)) return [
          beforeFirstChildTarget
        ];
        else return [];
      }
    }
    if ((currentItem === null || currentItem === void 0 ? void 0 : currentItem.nextKey) != null) return [
      originalTarget
    ];
    let parentKey = currentItem === null || currentItem === void 0 ? void 0 : currentItem.parentKey;
    let ancestorTargets = [];
    while (parentKey) {
      let parentItem = collection.getItem(parentKey);
      let nextItem = (parentItem === null || parentItem === void 0 ? void 0 : parentItem.nextKey) ? collection.getItem(parentItem.nextKey) : null;
      let isLastChildAtLevel = !nextItem || nextItem.parentKey !== parentKey;
      if (isLastChildAtLevel) {
        let afterParentTarget = {
          type: "item",
          key: parentKey,
          dropPosition: "after"
        };
        if (isValidDropTarget(afterParentTarget)) ancestorTargets.push(afterParentTarget);
        if (nextItem) break;
      }
      parentKey = parentItem === null || parentItem === void 0 ? void 0 : parentItem.parentKey;
    }
    if (ancestorTargets.length > 0) potentialTargets.push(...ancestorTargets);
    if (potentialTargets.length === 1) {
      let nextKey = collection.getKeyAfter(target.key);
      let nextNode = nextKey ? collection.getItem(nextKey) : null;
      if (nextKey != null && nextNode && currentItem && nextNode.level != null && currentItem.level != null && nextNode.level > currentItem.level) {
        let beforeTarget = {
          type: "item",
          key: nextKey,
          dropPosition: "before"
        };
        if (isValidDropTarget(beforeTarget)) return [
          beforeTarget
        ];
      }
    }
    return potentialTargets.filter(isValidDropTarget);
  }
  selectTarget(potentialTargets, originalTarget, x, y, currentYMovement, currentXMovement) {
    if (potentialTargets.length < 2) return potentialTargets[0];
    let tracking = this.pointerTracking;
    let currentItem = this.state.collection.getItem(originalTarget.key);
    let parentKey = currentItem === null || currentItem === void 0 ? void 0 : currentItem.parentKey;
    if (!parentKey) return potentialTargets[0];
    if (!tracking.boundaryContext || tracking.boundaryContext.parentKey !== parentKey) {
      let initialTargetIndex = tracking.yDirection === "up" ? potentialTargets.length - 1 : 0;
      tracking.boundaryContext = {
        parentKey,
        preferredTargetIndex: initialTargetIndex,
        lastSwitchY: y,
        lastSwitchX: x
      };
    }
    let boundaryContext = tracking.boundaryContext;
    let distanceFromLastXSwitch = Math.abs(x - boundaryContext.lastSwitchX);
    let distanceFromLastYSwitch = Math.abs(y - boundaryContext.lastSwitchY);
    if (distanceFromLastYSwitch > $7e0f784ed4e400df$var$Y_SWITCH_THRESHOLD && currentYMovement) {
      let currentIndex = boundaryContext.preferredTargetIndex || 0;
      if (currentYMovement === "down" && currentIndex === 0)
        boundaryContext.preferredTargetIndex = potentialTargets.length - 1;
      else if (currentYMovement === "up" && currentIndex === potentialTargets.length - 1)
        boundaryContext.preferredTargetIndex = 0;
      tracking.xDirection = null;
    }
    if (distanceFromLastXSwitch > $7e0f784ed4e400df$var$X_SWITCH_THRESHOLD && currentXMovement) {
      let currentTargetIndex = boundaryContext.preferredTargetIndex || 0;
      if (currentXMovement === "left") {
        if (this.direction === "ltr") {
          if (currentTargetIndex < potentialTargets.length - 1) {
            boundaryContext.preferredTargetIndex = currentTargetIndex + 1;
            boundaryContext.lastSwitchX = x;
          }
        } else if (currentTargetIndex > 0) {
          boundaryContext.preferredTargetIndex = currentTargetIndex - 1;
          boundaryContext.lastSwitchX = x;
        }
      } else if (currentXMovement === "right") {
        if (this.direction === "ltr") {
          if (currentTargetIndex > 0) {
            boundaryContext.preferredTargetIndex = currentTargetIndex - 1;
            boundaryContext.lastSwitchX = x;
          }
        } else if (currentTargetIndex < potentialTargets.length - 1) {
          boundaryContext.preferredTargetIndex = currentTargetIndex + 1;
          boundaryContext.lastSwitchX = x;
        }
      }
      tracking.yDirection = null;
    }
    let targetIndex = Math.max(0, Math.min(boundaryContext.preferredTargetIndex || 0, potentialTargets.length - 1));
    return potentialTargets[targetIndex];
  }
  constructor() {
    this.delegate = null;
    this.state = null;
    this.direction = "ltr";
    this.pointerTracking = {
      lastY: 0,
      lastX: 0,
      yDirection: null,
      xDirection: null,
      boundaryContext: null
    };
  }
};

// node_modules/react-aria-components/dist/Tree.mjs
var import_react234 = __toESM(require_react(), 1);
var $2f5eaf4a2a47b4cf$var$TreeCollection = class {
  // TODO: should this collection's getters reflect the flattened structure or the original structure
  // If we respresent the flattened structure, it is easier for the keyboard nav but harder to find all the nodes
  *[Symbol.iterator]() {
    yield* this.flattenedRows;
  }
  get size() {
    return this.flattenedRows.length;
  }
  getKeys() {
    return this.keyMap.keys();
  }
  getItem(key) {
    return this.keyMap.get(key) || null;
  }
  at(idx) {
    return this.flattenedRows[idx];
  }
  getFirstKey() {
    var _this_flattenedRows_;
    return (_this_flattenedRows_ = this.flattenedRows[0]) === null || _this_flattenedRows_ === void 0 ? void 0 : _this_flattenedRows_.key;
  }
  getLastKey() {
    var _this_flattenedRows_;
    return (_this_flattenedRows_ = this.flattenedRows[this.size - 1]) === null || _this_flattenedRows_ === void 0 ? void 0 : _this_flattenedRows_.key;
  }
  getKeyAfter(key) {
    var _this_flattenedRows_;
    let index = this.flattenedRows.findIndex((row) => row.key === key);
    return (_this_flattenedRows_ = this.flattenedRows[index + 1]) === null || _this_flattenedRows_ === void 0 ? void 0 : _this_flattenedRows_.key;
  }
  getKeyBefore(key) {
    var _this_flattenedRows_;
    let index = this.flattenedRows.findIndex((row) => row.key === key);
    return (_this_flattenedRows_ = this.flattenedRows[index - 1]) === null || _this_flattenedRows_ === void 0 ? void 0 : _this_flattenedRows_.key;
  }
  // Note that this will return Content nodes in addition to nested TreeItems
  getChildren(key) {
    let keyMap = this.keyMap;
    return {
      *[Symbol.iterator]() {
        let parent = keyMap.get(key);
        let node = (parent === null || parent === void 0 ? void 0 : parent.firstChildKey) != null ? keyMap.get(parent.firstChildKey) : null;
        while (node) {
          yield node;
          node = node.nextKey != null ? keyMap.get(node.nextKey) : void 0;
        }
      }
    };
  }
  getTextValue(key) {
    let item = this.getItem(key);
    return item ? item.textValue : "";
  }
  constructor(opts) {
    this.keyMap = /* @__PURE__ */ new Map();
    let { collection, expandedKeys } = opts;
    let { flattenedRows, keyMap } = $2f5eaf4a2a47b4cf$var$flattenTree(collection, {
      expandedKeys
    });
    this.flattenedRows = flattenedRows;
    this.keyMap = keyMap;
  }
};
var $2f5eaf4a2a47b4cf$export$dfae7d399eea2568 = (0, import_react234.createContext)(null);
var $2f5eaf4a2a47b4cf$export$8953bccafd7bce87 = (0, import_react234.createContext)(null);
var $2f5eaf4a2a47b4cf$export$7fbedc92909ed28e = (0, import_react234.forwardRef)(function Tree(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $2f5eaf4a2a47b4cf$export$dfae7d399eea2568);
  return (0, import_react234.default).createElement((0, $e1995378a142960e$export$bf788dd355e3a401), {
    content: (0, import_react234.default).createElement((0, $e1995378a142960e$export$fb8073518f34e6ec), props)
  }, (collection) => (0, import_react234.default).createElement($2f5eaf4a2a47b4cf$var$TreeInner, {
    props,
    collection,
    treeRef: ref
  }));
});
var $2f5eaf4a2a47b4cf$var$EXPANSION_KEYS = {
  "expand": {
    ltr: "ArrowRight",
    rtl: "ArrowLeft"
  },
  "collapse": {
    ltr: "ArrowLeft",
    rtl: "ArrowRight"
  }
};
function $2f5eaf4a2a47b4cf$var$TreeInner({ props, collection, treeRef: ref }) {
  const { dragAndDropHooks } = props;
  let { direction } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let collator = (0, $325a3faab7a68acd$export$a16aca283550c30d)({
    usage: "search",
    sensitivity: "base"
  });
  let hasDragHooks = !!(dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : dragAndDropHooks.useDraggableCollectionState);
  let hasDropHooks = !!(dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : dragAndDropHooks.useDroppableCollectionState);
  let dragHooksProvided = (0, import_react234.useRef)(hasDragHooks);
  let dropHooksProvided = (0, import_react234.useRef)(hasDropHooks);
  (0, import_react234.useEffect)(() => {
    if (dragHooksProvided.current !== hasDragHooks) console.warn("Drag hooks were provided during one render, but not another. This should be avoided as it may produce unexpected behavior.");
    if (dropHooksProvided.current !== hasDropHooks) console.warn("Drop hooks were provided during one render, but not another. This should be avoided as it may produce unexpected behavior.");
  }, [
    hasDragHooks,
    hasDropHooks
  ]);
  let { selectionMode = "none", expandedKeys: propExpandedKeys, defaultExpandedKeys: propDefaultExpandedKeys, onExpandedChange, disabledBehavior = "all" } = props;
  let { CollectionRoot, isVirtualized, layoutDelegate, dropTargetDelegate: ctxDropTargetDelegate } = (0, import_react234.useContext)((0, $7135fc7d473fd974$export$4feb769f8ddf26c5));
  let [expandedKeys, setExpandedKeys] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(propExpandedKeys ? $2f5eaf4a2a47b4cf$var$convertExpanded(propExpandedKeys) : void 0, propDefaultExpandedKeys ? $2f5eaf4a2a47b4cf$var$convertExpanded(propDefaultExpandedKeys) : /* @__PURE__ */ new Set(), onExpandedChange);
  let flattenedCollection = (0, import_react234.useMemo)(() => {
    return new $2f5eaf4a2a47b4cf$var$TreeCollection({
      collection,
      expandedKeys
    });
  }, [
    collection,
    expandedKeys
  ]);
  let state = (0, $875d6693e12af071$export$728d6ba534403756)({
    ...props,
    selectionMode,
    expandedKeys,
    onExpandedChange: setExpandedKeys,
    collection: flattenedCollection,
    children: void 0,
    disabledBehavior
  });
  let { gridProps } = (0, $6d8a57ce39fda2fa$export$fb0040ce9d6e8bd1)({
    ...props,
    isVirtualized,
    layoutDelegate
  }, state, ref);
  let dragState = void 0;
  let dropState = void 0;
  let droppableCollection = void 0;
  let isRootDropTarget = false;
  let dragPreview = null;
  let preview = (0, import_react234.useRef)(null);
  if (hasDragHooks && dragAndDropHooks) {
    dragState = dragAndDropHooks.useDraggableCollectionState({
      collection: state.collection,
      selectionManager: state.selectionManager,
      preview: dragAndDropHooks.renderDragPreview ? preview : void 0
    });
    dragAndDropHooks.useDraggableCollection({}, dragState, ref);
    let DragPreview2 = dragAndDropHooks.DragPreview;
    dragPreview = dragAndDropHooks.renderDragPreview ? (0, import_react234.default).createElement(DragPreview2, {
      ref: preview
    }, dragAndDropHooks.renderDragPreview) : null;
  }
  let [treeDropTargetDelegate] = (0, import_react234.useState)(() => new (0, $7e0f784ed4e400df$export$82c13862611c034e)());
  if (hasDropHooks && dragAndDropHooks) {
    dropState = dragAndDropHooks.useDroppableCollectionState({
      collection: state.collection,
      selectionManager: state.selectionManager
    });
    let dropTargetDelegate = dragAndDropHooks.dropTargetDelegate || ctxDropTargetDelegate || new dragAndDropHooks.ListDropTargetDelegate(state.collection, ref, {
      direction
    });
    treeDropTargetDelegate.setup(dropTargetDelegate, state, direction);
    let keyboardDelegate = new (0, $2a25aae57d74318e$export$a05409b8bb224a5a)({
      collection: state.collection,
      collator,
      ref,
      disabledKeys: state.selectionManager.disabledKeys,
      disabledBehavior: state.selectionManager.disabledBehavior,
      direction,
      layoutDelegate
    });
    droppableCollection = dragAndDropHooks.useDroppableCollection({
      keyboardDelegate,
      dropTargetDelegate: treeDropTargetDelegate,
      onDropActivate: (e) => {
        if (e.target.type === "item") {
          var _dragAndDropHooks_isVirtualDragging;
          let key = e.target.key;
          let item = state.collection.getItem(key);
          let isExpanded = expandedKeys !== "all" && expandedKeys.has(key);
          if (item && item.hasChildNodes && (!isExpanded || (dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : (_dragAndDropHooks_isVirtualDragging = dragAndDropHooks.isVirtualDragging) === null || _dragAndDropHooks_isVirtualDragging === void 0 ? void 0 : _dragAndDropHooks_isVirtualDragging.call(dragAndDropHooks)))) state.toggleKey(key);
        }
      },
      onKeyDown: (e) => {
        let target = dropState === null || dropState === void 0 ? void 0 : dropState.target;
        if (target && target.type === "item" && target.dropPosition === "on") {
          let item = state.collection.getItem(target.key);
          if (e.key === $2f5eaf4a2a47b4cf$var$EXPANSION_KEYS["expand"][direction] && (item === null || item === void 0 ? void 0 : item.hasChildNodes) && !state.expandedKeys.has(target.key)) state.toggleKey(target.key);
          else if (e.key === $2f5eaf4a2a47b4cf$var$EXPANSION_KEYS["collapse"][direction] && (item === null || item === void 0 ? void 0 : item.hasChildNodes) && state.expandedKeys.has(target.key)) state.toggleKey(target.key);
        }
      }
    }, dropState, ref);
    let originalGetDropOperation = dropState.getDropOperation;
    dropState.getDropOperation = (options) => {
      let { target, isInternal } = options;
      var _dragState_draggingKeys;
      let currentDraggingKeys = (_dragState_draggingKeys = dragState === null || dragState === void 0 ? void 0 : dragState.draggingKeys) !== null && _dragState_draggingKeys !== void 0 ? _dragState_draggingKeys : /* @__PURE__ */ new Set();
      if (isInternal && target.type === "item" && currentDraggingKeys.size > 0) {
        if (currentDraggingKeys.has(target.key) && target.dropPosition === "on") return "cancel";
        let currentKey = target.key;
        while (currentKey != null) {
          let item = state.collection.getItem(currentKey);
          let parentKey = item === null || item === void 0 ? void 0 : item.parentKey;
          if (parentKey != null && currentDraggingKeys.has(parentKey)) return "cancel";
          currentKey = parentKey !== null && parentKey !== void 0 ? parentKey : null;
        }
      }
      return originalGetDropOperation(options);
    };
    isRootDropTarget = dropState.isDropTarget({
      type: "root"
    });
  }
  let isTreeDraggable = !!(hasDragHooks && !(dragState === null || dragState === void 0 ? void 0 : dragState.isDisabled));
  let { focusProps, isFocused, isFocusVisible } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)();
  let renderValues = {
    isEmpty: state.collection.size === 0,
    isFocused,
    isFocusVisible,
    isDropTarget: isRootDropTarget,
    selectionMode: state.selectionManager.selectionMode,
    allowsDragging: !!isTreeDraggable,
    state
  };
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    className: props.className,
    style: props.style,
    defaultClassName: "react-aria-Tree",
    values: renderValues
  });
  let emptyState = null;
  if (state.collection.size === 0 && props.renderEmptyState) {
    let { isEmpty, ...values } = renderValues;
    let content = props.renderEmptyState({
      ...values
    });
    let treeGridRowProps = {
      "aria-level": 1,
      "aria-posinset": 1,
      "aria-setsize": 1
    };
    emptyState = (0, import_react234.default).createElement("div", {
      role: "row",
      style: {
        display: "contents"
      },
      ...treeGridRowProps
    }, (0, import_react234.default).createElement("div", {
      role: "gridcell",
      style: {
        display: "contents"
      }
    }, content));
  }
  return (0, import_react234.default).createElement((0, import_react234.default).Fragment, null, (0, import_react234.default).createElement((0, $9bf71ea28793e738$export$20e40289641fbbb6), null, (0, import_react234.default).createElement("div", {
    ...(0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props),
    ...renderProps,
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(gridProps, focusProps, droppableCollection === null || droppableCollection === void 0 ? void 0 : droppableCollection.collectionProps),
    ref,
    slot: props.slot || void 0,
    onScroll: props.onScroll,
    "data-empty": state.collection.size === 0 || void 0,
    "data-focused": isFocused || void 0,
    "data-drop-target": isRootDropTarget || void 0,
    "data-focus-visible": isFocusVisible || void 0,
    "data-selection-mode": state.selectionManager.selectionMode === "none" ? void 0 : state.selectionManager.selectionMode,
    "data-allows-dragging": !!isTreeDraggable || void 0
  }, (0, import_react234.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        $2f5eaf4a2a47b4cf$export$8953bccafd7bce87,
        state
      ],
      [
        (0, $612b8eb6cb90e02d$export$d188a835a7bc5783),
        {
          dragAndDropHooks,
          dragState,
          dropState
        }
      ],
      [
        (0, $612b8eb6cb90e02d$export$f55761759794cf55),
        {
          render: $2f5eaf4a2a47b4cf$var$TreeDropIndicatorWrapper
        }
      ]
    ]
  }, hasDropHooks && (0, import_react234.default).createElement($2f5eaf4a2a47b4cf$var$RootDropIndicator, null), (0, import_react234.default).createElement(CollectionRoot, {
    collection: state.collection,
    persistedKeys: (0, $612b8eb6cb90e02d$export$d1e8e3fbb7461f6)(state.selectionManager, dragAndDropHooks, dropState),
    scrollRef: ref,
    renderDropIndicator: (0, $612b8eb6cb90e02d$export$971707d8a129a1f7)(dragAndDropHooks, dropState)
  })), emptyState)), dragPreview);
}
var $2f5eaf4a2a47b4cf$export$4b687e3f663d618c = (0, $e1995378a142960e$export$18af5c7a9e9b3664)("content", function TreeItemContent(props) {
  let values = (0, import_react234.useContext)($2f5eaf4a2a47b4cf$export$36b5dda0d9bc8f78);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    children: props.children,
    values
  });
  return (0, import_react234.default).createElement((0, $7135fc7d473fd974$export$4feb769f8ddf26c5).Provider, {
    value: (0, $7135fc7d473fd974$export$a164736487e3f0ae)
  }, renderProps.children);
});
var $2f5eaf4a2a47b4cf$export$36b5dda0d9bc8f78 = (0, import_react234.createContext)(null);
var $2f5eaf4a2a47b4cf$export$53d36ab85dc89436 = (0, $e1995378a142960e$export$e953bb1cd0f19726)("item", (props, ref, item) => {
  var _this;
  let state = (0, import_react234.useContext)($2f5eaf4a2a47b4cf$export$8953bccafd7bce87);
  ref = (0, $df56164dff5785e2$export$4338b53315abf666)(ref);
  let { dragAndDropHooks, dragState, dropState } = (0, import_react234.useContext)((0, $612b8eb6cb90e02d$export$d188a835a7bc5783));
  let { rowProps, gridCellProps, expandButtonProps, descriptionProps, ...states } = (0, $b41e0bc5ca49db3d$export$e4bcc4675b2b123a)({
    node: item,
    shouldSelectOnPressUp: !!dragState
  }, state, ref);
  let isExpanded = rowProps["aria-expanded"] === true;
  let hasChildItems = props.hasChildItems || ((_this = [
    ...state.collection.getChildren(item.key)
  ]) === null || _this === void 0 ? void 0 : _this.length) > 1;
  let level = rowProps["aria-level"] || 1;
  let { hoverProps, isHovered } = (0, $6179b936705e76d3$export$ae780daf29e6d456)({
    isDisabled: !states.allowsSelection && !states.hasAction,
    onHoverStart: props.onHoverStart,
    onHoverChange: props.onHoverChange,
    onHoverEnd: props.onHoverEnd
  });
  let { isFocusVisible, focusProps } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)();
  let { isFocusVisible: isFocusVisibleWithin, focusProps: focusWithinProps } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)({
    within: true
  });
  let { checkboxProps } = (0, $e52ffc04a4adbd52$export$e29f2573fabbf7b9)({
    key: item.key
  }, state);
  let draggableItem = null;
  if (dragState && dragAndDropHooks) draggableItem = dragAndDropHooks.useDraggableItem({
    key: item.key,
    hasDragButton: true
  }, dragState);
  let dropIndicator = null;
  let expandButtonRef = (0, import_react234.useRef)(null);
  let dropIndicatorRef = (0, import_react234.useRef)(null);
  let activateButtonRef = (0, import_react234.useRef)(null);
  let { visuallyHiddenProps } = (0, $5c3e21d68f1c4674$export$a966af930f325cab)();
  if (dropState && dragAndDropHooks) dropIndicator = dragAndDropHooks.useDropIndicator({
    target: {
      type: "item",
      key: item.key,
      dropPosition: "on"
    },
    activateButtonRef
  }, dropState, dropIndicatorRef);
  let isDragging = dragState && dragState.isDragging(item.key);
  let isDropTarget = dropIndicator === null || dropIndicator === void 0 ? void 0 : dropIndicator.isDropTarget;
  let selectionMode = state.selectionManager.selectionMode;
  let selectionBehavior = state.selectionManager.selectionBehavior;
  let renderPropValues = (0, import_react234.default).useMemo(() => ({
    ...states,
    isHovered,
    isFocusVisible,
    isExpanded,
    hasChildItems,
    level,
    selectionMode,
    selectionBehavior,
    isFocusVisibleWithin,
    state,
    id: item.key,
    allowsDragging: !!dragState,
    isDragging,
    isDropTarget
  }), [
    states,
    isHovered,
    isFocusVisible,
    isExpanded,
    hasChildItems,
    level,
    isFocusVisibleWithin,
    state,
    item.key,
    dragState,
    isDragging,
    isDropTarget,
    selectionBehavior,
    selectionMode
  ]);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    id: void 0,
    children: item.rendered,
    defaultClassName: "react-aria-TreeItem",
    defaultStyle: {
      // @ts-ignore
      "--tree-item-level": level
    },
    values: renderPropValues
  });
  (0, import_react234.useEffect)(() => {
    if (!item.textValue && true) console.warn("A `textValue` prop is required for <TreeItem> elements in order to support accessibility features such as type to select.");
  }, [
    item.textValue
  ]);
  (0, import_react234.useEffect)(() => {
    if (hasChildItems && !expandButtonRef.current && true) console.warn("Expandable tree items must contain a expand button so screen reader users can expand/collapse the item.");
  }, []);
  let dragButtonRef = (0, import_react234.useRef)(null);
  (0, import_react234.useEffect)(() => {
    if (dragState && !dragButtonRef.current && true) console.warn('Draggable items in a Tree must contain a <Button slot="drag"> element so that keyboard and screen reader users can drag them.');
  }, []);
  let children = (0, $e948873055cbafe4$export$727c8fc270210f13)({
    items: state.collection.getChildren(item.key),
    children: (item2) => {
      switch (item2.type) {
        case "content":
          return item2.render(item2);
        // Skip item since we don't render the nested rows as children of the parent row, the flattened collection
        // will render them each as siblings instead
        case "loader":
        case "item":
          return (0, import_react234.default).createElement((0, import_react234.default).Fragment, null);
        default:
          throw new Error("Unsupported element type in TreeRow: " + item2.type);
      }
    }
  });
  let activateButtonId = (0, $bdb11010cef70236$export$f680877a34711e37)();
  return (0, import_react234.default).createElement((0, import_react234.default).Fragment, null, dropIndicator && !dropIndicator.isHidden && (0, import_react234.default).createElement("div", {
    role: "row",
    "aria-level": rowProps["aria-level"],
    "aria-expanded": rowProps["aria-expanded"],
    "aria-label": dropIndicator.dropIndicatorProps["aria-label"]
  }, (0, import_react234.default).createElement("div", {
    role: "gridcell",
    "aria-colindex": 1,
    style: {
      display: "contents"
    }
  }, (0, import_react234.default).createElement("div", {
    role: "button",
    ...visuallyHiddenProps,
    ...dropIndicator.dropIndicatorProps,
    ref: dropIndicatorRef
  }), rowProps["aria-expanded"] != null ? (
    // Button to allow touch screen reader users to expand the item while dragging.
    (0, import_react234.default).createElement("div", {
      role: "button",
      ...visuallyHiddenProps,
      id: activateButtonId,
      "aria-label": expandButtonProps["aria-label"],
      "aria-labelledby": `${activateButtonId} ${rowProps.id}`,
      tabIndex: -1,
      ref: activateButtonRef
    })
  ) : null)), (0, import_react234.default).createElement("div", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)((0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props), rowProps, focusProps, hoverProps, focusWithinProps, draggableItem === null || draggableItem === void 0 ? void 0 : draggableItem.dragProps),
    ...renderProps,
    ref,
    // TODO: missing selectionBehavior, hasAction and allowsSelection data attribute equivalents (available in renderProps). Do we want those?
    "data-expanded": hasChildItems && isExpanded || void 0,
    "data-has-child-items": hasChildItems || void 0,
    "data-level": level,
    "data-selected": states.isSelected || void 0,
    "data-disabled": states.isDisabled || void 0,
    "data-hovered": isHovered || void 0,
    "data-focused": states.isFocused || void 0,
    "data-focus-visible": isFocusVisible || void 0,
    "data-pressed": states.isPressed || void 0,
    "data-selection-mode": state.selectionManager.selectionMode === "none" ? void 0 : state.selectionManager.selectionMode,
    "data-allows-dragging": !!dragState || void 0,
    "data-dragging": isDragging || void 0,
    "data-drop-target": isDropTarget || void 0
  }, (0, import_react234.default).createElement("div", {
    ...gridCellProps,
    style: {
      display: "contents"
    }
  }, (0, import_react234.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        (0, $4e85f108e88277b8$export$b085522c77523c51),
        {
          slots: {
            selection: checkboxProps
          }
        }
      ],
      // TODO: support description in the tree row
      // TODO: don't think I need to pass isExpanded to the button here since it can be sourced from the renderProps? Might be worthwhile passing it down?
      [
        (0, $d2b4bc8c273e7be6$export$24d547caef80ccd1),
        {
          slots: {
            [(0, $64fa3d84918910a7$export$c62b8e45d58ddad9)]: {},
            chevron: {
              ...expandButtonProps,
              ref: expandButtonRef
            },
            drag: {
              ...draggableItem === null || draggableItem === void 0 ? void 0 : draggableItem.dragButtonProps,
              ref: dragButtonRef,
              style: {
                pointerEvents: "none"
              }
            }
          }
        }
      ],
      [
        $2f5eaf4a2a47b4cf$export$36b5dda0d9bc8f78,
        {
          ...renderPropValues
        }
      ]
    ]
  }, children))));
});
var $2f5eaf4a2a47b4cf$export$9d1a587784d97b41 = (0, $e1995378a142960e$export$18af5c7a9e9b3664)("loader", function TreeLoader(props, ref, item) {
  let state = (0, import_react234.useContext)($2f5eaf4a2a47b4cf$export$8953bccafd7bce87);
  let { rowProps } = (0, $b41e0bc5ca49db3d$export$e4bcc4675b2b123a)({
    node: item
  }, state, ref);
  let level = rowProps["aria-level"] || 1;
  let ariaProps = {
    "aria-level": rowProps["aria-level"],
    "aria-posinset": rowProps["aria-posinset"],
    "aria-setsize": rowProps["aria-setsize"]
  };
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    id: void 0,
    children: item.rendered,
    defaultClassName: "react-aria-TreeLoader",
    values: {
      level
    }
  });
  return (0, import_react234.default).createElement((0, import_react234.default).Fragment, null, (0, import_react234.default).createElement("div", {
    role: "row",
    ref,
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)((0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props), ariaProps),
    ...renderProps,
    "data-level": level
  }, (0, import_react234.default).createElement("div", {
    role: "gridcell",
    "aria-colindex": 1
  }, renderProps.children)));
});
function $2f5eaf4a2a47b4cf$var$convertExpanded(expanded) {
  if (!expanded) return /* @__PURE__ */ new Set();
  return expanded === "all" ? "all" : new Set(expanded);
}
function $2f5eaf4a2a47b4cf$var$flattenTree(collection, opts) {
  let { expandedKeys = /* @__PURE__ */ new Set() } = opts;
  let keyMap = /* @__PURE__ */ new Map();
  let flattenedRows = [];
  let visitNode = (node) => {
    if (node.type === "item" || node.type === "loader") {
      let parentKey = node === null || node === void 0 ? void 0 : node.parentKey;
      let clone = {
        ...node
      };
      if (parentKey != null) {
        let hasContentNode = [
          ...collection.getChildren(parentKey)
        ][0].type !== "item";
        if (hasContentNode) clone.index = (node === null || node === void 0 ? void 0 : node.index) != null ? (node === null || node === void 0 ? void 0 : node.index) - 1 : 0;
        if (node.type === "loader") clone.level = node.level + 1;
        keyMap.set(clone.key, clone);
      } else keyMap.set(node.key, node);
      if (node.level === 0 || parentKey != null && expandedKeys.has(parentKey) && flattenedRows.find((row) => row.key === parentKey))
        flattenedRows.push(keyMap.get(node.key) || node);
    } else if (node.type !== null) keyMap.set(node.key, node);
    for (let child of collection.getChildren(node.key)) visitNode(child);
  };
  for (let node of collection) visitNode(node);
  return {
    flattenedRows,
    keyMap
  };
}
function $2f5eaf4a2a47b4cf$var$TreeDropIndicatorWrapper(props, ref) {
  var _dropState_collection_getItem;
  ref = (0, $df56164dff5785e2$export$4338b53315abf666)(ref);
  let { dragAndDropHooks, dropState } = (0, import_react234.useContext)((0, $612b8eb6cb90e02d$export$d188a835a7bc5783));
  let buttonRef = (0, import_react234.useRef)(null);
  let { dropIndicatorProps, isHidden, isDropTarget } = dragAndDropHooks.useDropIndicator(props, dropState, buttonRef);
  if (isHidden) return null;
  let level = dropState && props.target.type === "item" ? (((_dropState_collection_getItem = dropState.collection.getItem(props.target.key)) === null || _dropState_collection_getItem === void 0 ? void 0 : _dropState_collection_getItem.level) || 0) + 1 : 1;
  return (0, import_react234.default).createElement($2f5eaf4a2a47b4cf$var$TreeDropIndicatorForwardRef, {
    ...props,
    dropIndicatorProps,
    isDropTarget,
    ref,
    buttonRef,
    level
  });
}
function $2f5eaf4a2a47b4cf$var$TreeDropIndicator(props, ref) {
  let { dropIndicatorProps, isDropTarget, buttonRef, level, ...otherProps } = props;
  let { visuallyHiddenProps } = (0, $5c3e21d68f1c4674$export$a966af930f325cab)();
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...otherProps,
    defaultClassName: "react-aria-DropIndicator",
    defaultStyle: {
      position: "relative",
      // @ts-ignore
      "--tree-item-level": level
    },
    values: {
      isDropTarget
    }
  });
  return (0, import_react234.default).createElement("div", {
    ...renderProps,
    role: "row",
    "aria-level": level,
    ref,
    "data-drop-target": isDropTarget || void 0
  }, (0, import_react234.default).createElement("div", {
    role: "gridcell"
  }, (0, import_react234.default).createElement("div", {
    ...visuallyHiddenProps,
    role: "button",
    ...dropIndicatorProps,
    ref: buttonRef
  }), renderProps.children));
}
var $2f5eaf4a2a47b4cf$var$TreeDropIndicatorForwardRef = (0, import_react234.forwardRef)($2f5eaf4a2a47b4cf$var$TreeDropIndicator);
function $2f5eaf4a2a47b4cf$var$RootDropIndicator() {
  let { dragAndDropHooks, dropState } = (0, import_react234.useContext)((0, $612b8eb6cb90e02d$export$d188a835a7bc5783));
  let ref = (0, import_react234.useRef)(null);
  let { dropIndicatorProps } = dragAndDropHooks.useDropIndicator({
    target: {
      type: "root"
    }
  }, dropState, ref);
  let isDropTarget = dropState.isDropTarget({
    type: "root"
  });
  let { visuallyHiddenProps } = (0, $5c3e21d68f1c4674$export$a966af930f325cab)();
  if (!isDropTarget && dropIndicatorProps["aria-hidden"]) return null;
  return (0, import_react234.default).createElement("div", {
    role: "row",
    "aria-hidden": dropIndicatorProps["aria-hidden"],
    style: {
      position: "absolute"
    }
  }, (0, import_react234.default).createElement("div", {
    role: "gridcell"
  }, (0, import_react234.default).createElement("div", {
    role: "button",
    ...visuallyHiddenProps,
    ...dropIndicatorProps,
    ref
  })));
}

// node_modules/react-aria-components/dist/useDragAndDrop.mjs
var import_react235 = __toESM(require_react(), 1);
function $d8f176866e6dc039$export$2cfc5be7a55829f6(options) {
  let dragAndDropHooks = (0, import_react235.useMemo)(() => {
    let { onDrop, onInsert, onItemDrop, onReorder, onMove, onRootDrop, getItems, renderDragPreview, renderDropIndicator, dropTargetDelegate } = options;
    let isDraggable = !!getItems;
    let isDroppable = !!(onDrop || onInsert || onItemDrop || onReorder || onMove || onRootDrop);
    let hooks = {};
    if (isDraggable) {
      hooks.useDraggableCollectionState = function useDraggableCollectionStateOverride(props) {
        return (0, $b45bbbaf0c3785df$export$29efd034f1d79f81)({
          ...props,
          ...options
        });
      };
      hooks.useDraggableCollection = (0, $4ac1fdc3a0fcd564$export$2962a7984b2f0a80);
      hooks.useDraggableItem = (0, $fd98cf7cbf233429$export$b35afafff42da2d9);
      hooks.DragPreview = (0, $ad0e3f3d9c50e4ba$export$905ab40ac2179daa);
      hooks.renderDragPreview = renderDragPreview;
      hooks.isVirtualDragging = (0, $67560de7c78cb232$export$403bc76cbf68cf60);
    }
    if (isDroppable) {
      hooks.useDroppableCollectionState = function useDroppableCollectionStateOverride(props) {
        return (0, $e672e8bc247525d1$export$926850f6ecef79d0)({
          ...props,
          ...options
        });
      };
      hooks.useDroppableItem = (0, $bfaab576ce1c580e$export$f7b0c5d28b66b6a5);
      hooks.useDroppableCollection = function useDroppableCollectionOverride(props, state, ref) {
        return (0, $4b52e4eff84e5217$export$f4e2f423c21f7b04)({
          ...props,
          ...options
        }, state, ref);
      };
      hooks.useDropIndicator = (0, $ddf25448c71fc93a$export$8d0e41d2815afac5);
      hooks.renderDropIndicator = renderDropIndicator;
      hooks.dropTargetDelegate = dropTargetDelegate;
      hooks.ListDropTargetDelegate = (0, $3ca85212bf8898e4$export$fbd65d14c79e28cc);
    }
    return hooks;
  }, [
    options
  ]);
  return {
    dragAndDropHooks
  };
}

// node_modules/react-aria-components/dist/Virtualizer.mjs
var import_react240 = __toESM(require_react(), 1);

// node_modules/@react-aria/virtualizer/dist/utils.mjs
var $ce415dc67314b753$var$cachedRTLResult = null;
function $ce415dc67314b753$export$faf7630257ad4304(recalculate = false) {
  if ($ce415dc67314b753$var$cachedRTLResult === null || recalculate) {
    const outerDiv = document.createElement("div");
    const outerStyle = outerDiv.style;
    outerStyle.width = "50px";
    outerStyle.height = "50px";
    outerStyle.overflow = "scroll";
    outerStyle.direction = "rtl";
    const innerDiv = document.createElement("div");
    const innerStyle = innerDiv.style;
    innerStyle.width = "100px";
    innerStyle.height = "100px";
    outerDiv.appendChild(innerDiv);
    document.body.appendChild(outerDiv);
    if (outerDiv.scrollLeft > 0) $ce415dc67314b753$var$cachedRTLResult = "positive-descending";
    else {
      outerDiv.scrollLeft = 1;
      if (outerDiv.scrollLeft === 0) $ce415dc67314b753$var$cachedRTLResult = "negative";
      else $ce415dc67314b753$var$cachedRTLResult = "positive-ascending";
    }
    document.body.removeChild(outerDiv);
    return $ce415dc67314b753$var$cachedRTLResult;
  }
  return $ce415dc67314b753$var$cachedRTLResult;
}
function $ce415dc67314b753$export$1389d168952b34b5(node, direction) {
  let { scrollLeft } = node;
  if (direction === "rtl") {
    let { scrollWidth, clientWidth } = node;
    switch ($ce415dc67314b753$export$faf7630257ad4304()) {
      case "negative":
        scrollLeft = -scrollLeft;
        break;
      case "positive-descending":
        scrollLeft = scrollWidth - clientWidth - scrollLeft;
        break;
    }
  }
  return scrollLeft;
}

// node_modules/@react-aria/virtualizer/dist/ScrollView.mjs
var import_react_dom11 = __toESM(require_react_dom(), 1);
var import_react236 = __toESM(require_react(), 1);
function $44a6ee657928b002$var$ScrollView(props, ref) {
  ref = (0, $df56164dff5785e2$export$4338b53315abf666)(ref);
  let { scrollViewProps, contentProps } = $44a6ee657928b002$export$2ea0c4974da4731b(props, ref);
  return (0, import_react236.default).createElement("div", {
    role: "presentation",
    ...scrollViewProps,
    ref
  }, (0, import_react236.default).createElement("div", contentProps, props.children));
}
var $44a6ee657928b002$export$5665e3d6be6adea = (0, import_react236.default).forwardRef($44a6ee657928b002$var$ScrollView);
function $44a6ee657928b002$export$2ea0c4974da4731b(props, ref) {
  let { contentSize, onVisibleRectChange, innerStyle, onScrollStart, onScrollEnd, scrollDirection = "both", ...otherProps } = props;
  let state = (0, import_react236.useRef)({
    scrollTop: 0,
    scrollLeft: 0,
    scrollEndTime: 0,
    scrollTimeout: null,
    width: 0,
    height: 0,
    isScrolling: false
  }).current;
  let { direction } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let [isScrolling, setScrolling] = (0, import_react236.useState)(false);
  let onScroll = (0, import_react236.useCallback)((e) => {
    if (e.target !== e.currentTarget) return;
    if (props.onScroll) props.onScroll(e);
    (0, import_react_dom11.flushSync)(() => {
      let scrollTop = e.currentTarget.scrollTop;
      let scrollLeft = (0, $ce415dc67314b753$export$1389d168952b34b5)(e.currentTarget, direction);
      state.scrollTop = Math.max(0, Math.min(scrollTop, contentSize.height - state.height));
      state.scrollLeft = Math.max(0, Math.min(scrollLeft, contentSize.width - state.width));
      onVisibleRectChange(new (0, $60423f92c7f9ad87$export$c79fc6492f3af13d)(state.scrollLeft, state.scrollTop, state.width, state.height));
      if (!state.isScrolling) {
        state.isScrolling = true;
        setScrolling(true);
        window.dispatchEvent(new Event("tk.disconnect-observer"));
        if (onScrollStart) onScrollStart();
      }
      let now = Date.now();
      if (state.scrollEndTime <= now + 50) {
        state.scrollEndTime = now + 300;
        if (state.scrollTimeout != null) clearTimeout(state.scrollTimeout);
        state.scrollTimeout = setTimeout(() => {
          state.isScrolling = false;
          setScrolling(false);
          state.scrollTimeout = null;
          window.dispatchEvent(new Event("tk.connect-observer"));
          if (onScrollEnd) onScrollEnd();
        }, 300);
      }
    });
  }, [
    props,
    direction,
    state,
    contentSize,
    onVisibleRectChange,
    onScrollStart,
    onScrollEnd
  ]);
  (0, $e9faafb641e167db$export$90fc3a17d93f704c)(ref, "scroll", onScroll);
  (0, import_react236.useEffect)(() => {
    return () => {
      if (state.scrollTimeout != null) clearTimeout(state.scrollTimeout);
      if (state.isScrolling) window.dispatchEvent(new Event("tk.connect-observer"));
    };
  }, []);
  let isUpdatingSize = (0, import_react236.useRef)(false);
  let updateSize = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((flush) => {
    let dom = ref.current;
    if (!dom || isUpdatingSize.current) return;
    isUpdatingSize.current = true;
    let isTestEnv = false;
    let isClientWidthMocked = Object.getOwnPropertyNames(window.HTMLElement.prototype).includes("clientWidth");
    let isClientHeightMocked = Object.getOwnPropertyNames(window.HTMLElement.prototype).includes("clientHeight");
    let clientWidth = dom.clientWidth;
    let clientHeight = dom.clientHeight;
    let w = isTestEnv && !isClientWidthMocked ? Infinity : clientWidth;
    let h = isTestEnv && !isClientHeightMocked ? Infinity : clientHeight;
    if (state.width !== w || state.height !== h) {
      state.width = w;
      state.height = h;
      flush(() => {
        onVisibleRectChange(new (0, $60423f92c7f9ad87$export$c79fc6492f3af13d)(state.scrollLeft, state.scrollTop, w, h));
      });
      if (!isTestEnv && clientWidth !== dom.clientWidth || clientHeight !== dom.clientHeight) {
        state.width = dom.clientWidth;
        state.height = dom.clientHeight;
        flush(() => {
          onVisibleRectChange(new (0, $60423f92c7f9ad87$export$c79fc6492f3af13d)(state.scrollLeft, state.scrollTop, state.width, state.height));
        });
      }
    }
    isUpdatingSize.current = false;
  });
  let lastContentSize = (0, import_react236.useRef)(null);
  let [update, setUpdate] = (0, import_react236.useState)({});
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    if (!isUpdatingSize.current && (lastContentSize.current == null || !contentSize.equals(lastContentSize.current))) {
      if (typeof IS_REACT_ACT_ENVIRONMENT === "boolean" ? IS_REACT_ACT_ENVIRONMENT : typeof jest !== "undefined") {
        setUpdate({});
        lastContentSize.current = contentSize;
        return;
      } else queueMicrotask(() => updateSize((0, import_react_dom11.flushSync)));
    }
    lastContentSize.current = contentSize;
  });
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    updateSize((fn) => fn());
  }, [
    update
  ]);
  let onResize = (0, import_react236.useCallback)(() => {
    updateSize((0, import_react_dom11.flushSync));
  }, [
    updateSize
  ]);
  (0, $9daab02d461809db$export$683480f191c0e3ea)({
    ref,
    box: "border-box",
    onResize
  });
  let style = {
    // Reset padding so that relative positioning works correctly. Padding will be done in JS layout.
    padding: 0,
    ...otherProps.style
  };
  if (scrollDirection === "horizontal") {
    style.overflowX = "auto";
    style.overflowY = "hidden";
  } else if (scrollDirection === "vertical" || contentSize.width === state.width) {
    style.overflowY = "auto";
    style.overflowX = "hidden";
  } else style.overflow = "auto";
  innerStyle = {
    width: Number.isFinite(contentSize.width) ? contentSize.width : void 0,
    height: Number.isFinite(contentSize.height) ? contentSize.height : void 0,
    pointerEvents: isScrolling ? "none" : "auto",
    position: "relative",
    ...innerStyle
  };
  return {
    scrollViewProps: {
      ...otherProps,
      style
    },
    contentProps: {
      role: "presentation",
      style: innerStyle
    }
  };
}

// node_modules/@react-aria/virtualizer/dist/useVirtualizerItem.mjs
var import_react237 = __toESM(require_react(), 1);
function $47736c1e63ba1c6d$export$1da781778207e0a2(options) {
  let { layoutInfo, virtualizer, ref } = options;
  let key = layoutInfo === null || layoutInfo === void 0 ? void 0 : layoutInfo.key;
  let updateSize = (0, import_react237.useCallback)(() => {
    if (key != null && ref.current) {
      let size = $47736c1e63ba1c6d$var$getSize(ref.current);
      virtualizer.updateItemSize(key, size);
    }
  }, [
    virtualizer,
    key,
    ref
  ]);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    if (layoutInfo === null || layoutInfo === void 0 ? void 0 : layoutInfo.estimatedSize) updateSize();
  });
  return {
    updateSize
  };
}
function $47736c1e63ba1c6d$var$getSize(node) {
  let height = node.style.height;
  node.style.height = "";
  let size = new (0, $ee1bfa90a957fb8a$export$cb6da89c6af1a8ec)(node.scrollWidth, node.scrollHeight);
  node.style.height = height;
  return size;
}

// node_modules/@react-aria/virtualizer/dist/VirtualizerItem.mjs
var import_react238 = __toESM(require_react(), 1);
function $ccf8a0a04e4175ae$export$6796df8ba7398521(props) {
  let { style, className, layoutInfo, virtualizer, parent, children } = props;
  let { direction } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let ref = (0, import_react238.useRef)(null);
  (0, $47736c1e63ba1c6d$export$1da781778207e0a2)({
    layoutInfo,
    virtualizer,
    ref
  });
  return (0, import_react238.default).createElement("div", {
    role: "presentation",
    ref,
    className,
    style: {
      ...$ccf8a0a04e4175ae$export$1481e64fbe01b8b3(layoutInfo, direction, parent),
      ...style
    }
  }, children);
}
var $ccf8a0a04e4175ae$var$cache = /* @__PURE__ */ new WeakMap();
function $ccf8a0a04e4175ae$export$1481e64fbe01b8b3(layoutInfo, dir, parent) {
  let xProperty = dir === "rtl" ? "right" : "left";
  let cached = $ccf8a0a04e4175ae$var$cache.get(layoutInfo);
  if (cached && cached[xProperty] != null) {
    if (!parent) return cached;
    let top = layoutInfo.rect.y - parent.rect.y;
    let x = layoutInfo.rect.x - parent.rect.x;
    if (cached.top === top && cached[xProperty] === x) return cached;
  }
  let rectStyles = {
    // TODO: For layoutInfos that are sticky that have parents with overflow visible, their "top" will be relative to the to the nearest scrolling container
    // which WON'T be the parent since the parent has overflow visible. This means we shouldn't offset the height by the parent's position
    // Not 100% about this change here since it is quite ambigious what the scrolling container maybe and how its top is positioned with respect to the
    // calculated layoutInfo.y here
    top: layoutInfo.rect.y - (parent && !(parent.allowOverflow && layoutInfo.isSticky) ? parent.rect.y : 0),
    [xProperty]: layoutInfo.rect.x - (parent && !(parent.allowOverflow && layoutInfo.isSticky) ? parent.rect.x : 0),
    width: layoutInfo.rect.width,
    height: layoutInfo.rect.height
  };
  Object.entries(rectStyles).forEach(([key, value]) => {
    if (!Number.isFinite(value)) rectStyles[key] = void 0;
  });
  var _layoutInfo_transform;
  let style = {
    position: layoutInfo.isSticky ? "sticky" : "absolute",
    // Sticky elements are positioned in normal document flow. Display inline-block so that they don't push other sticky columns onto the following rows.
    display: layoutInfo.isSticky ? "inline-block" : void 0,
    overflow: layoutInfo.allowOverflow ? "visible" : "hidden",
    opacity: layoutInfo.opacity,
    zIndex: layoutInfo.zIndex,
    transform: (_layoutInfo_transform = layoutInfo.transform) !== null && _layoutInfo_transform !== void 0 ? _layoutInfo_transform : void 0,
    contain: "size layout style",
    ...rectStyles
  };
  $ccf8a0a04e4175ae$var$cache.set(layoutInfo, style);
  return style;
}

// node_modules/@react-aria/virtualizer/dist/Virtualizer.mjs
var import_react239 = __toESM(require_react(), 1);
var $6d0a5c394373ae64$export$89be5a243e59c4b2 = (0, import_react239.default).forwardRef(function Virtualizer(props, forwardedRef) {
  let { children: renderView, renderWrapper, layout, collection, scrollDirection, isLoading, onLoadMore, persistedKeys, layoutOptions, ...otherProps } = props;
  let ref = (0, $df56164dff5785e2$export$4338b53315abf666)(forwardedRef);
  let state = (0, $fc0b13b484ac1194$export$1505db82fe357e65)({
    layout,
    collection,
    renderView,
    onVisibleRectChange(rect) {
      if (ref.current) {
        ref.current.scrollLeft = rect.x;
        ref.current.scrollTop = rect.y;
      }
    },
    persistedKeys,
    layoutOptions
  });
  (0, $26f7f3da73fcd9d6$export$7717c92ee915373e)({
    isLoading,
    onLoadMore,
    scrollOffset: 1
  }, ref);
  let onVisibleRectChange = (0, import_react239.useCallback)((rect) => {
    state.setVisibleRect(rect);
  }, [
    state
  ]);
  return (0, import_react239.default).createElement((0, $44a6ee657928b002$export$5665e3d6be6adea), {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(otherProps, {
      onVisibleRectChange
    }),
    ref,
    contentSize: state.contentSize,
    onScrollStart: state.startScrolling,
    onScrollEnd: state.endScrolling,
    scrollDirection
  }, $6d0a5c394373ae64$var$renderChildren(null, state.visibleViews, renderWrapper || $6d0a5c394373ae64$var$defaultRenderWrapper));
});
function $6d0a5c394373ae64$var$renderChildren(parent, views, renderWrapper) {
  return views.map((view) => {
    return renderWrapper(parent, view, view.children ? Array.from(view.children) : [], (childViews) => $6d0a5c394373ae64$var$renderChildren(view, childViews, renderWrapper));
  });
}
function $6d0a5c394373ae64$var$defaultRenderWrapper(parent, reusableView) {
  return (0, import_react239.default).createElement((0, $ccf8a0a04e4175ae$export$6796df8ba7398521), {
    key: reusableView.key,
    layoutInfo: reusableView.layoutInfo,
    virtualizer: reusableView.virtualizer,
    parent: parent === null || parent === void 0 ? void 0 : parent.layoutInfo
  }, reusableView.rendered);
}

// node_modules/react-aria-components/dist/Virtualizer.mjs
var $ce3a951440fc273f$var$VirtualizerContext = (0, import_react240.createContext)(null);
var $ce3a951440fc273f$var$LayoutContext = (0, import_react240.createContext)(null);
function $ce3a951440fc273f$export$89be5a243e59c4b2(props) {
  let { children, layout: layoutProp, layoutOptions } = props;
  let layout = (0, import_react240.useMemo)(() => typeof layoutProp === "function" ? new layoutProp() : layoutProp, [
    layoutProp
  ]);
  let renderer = (0, import_react240.useMemo)(() => ({
    isVirtualized: true,
    layoutDelegate: layout,
    dropTargetDelegate: layout.getDropTargetFromPoint ? layout : void 0,
    CollectionRoot: $ce3a951440fc273f$var$CollectionRoot,
    CollectionBranch: $ce3a951440fc273f$var$CollectionBranch
  }), [
    layout
  ]);
  return (0, import_react240.default).createElement((0, $7135fc7d473fd974$export$4feb769f8ddf26c5).Provider, {
    value: renderer
  }, (0, import_react240.default).createElement($ce3a951440fc273f$var$LayoutContext.Provider, {
    value: {
      layout,
      layoutOptions
    }
  }, children));
}
function $ce3a951440fc273f$var$CollectionRoot({ collection, persistedKeys, scrollRef, renderDropIndicator }) {
  var _layout_useLayoutOptions;
  let { layout, layoutOptions } = (0, import_react240.useContext)($ce3a951440fc273f$var$LayoutContext);
  let layoutOptions2 = (_layout_useLayoutOptions = layout.useLayoutOptions) === null || _layout_useLayoutOptions === void 0 ? void 0 : _layout_useLayoutOptions.call(layout);
  let state = (0, $fc0b13b484ac1194$export$1505db82fe357e65)({
    layout,
    collection,
    renderView: (type, item) => {
      var _item_render;
      return item === null || item === void 0 ? void 0 : (_item_render = item.render) === null || _item_render === void 0 ? void 0 : _item_render.call(item, item);
    },
    onVisibleRectChange(rect) {
      let element = scrollRef === null || scrollRef === void 0 ? void 0 : scrollRef.current;
      if (element) {
        element.scrollLeft = rect.x;
        element.scrollTop = rect.y;
      }
    },
    persistedKeys,
    layoutOptions: (0, import_react240.useMemo)(() => {
      if (layoutOptions && layoutOptions2) return {
        ...layoutOptions,
        ...layoutOptions2
      };
      return layoutOptions || layoutOptions2;
    }, [
      layoutOptions,
      layoutOptions2
    ])
  });
  let { contentProps } = (0, $44a6ee657928b002$export$2ea0c4974da4731b)({
    onVisibleRectChange: state.setVisibleRect,
    contentSize: state.contentSize,
    onScrollStart: state.startScrolling,
    onScrollEnd: state.endScrolling
  }, scrollRef);
  return (0, import_react240.default).createElement("div", contentProps, (0, import_react240.default).createElement($ce3a951440fc273f$var$VirtualizerContext.Provider, {
    value: state
  }, $ce3a951440fc273f$var$renderChildren(null, state.visibleViews, renderDropIndicator)));
}
function $ce3a951440fc273f$var$CollectionBranch({ parent, renderDropIndicator }) {
  let virtualizer = (0, import_react240.useContext)($ce3a951440fc273f$var$VirtualizerContext);
  let parentView = virtualizer.virtualizer.getVisibleView(parent.key);
  return $ce3a951440fc273f$var$renderChildren(parentView, Array.from(parentView.children), renderDropIndicator);
}
function $ce3a951440fc273f$var$renderChildren(parent, children, renderDropIndicator) {
  return children.map((view) => $ce3a951440fc273f$var$renderWrapper(parent, view, renderDropIndicator));
}
function $ce3a951440fc273f$var$renderWrapper(parent, reusableView, renderDropIndicator) {
  let rendered = (0, import_react240.default).createElement((0, $ccf8a0a04e4175ae$export$6796df8ba7398521), {
    key: reusableView.key,
    layoutInfo: reusableView.layoutInfo,
    virtualizer: reusableView.virtualizer,
    parent: parent === null || parent === void 0 ? void 0 : parent.layoutInfo
  }, reusableView.rendered);
  let { collection, layout } = reusableView.virtualizer;
  let node = reusableView.content;
  if ((node === null || node === void 0 ? void 0 : node.type) === "item" && renderDropIndicator && layout.getDropTargetLayoutInfo) rendered = (0, import_react240.default).createElement((0, import_react240.default).Fragment, {
    key: reusableView.key
  }, $ce3a951440fc273f$var$renderDropIndicatorWrapper(parent, reusableView, {
    type: "item",
    key: reusableView.content.key,
    dropPosition: "before"
  }, renderDropIndicator), rendered, (0, $7135fc7d473fd974$export$2dbbd341daed716d)(collection, node, (target) => $ce3a951440fc273f$var$renderDropIndicatorWrapper(parent, reusableView, target, renderDropIndicator)));
  return rendered;
}
function $ce3a951440fc273f$var$renderDropIndicatorWrapper(parent, reusableView, target, renderDropIndicator) {
  let indicator = renderDropIndicator(target);
  if (indicator) {
    let layoutInfo = reusableView.virtualizer.layout.getDropTargetLayoutInfo(target);
    indicator = (0, import_react240.default).createElement((0, $ccf8a0a04e4175ae$export$6796df8ba7398521), {
      layoutInfo,
      virtualizer: reusableView.virtualizer,
      parent: parent === null || parent === void 0 ? void 0 : parent.layoutInfo
    }, indicator);
  }
  return indicator;
}
export {
  $d2f53cda644affe3$export$2f2b9559550c7bbc as Autocomplete,
  $d2f53cda644affe3$export$36e687af51cd0967 as AutocompleteContext,
  $d2f53cda644affe3$export$68ee3368b6d68148 as AutocompleteStateContext,
  $778035c5624f61e7$export$dabcc1ec9dd9d1cc as Breadcrumb,
  $778035c5624f61e7$export$2dc68d50d56fbbd as Breadcrumbs,
  $778035c5624f61e7$export$65596d3621b0a4a0 as BreadcrumbsContext,
  $d2b4bc8c273e7be6$export$353f5b6fc5456de1 as Button,
  $d2b4bc8c273e7be6$export$24d547caef80ccd1 as ButtonContext,
  $dfd62f934fc76fed$export$e1aef45b828286de as Calendar,
  $dfd62f934fc76fed$export$5d847498420df57b as CalendarCell,
  $dfd62f934fc76fed$export$3b805cea1f178355 as CalendarContext,
  $dfd62f934fc76fed$export$5bd780d491cfc46c as CalendarGrid,
  $dfd62f934fc76fed$export$e11f8ba65d857bff as CalendarGridBody,
  $dfd62f934fc76fed$export$22e2d15eaa4d2377 as CalendarGridHeader,
  $dfd62f934fc76fed$export$ad2135cac3a11b3d as CalendarHeaderCell,
  $dfd62f934fc76fed$export$9e31dcedda1dadc7 as CalendarStateContext,
  $1910c06f0ca9905e$export$f6f0c3fe4ec306ea as Cell,
  $bc237834342dbd75$export$48513f6b9f8ce62d as Checkbox,
  $4e85f108e88277b8$export$b085522c77523c51 as CheckboxContext,
  $bc237834342dbd75$export$4aa08d5625cb8ead as CheckboxGroup,
  $bc237834342dbd75$export$baf37c4be89255b8 as CheckboxGroupContext,
  $bc237834342dbd75$export$139c5b8563afc1fc as CheckboxGroupStateContext,
  $e1995378a142960e$export$fb8073518f34e6ec as Collection,
  $7135fc7d473fd974$export$4feb769f8ddf26c5 as CollectionRendererContext,
  $0de070065d44825d$export$b2103f68a961418e as ColorArea,
  $4e85f108e88277b8$export$ebe63fadcdce34ed as ColorAreaContext,
  $0de070065d44825d$export$6b32221de49982e as ColorAreaStateContext,
  $3ada01a82feafb94$export$b865d4358897bb17 as ColorField,
  $4e85f108e88277b8$export$44644b8a16031b5b as ColorFieldContext,
  $3ada01a82feafb94$export$96b6d32b05a1a8ed as ColorFieldStateContext,
  $2637d3f5efb23186$export$9feb1bc2e5f1ccb3 as ColorPicker,
  $2637d3f5efb23186$export$cfac98503b32f6d6 as ColorPickerContext,
  $2637d3f5efb23186$export$2c14261be40a385f as ColorPickerStateContext,
  $1cca5300a3c2e7f9$export$44fd664bcca5b6fb as ColorSlider,
  $4e85f108e88277b8$export$717b2c0a523a0b53 as ColorSliderContext,
  $1cca5300a3c2e7f9$export$c7fad7ea00194428 as ColorSliderStateContext,
  $251c695a52d94a8d$export$cae13e90592f246a as ColorSwatch,
  $251c695a52d94a8d$export$83cc445538396800 as ColorSwatchContext,
  $0bb41941cfe72bd4$export$b46792416e3d8515 as ColorSwatchPicker,
  $0bb41941cfe72bd4$export$7214f50881fc1eaf as ColorSwatchPickerContext,
  $0bb41941cfe72bd4$export$abcd89c27081c2ef as ColorSwatchPickerItem,
  $e2b71ec1d6016406$export$a3cc47cee1c1ccc as ColorThumb,
  $66beab92e74e495f$export$f80663f808113381 as ColorWheel,
  $4e85f108e88277b8$export$265015d6dc85bf21 as ColorWheelContext,
  $66beab92e74e495f$export$f5327df9fc840d47 as ColorWheelStateContext,
  $66beab92e74e495f$export$aaae3dd1f909c692 as ColorWheelTrack,
  $66beab92e74e495f$export$aec8299548648839 as ColorWheelTrackContext,
  $1910c06f0ca9905e$export$816b5d811295e6bc as Column,
  $1910c06f0ca9905e$export$ee689e97a7664bfd as ColumnResizer,
  $d01f2c01039c0eec$export$72b9695b8216309a as ComboBox,
  $d01f2c01039c0eec$export$d414ccceff7063c3 as ComboBoxContext,
  $d01f2c01039c0eec$export$c02625b26074192c as ComboBoxStateContext,
  $64fa3d84918910a7$export$c62b8e45d58ddad9 as DEFAULT_SLOT,
  $7252cd45fc48c07c$export$990fced5dfac2637 as DIRECTORY_DRAG_TYPE,
  $40825cdb76e74f70$export$d9781c7894a82487 as DateField,
  $40825cdb76e74f70$export$7b3e670c86da5fe8 as DateFieldContext,
  $40825cdb76e74f70$export$3b08bebcf796eea0 as DateFieldStateContext,
  $40825cdb76e74f70$export$7edc06cf1783b30f as DateInput,
  $06d5b8ec9ee5d538$export$5109c6dd95d8fb00 as DatePicker,
  $06d5b8ec9ee5d538$export$cf316c7f3b44c11e as DatePickerContext,
  $06d5b8ec9ee5d538$export$50a10c048fdcdee9 as DatePickerStateContext,
  $06d5b8ec9ee5d538$export$17334619f3ac2224 as DateRangePicker,
  $06d5b8ec9ee5d538$export$8282edba42ee28a as DateRangePickerContext,
  $06d5b8ec9ee5d538$export$80d7ae1f804790be as DateRangePickerStateContext,
  $40825cdb76e74f70$export$336ab7fa954c4b5f as DateSegment,
  $7135fc7d473fd974$export$a164736487e3f0ae as DefaultCollectionRenderer,
  $de32f1b87079253c$export$3ddf2d174ce01153 as Dialog,
  $de32f1b87079253c$export$8b93a07348a7730c as DialogContext,
  $de32f1b87079253c$export$2e1e1122cf0cba88 as DialogTrigger,
  $28f4fd908f0de97f$export$74a362b31437ec83 as Disclosure,
  $28f4fd908f0de97f$export$d665dd135a51b28a as DisclosureContext,
  $28f4fd908f0de97f$export$944aceb4f8c89f10 as DisclosureGroup,
  $28f4fd908f0de97f$export$1d40e3e0cc4d5de as DisclosureGroupStateContext,
  $28f4fd908f0de97f$export$feabaa331e1d464c as DisclosurePanel,
  $28f4fd908f0de97f$export$dab3ea4a6ef094da as DisclosureStateContext,
  $612b8eb6cb90e02d$export$d188a835a7bc5783 as DragAndDropContext,
  $612b8eb6cb90e02d$export$62ed72bc21f6b8a6 as DropIndicator,
  $612b8eb6cb90e02d$export$f55761759794cf55 as DropIndicatorContext,
  $cb088e721efb9218$export$3c6489d84dc98b6 as DropZone,
  $cb088e721efb9218$export$14a72053295ff9a6 as DropZoneContext,
  $ee014567cb39d3f0$export$f551688fc98f2e09 as FieldError,
  $ee014567cb39d3f0$export$ff05c3ac10437e03 as FieldErrorContext,
  $1e2864c73f66a4da$export$6fb4a10d2c950550 as FileTrigger,
  $f645667febf57a63$export$35a3bebf7ef2d934 as Focusable,
  $d3e0e05bdfcf66bd$export$a7fed597f4b8afd8 as Form,
  $d3e0e05bdfcf66bd$export$c24727297075ec6a as FormContext,
  $e5be200c675c3b3a$export$571b5131b7e65c11 as FormValidationContext,
  $a58592d295a170a4$export$7d2b12578154a735 as GridLayout,
  $72e60046c03fbe42$export$a7bfbda1311ca015 as GridList,
  $72e60046c03fbe42$export$54fe942636b6416d as GridListContext,
  $72e60046c03fbe42$export$e96fc9a8407faa6b as GridListItem,
  $a049562f99e7db0e$export$eb2fcfdbd7ba97d4 as Group,
  $a049562f99e7db0e$export$f9c6924e160136d1 as GroupContext,
  $72a5793c14baf454$export$8b251419efc915eb as Header,
  $72a5793c14baf454$export$e0e4026c12a8bdbb as HeaderContext,
  $5cb03073d3f54797$export$a8a3e93435678ff9 as Heading,
  $4e85f108e88277b8$export$d688439359537581 as HeadingContext,
  $18f2051aff69b9bf$export$a54013f0d02a8f82 as I18nProvider,
  $3985021b0ad6602f$export$f5b8910cec6cf069 as Input,
  $3985021b0ad6602f$export$37fb8590cf2c088c as InputContext,
  $63df2425e2108aa8$export$16e4d70cc375e707 as Keyboard,
  $63df2425e2108aa8$export$744d98a3b8a94e1c as KeyboardContext,
  $01b77f81d0f07f68$export$b04be29aa201d4f5 as Label,
  $01b77f81d0f07f68$export$75b6ee27786ba447 as LabelContext,
  $c74cda7d31af1253$export$c84671f46d6a1ca as Layout,
  $d7fd61009c21d0bb$export$7e0eeb9da702a085 as LayoutInfo,
  $4f118338184dc1d9$export$a6c7ac8248d6e38a as Link,
  $4f118338184dc1d9$export$e2509388b49734e7 as LinkContext,
  $eed445e0843c11d0$export$41f133550aa26f48 as ListBox,
  $eed445e0843c11d0$export$7ff8f37d2d81a48d as ListBoxContext,
  $eed445e0843c11d0$export$a11e76429ed99b4 as ListBoxItem,
  $eed445e0843c11d0$export$dca12b0bb56e4fc as ListBoxSection,
  $61ef60fc9b1041f4$export$cacbb3924155d68e as ListLayout,
  $eed445e0843c11d0$export$7c5906fe4f1f2af2 as ListStateContext,
  $3674c52c6b3c5bce$export$d9b273488cd8ce6f as Menu,
  $3674c52c6b3c5bce$export$c7e742effb1c51e2 as MenuContext,
  $3674c52c6b3c5bce$export$2ce376c2cc3355c8 as MenuItem,
  $3674c52c6b3c5bce$export$4b1545b4f2016d26 as MenuSection,
  $3674c52c6b3c5bce$export$24aad8519b95b41b as MenuStateContext,
  $3674c52c6b3c5bce$export$27d2ad3c5815583e as MenuTrigger,
  $c0c9ced265f3594c$export$62e3ae2a4090b879 as Meter,
  $c0c9ced265f3594c$export$8b645da15a96b44f as MeterContext,
  $f3f84453ead64de5$export$2b77a92f1a5ad772 as Modal,
  $f3f84453ead64de5$export$ab57792b9b6974a6 as ModalContext,
  $f3f84453ead64de5$export$8948f78d83984c69 as ModalOverlay,
  $b91743d66a0ed188$export$63c5fa0b2fdccd2e as NumberField,
  $b91743d66a0ed188$export$b414a48cf5dcbc11 as NumberFieldContext,
  $b91743d66a0ed188$export$6cc906c6cff9bec5 as NumberFieldStateContext,
  $44f671af83e7d9e0$export$746d02f47f4d381 as OverlayArrow,
  $de32f1b87079253c$export$d2f961adcb0afbe as OverlayTriggerStateContext,
  $3041db3296945e6e$export$baf26146a414f24a as Point,
  $07b14b47974efb58$export$5b6b19405a83ff9d as Popover,
  $07b14b47974efb58$export$9b9a0cd73afb7ca4 as PopoverContext,
  $3b117e43dc0ca95d$export$27c701ed9e449e99 as Pressable,
  $0393f8ab869a0f1a$export$c17561cb55d4db30 as ProgressBar,
  $0393f8ab869a0f1a$export$e9f3bf65a26ce129 as ProgressBarContext,
  $64fa3d84918910a7$export$2881499e37b75b9a as Provider,
  $b6c3ddc6086f204d$export$d7b12c4107be0d61 as Radio,
  $b6c3ddc6086f204d$export$b118023277d4a5c3 as RadioContext,
  $b6c3ddc6086f204d$export$a98f0dcb43a68a25 as RadioGroup,
  $b6c3ddc6086f204d$export$a79eda4ff50e30b6 as RadioGroupContext,
  $b6c3ddc6086f204d$export$29d84393af70866c as RadioGroupStateContext,
  $dfd62f934fc76fed$export$a4f5c8b89d277a8d as RangeCalendar,
  $dfd62f934fc76fed$export$233dd9682e1ad64b as RangeCalendarContext,
  $dfd62f934fc76fed$export$5e0fc348c00f87a0 as RangeCalendarStateContext,
  $60423f92c7f9ad87$export$c79fc6492f3af13d as Rect,
  $1910c06f0ca9905e$export$7063e69b8a954175 as ResizableTableContainer,
  $3674c52c6b3c5bce$export$795aec4671cbae19 as RootMenuTriggerStateContext,
  $ea8dcbcb9ea1b556$export$323e4fc2fa4753fb as RouterProvider,
  $1910c06f0ca9905e$export$b59bdbef9ce70de2 as Row,
  $b5e257d569688ac6$export$9f8ac96af4b1b2ae as SSRProvider,
  $440f4836bcb56932$export$b94867ecbd698f21 as SearchField,
  $440f4836bcb56932$export$d1c4e4c63cb03a11 as SearchFieldContext,
  $7135fc7d473fd974$export$6e2c8f0811a474ce as Section,
  $82d7e5349645de74$export$ef9b1a59e592288f as Select,
  $82d7e5349645de74$export$7540cee5be7dc19b as SelectContext,
  $82d7e5349645de74$export$ef445b55be0601bd as SelectStateContext,
  $82d7e5349645de74$export$e288731fd71264f0 as SelectValue,
  $82d7e5349645de74$export$f8f745c04421623f as SelectValueContext,
  $431f98aba6844401$export$1ff3c3f08ae963c0 as Separator,
  $431f98aba6844401$export$6615d83f6de245ce as SeparatorContext,
  $ee1bfa90a957fb8a$export$cb6da89c6af1a8ec as Size,
  $6f909507e6374d18$export$472062a354075cee as Slider,
  $6f909507e6374d18$export$e99164f0030f3bff as SliderContext,
  $6f909507e6374d18$export$a590f758a961cb5b as SliderOutput,
  $6f909507e6374d18$export$6189c2744041d8f8 as SliderOutputContext,
  $6f909507e6374d18$export$1e7083018727fa60 as SliderStateContext,
  $6f909507e6374d18$export$2c1b491743890dec as SliderThumb,
  $6f909507e6374d18$export$105594979f116971 as SliderTrack,
  $6f909507e6374d18$export$f1fce0420cc6d8ee as SliderTrackContext,
  $3674c52c6b3c5bce$export$ecabc99eeffab7ca as SubmenuTrigger,
  $8e59e948500a8fe1$export$b5d5cf8927ab7262 as Switch,
  $8e59e948500a8fe1$export$8699e3b644d5a28a as SwitchContext,
  $5e8ad37a45e1c704$export$3e41faf802a29e71 as Tab,
  $5e8ad37a45e1c704$export$e51a686c67fdaa2d as TabList,
  $5e8ad37a45e1c704$export$364712098d2aa57c as TabListStateContext,
  $5e8ad37a45e1c704$export$3d96ec278d3efce4 as TabPanel,
  $1910c06f0ca9905e$export$54ec01a60f47d33d as Table,
  $1910c06f0ca9905e$export$76ccd210b9029917 as TableBody,
  $1910c06f0ca9905e$export$a2680a798823803c as TableColumnResizeStateContext,
  $1910c06f0ca9905e$export$93e4b0b2cc49b648 as TableContext,
  $1910c06f0ca9905e$export$f850895b287ef28e as TableHeader,
  $2f9e0b0e857fd9ba$export$62444c3c724b1b20 as TableLayout,
  $1910c06f0ca9905e$export$38de1cb0526c21fb as TableStateContext,
  $5e8ad37a45e1c704$export$b2539bed5023c21c as Tabs,
  $5e8ad37a45e1c704$export$cfa7aa87c26e7d1f as TabsContext,
  $eaf9e70818b436db$export$3288d34c523a1192 as Tag,
  $eaf9e70818b436db$export$67ea30858aaf75e3 as TagGroup,
  $eaf9e70818b436db$export$5b07b5dd2cbd96e3 as TagGroupContext,
  $eaf9e70818b436db$export$f9fef0f55402315b as TagList,
  $eaf9e70818b436db$export$e755ce3685dd0ca9 as TagListContext,
  $514c0188e459b4c0$export$5f1af8db9871e1d6 as Text,
  $216918bed6669f72$export$f5c9f3c2c4054eec as TextArea,
  $216918bed6669f72$export$2dc6166a7e65358c as TextAreaContext,
  $514c0188e459b4c0$export$9afb8bc826b033ea as TextContext,
  $bcdf0525bf22703d$export$2c73285ae9390cec as TextField,
  $bcdf0525bf22703d$export$2129e27b3ef0d483 as TextFieldContext,
  $40825cdb76e74f70$export$5eaee2322dd727eb as TimeField,
  $40825cdb76e74f70$export$8e17ddc448e87c1e as TimeFieldContext,
  $40825cdb76e74f70$export$5d8dc44abd10a920 as TimeFieldStateContext,
  $efde0372d7a700fe$export$d2b052e7b4be1756 as ToggleButton,
  $efde0372d7a700fe$export$43506d75ebd2e218 as ToggleButtonContext,
  $84b7d8702d4ff4a8$export$40258cc1d95ff477 as ToggleButtonGroup,
  $84b7d8702d4ff4a8$export$298258635ae0dd97 as ToggleButtonGroupContext,
  $84b7d8702d4ff4a8$export$a8a71863db173133 as ToggleGroupStateContext,
  $13c3c67164f4d5be$export$4c260019440d418f as Toolbar,
  $13c3c67164f4d5be$export$6311e7ab80ef752f as ToolbarContext,
  $4e3b923658d69c60$export$28c660c63b792dea as Tooltip,
  $4e3b923658d69c60$export$39ae08fa83328b12 as TooltipContext,
  $4e3b923658d69c60$export$8c610744efcf8a1d as TooltipTrigger,
  $4e3b923658d69c60$export$7a7623236eec67fa as TooltipTriggerStateContext,
  $2f5eaf4a2a47b4cf$export$7fbedc92909ed28e as Tree,
  $2f5eaf4a2a47b4cf$export$dfae7d399eea2568 as TreeContext,
  $2f5eaf4a2a47b4cf$export$53d36ab85dc89436 as TreeItem,
  $2f5eaf4a2a47b4cf$export$4b687e3f663d618c as TreeItemContent,
  $2f5eaf4a2a47b4cf$export$8953bccafd7bce87 as TreeStateContext,
  $e1995378a142960e$export$bf788dd355e3a401 as UNSTABLE_CollectionBuilder,
  $72e60046c03fbe42$export$74653c2d94c32cc3 as UNSTABLE_GridListLoadingSentinel,
  $eed445e0843c11d0$export$e59f0e608576589b as UNSTABLE_ListBoxLoadingSentinel,
  $1910c06f0ca9905e$export$92aad1076056e17a as UNSTABLE_TableLoadingSentinel,
  $692df8403b6ac2c7$export$8d8dc7d5f743331b as UNSTABLE_Toast,
  $692df8403b6ac2c7$export$b134a6cc89b08851 as UNSTABLE_ToastContent,
  $692df8403b6ac2c7$export$c20d626a86a69756 as UNSTABLE_ToastList,
  $77b352cf12efcf73$export$f1f8569633bbbec4 as UNSTABLE_ToastQueue,
  $692df8403b6ac2c7$export$2cbf5519fbeaa538 as UNSTABLE_ToastRegion,
  $692df8403b6ac2c7$export$e9e2a1fc7373c1e1 as UNSTABLE_ToastStateContext,
  $2f5eaf4a2a47b4cf$export$9d1a587784d97b41 as UNSTABLE_TreeLoadingIndicator,
  $e1995378a142960e$export$e953bb1cd0f19726 as UNSTABLE_createBranchComponent,
  $e1995378a142960e$export$18af5c7a9e9b3664 as UNSTABLE_createLeafComponent,
  $ce3a951440fc273f$export$89be5a243e59c4b2 as Virtualizer,
  $f483179558aa907f$export$e9f7cda058ba8df8 as WaterfallLayout,
  $64fa3d84918910a7$export$c245e6201fed2f75 as composeRenderProps,
  $799cddbef784668f$export$1c0c08912582810c as getColorChannels,
  $7252cd45fc48c07c$export$2b40a62bdbe6b2b0 as isDirectoryDropItem,
  $7252cd45fc48c07c$export$a144e1752ebe0aa as isFileDropItem,
  $7252cd45fc48c07c$export$97fd558bdc44bea1 as isTextDropItem,
  $799cddbef784668f$export$6e865ea70d7724f as parseColor,
  $64fa3d84918910a7$export$29f1550f4b0d4415 as useContextProps,
  $d8f176866e6dc039$export$2cfc5be7a55829f6 as useDragAndDrop,
  $bb77f239b46e8c72$export$3274cf84b703fff as useFilter,
  $18f2051aff69b9bf$export$43bb16f9c6d9e3f7 as useLocale,
  $64fa3d84918910a7$export$4d86445c2cf5e3 as useRenderProps,
  $64fa3d84918910a7$export$fabf2dc03a41866e as useSlottedContext,
  $1910c06f0ca9905e$export$fddc468cd8cb4db9 as useTableOptions
};
/*! Bundled license information:

use-sync-external-store/cjs/use-sync-external-store-shim.development.js:
  (**
   * @license React
   * use-sync-external-store-shim.development.js
   *
   * Copyright (c) Meta Platforms, Inc. and affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)
*/
//# sourceMappingURL=react-aria-components.js.map
